{
  "matchterm": "UnicodeString.ExtRst",
  "previouspage": null,
  "searchterm": "UnicodeString.ExtRst",
  "query": "UnicodeString.ExtRst",
  "language_filters": [
    {
      "count": 5,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 5,
  "results": [
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 864,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124751/",
      "md5hash": "563ebaab6cf2ba2c01704915fffa6703",
      "lines": {
        "160": "        ",
        "131": "    public boolean equals(Object obj){",
        "132": "        if(obj instanceof Unicodestring){",
        "135": "        \tif (this.westernencoding) {",
        "136": "        \t\tif (java.util.Arrays.equals(this.getWesternBytes(), ((Unicodestring)obj).getWesternBytes()))",
        "138": "        \t} else { ",
        "139": "        \t\tif (java.util.Arrays.equals(this.getEasternBytes(), ((Unicodestring)obj).getEasternBytes()))",
        "173": "        }",
        "174": "        System.arraycopy(ExtRst, 0, data, (stringlen + offer + formatlen),ExtRst.length);",
        "175": "        if(data[0]==0x0)        Logger.logInfo(\"Unicodestring has zero length.\");",
        "153": "    byte[] getEasternBytes(){",
        "154": "        byte[] data = new byte[stringarray.length + formatlen + offer + ExtRst.length];",
        "157": "        data[2] = grbit;",
        "158": "        //cchExtRst = ExtRst.length;",
        "159": "        byte[] cchExtByte = ByteTools.cLongToLEBytes(cchExtRst);"
      },
      "id": 47124751,
      "filename": "Unicodestring.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 864,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976375/",
      "md5hash": "563ebaab6cf2ba2c01704915fffa6703",
      "lines": {
        "160": "        ",
        "131": "    public boolean equals(Object obj){",
        "132": "        if(obj instanceof Unicodestring){",
        "135": "        \tif (this.westernencoding) {",
        "136": "        \t\tif (java.util.Arrays.equals(this.getWesternBytes(), ((Unicodestring)obj).getWesternBytes()))",
        "138": "        \t} else { ",
        "139": "        \t\tif (java.util.Arrays.equals(this.getEasternBytes(), ((Unicodestring)obj).getEasternBytes()))",
        "173": "        }",
        "174": "        System.arraycopy(ExtRst, 0, data, (stringlen + offer + formatlen),ExtRst.length);",
        "175": "        if(data[0]==0x0)        Logger.logInfo(\"Unicodestring has zero length.\");",
        "153": "    byte[] getEasternBytes(){",
        "154": "        byte[] data = new byte[stringarray.length + formatlen + offer + ExtRst.length];",
        "157": "        data[2] = grbit;",
        "158": "        //cchExtRst = ExtRst.length;",
        "159": "        byte[] cchExtByte = ByteTools.cLongToLEBytes(cchExtRst);"
      },
      "id": 50976375,
      "filename": "Unicodestring.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 956,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642397/",
      "md5hash": "8126528f53897a35370bb2189a0d623e",
      "lines": {
        "192": "        //Well the format runs are equal as well!, better check the ExtRst data",
        "65": "",
        "66": "public class UnicodeString",
        "579": "                  strBytes = unicodeString.getBytes(\"UTF-16LE\");",
        "133": "",
        "134": "    public UnicodeString(RecordInputStream in)",
        "161": "        }",
        "162": "        UnicodeString other = ( UnicodeString ) o;",
        "899": "        //Well the format runs are equal as well!, better check the ExtRst data",
        "578": "            {",
        "662": "      if (isExtendedText() && (field_5_ext_rst != null)) {",
        "663": "        //Ok ExtRst is actually not documented, so i am going to hope",
        "571": "        try {",
        "572": "            String unicodeString = getString();",
        "898": "",
        "191": ""
      },
      "id": 15642397,
      "filename": "UnicodeString.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1730,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124777/",
      "md5hash": "4180ef2d0b56b7a28652db9b1164fa01",
      "lines": {
        "321": "\t\t\t\t\t// if(st.DEBUGLEVEL > 10)",
        "258": "\t\t\tcase 0x4: // non-rich, single byte string",
        "259": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 3),",
        "294": "\t\t\t\t\t\tcurrec.getByteAt(strpos + 4));",
        "295": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 5),",
        "307": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 5),",
        "267": "\t\t\tcase 0x5: // extended, non-rich, double-byte string",
        "268": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 3),",
        "322": "\t\t\t\t\tLogger.logWarn(\"ERROR: Invalid Unicodestring grbit:\"",
        "334": "\t\t\ttry {",
        "335": "\t\t\t\tstrpos = sst.initUnicodeString(strlen, strpos, basereclen, cchExtRst, runlen, doubleByte);",
        "306": "\t\t\t\t\t\tcurrec.getByteAt(strpos + 4));",
        "211": "",
        "212": "\t\t// initialize the Unicodestrings from the byte array",
        "213": "\t\tfor (int d = 0; d < sst.cstUnique; d++) {",
        "317": "\t\t\t\tdoubleByte = false;",
        "318": "\t\t\t\tcchExtRst = 0;"
      },
      "id": 47124777,
      "filename": "Sst.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1730,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976401/",
      "md5hash": "4180ef2d0b56b7a28652db9b1164fa01",
      "lines": {
        "321": "\t\t\t\t\t// if(st.DEBUGLEVEL > 10)",
        "258": "\t\t\tcase 0x4: // non-rich, single byte string",
        "259": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 3),",
        "294": "\t\t\t\t\t\tcurrec.getByteAt(strpos + 4));",
        "295": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 5),",
        "307": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 5),",
        "267": "\t\t\tcase 0x5: // extended, non-rich, double-byte string",
        "268": "\t\t\t\tcchExtRst = ByteTools.readInt(currec.getByteAt(strpos + 3),",
        "322": "\t\t\t\t\tLogger.logWarn(\"ERROR: Invalid Unicodestring grbit:\"",
        "334": "\t\t\ttry {",
        "335": "\t\t\t\tstrpos = sst.initUnicodeString(strlen, strpos, basereclen, cchExtRst, runlen, doubleByte);",
        "306": "\t\t\t\t\t\tcurrec.getByteAt(strpos + 4));",
        "211": "",
        "212": "\t\t// initialize the Unicodestrings from the byte array",
        "213": "\t\tfor (int d = 0; d < sst.cstUnique; d++) {",
        "317": "\t\t\t\tdoubleByte = false;",
        "318": "\t\t\t\tcchExtRst = 0;"
      },
      "id": 50976401,
      "filename": "Sst.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 4,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1,
      "source": "Github",
      "id": 2
    }
  ]
}