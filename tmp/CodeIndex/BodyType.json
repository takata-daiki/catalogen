{
  "matchterm": "BodyType",
  "previouspage": null,
  "searchterm": "BodyType",
  "query": "BodyType",
  "language_filters": [
    {
      "count": 923,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 910,
  "results": [
    {
      "repo": "https://bitbucket.org/adoptopenjdk/jdk8-jaxws",
      "language": "Java",
      "linescount": 53,
      "location": "/src/share/jaxws_classes/com/sun/xml/internal/ws/wsdl/writer/document/soap",
      "name": "jdk8-jaxws",
      "url": "https://searchcode.com/codesearch/view/137356524/",
      "md5hash": "87366d5fde5311ab01c62045c4566489",
      "lines": {
        "49": "    @XmlAttribute",
        "34": " */",
        "35": "public interface BodyType",
        "40": "    @XmlAttribute",
        "41": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType encodingStyle(String value);",
        "43": "    @XmlAttribute",
        "44": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType namespace(String value);",
        "50": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType parts(String value);",
        "46": "    @XmlAttribute",
        "47": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType use(String value);"
      },
      "id": 137356524,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://bitbucket.org/adoptopenjdk/jdk8-jaxws",
      "language": "Java",
      "linescount": 53,
      "location": "/src/share/jaxws_classes/com/sun/xml/internal/ws/wsdl/writer/document/soap12",
      "name": "jdk8-jaxws",
      "url": "https://searchcode.com/codesearch/view/137356540/",
      "md5hash": "6b21c8a293fd5e7b0d6238b0410e8f74",
      "lines": {
        "49": "    @XmlAttribute",
        "34": " */",
        "35": "public interface BodyType",
        "40": "    @XmlAttribute",
        "41": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType encodingStyle(String value);",
        "43": "    @XmlAttribute",
        "44": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType namespace(String value);",
        "50": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType parts(String value);",
        "46": "    @XmlAttribute",
        "47": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType use(String value);"
      },
      "id": 137356540,
      "filename": "BodyType.java"
    },
    {
      "repo": "http://nestorurquiza.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 88,
      "location": "/ews/src/main/java/com/nestorurquiza/ews/jaxws",
      "name": "nestorurquiza",
      "url": "https://searchcode.com/codesearch/view/13458977/",
      "md5hash": "17035777f0115cc240b66aca039438dc",
      "lines": {
        "32": "public class BodyType {",
        "64": "     * Gets the value of the bodyType property.",
        "35": "    protected String value;",
        "36": "    @XmlAttribute(name = \"BodyType\", required = true)",
        "37": "    protected BodyTypeType bodyType;",
        "38": "",
        "11": "/**",
        "12": " * <p>Java class for BodyType complex type.",
        "16": " * <pre>",
        "17": " * &lt;complexType name=\"BodyType\">",
        "19": " *     &lt;extension base=\"&lt;http://www.w3.org/2001/XMLSchema>string\">",
        "20": " *       &lt;attribute name=\"BodyType\" use=\"required\" type=\"{http://schemas.microsoft.com/exchange/services/2006/types}BodyTypeType\" />",
        "63": "    /**",
        "28": "@XmlAccessorType(XmlAccessType.FIELD)",
        "29": "@XmlType(name = \"BodyType\", propOrder = {",
        "31": "})"
      },
      "id": 13458977,
      "filename": "BodyType.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 52,
      "location": "/MRI-J/jaxws/src/share/classes/com/sun/xml/internal/ws/wsdl/writer/document/soap",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17099554/",
      "md5hash": "ade6d2ac1727cb0fd5b0003d98b55d97",
      "lines": {
        "48": "    @XmlAttribute",
        "33": " */",
        "34": "public interface BodyType",
        "49": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType parts(String value);",
        "39": "    @XmlAttribute",
        "40": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType encodingStyle(String value);",
        "42": "    @XmlAttribute",
        "43": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType namespace(String value);",
        "45": "    @XmlAttribute",
        "46": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap.BodyType use(String value);"
      },
      "id": 17099554,
      "filename": "BodyType.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 52,
      "location": "/MRI-J/jaxws/src/share/classes/com/sun/xml/internal/ws/wsdl/writer/document/soap12",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17099567/",
      "md5hash": "f2f685c09b097101da36bb2ab97df73e",
      "lines": {
        "48": "    @XmlAttribute",
        "33": " */",
        "34": "public interface BodyType",
        "49": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType parts(String value);",
        "39": "    @XmlAttribute",
        "40": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType encodingStyle(String value);",
        "42": "    @XmlAttribute",
        "43": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType namespace(String value);",
        "45": "    @XmlAttribute",
        "46": "    public com.sun.xml.internal.ws.wsdl.writer.document.soap12.BodyType use(String value);"
      },
      "id": 17099567,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://github.com/rdrushal/fitbit4j.git",
      "language": "Java",
      "linescount": 8,
      "location": "/fitbit4j/src/main/java/com/fitbit/api/common/model/devices",
      "name": "fitbit4j",
      "url": "https://searchcode.com/codesearch/view/76116714/",
      "md5hash": "8378abcb1b7d903e10c8d80aacbc0148",
      "lines": {
        "3": "",
        "4": "public enum BodyType {"
      },
      "id": 76116714,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/jdolly.git",
      "language": "Java",
      "linescount": 6,
      "location": "/src/jdolly",
      "name": "jdolly",
      "url": "https://searchcode.com/codesearch/view/51728676/",
      "md5hash": "7429a20eb4f5c0ecd63fd9214e332ea0",
      "lines": {
        "2": "",
        "3": "public enum BodyType {"
      },
      "id": 51728676,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://github.com/GayanM/carbon-registry.git",
      "language": "Java",
      "linescount": 150,
      "location": "/components/registry/org.wso2.carbon.registry.social.api/src/main/java/org/wso2/carbon/registry/social/api/people/userprofile/model",
      "name": "carbon-registry",
      "url": "https://searchcode.com/codesearch/view/95550418/",
      "md5hash": "aecce1577b5c35dfc849e8ddbf64b7c8",
      "lines": {
        "17": "",
        "18": "public interface BodyType {"
      },
      "id": 95550418,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://github.com/WillemWillemWillem/libgdx.git",
      "language": "Java",
      "linescount": 42,
      "location": "/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/dynamics",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/99620700/",
      "md5hash": "ffa34c10e11f547214a81fb9bd157f00",
      "lines": {
        "38": " */",
        "39": "public enum BodyType {"
      },
      "id": 99620700,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://bitbucket.org/tescott/libgdx",
      "language": "Java",
      "linescount": 39,
      "location": "/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/org/jbox2d/dynamics",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/135118067/",
      "md5hash": "e347e123d60a883106da5d0f7cb8d7a9",
      "lines": {
        "35": " * @author daniel */",
        "36": "public enum BodyType {"
      },
      "id": 135118067,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://github.com/anirvan/shindig-profiles.git",
      "language": "Java",
      "linescount": 154,
      "location": "/java/social-api/src/main/java/org/apache/shindig/social/opensocial/model",
      "name": "shindig-profiles",
      "url": "https://searchcode.com/codesearch/view/68166084/",
      "md5hash": "a5ea7c734b1c8b24025f83f96a8ed131",
      "lines": {
        "32": "public interface BodyType {",
        "20": "import org.apache.shindig.protocol.model.Exportablebean;",
        "21": "import org.apache.shindig.social.core.model.BodyTypeImpl;",
        "29": " */",
        "30": "@ImplementedBy(BodyTypeImpl.class)",
        "31": "@Exportablebean"
      },
      "id": 68166084,
      "filename": "BodyType.java"
    },
    {
      "repo": "http://jbox2d.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 42,
      "location": "/jbox2d-library/src/main/java/org/jbox2d/dynamics",
      "name": "jbox2d",
      "url": "https://searchcode.com/codesearch/view/8149261/",
      "md5hash": "53667f69c532d2af19a3f4cc1f43d318",
      "lines": {
        "38": " */",
        "39": "public enum BodyType {"
      },
      "id": 8149261,
      "filename": "BodyType.java"
    },
    {
      "repo": "https://github.com/mdellavo/boourns.git",
      "language": "Java",
      "linescount": 437,
      "location": "/src/org/quuux/boourns",
      "name": "boourns",
      "url": "https://searchcode.com/codesearch/view/73076235/",
      "md5hash": "52d49e6ce879358d10cdd96284a69b14",
      "lines": {
        "131": "    protected BodyBuffer buffer;",
        "132": "    public BodyType bodyType;",
        "134": "",
        "135": "    public Item(BodyType bodyType, BodyBuffer buffer, Paint paint) {",
        "136": "        this.buffer = buffer;",
        "137": "        this.bodyType = bodyType;",
        "172": "    public EdgeItem(BodyBuffer buffer, Paint paint) {",
        "173": "        super(BodyType.EDGE, buffer, paint);",
        "147": "    public BallItem(BodyBuffer buffer, Paint paint) {",
        "148": "        super(BodyType.BALL, buffer, paint);",
        "122": "",
        "123": "enum BodyType {"
      },
      "id": 73076235,
      "filename": "DemoActivity.java"
    },
    {
      "repo": "https://github.com/akjava/gwt-box2d-three-samples.git",
      "language": "Java",
      "linescount": 233,
      "location": "/src/com/akjava/gwt/threebox2d/client/demo/spring",
      "name": "gwt-box2d-three-samples",
      "url": "https://searchcode.com/codesearch/view/73654687/",
      "md5hash": "e2b6d32fdf2300090c7208d5c5ae7df4",
      "lines": {
        "131": "\t\tBodyDef bd = new BodyDef();",
        "132": "\t\tbd.type = bodyType;",
        "145": "\tpublic static Body createCircle(World world,float x,float y,float radius,BodyType bodyType,float density,float friction,float restitution){",
        "104": "",
        "105": "\tpublic static Body createFixedBodyByLeftTop(World world,float left,float top,float width,float height,BodyType bodyType){",
        "10": "import org.jbox2d.dynamics.BodyDef;",
        "11": "import org.jbox2d.dynamics.BodyType;",
        "144": "\t}",
        "113": "\t\tBodyDef bd = new BodyDef();",
        "114": "\t\tbd.type = bodyType;",
        "155": "\t\tbd.type = bodyType;",
        "122": "\t",
        "123": "\tpublic static Body createBodyByLeftTop(World world,float left,float top,float width,float height,BodyType bodyType,float density,float friction,float restitution){",
        "154": "\t\tBodyDef bd = new BodyDef();"
      },
      "id": 73654687,
      "filename": "SpringDemo.java"
    },
    {
      "repo": "https://github.com/rdrushal/fitbit4j.git",
      "language": "Java",
      "linescount": 56,
      "location": "/fitbit4j/src/main/java/com/fitbit/api/common/model/devices",
      "name": "fitbit4j",
      "url": "https://searchcode.com/codesearch/view/76116710/",
      "md5hash": "d99e42c7dfa0af5787f94fc53393f851",
      "lines": {
        "48": "    public BodyType bodyType() {",
        "49": "        return bodyType;",
        "43": "",
        "44": "    public String getBodyType() {",
        "45": "        return bodyType.name();",
        "46": "    }",
        "47": "",
        "16": "    private String scaleUserName;",
        "17": "    private BodyType bodyType;",
        "50": "    }",
        "22": "        scaleUserName = jsonObject.getString(\"scaleUserName\");",
        "23": "        bodyType = BodyType.valueOf(jsonObject.getString(\"bodyType\"));"
      },
      "id": 76116710,
      "filename": "ScaleUser.java"
    },
    {
      "repo": "https://bitbucket.org/chittoor/tomcat7.git",
      "language": "Java",
      "linescount": 1790,
      "location": "/java/org/apache/jasper/compiler",
      "name": "tomcat7",
      "url": "https://searchcode.com/codesearch/view/36486125/",
      "md5hash": "d51745c4f4c00264f000716d5e61b178",
      "lines": {
        "1601": "     */",
        "1602": "    private void parseJspBody(Node parent, String bodyType)",
        "1617": "     * Parse the body as JSP content. @param tag The name of the tag whose end",
        "1611": "            }",
        "1612": "            parseBody(bodyNode, \"jsp:body\", bodyType);",
        "976": "     */",
        "977": "    private void parseOptionalBody(Node parent, String tag, String bodyType)",
        "1618": "     * tag would terminate the body @param bodyType One of the TagInfo body",
        "1620": "     */",
        "1621": "    private void parseBody(Node parent, String tag, String bodyType)",
        "1622": "            throws JasperException {",
        "1623": "        if (bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_TAG_DEPENDENT)) {",
        "1624": "            parseTagDependentBody(parent, tag);",
        "1625": "        } else if (bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_EMPTY)) {",
        "1629": "            }",
        "1630": "        } else if (bodyType == JAVAX_BODY_CONTENT_PLUGIN) {"
      },
      "id": 36486125,
      "filename": "Parser.java"
    },
    {
      "repo": "https://github.com/akjava/gwt-box2d-three-samples.git",
      "language": "Java",
      "linescount": 198,
      "location": "/src/org/jbox2d/gwt/showcase/client/example",
      "name": "gwt-box2d-three-samples",
      "url": "https://searchcode.com/codesearch/view/73654918/",
      "md5hash": "d1d4b59423575dd60f610aaf9857bce4",
      "lines": {
        "38": "import org.jbox2d.dynamics.BodyDef;",
        "39": "import org.jbox2d.dynamics.BodyType;",
        "177": "\t\t\tcase 's' :",
        "76": "\t\t\tBodyDef bd = new BodyDef();",
        "77": "\t\t\tbd.type = BodyType.DYNAMIC;",
        "174": "\t\t\t\tm_platform.setType(BodyType.DYNAMIC);",
        "173": "\t\t\tcase 'd' :",
        "48": " */",
        "49": "public class BodyTypes extends BaseExample {",
        "178": "\t\t\t\tm_platform.setType(BodyType.STATIC);",
        "181": "\t\t\tcase 'k' :",
        "182": "\t\t\t\tm_platform.setType(BodyType.KINEMATIC);",
        "88": "\t\t\tBodyDef bd = new BodyDef();",
        "89": "\t\t\tbd.type = BodyType.DYNAMIC;",
        "155": "\t\t// Drive the kinematic body.",
        "156": "\t\tif (m_platform.getType() == BodyType.KINEMATIC) {"
      },
      "id": 73654918,
      "filename": "BodyTypes.java"
    },
    {
      "repo": "https://github.com/thiagoh/tomcat.git",
      "language": "Java",
      "linescount": 1551,
      "location": "/java/org/apache/jasper/compiler",
      "name": "tomcat",
      "url": "https://searchcode.com/codesearch/view/87693800/",
      "md5hash": "0fe392a93362723b97be3ccc3dad1c20",
      "lines": {
        "450": "                // custom action",
        "451": "                String bodyType = getBodyType((Node.CustomTag) node);",
        "453": "                if (scriptlessBodyNode == null",
        "454": "                        && bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_SCRIPTLESS)) {",
        "1543": "        if (n instanceof Node.CustomTag) {",
        "456": "                }",
        "457": "                else if (TagInfo.BODY_CONTENT_TAG_DEPENDENT.equalsIgnoreCase(bodyType)) {",
        "1546": "                TagInfo.BODY_CONTENT_TAG_DEPENDENT.equalsIgnoreCase(bodyType);",
        "1544": "            String bodyType = getBodyType((Node.CustomTag) n);",
        "1545": "            return",
        "696": "        if (current instanceof Node.CustomTag) {",
        "697": "            String bodyType = getBodyType((Node.CustomTag) current);",
        "698": "            if (TagInfo.BODY_CONTENT_EMPTY.equalsIgnoreCase(bodyType)) {",
        "699": "                // Children - if any - must be JSP attributes",
        "1532": "    private static String getBodyType(Node.CustomTag custom) {",
        "1531": ""
      },
      "id": 87693800,
      "filename": "JspDocumentParser.java"
    },
    {
      "repo": "https://github.com/akjava/gwt-box2d-three-samples.git",
      "language": "Java",
      "linescount": 58,
      "location": "/src/com/akjava/gwt/threebox2d/client/demo/spring",
      "name": "gwt-box2d-three-samples",
      "url": "https://searchcode.com/codesearch/view/73654701/",
      "md5hash": "d8ec2a834a52b3a24e40464b61fc4d4d",
      "lines": {
        "32": "\t\t",
        "33": "\t\ttrueCenter=SpringDemo.createFixedBodyByLeftTop(world,sx+dw/2-size/2,sy+dh/2-size/2,size,size,BodyType.DYNAMIC);",
        "5": "import org.jbox2d.dynamics.Body;",
        "6": "import org.jbox2d.dynamics.BodyType;",
        "18": "\t\tint size=2;",
        "19": "\t\tBody left1 = SpringDemo.createFixedBodyByLeftTop(world,sx-size/2,sy+dh-size/2,size,size,BodyType.STATIC);",
        "22": "\t\t",
        "23": "\t\tleft2 = SpringDemo.createFixedBodyByLeftTop(world,sx+dw/4-size/2,sy+dh/2-size/2,size,size,BodyType.DYNAMIC);",
        "24": "\t\tBody right1 = SpringDemo.createFixedBodyByLeftTop(world,sx+dw-size/2,sy+dh-size/2,size,size,BodyType.STATIC);",
        "25": "\t\t",
        "26": "\t\tright2 = SpringDemo.createFixedBodyByLeftTop(world,sx+dw/2+dw/4-size/2,sy+dh/2-size/2,size,size,BodyType.DYNAMIC);",
        "29": "\t\t",
        "30": "\t\tcenter = SpringDemo.createFixedBodyByLeftTop(world,sx+dw/2-size/2,sy-size/2,size,size,BodyType.DYNAMIC);"
      },
      "id": 73654701,
      "filename": "TypeAEightSplitter.java"
    },
    {
      "repo": "https://github.com/akjava/gwt-box2d-three-samples.git",
      "language": "Java",
      "linescount": 229,
      "location": "/src/org/jbox2d/gwt/showcase/client/example",
      "name": "gwt-box2d-three-samples",
      "url": "https://searchcode.com/codesearch/view/73655103/",
      "md5hash": "22da90a3bbffc0369dd0cf0f74dc9c71",
      "lines": {
        "197": "\t\t\tbd.type = BodyType.DYNAMIC;",
        "36": "import org.jbox2d.dynamics.BodyDef;",
        "165": "\t\t\t\tbd.type = BodyType.DYNAMIC;",
        "134": "\t\t\t\tBodyDef bd = new BodyDef();",
        "135": "\t\t\t\tbd.type = BodyType.DYNAMIC;",
        "106": "\t\t\t\tBodyDef bd = new BodyDef();",
        "107": "\t\t\t\tbd.type = BodyType.DYNAMIC;",
        "79": "\t\t\t\tBodyDef bd = new BodyDef();",
        "80": "\t\t\t\tbd.type = BodyType.DYNAMIC;",
        "212": "\t\t\tBodyDef bd = new BodyDef();",
        "196": "\t\t\tBodyDef bd = new BodyDef();",
        "213": "\t\t\tbd.type = BodyType.DYNAMIC;",
        "164": "\t\t\t\tBodyDef bd = new BodyDef();",
        "37": "import org.jbox2d.dynamics.BodyType;"
      },
      "id": 73655103,
      "filename": "Cantilever.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 476,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 314,
      "source": "Github",
      "id": 2
    },
    {
      "count": 123,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 9,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 1,
      "source": "Unknown",
      "id": 0
    }
  ]
}