{
  "matchterm": "SoundData",
  "previouspage": null,
  "searchterm": "SoundData",
  "query": "SoundData",
  "language_filters": [
    {
      "count": 49,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 49,
  "results": [
    {
      "repo": "http://kellyirc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 27,
      "location": "/src/scripting",
      "name": "kellyirc",
      "url": "https://searchcode.com/codesearch/view/13038807/",
      "md5hash": "ee1224090e5ecf78ec76a85e6f36f867",
      "lines": {
        "9": "/**",
        "10": " * The Class SoundData.",
        "11": " */",
        "12": "public class SoundData {"
      },
      "id": 13038807,
      "filename": "SoundData.java"
    },
    {
      "repo": "https://github.com/Ginows/SRE-RoboCode.git",
      "language": "Java",
      "linescount": 229,
      "location": "/RobocodeSrc/trunk/robocode.sound/src/main/java/net/sf/robocode/sound",
      "name": "SRE-RoboCode",
      "url": "https://searchcode.com/codesearch/view/114464931/",
      "md5hash": "f6ad1ab68bc57bbd648fb0b7c511b87e",
      "lines": {
        "98": "\t\t\t\tclips[i] = (Clip) mixer.getLine(info);",
        "99": "\t\t\t\tclips[i].open(soundData.format, soundData.byteData, 0, soundData.length);",
        "179": "\t\t\tdata = new SoundData(ais);",
        "167": "\t */",
        "168": "\tprivate SoundData createSoundData(String resourceName) {",
        "169": "\t\tSoundData data;",
        "170": "\t\tURL url = SoundCache.class.getResource(resourceName);",
        "162": "\t/**",
        "143": "",
        "144": "\t\tSoundData data = createSoundData(resourceName);",
        "178": "",
        "163": "\t * Creates an instance of SoundData, to be used later for creating the clip clones.",
        "52": "\t */",
        "53": "\tprivate static class SoundData {",
        "86": "",
        "87": "\t\tprivate ClipClones(Mixer mixer, SoundData soundData, int size) throws LineUnavailableException {"
      },
      "id": 114464931,
      "filename": "SoundCache.java"
    },
    {
      "repo": "https://bitbucket.org/coocoon/antidote",
      "language": "Java",
      "linescount": 143,
      "location": "/bin/jdk/ibm/java6-sr9fp1-2011-02-08/demo/plugin/applets/ImageMap",
      "name": "antidote",
      "url": "https://searchcode.com/codesearch/view/120149281/",
      "md5hash": "97baa567b03ab8e7d8d274f897855ad8",
      "lines": {
        "128": "\t    hasPlayed = true;",
        "129": "\t    soundData.play();",
        "68": "    URL sound;",
        "69": "    AudioClip soundData = null;",
        "95": "\tif (soundData == null) {",
        "94": "\t}",
        "91": "    public void getMedia() {",
        "92": "\tif (sound != null && soundData == null) {",
        "93": "\t    soundData = parent.getAudioClip(sound);",
        "126": "\t// Else play the sound.",
        "127": "\tif (! hasPlayed && (soundData != null)) {"
      },
      "id": 120149281,
      "filename": "SoundArea.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 1317,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264033/",
      "md5hash": "69816adecbe75450fd4b88ede8b342f9",
      "lines": {
        "288": "            return;",
        "290": "",
        "291": "        if (this.soundData != null) {",
        "292": "            // this sound node had older sound data; clear it out",
        "273": "     * Assign value into sound data field",
        "274": "     * @param soundData description of sound source data",
        "275": "     */",
        "276": "    void setSoundDataState(MediaContainer soundData) {",
        "277": "        this.soundData = soundData;",
        "278": "    }",
        "282": "     * Attempt to load sound",
        "283": "     * @param soundData descrition of sound source data",
        "284": "     */",
        "285": "    void setSoundData(MediaContainer soundData) {",
        "286": "        // if resetting soundData to the same value don't bother doing anything",
        "287": "        if (this.soundData == soundData) {"
      },
      "id": 15264033,
      "filename": "SoundRetained.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 961,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15263976/",
      "md5hash": "d088282493e08c2e657457005f8120af",
      "lines": {
        "320": "    public ConeSound(MediaContainer soundData,",
        "384": "        super(soundData, initialGain, loopCount, release, continuous, enable,",
        "194": "     */",
        "195": "     public ConeSound(MediaContainer soundData,",
        "199": "",
        "264": "     */",
        "265": "     public ConeSound(MediaContainer soundData,",
        "300": "     * in the local coordinate system of the node.",
        "301": "     * @param soundData sound source data associated with this node",
        "200": "        super(soundData, initialGain, position );",
        "277": "",
        "278": "        super(soundData, initialGain, loopCount, release, continuous, enable,",
        "383": "",
        "189": "     * Point3f as input for its position and Vector3f for direction.",
        "190": "     * @param soundData sound source data associated with this node",
        "319": "     */"
      },
      "id": 15263976,
      "filename": "ConeSound.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 581,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264048/",
      "md5hash": "0fb178bbec4269f9d50405c04c0bf1ca",
      "lines": {
        "289": "",
        "290": "        super(soundData, initialGain, loopCount, release, continuous,",
        "164": "      * parameters for the elements of the position point.",
        "165": "      * @param soundData sound data associated with this sound source node",
        "265": "     * components of distance attenuation.",
        "170": "      */",
        "171": "     public PointSound(MediaContainer soundData,",
        "144": "     * its position.",
        "145": "     * @param soundData sound data associated with this sound source node",
        "148": "     */",
        "149": "    public PointSound(MediaContainer soundData,",
        "278": "    public PointSound(MediaContainer soundData,",
        "151": "                      Point3f position) {",
        "152": "        super(soundData, initialGain);",
        "266": "     * @param soundData sound data associated with this sound source node",
        "277": "     */"
      },
      "id": 15264048,
      "filename": "PointSound.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 3239,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264237/",
      "md5hash": "ec8e136dc67a1e51b350214d2ceb413f",
      "lines": {
        "2947": "\t    if (debugFlag)",
        "2948": "\t\tdebugPrint(\".attachSoundData audioDevice3D null\");",
        "2952": "\t}",
        "2953": "\tif (soundAtom.soundData != null) {",
        "2954": "\t    // clear sound data field for view specific atom NOT sound node",
        "2923": "\tsoundAtom.loadStatus = SoundRetained.LOAD_NULL;",
        "2924": "\tsoundAtom.soundData = null;",
        "2957": "\t\tif (debugFlag)",
        "2255": "\tif ( soundAtom.sampleId == SoundRetained.NULL_SOUND ||",
        "2256": "\t     soundAtom.soundData == null ) {",
        "2956": "\t    if (soundData == null)  {",
        "599": "\t\tbreak;",
        "600": "\t    MediaContainer mediaContainer = sound.getSoundData();",
        "604": "\t\t    debugPrint(\": not LOAD_COMPLETE - try attaching\");",
        "605": "\t\tattachSoundData(soundAtom, mediaContainer, forceReload);",
        "2955": "\t    clearSoundData(soundAtom);"
      },
      "id": 15264237,
      "filename": "SoundScheduler.java"
    },
    {
      "repo": "https://github.com/BonsaiDen/Tuff.git",
      "language": "Java",
      "linescount": 1390,
      "location": "/src/org/tuff/game",
      "name": "Tuff",
      "url": "https://searchcode.com/codesearch/view/107121842/",
      "md5hash": "14cde202fd498c48b4e24b9dcc18be1a",
      "lines": {
        "640": "\t\t} else {",
        "641": "\t\t\tif (soundData[x][y] >= 1 && mapData[x][y] == 4) {",
        "50": "\tpublic byte[][] groundData;",
        "51": "\tpublic byte[][] soundData;",
        "643": "",
        "1233": "\t\tsoundData = new byte[mapWidth][mapHeight];",
        "644": "\t\t\t} else if (soundData[x][y] >= 1 && mapData[x][y] == 2) {",
        "1232": "\t\tborderData = new byte[mapWidth][mapHeight];",
        "1296": "\t\t\tsoundData = new byte[mapWidth][mapHeight];",
        "1295": "\t\t\tborderData = new byte[mapWidth][mapHeight];"
      },
      "id": 107121842,
      "filename": "TuffMap.java"
    },
    {
      "repo": "https://bitbucket.org/coocoon/antidote",
      "language": "Java",
      "linescount": 133,
      "location": "/bin/jdk/ibm/java6-sr9fp1-2011-02-08/demo/plugin/applets/ImageMap",
      "name": "antidote",
      "url": "https://searchcode.com/codesearch/view/120149278/",
      "md5hash": "9a554a44920d04a0152edfcd6b7bcb5a",
      "lines": {
        "96": "\t    soundData = parent.getAudioClip(sound);",
        "97": "\t}",
        "98": "\tif (soundData == null) {",
        "72": "    URL \tsound;",
        "73": "    AudioClip\tsoundData;",
        "127": "\t    }",
        "124": "\t    hasPlayed = true;",
        "125": "\t    if (soundData != null) {",
        "126": "\t        soundData.play();",
        "95": "\tif (sound != null) {"
      },
      "id": 120149278,
      "filename": "DelayedSoundArea.java"
    },
    {
      "repo": "http://kellyirc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 376,
      "location": "/src/scripting",
      "name": "kellyirc",
      "url": "https://searchcode.com/codesearch/view/13038808/",
      "md5hash": "1a646dabfd385e4ae98de90f89c4a732",
      "lines": {
        "320": "",
        "321": "\t\tSoundData.curSound = new Sound();",
        "322": "\t\tSoundData.curSound.Load(path);",
        "323": "\t\tif (SoundData.curSound.GetError() != null)",
        "324": "\t\t\treturn false;",
        "325": "",
        "326": "\t\tSoundData.curId = NeptuneCore.PlaySound(SoundData.curSound);",
        "327": "\t\tSoundData.soundRef = new SoundReference(SoundData.curId);",
        "328": "\t\tSoundData.isPaused = false;",
        "329": "",
        "336": "\tpublic final void stopSound() {",
        "337": "\t\tif (SoundData.soundRef == null)",
        "338": "\t\t\treturn;",
        "339": "\t\tSoundData.soundRef.Stop();",
        "345": "\tpublic final void pauseSound() {",
        "346": "\t\tif (SoundData.soundRef == null)",
        "347": "\t\t\treturn;"
      },
      "id": 13038808,
      "filename": "ScriptFunctions.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 1198,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264144/",
      "md5hash": "76d227c5fbfeb098878750cd47de6d1d",
      "lines": {
        "512": "        ((SoundRetained)this.retained).setSoundData(soundData);",
        "554": "     * values.",
        "580": "        ((SoundRetained)this.retained).setSoundData(soundData);",
        "519": "     * values.",
        "520": "     * @param soundData description of JMF source data used by this sound source",
        "201": " * (when the MediaContainer is passed into the constructor as a parameter)",
        "202": " * or by calling setSoundData(), it can be prepared to begin playing",
        "555": "     * @param soundData description of JMF source data used by this sound source",
        "530": "     */",
        "531": "    public Sound(MediaContainer soundData,",
        "567": "     */",
        "568": "    public Sound(MediaContainer soundData,",
        "579": "",
        "541": "",
        "542": "        ((SoundRetained)this.retained).setSoundData(soundData);",
        "511": ""
      },
      "id": 15264144,
      "filename": "Sound.java"
    },
    {
      "repo": "https://github.com/eroz80/Hiro.git",
      "language": "Java",
      "linescount": 190,
      "location": "/Speechrecognizer/src/hiro/audio",
      "name": "Hiro",
      "url": "https://searchcode.com/codesearch/view/94585553/",
      "md5hash": "bc9d09d73e98fe6520c29bd98d7c5b4d",
      "lines": {
        "34": "\tprivate AudioInputStream stream = null;",
        "35": "\tprivate List<Integer> soundData = new ArrayList<Integer>();",
        "132": "",
        "133": "\t\tLOG.info(\"Stopped Recording with: \" + this.getSoundData().size()",
        "72": "\tpublic void clearData() {",
        "73": "\t\tthis.soundData.clear();",
        "138": "",
        "87": "\t\t\t// TODO: Seems a bit dirty but we need a bytestream",
        "88": "\t\t\tByteBuffer buffer = ByteBuffer.allocate(soundData.size());",
        "139": "\t\treturn getSoundData();",
        "57": "\t\trecorder = new AudioStreamReader(soundData, stream);",
        "56": "",
        "89": "\t\t\tbyte[] sd = new byte[soundData.size()];",
        "90": "\t\t\tfor (int i = 0; i < soundData.size(); i++) {",
        "91": "\t\t\t\tint sound = soundData.get(i);"
      },
      "id": 94585553,
      "filename": "AudioRecorder.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-utils.git",
      "language": "Java",
      "linescount": 958,
      "location": "/src/classes/share/com/sun/j3d/audioengines/javasound",
      "name": "java3d-utils",
      "url": "https://searchcode.com/codesearch/view/14831871/",
      "md5hash": "4cb247155766e26c7966db4a8a467bff",
      "lines": {
        "224": "                posSample.setSoundType(soundType);",
        "225": "                posSample.setSoundData(soundData);",
        "195": "                JSDirectionalSample dirSample = new JSDirectionalSample();",
        "196": "                error = dirSample.load(soundData);",
        "231": "                sample = new JSSample();",
        "232": "                error = sample.load(soundData);",
        "215": "                JSPositionalSample posSample = new JSPositionalSample();",
        "240": "                sample.setSoundType(soundType);",
        "208": "                dirSample.setSoundType(soundType);",
        "209": "                dirSample.setSoundData(soundData);",
        "179": "     */",
        "180": "    public int prepareSound(int soundType, MediaContainer soundData) {",
        "182": "        int   methodType = ADD_TO_LIST;",
        "183": "        if (soundData == null)",
        "216": "                error = posSample.load(soundData);",
        "241": "                sample.setSoundData(soundData);"
      },
      "id": 14831871,
      "filename": "JavaSoundMixer.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-utils.git",
      "language": "Java",
      "linescount": 362,
      "location": "/src/classes/share/com/sun/j3d/audioengines/javasound",
      "name": "java3d-utils",
      "url": "https://searchcode.com/codesearch/view/14831868/",
      "md5hash": "b8178cddba7d1ffd089b83a4af2720ac",
      "lines": {
        "304": "        setSoundData(soundData);",
        "194": "         */",
        "195": "        String path = soundData.getURLString();",
        "196": "        URL url = soundData.getURLObject();",
        "197": "        InputStream inputStream = soundData.getInputStream();",
        "198": "        boolean cacheFlag = soundData.getCacheEnable();",
        "199": "        AudioInputStream ais = null;",
        "188": "    // @return error true if error occurred",
        "189": "    boolean load(MediaContainer soundData) {",
        "303": "        setSoundType(soundType);"
      },
      "id": 14831868,
      "filename": "JSSample.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 154,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264221/",
      "md5hash": "1c3b1fe69f97caa949a02fb021fc7583",
      "lines": {
        "70": "     */",
        "71": "    public BackgroundSound(MediaContainer soundData,",
        "79": "",
        "80": "        super(soundData, initialGain, loopCount, release, continuous,",
        "51": "     * are set to the default values for a Sound node.",
        "52": "     * @param soundData sound data associated with this sound source node",
        "54": "     */",
        "55": "    public BackgroundSound(MediaContainer soundData, float initialGain ) {",
        "56": "        super(soundData, initialGain);",
        "57": "    }",
        "61": "     * associated with a Sound node.",
        "62": "     * @param soundData sound data associated with this sound source node"
      },
      "id": 15264221,
      "filename": "BackgroundSound.java"
    },
    {
      "repo": "https://github.com/guamoko/ITP2013Parametric.git",
      "language": "Java",
      "linescount": 792,
      "location": "/src-snd",
      "name": "ITP2013Parametric",
      "url": "https://searchcode.com/codesearch/view/100992905/",
      "md5hash": "1c2343d4aba93bf56b8e36b67353a4c9",
      "lines": {
        "32": "SoundData snd;",
        "459": "  public SoundData(int framesPerSecond, int _spectrumLength, float _damper) {",
        "454": "",
        "39": "  ",
        "40": "  snd=new SoundData(25,256,0.1f);",
        "441": "",
        "442": "class SoundData {",
        "455": "  // Constructor for SoundData",
        "458": "",
        "31": "int sndFrame=0;"
      },
      "id": 100992905,
      "filename": "FFTDataToCSV.java"
    },
    {
      "repo": "https://github.com/guamoko/ITP2013Parametric.git",
      "language": "Java",
      "linescount": 849,
      "location": "/src-snd/unlekker/snd",
      "name": "ITP2013Parametric",
      "url": "https://searchcode.com/codesearch/view/100992914/",
      "md5hash": "020ff5a475b51650dadf48686b3402fd",
      "lines": {
        "33": "int sndFrame=0;",
        "34": "SoundData snd;",
        "457": "",
        "44": "  snd=new SoundData(256,0.1f);",
        "458": "  // Constructor for SoundData",
        "43": "  // number of fft bands, damping factor (0.1f == 10% of new value per frame)",
        "444": "",
        "445": "class SoundData {",
        "462": "  public SoundData(int _spectrumLength, float _damper) {",
        "461": ""
      },
      "id": 100992914,
      "filename": "FFTDataToCSV02.java"
    },
    {
      "repo": "https://github.com/guamoko/ITP2013Parametric.git",
      "language": "Java",
      "linescount": 794,
      "location": "/src-snd/unlekker/snd",
      "name": "ITP2013Parametric",
      "url": "https://searchcode.com/codesearch/view/100992923/",
      "md5hash": "d487b55a83976a3a885c17d85d4845e0",
      "lines": {
        "33": "int sndFrame=0;",
        "34": "SoundData snd;",
        "457": "  // Constructor for SoundData",
        "456": "",
        "41": "  ",
        "42": "  snd=new SoundData(25,256,0.1f);",
        "443": "",
        "444": "class SoundData {",
        "460": "",
        "461": "  public SoundData(int framesPerSecond, int _spectrumLength, float _damper) {"
      },
      "id": 100992923,
      "filename": "FFTDataToCSV.java"
    },
    {
      "repo": "https://code.google.com/p/apertum-qsystem/",
      "language": "Java",
      "linescount": 377,
      "location": "/src/ru/apertum/qsystem/common",
      "name": "apertum-qsystem",
      "url": "https://searchcode.com/codesearch/view/3335162/",
      "md5hash": "0e0badb9c3d517b3cd26b540b1888969",
      "lines": {
        "162": "            } else {",
        "163": "                byte[] sounddata;",
        "180": "                }",
        "181": "                sounddata = null;",
        "169": "                    int bufferlengthinbytes = bufferlengthinframes * framesizeinbytes;",
        "170": "                    sounddata = new byte[bufferlengthinbytes];",
        "171": "                    int numberofbytesread = 0;",
        "172": "                    while ((numberofbytesread = ais.read(sounddata)) != -1) {",
        "173": "                        sourcedataline.write(sounddata, 0, numberofbytesread);",
        "174": "                    }"
      },
      "id": 3335162,
      "filename": "SoundPlayer.java"
    },
    {
      "repo": "https://github.com/eroz80/Hiro.git",
      "language": "Java",
      "linescount": 58,
      "location": "/Speechrecognizer/src/hiro/window",
      "name": "Hiro",
      "url": "https://searchcode.com/codesearch/view/94585560/",
      "md5hash": "62e1cb5a6dd2bba9181ea39ec89ebb39",
      "lines": {
        "33": "\t */",
        "34": "\tpublic List<List<Double>> applyWindow(List<Integer> soundData,",
        "50": "\t\t\t\t\t\t\t.add(soundData.get(dataIndex) * window.get(i));",
        "49": "\t\t\t\t\tresult.get(nw)",
        "38": "",
        "39": "\t\tint numWindows = (int) Math.ceil(soundData.size()",
        "45": "\t\t\t\tint dataIndex = nw * (samplesPerWindowFrame - overlap) + i;",
        "46": "\t\t\t\tif (dataIndex >= soundData.size()) {"
      },
      "id": 94585560,
      "filename": "WindowFramer.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 25,
      "source": "Github",
      "id": 2
    },
    {
      "count": 17,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 7,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}