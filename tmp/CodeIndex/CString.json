{
  "matchterm": "CString",
  "previouspage": null,
  "searchterm": "CString",
  "query": "CString",
  "language_filters": [
    {
      "count": 347,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 347,
  "results": [
    {
      "repo": "https://github.com/gogoego-gerrit/iucn-sis.git",
      "language": "Java",
      "linescount": 158,
      "location": "/com.solertium.db/src/com/solertium/db",
      "name": "iucn-sis",
      "url": "https://searchcode.com/codesearch/view/110358146/",
      "md5hash": "d8e160455610e92b10bb4254683d9885",
      "lines": {
        "34": " */",
        "35": "public class CString extends BaseColumn {",
        "147": "\t\t\t\t\t\"CString column must be loaded with String object\");",
        "38": "",
        "39": "\tpublic CString() {",
        "42": "\tpublic Column newInstance(){",
        "43": "\t\treturn new CString();",
        "66": "\t\t\t\tthrow new ConversionException(",
        "46": "\tpublic CString(final String localName, final String s) {",
        "45": "",
        "80": "\t\t\tthrow new ConversionException(",
        "81": "\t\t\t\t\t\"CString column does not contain a double-precision number\");",
        "146": "\t\t\tthrow new ConversionException(",
        "67": "\t\t\t\t\t\t\"CString column does not contain a date in SQL format\");",
        "110": "\t\t\tthrow new ConversionException(",
        "111": "\t\t\t\t\t\"CString column does not contain a long integer\");"
      },
      "id": 110358146,
      "filename": "CString.java"
    },
    {
      "repo": "https://github.com/gogoego-gerrit/iucn-sis.git",
      "language": "Java",
      "linescount": 157,
      "location": "/viewmaster/org.gogoego.util.db/src/org/gogoego/util/db/shared",
      "name": "iucn-sis",
      "url": "https://searchcode.com/codesearch/view/110358901/",
      "md5hash": "b282385f95d6e46fb925fac1efdb613c",
      "lines": {
        "33": " */",
        "34": "public class CString extends BaseColumn implements Serializable {",
        "99": "\t\t\tthrow new ConversionException(",
        "100": "\t\t\t\t\t\"CString column does not contain a long integer\");",
        "69": "\t\t\tthrow new ConversionException(",
        "70": "\t\t\t\t\t\"CString column does not contain a double-precision number\");",
        "39": "",
        "40": "\tpublic CString() {",
        "43": "\tpublic Column newInstance(){",
        "44": "\t\treturn new CString();",
        "46": "\t",
        "47": "\tpublic CString(final String localName, final String s) {",
        "136": "\t\t\t\t\t\"CString column must be loaded with String object\");",
        "82": "\t\t\tthrow new ConversionException(",
        "83": "\t\t\t\t\t\"CString column does not contain an integer\");",
        "135": "\t\t\tthrow new ConversionException("
      },
      "id": 110358901,
      "filename": "CString.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 95,
      "location": "/src/main/java/com/laytonsmith/core/constructs",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224967/",
      "md5hash": "695bb3ae716fdaad30e2d642b1368283",
      "lines": {
        "32": "    public CString clone() throws CloneNotSupportedException{",
        "64": "            return new CString(\"\", t);",
        "66": "        return new CString(this.val().substring(begin, end), t);",
        "65": "        }",
        "63": "        if(begin >= end){",
        "44": "            int i = (int)Integer.parseInt(index);",
        "45": "            return new CString(this.val().charAt(i), t);",
        "16": "@typeof(\"string\")",
        "17": "public class CString extends CPrimitive implements Cloneable, ArrayAccess{",
        "18": "",
        "19": "    public CString(String value, Target t){",
        "22": "",
        "23": "    public CString(char value, Target t){",
        "26": "",
        "27": "    public CString(CharSequence value, Target t){",
        "31": "    @Override"
      },
      "id": 113224967,
      "filename": "CString.java"
    },
    {
      "repo": "git://github.com/jtransformer/pdt.git",
      "language": "Java",
      "linescount": 27,
      "location": "/prolog.connector/src/org/cs3/prolog/cterm",
      "name": "pdt",
      "url": "https://searchcode.com/codesearch/view/58846526/",
      "md5hash": "3b4768f3fb742b0cee1dc1f00c4ca2d2",
      "lines": {
        "19": "",
        "20": "public class CString extends CTerm {",
        "21": "\tpublic CString(ASTNode node) {",
        "22": "\t\tsuper(node);"
      },
      "id": 58846526,
      "filename": "CString.java"
    },
    {
      "repo": "https://github.com/nuggetwheat/hypertable.git",
      "language": "Java",
      "linescount": 41,
      "location": "/src/java/Core/org/hypertable/Common",
      "name": "hypertable",
      "url": "https://searchcode.com/codesearch/view/138229954/",
      "md5hash": "ee2948c879c2831108986075f3be08d3",
      "lines": {
        "25": "",
        "26": "public class CString {"
      },
      "id": 138229954,
      "filename": "CString.java"
    },
    {
      "repo": "http://nativelibs4java.googlecode.com/svn/",
      "language": "Java",
      "linescount": 15,
      "location": "/trunk/Moved to GitHub/Runtime/BridJ/src/main/java/org/bridj/cpp/mfc",
      "name": "nativelibs4java",
      "url": "https://searchcode.com/codesearch/view/11405096/",
      "md5hash": "0bbaaabbabaec9e3dbe91a2a9ea1fcbd",
      "lines": {
        "11": " */",
        "12": "public class CString extends CStringT {"
      },
      "id": 11405096,
      "filename": "CString.java"
    },
    {
      "repo": "https://bitbucket.org/janus/janus.git",
      "language": "Java",
      "linescount": 448,
      "location": "/janus/janus-kernel/util/src/test/java/org/janusproject/kernel/util/prototype",
      "name": "janus",
      "url": "https://searchcode.com/codesearch/view/39430143/",
      "md5hash": "62dd0b01d007d4e2bbbf2d3f44d92705",
      "lines": {
        "128": "\t\tassertNoInputs(Prototype2.class);",
        "129": "\t\tassertNoInputs(Prototype2.class, CDOUBLE, CSTRING);",
        "130": "\t\tassertNoInputs(Prototype2.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);",
        "131": "\t\tassertInputs(Prototype2.class, CFLOAT, CSTRING, CBOOLEAN);",
        "132": "\t\tassertNoInputs(Prototype2.class, CFLOAT, CSTRING);",
        "133": "\t\tassertNoInputs(Prototype2.class, CFLOAT);",
        "140": "\t\tassertNoInputs(Prototype3.class);",
        "141": "\t\tassertNoInputs(Prototype3.class, CDOUBLE, CSTRING);",
        "142": "\t\tassertNoInputs(Prototype3.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);",
        "143": "\t\tassertInputs(Prototype3.class, CFLOAT, CSTRING, CBOOLEAN);",
        "144": "\t\tassertInputs(Prototype3.class, CFLOAT, CSTRING);",
        "145": "\t\tassertNoInputs(Prototype3.class, CFLOAT);",
        "152": "\t\tassertInputs(Prototype4.class);",
        "153": "\t\tassertNoInputs(Prototype4.class, CDOUBLE, CSTRING);",
        "154": "\t\tassertNoInputs(Prototype4.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);"
      },
      "id": 39430143,
      "filename": "PrototypeValidatorTest.java"
    },
    {
      "repo": "https://bitbucket.org/lothiraldan/janus.git",
      "language": "Java",
      "linescount": 448,
      "location": "/janus/janus-kernel/util/src/test/java/org/janusproject/kernel/util/prototype",
      "name": "janus",
      "url": "https://searchcode.com/codesearch/view/49658055/",
      "md5hash": "62dd0b01d007d4e2bbbf2d3f44d92705",
      "lines": {
        "128": "\t\tassertNoInputs(Prototype2.class);",
        "129": "\t\tassertNoInputs(Prototype2.class, CDOUBLE, CSTRING);",
        "130": "\t\tassertNoInputs(Prototype2.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);",
        "131": "\t\tassertInputs(Prototype2.class, CFLOAT, CSTRING, CBOOLEAN);",
        "132": "\t\tassertNoInputs(Prototype2.class, CFLOAT, CSTRING);",
        "133": "\t\tassertNoInputs(Prototype2.class, CFLOAT);",
        "140": "\t\tassertNoInputs(Prototype3.class);",
        "141": "\t\tassertNoInputs(Prototype3.class, CDOUBLE, CSTRING);",
        "142": "\t\tassertNoInputs(Prototype3.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);",
        "143": "\t\tassertInputs(Prototype3.class, CFLOAT, CSTRING, CBOOLEAN);",
        "144": "\t\tassertInputs(Prototype3.class, CFLOAT, CSTRING);",
        "145": "\t\tassertNoInputs(Prototype3.class, CFLOAT);",
        "152": "\t\tassertInputs(Prototype4.class);",
        "153": "\t\tassertNoInputs(Prototype4.class, CDOUBLE, CSTRING);",
        "154": "\t\tassertNoInputs(Prototype4.class, CFLOAT, CSTRING, CBOOLEAN, CINTEGER);"
      },
      "id": 49658055,
      "filename": "PrototypeValidatorTest.java"
    },
    {
      "repo": "https://github.com/cuibaoliang/LPmade.git",
      "language": "Java",
      "linescount": 739,
      "location": "/weka/src/weka/filters/unsupervised/instance",
      "name": "LPmade",
      "url": "https://searchcode.com/codesearch/view/71236219/",
      "md5hash": "1075643a7f9e2f091de77b43fa907e0d",
      "lines": {
        "440": "    if (cString.length() != 0) {",
        "441": "      setClassIndex((new Double(cString)).intValue());",
        "442": "    } else {",
        "438": "",
        "439": "    String cString = Utils.getOption('C', options);"
      },
      "id": 71236219,
      "filename": "RemoveMisclassified.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 1667,
      "location": "/src/main/java/com/laytonsmith/core/events/drivers",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224668/",
      "md5hash": "10f980f75ef2b9c259b85cc9014b9886",
      "lines": {
        "384": "\t\t\t\t} else if (shooter instanceof MCEntity) {",
        "385": "\t\t\t\t\tret.put(\"shooter\", new CString(((MCEntity) shooter).getUniqueId().toString(), t));",
        "585": "\t\t\t\t}",
        "586": "\t\t\t\tmap.put(\"type\", new CString(dead.getType().name(), t));",
        "491": "\t\t\t\tMCProjectile projectile = projectileLaunchEvent.getEntity();",
        "492": "\t\t\t\tmapEvent.put(\"id\", new CString(projectile.getUniqueId().toString(), Target.UNKNOWN));",
        "493": "\t\t\t\tmapEvent.put(\"type\", new CString(projectileLaunchEvent.getEntityType().name(), Target.UNKNOWN));",
        "46": "import com.laytonsmith.core.constructs.CNull;",
        "47": "import com.laytonsmith.core.constructs.CString;",
        "180": "\t\t\t\tret.put(\"location\", ObjectGenerator.GetGenerator().location(event.getLocation(), false));",
        "277": "\t\t\t\tif (e.getEntity() != null) {",
        "278": "\t\t\t\t\tentity = new CString(e.getEntity().getUniqueId().toString(), t);",
        "279": "\t\t\t\t\tentitytype = new CString(e.getEntity().getType().name(), t);",
        "280": "\t\t\t\t}",
        "181": "\t\t\t\tret.put(\"id\", new CString(event.getEntity().getUniqueId().toString(), t));"
      },
      "id": 113224668,
      "filename": "EntityEvents.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 2640,
      "location": "/src/main/java/com/laytonsmith/core/events/drivers",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224681/",
      "md5hash": "ac665318dbc523b11d1ef316e0c80a31",
      "lines": {
        "576": "                map.put(\"ip\", new CString(event.getIP(), Target.UNKNOWN));",
        "577": "                map.put(\"result\", new CString(event.getResult(), Target.UNKNOWN));",
        "667": "                map.put(\"player\", new CString(event.getName(), Target.UNKNOWN));",
        "668": "\t\t\t\tmap.put(\"uuid\", new CString(event.getUniqueId(), Target.UNKNOWN));",
        "274": "                //Fill in the event parameters",
        "275": "                map.put(\"message\", new CString(event.getMessage(), Target.UNKNOWN));",
        "276": "                map.put(\"reason\", new CString(event.getReason(), Target.UNKNOWN));",
        "277": "                return map;",
        "670": "\t\t\t\t//TODO: The event.getResult needs to be enum'd",
        "666": "",
        "27": "import com.laytonsmith.core.constructs.CNull;",
        "28": "import com.laytonsmith.core.constructs.CString;",
        "669": "                map.put(\"ip\", new CString(event.getIP(), Target.UNKNOWN));",
        "574": "",
        "575": "                map.put(\"player\", new CString(event.getName(), Target.UNKNOWN));"
      },
      "id": 113224681,
      "filename": "PlayerEvents.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 1176,
      "location": "/src/main/java/com/laytonsmith/core",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224188/",
      "md5hash": "41ee246f5b687ca80145e228a91fa089",
      "lines": {
        "395": "\t\t\t\tif(type != null){",
        "423": "\t\t\t\tif (((MCBookMeta) meta).hasTitle()) {",
        "424": "\t\t\t\t\ttitle = new CString(((MCBookMeta) meta).getTitle(), t);",
        "396": "\t\t\t\t\tcf.set(\"type\", new CString(mcfm.getType().name(), t), t);",
        "39": "import com.laytonsmith.core.constructs.CNull;",
        "428": "\t\t\t\tif (((MCBookMeta) meta).hasAuthor()) {",
        "429": "\t\t\t\t\tauthor = new CString(((MCBookMeta) meta).getAuthor(), t);",
        "79": "        Construct z = new CDouble(l.getZ(), Target.UNKNOWN);",
        "80": "        Construct world = new CString(l.getWorld().getName(), Target.UNKNOWN);",
        "40": "import com.laytonsmith.core.constructs.CString;",
        "435": "\t\t\t\t\tfor (String p : ((MCBookMeta) meta).getPages()) {",
        "436": "\t\t\t\t\t\t((CArray) pages).push(new CString(p, t), t);",
        "472": "\t\t\t\t\tCArray pattern = CArray.GetAssociativeArray(t);",
        "473": "\t\t\t\t\tpattern.set(\"shape\", new CString(p.getShape().toString(), t), t);",
        "474": "\t\t\t\t\tpattern.set(\"color\", new CString(p.getColor().toString(), t), t);",
        "446": "\t\t\t\tif (((MCSkullMeta) meta).hasOwner()) {",
        "447": "\t\t\t\t\towner = new CString(((MCSkullMeta) meta).getOwner(), t);"
      },
      "id": 113224188,
      "filename": "ObjectGenerator.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 3328,
      "location": "/src/main/java/com/laytonsmith/core/functions",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224381/",
      "md5hash": "404aae81d34efe30f20ca709b57dee07",
      "lines": {
        "1029": "\t\t\tfor (UUID e : eSet) {",
        "1030": "\t\t\t\tentities.push(new CString(e.toString(), t), t);",
        "1575": "\t\t\tif (ent.isInsideVehicle()) {",
        "1576": "\t\t\t\treturn new CString(ent.getVehicle().getUniqueId().toString(), t);",
        "938": "",
        "939": "\t\t\t\treturn new CString(entity.getUniqueId().toString(), t);",
        "1551": "\t\t\tif (ent.getPassenger() != null) {",
        "1552": "\t\t\t\treturn new CString(ent.getPassenger().getUniqueId().toString(), t);",
        "920": "",
        "921": "\t\t\t\treturn new CString(projectile.getUniqueId().toString(), t);",
        "1080": "\t\t\t} else {",
        "1081": "\t\t\t\treturn new CString(le.getTarget(t).getUniqueId().toString(), t);",
        "1466": "\t\t\t\t}",
        "1467": "\t\t\t\tret.push(new CString(ent.getUniqueId().toString(), t), t);",
        "188": "\t\t\t\t\tfor (MCEntity e : c.getEntities()) {",
        "189": "\t\t\t\t\t\tret.push(new CString(e.getUniqueId().toString(), t), t);"
      },
      "id": 113224381,
      "filename": "EntityManagement.java"
    },
    {
      "repo": "https://bitbucket.org/Esquive/iticrawler.git",
      "language": "Java",
      "linescount": 173,
      "location": "/src/main/java/com/itiniu/iticrawler/behaviors/impl",
      "name": "iticrawler",
      "url": "https://searchcode.com/codesearch/view/67290921/",
      "md5hash": "a068c5ee93578fbaad5dd14b8a33c62e",
      "lines": {
        "128": "\t\t\t\t{",
        "129": "\t\t\t\t\tcString = cString.substring(cString.indexOf(\":\") + 1);",
        "130": "",
        "131": "\t\t\t\t\tcString = cString.trim();",
        "100": "\t\t{",
        "101": "\t\t\tcString = cTokenizer.nextToken();",
        "102": "",
        "103": "\t\t\tcString = cString.trim();",
        "104": "\t\t\tcString = cString.toLowerCase();",
        "105": "",
        "106": "\t\t\tif (cString.matches(this.USER_AGENT_PATTERN))",
        "107": "\t\t\t{",
        "132": "",
        "92": "\t\tStringTokenizer cTokenizer = new StringTokenizer(robotTxt, \"\\n\");",
        "93": "\t\tString cString = null;",
        "133": "\t\t\t\t\tcommentIndex = cString.indexOf(\"#\");"
      },
      "id": 67290921,
      "filename": "RobotTxtAwareBehavior.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 1873,
      "location": "/src/main/java/com/laytonsmith/core/functions",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224393/",
      "md5hash": "a419d50bf11cbed1db50fa1adc10fef6",
      "lines": {
        "256": "\t\t\t\ttry {",
        "257": "\t\t\t\t\treturn new CString(StaticLayer.LookupMaterialName(i), t);",
        "896": "\t\t\t\tretVals.add(new CString(server.getWorldContainer(), t));",
        "931": "\t\t\t\t\tCString name = new CString(p.getName(), t);",
        "910": "\t\t\t\t\tCString os = new CString(o.getName(), t);",
        "552": "\t\t\t\tif (null != at) {",
        "553": "\t\t\t\t\treturn new CString(at.getName(), t);",
        "1026": "\t\t\t\t}",
        "909": "\t\t\t\t\t}",
        "46": "import com.laytonsmith.core.constructs.CNull;",
        "47": "import com.laytonsmith.core.constructs.CString;",
        "1027": "\t\t\t\tCString os = new CString(o.getName(), t);",
        "149": "\t\t\t\t\t}",
        "150": "\t\t\t\t\treturn new CString(split[0] + \":\" + split[1], t);",
        "930": "",
        "895": "\t\t\t\t//World container"
      },
      "id": 113224393,
      "filename": "Minecraft.java"
    },
    {
      "repo": "https://github.com/sk89q/commandhelper.git",
      "language": "Java",
      "linescount": 833,
      "location": "/src/main/java/com/laytonsmith/core/events/drivers",
      "name": "commandhelper",
      "url": "https://searchcode.com/codesearch/view/113224672/",
      "md5hash": "3aa6cdbf62c55f6724bcdbebfd35ad38",
      "lines": {
        "256": "\t\t\t\tmap.put(\"inventory\", items);",
        "257": "\t\t\t\tmap.put(\"inventorytype\", new CString(inv.getType().name(), Target.UNKNOWN));",
        "259": "",
        "260": "\t\t\t\tmap.put(\"type\", new CString(e.getType().name(), Target.UNKNOWN));",
        "134": "\t\t\t\tmap.put(\"inventory\", items);",
        "135": "\t\t\t\tmap.put(\"inventorytype\", new CString(inv.getType().name(), Target.UNKNOWN));",
        "424": "",
        "412": "",
        "413": "\t\t\t\tmap.put(\"player\", new CString(e.getPlayer().getName(), Target.UNKNOWN));",
        "337": "",
        "338": "\t\t\t\tmap.put(\"player\", new CString(e.getPlayer().getName(), Target.UNKNOWN));",
        "425": "\t\t\t\tmap.put(\"inventorytype\", new CString(e.getInventory().getType().name(), Target.UNKNOWN));",
        "27": "import com.laytonsmith.core.constructs.CInt;",
        "28": "import com.laytonsmith.core.constructs.CString;",
        "349": "",
        "350": "\t\t\t\tmap.put(\"inventorytype\", new CString(e.getInventory().getType().name(), Target.UNKNOWN));"
      },
      "id": 113224672,
      "filename": "InventoryEvents.java"
    },
    {
      "repo": "https://bitbucket.org/okushama/humans-mod.git",
      "language": "Java",
      "linescount": 191,
      "location": "/okushama/personal/gen",
      "name": "humans-mod",
      "url": "https://searchcode.com/codesearch/view/43836771/",
      "md5hash": "915a3b576e7ed93ed3f8aa44f951b18f",
      "lines": {
        "69": "\t\t\t\t\t\t\t\tString bString = Integer.toString(b);",
        "70": "\t\t\t\t\t\t\t\tString cString = Integer.toString(c);",
        "72": "\t\t\t\t\t\t\t\tlocation[locationsum] = new StringBuilder(p1",
        "73": "\t\t\t\t\t\t\t\t\t\t+ aString + p2 + bString + p3 + cString",
        "119": "\t\t\t\t\t\t\t\toutput.write(cString);",
        "141": "\t\t\t\t\t\t\t\toutput.write(p3);",
        "142": "\t\t\t\t\t\t\t\toutput.write(cString);",
        "111": "\t\t\t\t\t\t\t\tString bString = Integer.toString(b);",
        "112": "\t\t\t\t\t\t\t\tString cString = Integer.toString(c);",
        "83": "\t\t\t\t\t\t\t\tString bString = Integer.toString(b);",
        "84": "\t\t\t\t\t\t\t\tString cString = Integer.toString(c);",
        "118": "\t\t\t\t\t\t\t\toutput.write(p3);",
        "87": "\t\t\t\t\t\t\t\ttorches[torchesnum] = new StringBuilder(p6",
        "88": "\t\t\t\t\t\t\t\t\t\t+ aString + p2 + bString + p3 + cString",
        "134": "\t\t\t\t\t\t\t\tString cString = Integer.toString(c);",
        "133": "\t\t\t\t\t\t\t\tString bString = Integer.toString(b);"
      },
      "id": 43836771,
      "filename": "SchematicBlock.java"
    },
    {
      "repo": "https://bitbucket.org/lazopard/fastr",
      "language": "Java",
      "linescount": 191,
      "location": "/com.oracle.truffle.r.runtime/src/com/oracle/truffle/r/runtime/ffi/gnfi",
      "name": "FastR",
      "url": "https://searchcode.com/codesearch/view/91897857/",
      "md5hash": "14b252b791fae37966f660d187a27411",
      "lines": {
        "160": "            } else {",
        "161": "                return CString.create(cString.address, template.length(), true);",
        "130": "    public int setwd(String dir) {",
        "131": "        try (CString cString = new CString(dir)) {",
        "132": "            return (int) chdir.call(cString.address);",
        "133": "        }",
        "136": "    public String readlink(String path) throws IOException {",
        "137": "        try (CString cString = new CString(path); AutoMemory resultBuf = AutoMemory.create(4096)) {",
        "138": "            int length = (int) readlink.call(cString.address, resultBuf.address, 4096);",
        "139": "            if (length == -1) {",
        "149": "            } else {",
        "150": "                return CString.create(resultBuf.address, length, false);",
        "155": "    public String mkdtemp(String template) {",
        "156": "        try (CString cString = new CString(template)) {",
        "157": "            long result = (long) mkdtemp.call(cString.address);",
        "158": "            if (result == 0) {"
      },
      "id": 91897857,
      "filename": "GNFI_RFFIFactory.java"
    },
    {
      "repo": "https://bitbucket.org/CKachur/fastr_ck",
      "language": "Java",
      "linescount": 198,
      "location": "/com.oracle.truffle.r.runtime.ffi/src/com/oracle/truffle/r/runtime/ffi/gnfi",
      "name": "FastR_CK",
      "url": "https://searchcode.com/codesearch/view/91900288/",
      "md5hash": "8e2f3761455ae1041006fa16c5046d85",
      "lines": {
        "131": "    public String readlink(String path) throws IOException {",
        "132": "        try (CString cString = new CString(path); AutoMemory resultBuf = AutoMemory.create(4096)) {",
        "133": "            int length = (int) readlink.call(cString.address, resultBuf.address, 4096);",
        "70": "",
        "71": "    private static class CString extends AutoMemory {",
        "72": "",
        "143": "            } else {",
        "144": "                return CString.create(resultBuf.address, length, false);",
        "149": "    public String mkdtemp(String template) {",
        "150": "        try (CString cString = new CString(template)) {",
        "151": "            long result = (long) mkdtemp.call(cString.address);",
        "152": "            if (result == 0) {",
        "154": "            } else {",
        "155": "                return CString.create(cString.address, template.length(), true);",
        "134": "            if (length == -1) {"
      },
      "id": 91900288,
      "filename": "GNFI_RFFIFactory.java"
    },
    {
      "repo": "https://github.com/andreyvit/yoursway-ide.git",
      "language": "Java",
      "linescount": 860,
      "location": "/org.apache.commons.collections/src/test/org/apache/commons/collections",
      "name": "yoursway-ide",
      "url": "https://searchcode.com/codesearch/view/103722057/",
      "md5hash": "3590ef427a6e14bf0ba0b29142214550",
      "lines": {
        "128": "        assertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cObject));",
        "129": "        assertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cString));",
        "674": "        assertEquals(false, p.evaluate(cString));",
        "675": "        assertEquals(false, p.evaluate(cString));",
        "676": "    }",
        "165": "        assertEquals(false, PredicateUtils.falsePredicate().evaluate(cObject));",
        "166": "        assertEquals(false, PredicateUtils.falsePredicate().evaluate(cString));",
        "673": "        assertEquals(true, p.evaluate(cString));",
        "140": "        assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cObject));",
        "141": "        assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cString));",
        "660": "        assertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(cObject));",
        "661": "        assertEquals(true, PredicateUtils.instanceofPredicate(String.class).evaluate(cString));",
        "153": "        assertEquals(true, PredicateUtils.truePredicate().evaluate(cObject));",
        "154": "        assertEquals(true, PredicateUtils.truePredicate().evaluate(cString));",
        "672": "        assertEquals(true, p.evaluate(new Object()));"
      },
      "id": 103722057,
      "filename": "TestPredicateUtils.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 187,
      "source": "Github",
      "id": 2
    },
    {
      "count": 132,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 26,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    }
  ]
}