{
  "matchterm": "LabelRecord",
  "previouspage": null,
  "searchterm": "LabelRecord",
  "query": "LabelRecord",
  "language_filters": [
    {
      "count": 28,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 28,
  "results": [
    {
      "repo": "git://github.com/patrickpollet/moodlews_ksoap2.git",
      "language": "Java",
      "linescount": 180,
      "location": "/src/net/patrickpollet/moodlewsold/core",
      "name": "moodlews_ksoap2",
      "url": "https://searchcode.com/codesearch/view/17035698/",
      "md5hash": "0d0dd1dea541388ba37b1e8c5c2e0d6e",
      "lines": {
        "128": "     * Sets the name value for this LabelRecord.",
        "1": "/**",
        "2": " * LabelRecord.java",
        "35": "        super(nameSpace,\"LabelRecord\");",
        "36": "    }",
        "33": "",
        "41": "    public Soapeabilisable fromSoapResponse (SoapObject response) {",
        "42": "      LabelRecord ret = new LabelRecord(this.namespace);",
        "139": "     * Gets the content value for this LabelRecord.",
        "34": "    public LabelRecord(String nameSpace) {",
        "20": "",
        "21": "public class LabelRecord  extends SoapObject  implements Soapeabilisable{",
        "54": "    /**",
        "55": "     * Gets the error value for this LabelRecord.",
        "138": "    /**",
        "127": "    /**"
      },
      "id": 17035698,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "git://github.com/patrickpollet/moodlews_ksoap2.git",
      "language": "Java",
      "linescount": 180,
      "location": "/src/net/patrickpollet/moodlews/core",
      "name": "moodlews_ksoap2",
      "url": "https://searchcode.com/codesearch/view/17035755/",
      "md5hash": "118000235036c6e227b6456d5ba964dc",
      "lines": {
        "128": "     * Sets the id value for this LabelRecord.",
        "1": "/**",
        "2": " * LabelRecord.java",
        "35": "        super(nameSpace,\"LabelRecord\");",
        "36": "    }",
        "33": "",
        "41": "    public Soapeabilisable fromSoapResponse (SoapObject response) {",
        "42": "      LabelRecord ret = new LabelRecord(this.namespace);",
        "139": "     * Gets the name value for this LabelRecord.",
        "34": "    public LabelRecord(String nameSpace) {",
        "20": "",
        "21": "public class LabelRecord  extends SoapObject  implements Soapeabilisable{",
        "54": "    /**",
        "55": "     * Gets the content value for this LabelRecord.",
        "138": "    /**",
        "127": "    /**"
      },
      "id": 17035755,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 232,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260330/",
      "md5hash": "ad7a71d8b164ace794b58aef3b6d28aa",
      "lines": {
        "64": "  protected LabelRecord(int c, int r, String cont)",
        "34": " */",
        "35": "public abstract class LabelRecord extends CellValue",
        "101": "   */",
        "102": "  protected LabelRecord(int c, int r, LabelRecord lr)",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(LabelRecord.class);  ",
        "114": "  protected LabelRecord(LabelCell lc)",
        "113": "   */",
        "82": "   */",
        "83": "  protected LabelRecord(int c, int r, String cont, CellFormat st)",
        "63": "   */"
      },
      "id": 43260330,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 232,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200858/",
      "md5hash": "ad7a71d8b164ace794b58aef3b6d28aa",
      "lines": {
        "64": "  protected LabelRecord(int c, int r, String cont)",
        "34": " */",
        "35": "public abstract class LabelRecord extends CellValue",
        "101": "   */",
        "102": "  protected LabelRecord(int c, int r, LabelRecord lr)",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(LabelRecord.class);  ",
        "114": "  protected LabelRecord(LabelCell lc)",
        "113": "   */",
        "82": "   */",
        "83": "  protected LabelRecord(int c, int r, String cont, CellFormat st)",
        "63": "   */"
      },
      "id": 49200858,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 312,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642496/",
      "md5hash": "a265baccf3f0d5435d63ee3f5a389b7b",
      "lines": {
        "99": "        {",
        "100": "            throw new RecordFormatException(\"Not a valid LabelRecord\");",
        "71": "",
        "72": "    /** Creates new LabelRecord */",
        "73": "",
        "74": "    public LabelRecord()",
        "43": " * LabelRecord.java",
        "301": "    public Object clone() {",
        "302": "      LabelRecord rec = new LabelRecord();",
        "83": "",
        "84": "    public LabelRecord(RecordInputStream in)",
        "187": "     * THROWS A RUNTIME EXCEPTION..  USE LABELSSTRecords.  YOU HAVE NO REASON to use LABELRecord!!",
        "186": "    /**",
        "58": "",
        "59": "public class LabelRecord",
        "42": "/*"
      },
      "id": 15642496,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 232,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374617/",
      "md5hash": "d17b239970e0d62f354f5e5bc0a991dd",
      "lines": {
        "64": "  protected LabelRecord(int c, int r, String cont)",
        "34": " */",
        "35": "public abstract class LabelRecord extends CellValue",
        "101": "   */",
        "102": "  protected LabelRecord(int c, int r, LabelRecord lr)",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(LabelRecord.class);  ",
        "114": "  protected LabelRecord(LabelCell lc)",
        "113": "   */",
        "82": "   */",
        "83": "  protected LabelRecord(int c, int r, String cont, CellFormat st)",
        "63": "   */"
      },
      "id": 11374617,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 232,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919800/",
      "md5hash": "0c6d546552f2a2c5439283e0bffbaa7f",
      "lines": {
        "64": "  protected LabelRecord(int c, int r, String cont)",
        "34": " */",
        "35": "public abstract class LabelRecord extends CellValue",
        "101": "   */",
        "102": "  protected LabelRecord(int c, int r, LabelRecord lr)",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(LabelRecord.class);  ",
        "114": "  protected LabelRecord(LabelCell lc)",
        "113": "   */",
        "82": "   */",
        "83": "  protected LabelRecord(int c, int r, String cont, CellFormat st)",
        "63": "   */"
      },
      "id": 13919800,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 232,
      "location": "/core/read_experiment_definition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13920584/",
      "md5hash": "0c6d546552f2a2c5439283e0bffbaa7f",
      "lines": {
        "64": "  protected LabelRecord(int c, int r, String cont)",
        "34": " */",
        "35": "public abstract class LabelRecord extends CellValue",
        "101": "   */",
        "102": "  protected LabelRecord(int c, int r, LabelRecord lr)",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(LabelRecord.class);  ",
        "114": "  protected LabelRecord(LabelCell lc)",
        "113": "   */",
        "82": "   */",
        "83": "  protected LabelRecord(int c, int r, String cont, CellFormat st)",
        "63": "   */"
      },
      "id": 13920584,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 124,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260425/",
      "md5hash": "d3c981f60eff777bf2f84f6e26d8cb45",
      "lines": {
        "32": "class LabelRecord extends CellValue implements LabelCell",
        "83": "   */",
        "84": "  public LabelRecord(Record t, FormattingRecords fr, SheetImpl si,",
        "57": "   */",
        "58": "  public LabelRecord(Record t, FormattingRecords fr,",
        "31": " */"
      },
      "id": 43260425,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 124,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200953/",
      "md5hash": "d3c981f60eff777bf2f84f6e26d8cb45",
      "lines": {
        "32": "class LabelRecord extends CellValue implements LabelCell",
        "83": "   */",
        "84": "  public LabelRecord(Record t, FormattingRecords fr, SheetImpl si,",
        "57": "   */",
        "58": "  public LabelRecord(Record t, FormattingRecords fr,",
        "31": " */"
      },
      "id": 49200953,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 124,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/read/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374456/",
      "md5hash": "d3c981f60eff777bf2f84f6e26d8cb45",
      "lines": {
        "32": "class LabelRecord extends CellValue implements LabelCell",
        "83": "   */",
        "84": "  public LabelRecord(Record t, FormattingRecords fr, SheetImpl si,",
        "57": "   */",
        "58": "  public LabelRecord(Record t, FormattingRecords fr,",
        "31": " */"
      },
      "id": 11374456,
      "filename": "LabelRecord.java"
    },
    {
      "repo": "https://github.com/xiezhaohui/DataViewer.git",
      "language": "Java",
      "linescount": 304,
      "location": "/ETL/src/com/util",
      "name": "DataViewer",
      "url": "https://searchcode.com/codesearch/view/68613461/",
      "md5hash": "8bd64dddea629578a6d8e6f976c7b348",
      "lines": {
        "200": "",
        "23": "import org.apache.poi.hssf.record.FormulaRecord;",
        "24": "import org.apache.poi.hssf.record.LabelRecord;",
        "201": "\t\tcase LabelRecord.sid:",
        "202": "\t\t\tLabelRecord lrec = (LabelRecord) record;",
        "203": ""
      },
      "id": 68613461,
      "filename": "HxlsAbstract.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 152,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71597337/",
      "md5hash": "0d32810c0aef709c87d65d350e346850",
      "lines": {
        "130": "",
        "131": "        if( dynamicLabelRecords.size() > 0 )",
        "36": "    private long labels;",
        "37": "    private Collection<DynamicRecord> dynamicLabelRecords = emptyList();",
        "70": "        this.labels = labels;",
        "71": "        this.dynamicLabelRecords = dynamicRecords;",
        "136": "                clonedLabelRecords.add( labelRecord.clone() );",
        "137": "            }",
        "138": "            clone.dynamicLabelRecords = clonedLabelRecords;",
        "132": "        {",
        "88": "",
        "89": "    public Collection<DynamicRecord> getDynamicLabelRecords()",
        "90": "    {",
        "135": "            {",
        "134": "            for ( DynamicRecord labelRecord : dynamicLabelRecords )",
        "133": "            List<DynamicRecord> clonedLabelRecords = new ArrayList<>(dynamicLabelRecords.size());"
      },
      "id": 71597337,
      "filename": "NodeRecord.java"
    },
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 595,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785559/",
      "md5hash": "6b55090236799f49ee0f5bd7d54bbbac",
      "lines": {
        "368": "                LabelRecord label = (LabelRecord) record;",
        "369": "                addTextCell(record, label.getValue());",
        "50": "import org.apache.poi.hssf.record.HyperlinkRecord;",
        "51": "import org.apache.poi.hssf.record.LabelRecord;",
        "262": "                hssfRequest.addListener(formatListener, FormulaRecord.sid);",
        "263": "                hssfRequest.addListener(formatListener, LabelRecord.sid);",
        "366": "",
        "367": "            case LabelRecord.sid: // strings stored directly in the cell"
      },
      "id": 111785559,
      "filename": "ExcelExtractor.java"
    },
    {
      "repo": "git://github.com/patrickpollet/moodlews_ksoap2.git",
      "language": "Java",
      "linescount": 3148,
      "location": "/src/net/patrickpollet/moodlews/core",
      "name": "moodlews_ksoap2",
      "url": "https://searchcode.com/codesearch/view/17035760/",
      "md5hash": "bb1051b052c7481889d71d8f5c769df3",
      "lines": {
        "966": "   }",
        "967": "    public net.patrickpollet.moodlews.core.LabelRecord[] edit_labels(int client, java.lang.String sesskey, net.patrickpollet.moodlews.core.LabelDatum[] labels)  {",
        "175": "   }",
        "176": "    public net.patrickpollet.moodlews.core.LabelRecord[] add_label(int client, java.lang.String sesskey, net.patrickpollet.moodlews.core.LabelDatum datum)  {",
        "983": "\t  this.logInfo(METH_NAME, response);",
        "984": "      List ret=this.getList(response,new LabelRecord(this.NAMESPACE));",
        "985": "      return (LabelRecord[]) ret.toArray( new LabelRecord[0]);",
        "986": "    } catch (Exception e) {",
        "187": "\t  this.logInfo(METH_NAME, response);",
        "188": "      List ret=this.getList(response,new LabelRecord(this.NAMESPACE));",
        "189": "      return (LabelRecord[]) ret.toArray( new LabelRecord[0]);",
        "190": "    } catch (Exception e) {"
      },
      "id": 17035760,
      "filename": "Mdl_soapserverBindingStub.java"
    },
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 177,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291384/",
      "md5hash": "81a5f5cc1803d96eb168fe478a85ce0c",
      "lines": {
        "128": "            builder.append( \",dynlabels=\" ).append( dynamicLabelRecords );",
        "35": "    private long labels;",
        "36": "    private Collection<DynamicRecord> dynamicLabelRecords = emptyList();",
        "73": "        this.labels = labels;",
        "74": "        this.dynamicLabelRecords = dynamicRecords;",
        "146": "",
        "147": "        if( dynamicLabelRecords.size() > 0 )",
        "148": "        {",
        "149": "            List<DynamicRecord> clonedLabelRecords = new ArrayList<>(dynamicLabelRecords.size());",
        "150": "            for ( DynamicRecord labelRecord : dynamicLabelRecords )",
        "151": "            {",
        "152": "                clonedLabelRecords.add( labelRecord.clone() );",
        "153": "            }",
        "154": "            clone.dynamicLabelRecords = clonedLabelRecords;",
        "127": "        {"
      },
      "id": 94291384,
      "filename": "NodeRecord.java"
    },
    {
      "repo": "git://github.com/patrickpollet/moodlews_ksoap2.git",
      "language": "Java",
      "linescount": 61,
      "location": "/src/net/patrickpollet/moodlewsold/core",
      "name": "moodlews_ksoap2",
      "url": "https://searchcode.com/codesearch/view/17035642/",
      "md5hash": "5ebfb0364b454e823de12447a3b34487",
      "lines": {
        "32": "      EditLabelsOutput ret = new EditLabelsOutput(this.namespace);",
        "33": "      List _labels =KSoap2Utils.getList((SoapObject) response.getProperty(\"labels\"),new LabelRecord(this.namespace));",
        "34": "      ret.setLabels((LabelRecord[]) _labels.toArray(new LabelRecord[0]));",
        "35": "      return ret;",
        "21": "public class EditLabelsOutput  extends SoapObject  implements Soapeabilisable{",
        "22": "    private net.patrickpollet.moodlewsold.core.LabelRecord[] labels;",
        "55": "    public void setLabels(net.patrickpollet.moodlewsold.core.LabelRecord[] labels) {",
        "54": "     */",
        "44": "     */",
        "45": "    public net.patrickpollet.moodlewsold.core.LabelRecord[] getLabels() {"
      },
      "id": 17035642,
      "filename": "EditLabelsOutput.java"
    },
    {
      "repo": "git://github.com/patrickpollet/moodlews_ksoap2.git",
      "language": "Java",
      "linescount": 61,
      "location": "/src/net/patrickpollet/moodlewsold/core",
      "name": "moodlews_ksoap2",
      "url": "https://searchcode.com/codesearch/view/17035689/",
      "md5hash": "2a45980d4ab1a7c9ac76fa72cbcb49fc",
      "lines": {
        "32": "      GetAllLabelsReturn ret = new GetAllLabelsReturn(this.namespace);",
        "33": "      List _labels =KSoap2Utils.getList((SoapObject) response.getProperty(\"labels\"),new LabelRecord(this.namespace));",
        "34": "      ret.setLabels((LabelRecord[]) _labels.toArray(new LabelRecord[0]));",
        "35": "      return ret;",
        "21": "public class GetAllLabelsReturn  extends SoapObject  implements Soapeabilisable{",
        "22": "    private net.patrickpollet.moodlewsold.core.LabelRecord[] labels;",
        "55": "    public void setLabels(net.patrickpollet.moodlewsold.core.LabelRecord[] labels) {",
        "54": "     */",
        "44": "     */",
        "45": "    public net.patrickpollet.moodlewsold.core.LabelRecord[] getLabels() {"
      },
      "id": 17035689,
      "filename": "GetAllLabelsReturn.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 1445,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642316/",
      "md5hash": "4f7b036daf89776dc4ee4606b7972144",
      "lines": {
        "320": "             if (rec.getSid() == LabelRecord.sid)",
        "321": "             {",
        "322": "                 LabelRecord oldrec = ( LabelRecord ) rec;",
        "236": "",
        "237": "        // convert all LabelRecord records to LabelSSTRecord",
        "238": "        convertLabelRecords(records, recOffset);        ",
        "239": "        while (recOffset < records.size())",
        "336": "         if (log.check( POILogger.DEBUG ))",
        "337": "             log.log(POILogger.DEBUG, \"convertLabelRecords exit\");",
        "306": "      * @param wb sheet's matching low level Workbook structure containing the SSTRecord.",
        "307": "      * @see loci.poi.hssf.record.LabelRecord",
        "311": " ",
        "312": "     private void convertLabelRecords(List records, int offset)",
        "314": "         if (log.check( POILogger.DEBUG ))",
        "315": "             log.log(POILogger.DEBUG, \"convertLabelRecords called\");",
        "319": ""
      },
      "id": 15642316,
      "filename": "HSSFWorkbook.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1850,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260387/",
      "md5hash": "7f91270abbfb3387b7abcd30255c0a02",
      "lines": {
        "704": "          lr = new LabelRecord(r, formattingRecords, sheet, workbookSettings,",
        "705": "                               LabelRecord.biff7);",
        "706": "        }",
        "695": "      {",
        "696": "        LabelRecord lr = null;",
        "699": "        {",
        "700": "          lr = new LabelRecord(r, formattingRecords, sheet, workbookSettings);",
        "703": "        {"
      },
      "id": 43260387,
      "filename": "SheetReader.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 13,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 7,
      "source": "Google Code",
      "id": 1
    }
  ]
}