{
  "matchterm": "ColumnInfoRecord",
  "previouspage": null,
  "searchterm": "ColumnInfoRecord",
  "query": "ColumnInfoRecord",
  "language_filters": [
    {
      "count": 53,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 53,
  "results": [
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 423,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260365/",
      "md5hash": "00cd596a17a7617328c3c44aa4e01d8a",
      "lines": {
        "32": " */",
        "33": "class ColumnInfoRecord extends WritableRecordData",
        "98": "  public ColumnInfoRecord(ColumnInfoRecord cir)",
        "311": "    ColumnInfoRecord cir = (ColumnInfoRecord) o;",
        "97": "   */",
        "305": "",
        "140": "   */",
        "141": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, ",
        "80": "   */",
        "81": "  public ColumnInfoRecord(int col, int w, XFRecord xf)",
        "306": "    if (!(o instanceof ColumnInfoRecord))",
        "310": "",
        "119": "   */",
        "120": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, "
      },
      "id": 43260365,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 423,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200893/",
      "md5hash": "00cd596a17a7617328c3c44aa4e01d8a",
      "lines": {
        "32": " */",
        "33": "class ColumnInfoRecord extends WritableRecordData",
        "98": "  public ColumnInfoRecord(ColumnInfoRecord cir)",
        "311": "    ColumnInfoRecord cir = (ColumnInfoRecord) o;",
        "97": "   */",
        "305": "",
        "140": "   */",
        "141": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, ",
        "80": "   */",
        "81": "  public ColumnInfoRecord(int col, int w, XFRecord xf)",
        "306": "    if (!(o instanceof ColumnInfoRecord))",
        "310": "",
        "119": "   */",
        "120": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, "
      },
      "id": 49200893,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 423,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374618/",
      "md5hash": "db73c8e46c0cf6c261c725911bb2a745",
      "lines": {
        "32": " */",
        "33": "class ColumnInfoRecord extends WritableRecordData",
        "98": "  public ColumnInfoRecord(ColumnInfoRecord cir)",
        "311": "    ColumnInfoRecord cir = (ColumnInfoRecord) o;",
        "97": "   */",
        "305": "",
        "140": "   */",
        "141": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, ",
        "80": "   */",
        "81": "  public ColumnInfoRecord(int col, int w, XFRecord xf)",
        "306": "    if (!(o instanceof ColumnInfoRecord))",
        "310": "",
        "119": "   */",
        "120": "  public ColumnInfoRecord(jxl.read.biff.ColumnInfoRecord cir, "
      },
      "id": 11374618,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 339,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642500/",
      "md5hash": "8e21c5d1d0d27d16f6fc60aa41f7c6b7",
      "lines": {
        "83": "",
        "75": "    public ColumnInfoRecord()",
        "84": "    public ColumnInfoRecord(RecordInputStream in)",
        "328": "    public Object clone() {",
        "329": "        ColumnInfoRecord rec = new ColumnInfoRecord();",
        "74": "",
        "43": " * ColumnInfoRecord.java",
        "60": "",
        "42": "/*",
        "61": "public class ColumnInfoRecord"
      },
      "id": 15642500,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 165,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260445/",
      "md5hash": "04a477373e57943e879c130a1675d842",
      "lines": {
        "76": "  ColumnInfoRecord(Record t)",
        "75": "   */",
        "28": " */",
        "29": "public class ColumnInfoRecord extends RecordData"
      },
      "id": 43260445,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 165,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200973/",
      "md5hash": "04a477373e57943e879c130a1675d842",
      "lines": {
        "76": "  ColumnInfoRecord(Record t)",
        "75": "   */",
        "28": " */",
        "29": "public class ColumnInfoRecord extends RecordData"
      },
      "id": 49200973,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 165,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/read/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374457/",
      "md5hash": "1a12f6d64d0b1b555aba0dc5005772c2",
      "lines": {
        "76": "  ColumnInfoRecord(Record t)",
        "75": "   */",
        "28": " */",
        "29": "public class ColumnInfoRecord extends RecordData"
      },
      "id": 11374457,
      "filename": "ColumnInfoRecord.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 2567,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260267/",
      "md5hash": "94346665312f1de078b1178fe96b915c",
      "lines": {
        "704": "      ColumnInfoRecord cir = (ColumnInfoRecord) i.next();",
        "1824": "      ColumnInfoRecord cir = getColumnInfo(i);",
        "1291": "",
        "294": "",
        "295": "      Assert.verify(o1 instanceof ColumnInfoRecord);",
        "296": "      Assert.verify(o2 instanceof ColumnInfoRecord);",
        "297": "      ",
        "298": "      ColumnInfoRecord ci1 = (ColumnInfoRecord) o1;",
        "299": "      ColumnInfoRecord ci2 = (ColumnInfoRecord) o2;",
        "300": "",
        "1292": "      ColumnInfoRecord cir = new ColumnInfoRecord",
        "281": "    /**",
        "282": "     * Comparison function for to ColumnInfoRecords",
        "1823": "    {",
        "703": "    {"
      },
      "id": 43260267,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 2567,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200795/",
      "md5hash": "94346665312f1de078b1178fe96b915c",
      "lines": {
        "704": "      ColumnInfoRecord cir = (ColumnInfoRecord) i.next();",
        "1824": "      ColumnInfoRecord cir = getColumnInfo(i);",
        "1291": "",
        "294": "",
        "295": "      Assert.verify(o1 instanceof ColumnInfoRecord);",
        "296": "      Assert.verify(o2 instanceof ColumnInfoRecord);",
        "297": "      ",
        "298": "      ColumnInfoRecord ci1 = (ColumnInfoRecord) o1;",
        "299": "      ColumnInfoRecord ci2 = (ColumnInfoRecord) o2;",
        "300": "",
        "1292": "      ColumnInfoRecord cir = new ColumnInfoRecord",
        "281": "    /**",
        "282": "     * Comparison function for to ColumnInfoRecords",
        "1823": "    {",
        "703": "    {"
      },
      "id": 49200795,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1224,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260388/",
      "md5hash": "33e93a49ca07c89cc287d0dc9d046366",
      "lines": {
        "720": "      ColumnInfoRecord cir = (ColumnInfoRecord)",
        "581": "   * @param col the column",
        "582": "   * @return the ColumnInfoRecord if specified, NULL otherwise",
        "583": "   */",
        "584": "  public ColumnInfoRecord getColumnInfo(int col)",
        "589": "      Iterator i = columnInfosArray.iterator();",
        "590": "      ColumnInfoRecord cir = null;",
        "719": "    {",
        "592": "      {",
        "593": "        cir = (ColumnInfoRecord) i.next();",
        "722": "      columnInfos = new ColumnInfoRecord[cir.getEndColumn() + 1];",
        "725": "    {",
        "726": "      columnInfos = new ColumnInfoRecord[0];",
        "721": "        columnInfosArray.get(columnInfosArray.size() - 1);",
        "987": "    ColumnInfoRecord cir = getColumnInfo(col);",
        "986": "  {"
      },
      "id": 43260388,
      "filename": "SheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1224,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200916/",
      "md5hash": "33e93a49ca07c89cc287d0dc9d046366",
      "lines": {
        "720": "      ColumnInfoRecord cir = (ColumnInfoRecord)",
        "581": "   * @param col the column",
        "582": "   * @return the ColumnInfoRecord if specified, NULL otherwise",
        "583": "   */",
        "584": "  public ColumnInfoRecord getColumnInfo(int col)",
        "589": "      Iterator i = columnInfosArray.iterator();",
        "590": "      ColumnInfoRecord cir = null;",
        "719": "    {",
        "592": "      {",
        "593": "        cir = (ColumnInfoRecord) i.next();",
        "722": "      columnInfos = new ColumnInfoRecord[cir.getEndColumn() + 1];",
        "725": "    {",
        "726": "      columnInfos = new ColumnInfoRecord[0];",
        "721": "        columnInfosArray.get(columnInfosArray.size() - 1);",
        "987": "    ColumnInfoRecord cir = getColumnInfo(col);",
        "986": "  {"
      },
      "id": 49200916,
      "filename": "SheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1089,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260287/",
      "md5hash": "ad86f1c2070d28ba1714383f43bfc685",
      "lines": {
        "420": "    {",
        "421": "      ColumnInfoRecord cv = new ColumnInfoRecord",
        "422": "        ((ColumnInfoRecord) cfit.next());",
        "423": "      columnFormats.add(cv);",
        "534": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j);",
        "526": "    // Copy the column info records",
        "527": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "530": "    {",
        "531": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "533": "      {",
        "214": "    // Copy the column info records",
        "215": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "218": "    {",
        "219": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "221": "      {",
        "222": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j, "
      },
      "id": 43260287,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1089,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200815/",
      "md5hash": "ad86f1c2070d28ba1714383f43bfc685",
      "lines": {
        "420": "    {",
        "421": "      ColumnInfoRecord cv = new ColumnInfoRecord",
        "422": "        ((ColumnInfoRecord) cfit.next());",
        "423": "      columnFormats.add(cv);",
        "534": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j);",
        "526": "    // Copy the column info records",
        "527": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "530": "    {",
        "531": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "533": "      {",
        "214": "    // Copy the column info records",
        "215": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "218": "    {",
        "219": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "221": "      {",
        "222": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j, "
      },
      "id": 49200815,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 554,
      "location": "/components/forks/poi/src/loci/poi/hssf/record/aggregates",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642595/",
      "md5hash": "83318df6e5a62008db05b056a28ec095",
      "lines": {
        "181": "        ColumnInfoRecord columnInfo = (ColumnInfoRecord) records.get( idx );",
        "59": "",
        "41": "",
        "42": "import loci.poi.hssf.record.ColumnInfoRecord;",
        "203": "",
        "204": "    public ColumnInfoRecord getColInfo(int idx)",
        "51": " * @author Glen Stampoultzis",
        "52": " * @version $Id: ColumnInfoRecordsAggregate.java 496526 2007-01-15 22:46:35Z markt $",
        "53": " */",
        "54": "public class ColumnInfoRecordsAggregate",
        "180": "        // Find the end of the group.",
        "154": "        // Find the start of the group.",
        "155": "        ColumnInfoRecord columnInfo = (ColumnInfoRecord) records.get( idx );",
        "60": "    public ColumnInfoRecordsAggregate()",
        "158": "        {",
        "159": "            ColumnInfoRecord prevColumnInfo = (ColumnInfoRecord) records.get( idx - 1 );"
      },
      "id": 15642595,
      "filename": "ColumnInfoRecordsAggregate.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 3300,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642365/",
      "md5hash": "1e8d548d196dc1063c30d9430b35b9f5",
      "lines": {
        "1730": "     * creates the ColumnInfo Record and sets it to a default column/width",
        "1731": "     * @see loci.poi.hssf.record.ColumnInfoRecord",
        "1732": "     * @return record containing a ColumnInfoRecord",
        "44": "import loci.poi.hssf.record.*;",
        "45": "import loci.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate;",
        "1848": "     * ColumnInfoRecord which spans 1 or more columns)",
        "1808": "     * @see loci.poi.hssf.record.DefaultColWidthRecord",
        "1809": "     * @see loci.poi.hssf.record.ColumnInfoRecord",
        "1847": "     * ExtendedFormatRecord index is actually associated with a ",
        "1816": "        short            retval = 0;",
        "1817": "        ColumnInfoRecord ci     = null;",
        "1850": "     * Returns the index to the default ExtendedFormatRecord (0xF)",
        "1851": "     * if no ColumnInfoRecord exists that includes the column",
        "190": "                {",
        "191": "                    retval.columns = new ColumnInfoRecordsAggregate();"
      },
      "id": 15642365,
      "filename": "Sheet.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 2650,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919732/",
      "md5hash": "bd6bc164c6d1709ba683d42e991f8998",
      "lines": {
        "1943": "      ColumnInfoRecord cir = getColumnInfo(i);",
        "297": "",
        "298": "      Assert.verify(o1 instanceof ColumnInfoRecord);",
        "299": "      Assert.verify(o2 instanceof ColumnInfoRecord);",
        "300": "      ",
        "301": "      ColumnInfoRecord ci1 = (ColumnInfoRecord) o1;",
        "302": "      ColumnInfoRecord ci2 = (ColumnInfoRecord) o2;",
        "303": "",
        "916": "    i = columnFormats.iterator();",
        "917": "    ColumnInfoRecord removeColumn = null;",
        "1942": "    {",
        "919": "    {",
        "920": "      ColumnInfoRecord cir = (ColumnInfoRecord) i.next();",
        "284": "    /**",
        "285": "     * Comparison function for to ColumnInfoRecords"
      },
      "id": 13919732,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 2650,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374549/",
      "md5hash": "9f286e5e90f3fae376d47f89b7deff12",
      "lines": {
        "1943": "      ColumnInfoRecord cir = getColumnInfo(i);",
        "297": "",
        "298": "      Assert.verify(o1 instanceof ColumnInfoRecord);",
        "299": "      Assert.verify(o2 instanceof ColumnInfoRecord);",
        "300": "      ",
        "301": "      ColumnInfoRecord ci1 = (ColumnInfoRecord) o1;",
        "302": "      ColumnInfoRecord ci2 = (ColumnInfoRecord) o2;",
        "303": "",
        "916": "    i = columnFormats.iterator();",
        "917": "    ColumnInfoRecord removeColumn = null;",
        "1942": "    {",
        "919": "    {",
        "920": "      ColumnInfoRecord cir = (ColumnInfoRecord) i.next();",
        "284": "    /**",
        "285": "     * Comparison function for to ColumnInfoRecords"
      },
      "id": 11374549,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1254,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/read/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374430/",
      "md5hash": "f8fe09053a6dcca5c023c3a1b4c7cb44",
      "lines": {
        "611": "   * @param col the column",
        "612": "   * @return the ColumnInfoRecord if specified, NULL otherwise",
        "613": "   */",
        "647": "   *",
        "648": "   * @return the ColumnInfoRecordArray",
        "649": "   */",
        "650": "  public ColumnInfoRecord[] getColumnInfos()",
        "652": "    // Just chuck all the column infos we have into an array",
        "653": "    ColumnInfoRecord[] infos = new ColumnInfoRecord[columnInfosArray.size()];",
        "750": "      ColumnInfoRecord cir = (ColumnInfoRecord)",
        "655": "    {",
        "656": "      infos[i] = (ColumnInfoRecord) columnInfosArray.get(i);",
        "749": "    {",
        "1016": "  {",
        "1017": "    ColumnInfoRecord cir = getColumnInfo(col);",
        "751": "        columnInfosArray.get(columnInfosArray.size() - 1);"
      },
      "id": 11374430,
      "filename": "SheetImpl.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1089,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374600/",
      "md5hash": "e8fdd2a2eacbfa79594f6635286c38af",
      "lines": {
        "420": "    {",
        "421": "      ColumnInfoRecord cv = new ColumnInfoRecord",
        "422": "        ((ColumnInfoRecord) cfit.next());",
        "423": "      columnFormats.add(cv);",
        "534": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j);",
        "526": "    // Copy the column info records",
        "527": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "530": "    {",
        "531": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "533": "      {",
        "214": "    // Copy the column info records",
        "215": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "218": "    {",
        "219": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "221": "      {",
        "222": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j, "
      },
      "id": 11374600,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1100,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919783/",
      "md5hash": "a65b159c7366e898e03dd9ae48d23e5c",
      "lines": {
        "544": "      {",
        "545": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j);",
        "431": "    {",
        "432": "      ColumnInfoRecord cv = new ColumnInfoRecord",
        "433": "        ((ColumnInfoRecord) cfit.next());",
        "434": "      columnFormats.add(cv);",
        "542": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "215": "    // Copy the column info records",
        "216": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "537": "    // Copy the column info records",
        "538": "    jxl.read.biff.ColumnInfoRecord[] readCirs = fromSheet.getColumnInfos();",
        "219": "    {",
        "220": "      jxl.read.biff.ColumnInfoRecord rcir = readCirs[i];",
        "541": "    {",
        "222": "      {",
        "223": "        ColumnInfoRecord cir = new ColumnInfoRecord(rcir, j, "
      },
      "id": 13919783,
      "filename": "SheetCopier.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 26,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 22,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 5,
      "source": "Github",
      "id": 2
    }
  ]
}