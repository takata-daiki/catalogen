{
  "matchterm": "Units",
  "previouspage": null,
  "searchterm": "Units",
  "query": "Units",
  "language_filters": [
    {
      "count": 20905,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 20905,
  "results": [
    {
      "repo": "https://github.com/bayes/Bayes.git",
      "language": "Java",
      "linescount": 204,
      "location": "/src/fid",
      "name": "Bayes",
      "url": "https://searchcode.com/codesearch/view/112978744/",
      "md5hash": "d5d6da7de1e1eae14d981f057d3e46eb",
      "lines": {
        "1": "/*",
        "2": " * Units.java",
        "82": "    public static double convertUnits(         double val, ",
        "81": "     **************************************************************/",
        "80": "     * @return              \" converted value",
        "73": "    /************************************************************",
        "74": "     * The goal is to convert resonance variables units to desired untis.",
        "76": "     * @param val           : value of resonance variable to convert",
        "77": "     * @param procpar       : reference to procpar that will be used to units conversion",
        "78": "     * @param originalUnits: current units of resonance variables",
        "15": " */",
        "16": "public class Units {",
        "17": "   ",
        "18": "    private Units ( ) {}",
        "83": "                                                Procpar procpar,",
        "79": "     * @param desiredUnits  : finale units of converted values"
      },
      "id": 112978744,
      "filename": "Units.java"
    },
    {
      "repo": "http://beast-mcmc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 78,
      "location": "/src/dr/evolution/util",
      "name": "beast-mcmc",
      "url": "https://searchcode.com/codesearch/view/7746543/",
      "md5hash": "c466a633bb5fa49f26e2fbb8698c72d4",
      "lines": {
        "1": "/*",
        "2": " * Units.java",
        "36": " * @author Andrew Rambaut",
        "37": " * @version $Id: Units.java,v 1.17 2005/05/24 20:25:57 rambaut Exp $",
        "38": " */",
        "39": "public interface Units extends Serializable {",
        "41": "    public enum Type {",
        "42": "        SUBSTITUTIONS(XMLUnits.SUBSTITUTIONS), GENERATIONS(XMLUnits.GENERATIONS),",
        "43": "        DAYS(XMLUnits.DAYS), MONTHS(XMLUnits.MONTHS), YEARS(XMLUnits.YEARS);",
        "44": "",
        "56": "    /**",
        "57": "     * @return the units for this object.",
        "58": "     */",
        "27": "",
        "28": "import dr.evoxml.util.XMLUnits;"
      },
      "id": 7746543,
      "filename": "Units.java"
    },
    {
      "repo": "http://metastudio.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 28,
      "location": "/metastudio/src/org/meta/common",
      "name": "metastudio",
      "url": "https://searchcode.com/codesearch/view/11621248/",
      "md5hash": "33b3be3a8813ba201674e02f6053c639",
      "lines": {
        "1": "/**",
        "2": " * Units.java",
        "8": "/**",
        "9": " * Enum defining Units used to represent various numbers used in IDE.",
        "13": " */",
        "14": "public enum Units {"
      },
      "id": 11621248,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/errord/nengo.git",
      "language": "Java",
      "linescount": 153,
      "location": "/simulator/src/java/main/ca/nengo/model",
      "name": "nengo",
      "url": "https://searchcode.com/codesearch/view/71692087/",
      "md5hash": "c4c66b761a6f2bd805290477f86076a8",
      "lines": {
        "32": " * (e.g. 's') and composite units (e.g. 'spikes/s').",
        "33": " *",
        "135": "\t/**",
        "136": "\t * Returns an array of Units in which all Units are the same.",
        "137": "\t *",
        "10": "The Original Code is \"Units.java\". Description:",
        "139": "\t * @param length Number of elements",
        "140": "\t * @return Array of given length with given Units in every element",
        "141": "\t */",
        "142": "\tpublic static Units[] uniform(Units units, int length) {",
        "143": "\t\tUnits[] result = new Units[length];",
        "144": "",
        "9": "",
        "30": "/**",
        "31": " * Models units for physical quantities. We use this class to model both fundamental units"
      },
      "id": 71692087,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/Portree-Kid/LiveView-Navigator.git",
      "language": "Java",
      "linescount": 72,
      "location": "/src/cgeo/geocaching/geopoint",
      "name": "LiveView-Navigator",
      "url": "https://searchcode.com/codesearch/view/74926236/",
      "md5hash": "6d813c48a2c0ba2cc1f351532b655968",
      "lines": {
        "4": "",
        "5": "public class Units {",
        "6": "",
        "7": "    public static ImmutablePair<Double, String> scaleDistance(final double distanceKilometers, final boolean useMetricUnits) {",
        "8": "        double distance;",
        "9": "        String units;",
        "10": "        if (useMetricUnits) {",
        "11": "            if (distanceKilometers >= 1) {",
        "12": "                distance = distanceKilometers;",
        "13": "                units = \"km\";",
        "15": "                distance = distanceKilometers * 1000;",
        "16": "                units = \"m\";",
        "20": "            if (distance >= 0.1) {",
        "21": "                units = \"mi\";",
        "23": "                distance *= 5280;",
        "24": "                units = \"ft\";"
      },
      "id": 74926236,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/nls-oskari/oskari-server.git",
      "language": "Java",
      "linescount": 99,
      "location": "/servlet-transport/src/main/java/fi/nls/oskari/pojo",
      "name": "oskari-server",
      "url": "https://searchcode.com/codesearch/view/76073990/",
      "md5hash": "7d22056a044a54d802846a4e7a2acfcd",
      "lines": {
        "10": "",
        "11": "public class Units {",
        "12": "    private static final Logger log = LogFactory.getLogger(Units.class);",
        "13": "    private HashMap<String, Double> metersPerUnits = new HashMap<String, Double>();",
        "14": "",
        "15": "    public Units() {",
        "16": "        metersPerUnits.put(\"in\", 0.0254d);                      // Inches",
        "17": "        metersPerUnits.put(\"inches\", 0.0254d);                  // Inches",
        "18": "        metersPerUnits.put(\"Inch\", 0.0254d);                    // Inches",
        "19": "        metersPerUnits.put(\"m\", 1.0d);                          // Meters",
        "20": "        metersPerUnits.put(\"metre\", 1.0d);                      // Meters",
        "21": "        metersPerUnits.put(\"Meter\", 1.0d);                      // Meters",
        "22": "        metersPerUnits.put(\"\uc9f8\", 0.01745329251994328d);         // Degrees",
        "23": "        metersPerUnits.put(\"dd\", 0.01745329251994328d);        // Degrees",
        "24": "        metersPerUnits.put(\"degree\", 0.01745329251994328d);    // Degrees"
      },
      "id": 76073990,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/felipecpc/Gaggle.git",
      "language": "Java",
      "linescount": 219,
      "location": "/src/com/geeksville/info",
      "name": "Gaggle",
      "url": "https://searchcode.com/codesearch/view/113605819/",
      "md5hash": "60186023b8db9821a76579e90b28be26",
      "lines": {
        "32": " */",
        "33": "public class Units {",
        "34": "",
        "35": "\tpublic static Units instance = new Units();",
        "132": "\t\tString defval = Distance.Feet.toString();",
        "133": "\t\tvdistance = Distance.valueOf(prefs.getString(\"altunits1_pref\", defval));",
        "70": "",
        "71": "\tprivate String getSpeedUnits(Speed s) {",
        "72": "\t\tfinal String[] speedUnits = { \"mph\", \"kph\", \"m/s\", \"fpm\",",
        "73": "\t\t\t\t\"kts/hr\" };",
        "74": "",
        "75": "\t\treturn speedUnits[s.ordinal()];",
        "135": "\t\t\t\tDistance.Miles.toString()));",
        "27": "/**",
        "28": " * Convert units based on the user's preferences",
        "134": "\t\thdistance = Distance.valueOf(prefs.getString(\"distunits1_pref\","
      },
      "id": 113605819,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/laidig/tcip_xml",
      "language": "Java",
      "linescount": 56,
      "location": "/src/itis_3_0_0_local",
      "name": "tcip_xml",
      "url": "https://searchcode.com/codesearch/view/119091526/",
      "md5hash": "fcdd1d5ecff3bc07918dc618364bfd1f",
      "lines": {
        "32": "public enum Units {",
        "48": "            if (c.value.equals(v)) {",
        "37": "",
        "38": "    Units(String v) {",
        "45": "",
        "46": "    public static Units fromValue(String v) {",
        "47": "        for (Units c: Units.values()) {",
        "16": "/**",
        "17": " * <p>Java class for Units.",
        "21": " * <pre>",
        "22": " * &lt;simpleType name=\"Units\">",
        "29": " */",
        "30": "@XmlType(name = \"Units\", namespace = \"http://www.itis-3-0-0-local\")",
        "31": "@XmlEnum"
      },
      "id": 119091526,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/laidig/tcip_xml",
      "language": "Java",
      "linescount": 56,
      "location": "/src/im_03_00_38_local",
      "name": "tcip_xml",
      "url": "https://searchcode.com/codesearch/view/119091625/",
      "md5hash": "611ee4e9d04172ab884b243fdbabdece",
      "lines": {
        "32": "public enum Units {",
        "48": "            if (c.value.equals(v)) {",
        "37": "",
        "38": "    Units(String v) {",
        "45": "",
        "46": "    public static Units fromValue(String v) {",
        "47": "        for (Units c: Units.values()) {",
        "16": "/**",
        "17": " * <p>Java class for Units.",
        "21": " * <pre>",
        "22": " * &lt;simpleType name=\"Units\">",
        "29": " */",
        "30": "@XmlType(name = \"Units\")",
        "31": "@XmlEnum"
      },
      "id": 119091625,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/laidig/tcip_xml",
      "language": "Java",
      "linescount": 56,
      "location": "/src/itis_3_0_0_local_for_atis",
      "name": "tcip_xml",
      "url": "https://searchcode.com/codesearch/view/119091933/",
      "md5hash": "597f0704e2704b9e335f9ac91466843f",
      "lines": {
        "32": "public enum Units {",
        "48": "            if (c.value.equals(v)) {",
        "37": "",
        "38": "    Units(String v) {",
        "45": "",
        "46": "    public static Units fromValue(String v) {",
        "47": "        for (Units c: Units.values()) {",
        "16": "/**",
        "17": " * <p>Java class for Units.",
        "21": " * <pre>",
        "22": " * &lt;simpleType name=\"Units\">",
        "29": " */",
        "30": "@XmlType(name = \"Units\", namespace = \"http://www.itis-3-0-0-local-for-atis\")",
        "31": "@XmlEnum"
      },
      "id": 119091933,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/kbanczyk/tds-repo",
      "language": "Java",
      "linescount": 1598,
      "location": "/powerloom/src/main/java/edu/isi/powerloom/extensions/units",
      "name": "tds-repo",
      "url": "https://searchcode.com/codesearch/view/56698772/",
      "md5hash": "6f9c1d571c0826e8d4de0eba957407ea",
      "lines": {
        "2": "//",
        "3": "// Units.java",
        "166": "  public static DimNumberLogicWrapper wrapDimNumber(DimNumber value) {",
        "167": "    { DimNumberLogicWrapper wrapper = ((DimNumberLogicWrapper)(Units.$DIM_NUMBER_HASH_TABLE$.lookup(value)));",
        "169": "      if (wrapper == null) {",
        "170": "        value.preferredUnits = null;",
        "171": "        wrapper = DimNumberLogicWrapper.newDimNumberLogicWrapper(value);",
        "172": "        Units.$DIM_NUMBER_HASH_TABLE$.insertAt(value, wrapper);",
        "45": "",
        "46": "package edu.isi.powerloom.extensions.units;",
        "180": "",
        "53": "",
        "54": "public class Units {",
        "186": "      }",
        "187": "      else if (Surrogate.subtypeOfP(testValue000, Units.SGT_TIMEPOINT_SUPPORT_DATE_TIME_LOGIC_WRAPPER)) {",
        "181": "      if (Surrogate.subtypeOfP(testValue000, Units.SGT_UNIT_SUPPORT_DIM_NUMBER_LOGIC_WRAPPER)) {"
      },
      "id": 56698772,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/larole/ecf3",
      "language": "Java",
      "linescount": 460,
      "location": "/src/ecf3/model",
      "name": "ecf3",
      "url": "https://searchcode.com/codesearch/view/53815679/",
      "md5hash": "f7d362699da252058b44a9d2db23f5f9",
      "lines": {
        "32": "    protected String szName;",
        "33": "    /** Long description of the Units. */",
        "34": "    protected String szDescription;",
        "10": "/**",
        "11": " * A Units object is a set of units that can be used for a",
        "14": " * <code> Unit unitBase = new Unit('CU',1.0,'Currency base unit'); </code><br>",
        "15": " * <code> Units unitsCurrency = new Units('Currency',unitBase); </code><br>",
        "16": " * <code> Unit unit1 = new Unit('kCU',0.001,'Thousand CU'); </code><br>",
        "17": " * <code> unitsCurrency.add(unit1); </code><br>",
        "22": " */",
        "23": "public class Units {",
        "26": "    Model model = Model.getInstance();",
        "27": "    /** The units of a quantity type.*/",
        "30": "    protected Unit unitDisplay;",
        "31": "    /** The short name of the Units */"
      },
      "id": 53815679,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/wwmm/chemtreebank",
      "language": "Java",
      "linescount": 502,
      "location": "/src/main/java/org/xmlcml/cml/parsetree/helpers",
      "name": "chemtreebank",
      "url": "https://searchcode.com/codesearch/view/54768634/",
      "md5hash": "c13b470fa4ae1cbb2b3c370f4db27419",
      "lines": {
        "45": "[UNITS? centidegree]",
        "43": "[UNITS? Kh-1]",
        "36": "",
        "37": "\tprivate static ListMultimap<Type, Units> unitListByTypeMap;",
        "38": "\tprivate static ListMultimap<String, Units> unitListByAbbreviationMap;",
        "39": "",
        "40": "/*",
        "41": "[UNITS? K.hr-1]86415 ",
        "10": "",
        "11": "public class Units {",
        "12": "",
        "13": "\tpublic final static String NAMESPACE_PREFIX = CMLConstants.CML_UNITS;",
        "46": "[UNITS? dram]",
        "44": "[UNITS? atm]",
        "42": "[UNITS? K/hour]"
      },
      "id": 54768634,
      "filename": "Units.java"
    },
    {
      "repo": "git://github.com/dhale/jtk.git",
      "language": "Java",
      "linescount": 644,
      "location": "/src/main/java/edu/mines/jtk/util",
      "name": "jtk",
      "url": "https://searchcode.com/codesearch/view/16650240/",
      "md5hash": "71cef074ff6b2753132adac2afba754c",
      "lines": {
        "12": "/**",
        "13": " * A class for dimensional analysis of and conversions among units of measure.",
        "17": " * <p>",
        "18": " * A typical pattern for dealing with units is to (1) check the dimensions, ",
        "19": " * (2) convert parameters to SI units, and (3) use the parameters, now with",
        "20": " * consistent (SI) units.",
        "21": " * <p>",
        "23": " * <code><pre>",
        "24": " *  // Ensure frequency units have dimensions of inverse time.",
        "25": " *  if (!freqUnits.haveDimensionsOf(Units.inv(timeUnits))) {",
        "26": " *    // handle error",
        "28": " * ",
        "29": " *  // Convert both frequency and time to SI units.",
        "30": " *  freq = freqUnits.toSI(freq);",
        "31": " *  time = timeUnits.toSI(time);"
      },
      "id": 16650240,
      "filename": "Units.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 129,
      "location": "/MRI-J/jdk/src/share/classes/sun/management/counter",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17105349/",
      "md5hash": "2c3c3cee4db7727116893602eba07b0b",
      "lines": {
        "33": " */",
        "34": "public class Units implements java.io.Serializable {",
        "36": "    /* The enumeration values for this typesafe enumeration must be",
        "37": "     * kept in synchronization with the Units enum in the perfData.hpp file",
        "40": "",
        "41": "    private static final int NUNITS=8;",
        "42": "",
        "43": "    private static Units[] map = new Units[NUNITS];",
        "48": "    /**",
        "49": "     * An Invalid Units value.",
        "50": "     */",
        "51": "    public static final Units INVALID = new Units(\"Invalid\", 0);",
        "53": "    /**",
        "54": "     * Units attribute representing unit-less quantities.",
        "55": "     */",
        "28": "/**",
        "29": " * Provides a typesafe enumeration for describing units of measurement"
      },
      "id": 17105349,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/ndamiens/proj4j-android.git",
      "language": "Java",
      "linescount": 80,
      "location": "/src/org/osgeo/proj4j/units",
      "name": "proj4j-android",
      "url": "https://searchcode.com/codesearch/view/67926025/",
      "md5hash": "6a1439ad5b36a0049fcd8feab66c32f2",
      "lines": {
        "51": "\t// Miscellaneous units",
        "35": "",
        "36": "\t// International units",
        "43": "",
        "44": "\t// U.S. units",
        "50": "",
        "16": "",
        "17": "package org.osgeo.proj4j.units;",
        "18": "",
        "19": "public class Units {",
        "20": "",
        "21": "\t// Angular units",
        "26": "",
        "27": "\t// Distance units",
        "28": "\t",
        "29": "\t// Metric units"
      },
      "id": 67926025,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/shenmeng/cgeo.git",
      "language": "Java",
      "linescount": 63,
      "location": "/main/src/cgeo/geocaching/geopoint",
      "name": "cgeo",
      "url": "https://searchcode.com/codesearch/view/96699586/",
      "md5hash": "dc21f1757488bf82ee041d6fca7afc2f",
      "lines": {
        "8": "",
        "9": "public class Units {",
        "12": "        double distance;",
        "13": "        String units;",
        "14": "        if (Settings.isUseImperialUnits()) {",
        "15": "            distance = distanceKilometers / IConversion.MILES_TO_KILOMETER;",
        "16": "            if (distance >= 0.1) {",
        "17": "                units = \"mi\";",
        "19": "                distance *= 5280;",
        "20": "                units = \"ft\";",
        "57": "        if (Settings.isUseImperialUnits()) {",
        "56": "    public static String getSpeed(final float kilometersPerHour) {",
        "24": "                distance = distanceKilometers;",
        "25": "                units = \"km\";",
        "27": "                distance = distanceKilometers * 1000;",
        "28": "                units = \"m\";"
      },
      "id": 96699586,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/wwmm/jumbo-converters",
      "language": "Java",
      "linescount": 34,
      "location": "/jumbo-converters-spectrum/src/main/java/org/xmlcml/cml/converters/spectrum/oscar",
      "name": "jumbo-converters",
      "url": "https://searchcode.com/codesearch/view/54631256/",
      "md5hash": "97f56338299dc5b79d2818d82f1da6e0",
      "lines": {
        "6": "",
        "7": "public class Units {",
        "15": "",
        "16": "\tpublic Units(Element units) {",
        "17": "\t\tif (units.getChildElements().size() > 0) {",
        "18": "\t\t\tCMLUtil.debug(units, \"UNITS\");",
        "19": "\t\t\tthrow new RuntimeException(\"cannot have child elements in units\");",
        "20": "\t\t}",
        "21": "\t\trawValue = units.getValue();",
        "29": "\t\t} else {",
        "30": "\t\t\tthrow new RuntimeException(\"unknown units \"+rawValue);"
      },
      "id": 54631256,
      "filename": "Units.java"
    },
    {
      "repo": "https://bitbucket.org/cjh1/jumbo-converters",
      "language": "Java",
      "linescount": 34,
      "location": "/jumbo-converters-spectrum/jumbo-converters-spectrum-oscar/src/main/java/org/xmlcml/cml/converters/spectrum/oscar",
      "name": "jumbo-converters",
      "url": "https://searchcode.com/codesearch/view/62721866/",
      "md5hash": "97f56338299dc5b79d2818d82f1da6e0",
      "lines": {
        "6": "",
        "7": "public class Units {",
        "15": "",
        "16": "\tpublic Units(Element units) {",
        "17": "\t\tif (units.getChildElements().size() > 0) {",
        "18": "\t\t\tCMLUtil.debug(units, \"UNITS\");",
        "19": "\t\t\tthrow new RuntimeException(\"cannot have child elements in units\");",
        "20": "\t\t}",
        "21": "\t\trawValue = units.getValue();",
        "29": "\t\t} else {",
        "30": "\t\t\tthrow new RuntimeException(\"unknown units \"+rawValue);"
      },
      "id": 62721866,
      "filename": "Units.java"
    },
    {
      "repo": "https://github.com/MichielK/c-geo-opensource.git",
      "language": "Java",
      "linescount": 74,
      "location": "/main/src/cgeo/geocaching/geopoint",
      "name": "c-geo-opensource",
      "url": "https://searchcode.com/codesearch/view/66824251/",
      "md5hash": "214de5a267b5e3cf587dc8444d7e7dc5",
      "lines": {
        "50": "    /**",
        "70": "        }",
        "6": "",
        "7": "public class Units {",
        "10": "        double distance;",
        "11": "        String units;",
        "12": "        if (Settings.isUseMetricUnits()) {",
        "13": "            if (distanceKilometers >= 1) {",
        "14": "                distance = distanceKilometers;",
        "15": "                units = \"km\";",
        "17": "                distance = distanceKilometers * 1000;",
        "18": "                units = \"m\";",
        "51": "     * Get human readable elevation, depending on settings for metric units.",
        "22": "            if (distance >= 0.1) {",
        "23": "                units = \"mi\";",
        "71": "        return speed + (Settings.isUseMetricUnits() ? \"/h\" : \"ph\");"
      },
      "id": 66824251,
      "filename": "Units.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 11006,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 6936,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2437,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 341,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 96,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 70,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 15,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 3,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 1,
      "source": "Gitorious",
      "id": 10
    }
  ]
}