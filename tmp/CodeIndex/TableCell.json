{
  "matchterm": "TableCell",
  "previouspage": null,
  "searchterm": "TableCell",
  "query": "TableCell",
  "language_filters": [
    {
      "count": 1346,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1346,
  "results": [
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 613,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60434694/",
      "md5hash": "2b348d760148e8f1470e1b00e0d18be0",
      "lines": {
        "176": "     * The TableView associated with this TableCell.",
        "272": "//                        + this + \", TableView: \" + table + \").\");",
        "271": "//                        + \"is not allowed to enter its editing state (TableCell: \"",
        "175": "    /**",
        "270": "//                    \"Can not call TableCell.startEdit() on this TableCell, as it \"",
        "47": " * Represents a single row/column intersection in a {@link TableView}. To ",
        "48": " * represent this intersection, a TableCell contains an ",
        "49": " * {@link #indexProperty() index} property, as well as a ",
        "50": " * {@link #tableColumnProperty() tableColumn} property. In addition, a TableCell",
        "269": "//                Logging.getControlsLogger().warning(",
        "150": "        @Override public Object getBean() {",
        "151": "            return TableCell.this;",
        "59": " */",
        "60": "public class TableCell<S,T> extends IndexedCell<T> {",
        "158": "    /**",
        "159": "     * The TableColumn instance that backs this TableCell."
      },
      "id": 60434694,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/dkocher/google-visualization-java",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/com/google/visualization/datasource/datatable",
      "name": "google-visualization-java",
      "url": "https://searchcode.com/codesearch/view/60087336/",
      "md5hash": "17129e5ed1a67579acc48b9e9655a375",
      "lines": {
        "130": "     */",
        "131": "    public TableCell(TableCell other) {",
        "38": " */",
        "135": "    /**",
        "136": "     * Constructs a new TableCell with a text value.",
        "139": "     */",
        "140": "    public TableCell(String value) {",
        "144": "    /**",
        "145": "     * Constructs a new TableCell with a boolean value.",
        "148": "     */",
        "149": "    public TableCell(boolean value) {",
        "153": "    /**",
        "39": "public class TableCell {",
        "154": "     * Constructs a new TableCell with a number value.",
        "157": "     */",
        "158": "    public TableCell(double value) {"
      },
      "id": 60087336,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/examtool.git",
      "language": "Java",
      "linescount": 140,
      "location": "/pripTool/src/at.tuwien.prip.core.model/src/at/tuwien/prip/core/model/document/segments",
      "name": "examtool",
      "url": "https://searchcode.com/codesearch/view/44026867/",
      "md5hash": "9cc98f09f532b9d22ba5a4fe8aa3ddb0",
      "lines": {
        "65": "/*  2011-01-24 TODO: decide how to create constructors",
        "66": " *  or factory methods to \"convert\" e.g. TextBlock to TableCell, etc.  ",
        "67": "    public TableCell(",
        "68": "\t\tTextSegment seg,",
        "39": "",
        "40": "    public TableCell(",
        "110": "\t\treturn (\"TableCell - text: \" + text + ",
        "78": "    ",
        "109": "\t{",
        "14": " */",
        "15": "public class TableCell extends TextBlock ",
        "20": "\t",
        "21": "\tpublic TableCell(",
        "54": "    public TableCell(",
        "79": "    public TableCell()",
        "53": "        "
      },
      "id": 44026867,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/tableannotator.git",
      "language": "Java",
      "linescount": 150,
      "location": "/plugins/at.tuwien.prip.core.model/src/at/tuwien/prip/model/document/segments",
      "name": "tableannotator",
      "url": "https://searchcode.com/codesearch/view/50149704/",
      "md5hash": "2f455fcc124f76d716b2238bc7fe7eee",
      "lines": {
        "64": "    public TableCell(",
        "119": "\t{",
        "75": "/*  2011-01-24 TODO: decide how to create constructors",
        "76": " *  or factory methods to \"convert\" e.g. TextBlock to TableCell, etc.  ",
        "77": "    public TableCell(",
        "78": "\t\tTextSegment seg,",
        "49": "",
        "50": "    public TableCell(",
        "120": "\t\treturn (\"TableCell - text: \" + text + ",
        "89": "    public TableCell()",
        "88": "    ",
        "24": " */",
        "25": "public class TableCell extends TextBlock ",
        "31": "\tpublic TableCell(",
        "30": "\t",
        "63": "        "
      },
      "id": 50149704,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://google-visualization-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/com/google/visualization/datasource/datatable",
      "name": "google-visualization-java",
      "url": "https://searchcode.com/codesearch/view/4536131/",
      "md5hash": "f0cf738fbd420472f62ba6c414ecaa8b",
      "lines": {
        "130": "   */",
        "131": "  public TableCell(TableCell other) {",
        "134": "  /**",
        "38": " */",
        "39": "public class TableCell {",
        "156": "   */",
        "138": "   */",
        "139": "  public TableCell(String value) {",
        "143": "  /**",
        "144": "   * Constructs a new TableCell with a boolean value.",
        "147": "   */",
        "148": "  public TableCell(boolean value) {",
        "152": "  /**",
        "153": "   * Constructs a new TableCell with a number value.",
        "135": "   * Constructs a new TableCell with a text value.",
        "157": "  public TableCell(double value) {"
      },
      "id": 4536131,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://java2word.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 103,
      "location": "/java2word/src/main/java/word/w2004/elements/tableElements",
      "name": "java2word",
      "url": "https://searchcode.com/codesearch/view/12761782/",
      "md5hash": "a2e0718b07c7ee59bf7aae6975b1f3bc",
      "lines": {
        "37": "    \t",
        "38": "        \ttxt.append(tableCellBottom);    \t",
        "7": "",
        "8": "public class TableCell implements IElement, IFluentElement<TableCell>, IFluentElementStylable<TableCellStyle>{",
        "10": "\tStringBuilder txt = new StringBuilder(\"\");",
        "11": "\tprivate TableCellStyle style = new TableCellStyle();",
        "12": "    private final String tableCellTop = \"\\n     <w:tc>\\n        {styleCellPh}\";",
        "13": "    private final String tableCellBottom = \"\\n      </w:tc>\";",
        "14": "\t",
        "23": "     * */",
        "24": "    private TableCell() {",
        "26": "",
        "27": "    private TableCell(Object cell) {\t\t   \t",
        "28": "    \tif (cell instanceof String) { //new Par",
        "29": "        \ttxt.append(tableCellTop);"
      },
      "id": 12761782,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 46,
      "location": "/platform/platform-api/src/com/intellij/ui",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39396991/",
      "md5hash": "3c4e0f563cfa67e3f02614db8f4f0858",
      "lines": {
        "17": "",
        "18": "public final class TableCell {",
        "21": "",
        "22": "  public TableCell(int rowIndex, int columnIndex) {",
        "28": "    if (this == o) return true;",
        "29": "    if (!(o instanceof TableCell)) return false;",
        "30": "",
        "31": "    final TableCell myKey = (TableCell)o;"
      },
      "id": 39396991,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/crunchiness/vuze.git",
      "language": "Java",
      "linescount": 430,
      "location": "/AZ-SVN/azureus2/src/org/gudy/azureus2/plugins/ui/tables",
      "name": "vuze",
      "url": "https://searchcode.com/codesearch/view/44079864/",
      "md5hash": "11ae75f15b5c69d10e57a97d9ccae3c1",
      "lines": {
        "352": "  /** Remove a previously added TableCellRefreshListener",
        "1": "/*",
        "2": " * File    : TableCell.java",
        "347": "  /** Adds a listener that triggers when the TableCell needs refreshing",
        "36": "// Modified from MyTorrentsTableItem/PeerTableItem",
        "37": "public interface TableCell {",
        "350": "   */",
        "351": "  public void addRefreshListener(TableCellRefreshListener listener);",
        "84": "   * This function must be called from the same thread that the GUI is running",
        "213": "   * ",
        "214": "   * @see #addToolTipListener(TableCellToolTipListener)",
        "89": "   * use {@link #invalidate()}, and set the text in the ",
        "90": "   * {@link TableCellRefreshListener}",
        "223": "   * @see #addToolTipListener(TableCellToolTipListener)",
        "346": "  ",
        "222": "   * ",
        "85": "   * under.  Listeners like {@link TableCellAddedListener} do not always get"
      },
      "id": 44079864,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://github.com/anathema/anathema.git",
      "language": "Java",
      "linescount": 36,
      "location": "/Hero_Sheet/src/main/java/net/sf/anathema/hero/sheet/pdf/encoder/graphics",
      "name": "anathema",
      "url": "https://searchcode.com/codesearch/view/66915684/",
      "md5hash": "213413fd950e05d843ba210212261eeb",
      "lines": {
        "16": "",
        "17": "  public TableCell(Phrase phrase, int border) {",
        "21": "",
        "22": "  public TableCell(Phrase phrase, int border, int horizontalAlignment, int verticalAlignment) {",
        "9": "",
        "10": "public class TableCell extends PdfPCell {",
        "11": "",
        "12": "  public TableCell(PdfPTable table, int border) {",
        "29": "  public TableCell(Image image) {",
        "28": ""
      },
      "id": 66915684,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://fest.googlecode.com/svn/",
      "language": "Java",
      "linescount": 103,
      "location": "/tags/fest-swing-1.0b2/src/main/java/org/fest/swing/data",
      "name": "fest",
      "url": "https://searchcode.com/codesearch/view/1175884/",
      "md5hash": "4b70f099029d4e11f4c47a139b4252fb",
      "lines": {
        "37": "  /**",
        "38": "   * Starting point for the creation of a <code>{@link TableCell}</code>.",
        "41": "   * <pre>",
        "42": "   * // import static org.fest.swing.table.TableCell.row;",
        "43": "   * TableCell cell = row(5).column(3);",
        "44": "   * </pre>",
        "48": "   */",
        "49": "  public static TableCellBuilder row(int row) { return new TableCellBuilder(row); }",
        "51": "  /**",
        "52": "   * Understands creation of <code>{@link TableCell}</code>s.",
        "55": "   */",
        "56": "  public static class TableCellBuilder {",
        "58": "    ",
        "59": "    TableCellBuilder(int row) { this.row = row; }",
        "28": " */",
        "29": "public class TableCell {"
      },
      "id": 1175884,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://fest.googlecode.com/svn/",
      "language": "Java",
      "linescount": 103,
      "location": "/tags/fest-swing-1.0-SNAPSHOT/src/main/java/org/fest/swing/data",
      "name": "fest",
      "url": "https://searchcode.com/codesearch/view/1176814/",
      "md5hash": "409b634d4e019c20bd8b91a08101e324",
      "lines": {
        "38": "  /**",
        "39": "   * Starting point for the creation of a <code>{@link TableCell}</code>.",
        "42": "   * <pre>",
        "43": "   * // import static org.fest.swing.data.TableCell.row;",
        "44": "   * TableCell cell = row(5).column(3);",
        "45": "   * </pre>",
        "49": "   */",
        "50": "  public static TableCellBuilder row(int row) { return new TableCellBuilder(row); }",
        "52": "  /**",
        "53": "   * Understands creation of <code>{@link TableCell}</code>s.",
        "56": "   */",
        "57": "  public static class TableCellBuilder {",
        "59": "    ",
        "60": "    TableCellBuilder(int row) { this.row = row; }",
        "29": " */",
        "30": "public class TableCell {"
      },
      "id": 1176814,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://fest.googlecode.com/svn/",
      "language": "Java",
      "linescount": 103,
      "location": "/tags/fest-swing-1.0/src/main/java/org/fest/swing/data",
      "name": "fest",
      "url": "https://searchcode.com/codesearch/view/1179618/",
      "md5hash": "bc10320903e14d28cab885d85cef9200",
      "lines": {
        "38": "  /**",
        "39": "   * Starting point for the creation of a <code>{@link TableCell}</code>.",
        "42": "   * <pre>",
        "43": "   * // import static org.fest.swing.data.TableCell.row;",
        "44": "   * TableCell cell = row(5).column(3);",
        "45": "   * </pre>",
        "49": "   */",
        "50": "  public static TableCellBuilder row(int row) { return new TableCellBuilder(row); }",
        "52": "  /**",
        "53": "   * Understands creation of <code>{@link TableCell}</code>s.",
        "56": "   */",
        "57": "  public static class TableCellBuilder {",
        "59": "    ",
        "60": "    TableCellBuilder(int row) { this.row = row; }",
        "29": " */",
        "30": "public class TableCell {"
      },
      "id": 1179618,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://fest.googlecode.com/svn/",
      "language": "Java",
      "linescount": 72,
      "location": "/tags/fest-swing-1.0a3/src/main/java/org/fest/swing/fixture",
      "name": "fest",
      "url": "https://searchcode.com/codesearch/view/1177589/",
      "md5hash": "6c7a98cb34bb4bacfb6346fc5be94277",
      "lines": {
        "33": " */",
        "34": "public class TableCell extends JTableCell {",
        "36": "  /**",
        "37": "   * Starting point for the creation of a <code>{@link TableCell}</code>.",
        "40": "   * <pre>",
        "41": "   * // import static org.fest.swing.fixture.TableCell.row;",
        "42": "   * TableCell cell = row(5).column(3);",
        "43": "   * </pre>",
        "47": "   */",
        "48": "  public static TableCellBuilder row(int row) { return new TableCellBuilder(row); }",
        "19": "",
        "20": "import org.fest.swing.driver.JTableCell;",
        "26": " * <pre>",
        "27": " * // import static org.fest.swing.fixture.TableCell.row;",
        "28": " * {@link JTableCellFixture} cell = dialog.{@link JTableFixture table}(\"records\").cell({@link TableCell#row(int) row}(3).column(0));",
        "29": " * </pre>"
      },
      "id": 1177589,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 536,
      "location": "/1.x/nfop/fo/flow",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117209677/",
      "md5hash": "49bd94865b3a87f23d9722cc613cd94d",
      "lines": {
        "64": "            throws FOPException {",
        "1": "/*",
        "2": " * $Id: TableCell.java,v 1.2 2005/03/09 13:33:08 alan13 Exp $",
        "70": "    public static FObj.Maker maker() {",
        "71": "        return new TableCell.Maker();",
        "140": "",
        "141": "    public TableCell(FObj parent, PropertyList propertyList,",
        "312": "        // Add adjust for padding and border to fix link alignment!",
        "313": "        cellArea.setTableCellXOffset(startOffset + startAdjust);",
        "58": "",
        "59": "public class TableCell extends FObj {",
        "317": "            FObj fo = (FObj)children.get(i);",
        "318": "            fo.setIsInTableCell();",
        "65": "            return new TableCell(parent, propertyList, systemId, line, column);"
      },
      "id": 117209677,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://github.com/georgg/georg.git",
      "language": "Java",
      "linescount": 140,
      "location": "/src/old code/Graph3",
      "name": "georg",
      "url": "https://searchcode.com/codesearch/view/110217355/",
      "md5hash": "2d857fee806827f404f66f463ce70f03",
      "lines": {
        "64": "\t\tif (textAlign == TableCell.RIGHT) {",
        "67": "\t\t",
        "68": "\t\tif (textAlign == TableCell.LEFT) {",
        "7": "",
        "8": "public class TableCell {",
        "59": "\t\t",
        "60": "\t\tif (textAlign == TableCell.CENTER) {",
        "63": "\t\t"
      },
      "id": 110217355,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/sutts/htmlstreamtokenizer",
      "language": "Java",
      "linescount": 160,
      "location": "/src/main/java/com/arthurdo/parser",
      "name": "htmlstreamtokenizer",
      "url": "https://searchcode.com/codesearch/view/119088731/",
      "md5hash": "fa0bbe8b68a6774a37edfaecdbdce7f8",
      "lines": {
        "64": "\t */",
        "49": " */",
        "50": "public class TableCell",
        "51": "{",
        "52": "\tpublic TableCell(int rowspan, int colspan, HtmlTag cellTag)",
        "65": "\tpublic TableCell(int row, int col)",
        "24": "/**",
        "25": " * <p>TableCell repesents a table cell. Normally its elements are"
      },
      "id": 119088731,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/examtool.git",
      "language": "Java",
      "linescount": 84,
      "location": "/pripTool/src/at.tuwien.prip.core.model/src/at/tuwien/prip/core/model/project/selection",
      "name": "examtool",
      "url": "https://searchcode.com/codesearch/view/44026746/",
      "md5hash": "bceaa54c865f8193023b8e485116d66c",
      "lines": {
        "17": "@Entity",
        "34": "\t",
        "35": "\tpublic TableCell(int id) {",
        "9": "/**",
        "10": " * TableCell.java",
        "18": "public class TableCell extends SinglePageSelection"
      },
      "id": 44026746,
      "filename": "TableCell.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/tableannotator.git",
      "language": "Java",
      "linescount": 105,
      "location": "/plugins/at.tuwien.prip.core.model/src/at/tuwien/prip/model/project/selection",
      "name": "tableannotator",
      "url": "https://searchcode.com/codesearch/view/50149577/",
      "md5hash": "e0323dbc91cd1d5be0e37cf1d5402bac",
      "lines": {
        "19": "/**",
        "20": " * TableCell.java",
        "27": "@Entity",
        "28": "public class TableCell extends SinglePageSelection",
        "45": "\t",
        "46": "\tpublic TableCell(int id)"
      },
      "id": 50149577,
      "filename": "TableCell.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 46,
      "location": "/platform/platform-api/src/com/intellij/ui",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/7342311/",
      "md5hash": "3c4e0f563cfa67e3f02614db8f4f0858",
      "lines": {
        "17": "",
        "18": "public final class TableCell {",
        "21": "",
        "22": "  public TableCell(int rowIndex, int columnIndex) {",
        "28": "    if (this == o) return true;",
        "29": "    if (!(o instanceof TableCell)) return false;",
        "30": "",
        "31": "    final TableCell myKey = (TableCell)o;"
      },
      "id": 7342311,
      "filename": "TableCell.java"
    },
    {
      "repo": "http://jo-widgets.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 106,
      "location": "/core/org.jowidgets.tools/src/main/java/org/jowidgets/tools/model/table",
      "name": "jo-widgets",
      "url": "https://searchcode.com/codesearch/view/13715492/",
      "md5hash": "5c79a903b0fe8432468921ae23dbc6b3",
      "lines": {
        "34": "import org.jowidgets.common.image.IImageConstant;",
        "35": "import org.jowidgets.common.model.ITableCell;",
        "37": "",
        "38": "public class TableCell implements ITableCell {",
        "39": "",
        "40": "\tprivate final ITableCell cell;",
        "41": "",
        "42": "\tpublic TableCell() {",
        "45": "",
        "46": "\tpublic TableCell(final String text) {",
        "49": "",
        "50": "\tpublic TableCell(final String text, final String toolTipText) {",
        "53": "",
        "54": "\tpublic TableCell(final ITableCellBuilder cellBuilder) {",
        "30": "",
        "31": "import org.jowidgets.api.model.table.ITableCellBuilder;"
      },
      "id": 13715492,
      "filename": "TableCell.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 878,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 304,
      "source": "Github",
      "id": 2
    },
    {
      "count": 122,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 23,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 13,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 5,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "Google Android",
      "id": 12
    }
  ]
}