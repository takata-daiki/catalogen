{
  "matchterm": "UnicodeString",
  "previouspage": null,
  "searchterm": "UnicodeString",
  "query": "UnicodeString",
  "language_filters": [
    {
      "count": 134,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 134,
  "results": [
    {
      "repo": "https://github.com/Staatsgeheim/NDceRpc.git",
      "language": "Java",
      "linescount": 42,
      "location": "/research/JavaDceRpc/jarapac-0.3.8/examples",
      "name": "NDceRpc",
      "url": "https://searchcode.com/codesearch/view/96242880/",
      "md5hash": "747fcfa824332b7e0472815f82605782",
      "lines": {
        "1": "public class UnicodeString extends rpc.unicode_string {",
        "2": "",
        "4": "",
        "5": "\tpublic UnicodeString(boolean zterm) {",
        "7": "\t}",
        "8": "\tpublic UnicodeString(rpc.unicode_string rus, boolean zterm) {",
        "14": "",
        "15": "\tpublic UnicodeString(String str, boolean zterm) {"
      },
      "id": 96242880,
      "filename": "UnicodeString.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 864,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124751/",
      "md5hash": "563ebaab6cf2ba2c01704915fffa6703",
      "lines": {
        "290": "                if((cchExtRst!=extrstLen)||(extrstbrk)){",
        "131": "    public boolean equals(Object obj){",
        "132": "        if(obj instanceof Unicodestring){",
        "135": "        \tif (this.westernencoding) {",
        "136": "        \t\tif (java.util.Arrays.equals(this.getWesternBytes(), ((Unicodestring)obj).getWesternBytes()))",
        "138": "        \t} else { ",
        "139": "        \t\tif (java.util.Arrays.equals(this.getEasternBytes(), ((Unicodestring)obj).getEasternBytes()))",
        "174": "        System.arraycopy(ExtRst, 0, data, (stringlen + offer + formatlen),ExtRst.length);",
        "175": "        if(data[0]==0x0)        Logger.logInfo(\"Unicodestring has zero length.\");",
        "273": "if ((ustrdata.length-dlen-offer-cchExtRst)!=formatlen)",
        "274": "System.out.println(\"Unicodestring.initEasternEncoding: Format runs are not correct\");",
        "291": "                    if(DEBUGLEVEL > 0)Logger.logWarn(\"Unicodestring ExtRst Inconsistent.\");",
        "278": "                if (ExtRst[0]!=1 || ExtRst[1]!=0)",
        "279": "                \tLogger.logWarn(\"Unicodestring.initEasternEncoding: Phonetic Data is not correct\");",
        "280": "            }catch(Throwable e){",
        "281": "                Logger.logInfo(\"Problem parsing rich text Eastern Unicodestring.  len:\" + dlen + \" rich:\" + fRichSt + \".  \" + e);"
      },
      "id": 47124751,
      "filename": "Unicodestring.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 864,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976375/",
      "md5hash": "563ebaab6cf2ba2c01704915fffa6703",
      "lines": {
        "290": "                if((cchExtRst!=extrstLen)||(extrstbrk)){",
        "131": "    public boolean equals(Object obj){",
        "132": "        if(obj instanceof Unicodestring){",
        "135": "        \tif (this.westernencoding) {",
        "136": "        \t\tif (java.util.Arrays.equals(this.getWesternBytes(), ((Unicodestring)obj).getWesternBytes()))",
        "138": "        \t} else { ",
        "139": "        \t\tif (java.util.Arrays.equals(this.getEasternBytes(), ((Unicodestring)obj).getEasternBytes()))",
        "174": "        System.arraycopy(ExtRst, 0, data, (stringlen + offer + formatlen),ExtRst.length);",
        "175": "        if(data[0]==0x0)        Logger.logInfo(\"Unicodestring has zero length.\");",
        "273": "if ((ustrdata.length-dlen-offer-cchExtRst)!=formatlen)",
        "274": "System.out.println(\"Unicodestring.initEasternEncoding: Format runs are not correct\");",
        "291": "                    if(DEBUGLEVEL > 0)Logger.logWarn(\"Unicodestring ExtRst Inconsistent.\");",
        "278": "                if (ExtRst[0]!=1 || ExtRst[1]!=0)",
        "279": "                \tLogger.logWarn(\"Unicodestring.initEasternEncoding: Phonetic Data is not correct\");",
        "280": "            }catch(Throwable e){",
        "281": "                Logger.logInfo(\"Problem parsing rich text Eastern Unicodestring.  len:\" + dlen + \" rich:\" + fRichSt + \".  \" + e);"
      },
      "id": 50976375,
      "filename": "Unicodestring.java"
    },
    {
      "repo": "https://github.com/basza222/compro7514.git",
      "language": "Java",
      "linescount": 13,
      "location": "/src/th/ac/nu/studen/u54347514/compro/ch01",
      "name": "compro7514",
      "url": "https://searchcode.com/codesearch/view/75463776/",
      "md5hash": "88bcd3a206e5b3879b63348fa13d01ae",
      "lines": {
        "5": "package th.ac.nu.studen.u54347514.compro.ch01;",
        "6": "public class UnicodeString {"
      },
      "id": 75463776,
      "filename": "UnicodeString.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 956,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642397/",
      "md5hash": "8126528f53897a35370bb2189a0d623e",
      "lines": {
        "864": "    {",
        "65": "",
        "66": "public class UnicodeString",
        "579": "                  strBytes = unicodeString.getBytes(\"UTF-16LE\");",
        "932": "    public Object clone() {",
        "133": "",
        "134": "    public UnicodeString(RecordInputStream in)",
        "161": "        }",
        "865": "        UnicodeString str = ( UnicodeString ) obj;",
        "162": "        UnicodeString other = ( UnicodeString ) o;",
        "578": "            {",
        "933": "        UnicodeString str = new UnicodeString();",
        "571": "        try {",
        "572": "            String unicodeString = getString();",
        "574": "            {",
        "575": "                strBytes = unicodeString.getBytes(\"ISO-8859-1\");"
      },
      "id": 15642397,
      "filename": "UnicodeString.java"
    },
    {
      "repo": "http://google-enterprise-connector-file-system.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 63,
      "location": "/projects/jcifs/src/jcifs/dcerpc",
      "name": "google-enterprise-connector-file-system",
      "url": "https://searchcode.com/codesearch/view/4009961/",
      "md5hash": "ae2a7710a49c590ce0e782d23a235f6d",
      "lines": {
        "35": "",
        "36": "    public UnicodeString(String str, boolean zterm) {",
        "21": "",
        "22": "public class UnicodeString extends rpc.unicode_string {",
        "25": "",
        "26": "    public UnicodeString(boolean zterm) {",
        "28": "    }",
        "29": "    public UnicodeString(rpc.unicode_string rus, boolean zterm) {"
      },
      "id": 4009961,
      "filename": "UnicodeString.java"
    },
    {
      "repo": "https://github.com/taoyuanxiaoqi/Cafe.git",
      "language": "Java",
      "linescount": 133,
      "location": "/testutils/src/com/baidu/cafe/utils",
      "name": "Cafe",
      "url": "https://searchcode.com/codesearch/view/93030916/",
      "md5hash": "1221e6bab43abe9bd18e745b9a546902",
      "lines": {
        "80": "            }",
        "71": "     * ",
        "72": "     * @param unicodeString",
        "74": "     */",
        "75": "    public static String unicodeStringToUnicode(String unicodeString) {",
        "76": "        try {",
        "77": "            char[] unicode = new char[unicodeString.length() / 4];",
        "78": "            for (int i = 0, j = 0; i < unicodeString.length(); i += 4, j++) {",
        "79": "                unicode[j] = (char) Integer.parseInt(unicodeString.substring(i, i + 4), 16);"
      },
      "id": 93030916,
      "filename": "Strings.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 673,
      "location": "/qadevOOo/tests/java/ifc/i18n",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45022567/",
      "md5hash": "91bf3fed8ffe53cff6e14956cb1b00fb",
      "lines": {
        "66": "*  </li>",
        "67": "*  <li> <code>'UnicodeString'</code>",
        "156": "            int[] lDone = new int[1];",
        "215": "                    + bounds.startPos + \",\" + bounds.endPos + \"): '\"",
        "206": "",
        "189": "                    UnicodeString.substring(bounds.startPos,",
        "216": "                    + UnicodeString.substring(bounds.startPos, bounds.endPos)",
        "210": "            Boundary bounds =",
        "211": "                oObj.previousWord(UnicodeString, i, locale, wordType);",
        "181": "",
        "182": "        while( i < UnicodeString.length() - 1 ) {",
        "183": "            Boundary bounds = oObj.nextWord",
        "184": "                (UnicodeString, i, locale, wordType);",
        "207": "        int i = UnicodeString.length() - 1;",
        "188": "                    + bounds.startPos + \",\" + bounds.endPos + \"): '\" +",
        "157": "            int lRes = oObj.previousCharacters(UnicodeString,"
      },
      "id": 45022567,
      "filename": "_XBreakIterator.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1730,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124777/",
      "md5hash": "4180ef2d0b56b7a28652db9b1164fa01",
      "lines": {
        "832": "\tprivate int putString(Unicodestring newString) {",
        "321": "\t\t\t\t\t// if(st.DEBUGLEVEL > 10)",
        "322": "\t\t\t\t\tLogger.logWarn(\"ERROR: Invalid Unicodestring grbit:\"",
        "810": "\t/**",
        "811": "\t * given unicode bytes, create a Unicodestring and add it to the string vector",
        "812": "\t */",
        "813": "\tUnicodestring initString(byte[] newStringBytes, int strpos,",
        "430": "\t *         if(strend != nextpos) Logger.logWarn(",
        "431": "\t *         \"Sanity Check in Sst initUnicodeString(): strend != nextpos.\");",
        "816": "\t\tUnicodestring newString = new Unicodestring();",
        "817": "\t\tnewString.setSSTPos(strpos);",
        "814": "\t\t\tboolean extrstbrk) {",
        "815": "\t\t// create a new Unicodestring, set its data",
        "188": "\t/**",
        "189": "\t * Initializes the sst as well as initializing the UnicodeStrings contained",
        "831": "\tint retpos = -1;"
      },
      "id": 47124777,
      "filename": "Sst.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1730,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976401/",
      "md5hash": "4180ef2d0b56b7a28652db9b1164fa01",
      "lines": {
        "832": "\tprivate int putString(Unicodestring newString) {",
        "321": "\t\t\t\t\t// if(st.DEBUGLEVEL > 10)",
        "322": "\t\t\t\t\tLogger.logWarn(\"ERROR: Invalid Unicodestring grbit:\"",
        "810": "\t/**",
        "811": "\t * given unicode bytes, create a Unicodestring and add it to the string vector",
        "812": "\t */",
        "813": "\tUnicodestring initString(byte[] newStringBytes, int strpos,",
        "430": "\t *         if(strend != nextpos) Logger.logWarn(",
        "431": "\t *         \"Sanity Check in Sst initUnicodeString(): strend != nextpos.\");",
        "816": "\t\tUnicodestring newString = new Unicodestring();",
        "817": "\t\tnewString.setSSTPos(strpos);",
        "814": "\t\t\tboolean extrstbrk) {",
        "815": "\t\t// create a new Unicodestring, set its data",
        "188": "\t/**",
        "189": "\t * Initializes the sst as well as initializing the UnicodeStrings contained",
        "831": "\tint retpos = -1;"
      },
      "id": 50976401,
      "filename": "Sst.java"
    },
    {
      "repo": "https://github.com/Staatsgeheim/NDceRpc.git",
      "language": "Java",
      "linescount": 106,
      "location": "/research/JavaDceRpc/jarapac-0.3.8/examples",
      "name": "NDceRpc",
      "url": "https://searchcode.com/codesearch/view/96242883/",
      "md5hash": "503546b4be584def93d19cf0ae0c1f76",
      "lines": {
        "33": "\t\tresult.uuid = new rpc.uuid_t();",
        "34": "\t\tUnicodeString sub_key = new UnicodeString( name, true );",
        "60": "\t\tRegQueryValue req = new RegQueryValue(key,",
        "61": "\t\t\t\tnew UnicodeString( name, true ),"
      },
      "id": 96242883,
      "filename": "TestWinreg.java"
    },
    {
      "repo": "https://github.com/Staatsgeheim/NDceRpc.git",
      "language": "Java",
      "linescount": 123,
      "location": "/research/JavaDceRpc/jarapac-0.3.8/examples",
      "name": "NDceRpc",
      "url": "https://searchcode.com/codesearch/view/96242893/",
      "md5hash": "008f9801066956ee49d8262dc98d15e7",
      "lines": {
        "66": "\tint samrLookupNameInDomain(rpc.policy_handle dom_handle, String name) throws Exception {",
        "67": "\t\tUnicodeString[] names = new UnicodeString[1];",
        "68": "\t\tnames[0] = new UnicodeString( name, false );",
        "69": "\t\tIntArray rids = new IntArray();"
      },
      "id": 96242893,
      "filename": "TestSamr.java"
    },
    {
      "repo": "https://github.com/mocleiri/wicket.git",
      "language": "Java",
      "linescount": 1356,
      "location": "/wicket-util/src/main/java/org/apache/wicket/util/string",
      "name": "wicket",
      "url": "https://searchcode.com/codesearch/view/112853707/",
      "md5hash": "fa4aafd229b2474394cf5642147b687e",
      "lines": {
        "417": "\t\tint off = 0;",
        "418": "\t\tchar[] in = escapedUnicodeString.toCharArray();",
        "965": "\t * ",
        "966": "\t * @param unicodeString",
        "969": "\t */",
        "970": "\tpublic static String toEscapedUnicode(final String unicodeString)",
        "971": "\t{",
        "972": "\t\tif ((unicodeString == null) || (unicodeString.length() == 0))",
        "973": "\t\t{",
        "974": "\t\t\treturn unicodeString;",
        "975": "\t\t}",
        "976": "\t\tint len = unicodeString.length();",
        "980": "\t\t{",
        "981": "\t\t\tchar aChar = unicodeString.charAt(x);",
        "409": "\t * ",
        "410": "\t * @param escapedUnicodeString"
      },
      "id": 112853707,
      "filename": "Strings.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 257,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124835/",
      "md5hash": "9d4601a9e36b9ed084afa8dd6ad12b30",
      "lines": {
        "129": "\t",
        "130": "\tpublic Unicodestring getUnsharedString(){",
        "68": "    /** Constructor which takes a number value",
        "69": "        an Sst to store its Unicodestring in,",
        "211": "        if(this.getSheet().getWorkBook().getSharedStringTable().isSharedString(isst)) {",
        "145": "        }",
        "215": "            // reset unsharedstr (see getStringVal) specifically to fix OOXML t=\"s\" setStringVal ",
        "146": "        this.isst = sst.insertUnicodestring(unsharedstr.toString());",
        "81": "\t\tif (val!=null) { // for XLSX handling ... label is linked to sst later",
        "82": "\t        // get the high Sst index, insert the new Unicodestring",
        "83": "\t    \tSst sst= bk.getSharedStringTable();        ",
        "212": "            isst  = this.getSheet().getWorkBook().getSharedStringTable().insertUnicodestring(v);",
        "150": "    ",
        "151": "    /** Returns the value of the Unicodestring",
        "216": "            Unicodestring str = this.getSheet().getWorkBook().getSharedStringTable().getUStringAt(isst);"
      },
      "id": 47124835,
      "filename": "Labelsst.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1419,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124863/",
      "md5hash": "022ab59b8565caab764270a0481ac439",
      "lines": {
        "448": "        offset += strLen;",
        "449": "        dTitlePrompt = new Unicodestring();",
        "482": "        offset += strLen;",
        "483": "        dTextError = new Unicodestring();",
        "108": "    private Unicodestring dTitlePrompt;",
        "778": "        dTextPrompt.updateUnicodeString(text);",
        "107": "\tprivate int grbit;",
        "460": "        offset += strLen;",
        "109": "    private Unicodestring dTitleError;",
        "461": "        dTitleError = new Unicodestring();",
        "819": "    public void setPromptBoxTitle(String text) {",
        "788": "    public void setErrorBoxTitle(String textError) {",
        "789": "        dTitleError.updateUnicodeString(textError);",
        "471": "        offset += strLen;",
        "472": "        dTextPrompt = new Unicodestring();",
        "820": "        dTitlePrompt.updateUnicodeString(text);",
        "777": "    public void setPromptBoxText(String text) {"
      },
      "id": 47124863,
      "filename": "Dv.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 257,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976459/",
      "md5hash": "9d4601a9e36b9ed084afa8dd6ad12b30",
      "lines": {
        "129": "\t",
        "130": "\tpublic Unicodestring getUnsharedString(){",
        "68": "    /** Constructor which takes a number value",
        "69": "        an Sst to store its Unicodestring in,",
        "211": "        if(this.getSheet().getWorkBook().getSharedStringTable().isSharedString(isst)) {",
        "145": "        }",
        "215": "            // reset unsharedstr (see getStringVal) specifically to fix OOXML t=\"s\" setStringVal ",
        "146": "        this.isst = sst.insertUnicodestring(unsharedstr.toString());",
        "81": "\t\tif (val!=null) { // for XLSX handling ... label is linked to sst later",
        "82": "\t        // get the high Sst index, insert the new Unicodestring",
        "83": "\t    \tSst sst= bk.getSharedStringTable();        ",
        "212": "            isst  = this.getSheet().getWorkBook().getSharedStringTable().insertUnicodestring(v);",
        "150": "    ",
        "151": "    /** Returns the value of the Unicodestring",
        "216": "            Unicodestring str = this.getSheet().getWorkBook().getSharedStringTable().getUStringAt(isst);"
      },
      "id": 50976459,
      "filename": "Labelsst.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1419,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976487/",
      "md5hash": "022ab59b8565caab764270a0481ac439",
      "lines": {
        "448": "        offset += strLen;",
        "449": "        dTitlePrompt = new Unicodestring();",
        "482": "        offset += strLen;",
        "483": "        dTextError = new Unicodestring();",
        "108": "    private Unicodestring dTitlePrompt;",
        "778": "        dTextPrompt.updateUnicodeString(text);",
        "107": "\tprivate int grbit;",
        "460": "        offset += strLen;",
        "109": "    private Unicodestring dTitleError;",
        "461": "        dTitleError = new Unicodestring();",
        "819": "    public void setPromptBoxTitle(String text) {",
        "788": "    public void setErrorBoxTitle(String textError) {",
        "789": "        dTitleError.updateUnicodeString(textError);",
        "471": "        offset += strLen;",
        "472": "        dTextPrompt = new Unicodestring();",
        "820": "        dTitlePrompt.updateUnicodeString(text);",
        "777": "    public void setPromptBoxText(String text) {"
      },
      "id": 50976487,
      "filename": "Dv.java"
    },
    {
      "repo": "https://github.com/yanbe/qrcode.git",
      "language": "Java",
      "linescount": 387,
      "location": "/src/jp/sourceforge/qrcode/reader",
      "name": "qrcode",
      "url": "https://searchcode.com/codesearch/view/104062097/",
      "md5hash": "2cc8fa222c1fc99ffdb9790c27c405cb",
      "lines": {
        "355": "\t\tint intData = 0;",
        "356": "\t\tString unicodeString = \"\";",
        "374": "      try{ ",
        "375": "\t\t\t  unicodeString += new String(tempByte, \"Shift_JIS\");",
        "382": "\t\t\t",
        "383": "\t\treturn unicodeString;"
      },
      "id": 104062097,
      "filename": "QRCodeDataBlockReader.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 3407,
      "location": "/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109827461/",
      "md5hash": "a10caa8dad0cd29ffb4894ded1b795e8",
      "lines": {
        "2707": " * @param stringLength cast=(UniCharCount)",
        "2708": " * @param unicodeString cast=(UniChar*)",
        "2709": " */",
        "2710": "public static final native void CGEventKeyboardSetUnicodeString(int /*long*/ event, int /*long*/ stringLength, char[] unicodeString);",
        "135": " * @param actualStringLength cast=(UniCharCount *)",
        "136": " * @param unicodeString cast=(UniChar *)",
        "137": " */",
        "138": "public static final native int UCKeyTranslate (int /*long*/ keyLayoutPtr, short virtualKeyCode, short keyAction, int modifierKeyState, int keyboardType, int keyTranslateOptions, int[] deadKeyState, int maxStringLength, int[] actualStringLength, char[] unicodeString);"
      },
      "id": 109827461,
      "filename": "OS.java"
    },
    {
      "repo": "https://bitbucket.org/pkofler/org.codecop.keystrokes",
      "language": "Java",
      "linescount": 58,
      "location": "/org.codecop.keystrokes.keys.mac/src/org/codecop/keystrokes/mac",
      "name": "org.codecop.keystrokes",
      "url": "https://searchcode.com/codesearch/view/60037034/",
      "md5hash": "f6244dac7f9bbf024b8d84bbfb4b519c",
      "lines": {
        "41": "      LongByReference actualStringLength = new LongByReference();",
        "42": "      short[] unicodeString = new short[(int) maxStringLength];",
        "43": "      coreservices.UCKeyTranslate(keyboardLayout, keyCode, CoreServices.kUCKeyActionDown, 0, carbon.LMGetKbdType(), 0, deadKeyState,",
        "44": "            maxStringLength, actualStringLength, unicodeString);",
        "45": "",
        "46": "      return new String(toIntArray(unicodeString), 0, (int) actualStringLength.getValue());",
        "48": "",
        "49": "   private int[] toIntArray(short[] unicodeString) {",
        "50": "      int[] res = new int[unicodeString.length];",
        "51": "      for (int i = 0; i < res.length; i++) {",
        "52": "         res[i] = unicodeString[i];"
      },
      "id": 60037034,
      "filename": "KeyCodeResolver.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 90,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 36,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Google Code",
      "id": 1
    }
  ]
}