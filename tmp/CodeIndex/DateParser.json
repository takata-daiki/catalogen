{
  "matchterm": "DateParser",
  "previouspage": null,
  "searchterm": "DateParser",
  "query": "DateParser",
  "language_filters": [
    {
      "count": 563,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 563,
  "results": [
    {
      "repo": "https://github.com/jortizcs/sfs_applications.git",
      "language": "Java",
      "linescount": 649,
      "location": "/energylens/sfs_transactions/lib/simple/org/simpleframework/http/parse",
      "name": "sfs_applications",
      "url": "https://searchcode.com/codesearch/view/67866922/",
      "md5hash": "186effba549a9b5dd8fa3a09814b80ab",
      "lines": {
        "1": "/*",
        "2": " * DateParser.java February 2001",
        "129": "    */",
        "130": "   public DateParser(){",
        "143": "    */ ",
        "144": "   public DateParser(long date){",
        "49": " */",
        "50": "public class DateParser extends Parser {",
        "222": "    * for this <code>DateParser</code>. Every in is set to the ",
        "119": "      long time = System.currentTimeMillis();",
        "120": "      return new DateParser(time).toString();",
        "221": "    * This is used to reset the date and the buffer variables ",
        "157": "    */   ",
        "158": "   public DateParser(String date)  {      "
      },
      "id": 67866922,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 341,
      "location": "/src/java/net/sf/samtools/util",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424482/",
      "md5hash": "cb476b0da51ce312244b37b08a93529a",
      "lines": {
        "1": "// DateParser.java",
        "2": "// $Id: DateParser.java,v 1.3 2001/01/04 13:26:19 bmahe Exp $",
        "3": "// (c) COPYRIGHT MIT, INRIA and Keio, 2000.",
        "92": " */",
        "93": "public class DateParser {"
      },
      "id": 58424482,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/akpaide/exporter.git",
      "language": "Java",
      "linescount": 961,
      "location": "/exporter/src/main/java/org/zkoss/exporter/excel/imp",
      "name": "exporter",
      "url": "https://searchcode.com/codesearch/view/101231442/",
      "md5hash": "3a4ec917fed45a439d05a30a7bb5a4be",
      "lines": {
        "1": "/* DateParser.java",
        "2": "",
        "36": " */",
        "37": "public class DateParser {",
        "70": "\tpublic DateParser(Locale locale) {",
        "69": "\t"
      },
      "id": 101231442,
      "filename": "DateParser.java"
    },
    {
      "repo": "http://beast-mcmc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 169,
      "location": "/src/dr/evoxml",
      "name": "beast-mcmc",
      "url": "https://searchcode.com/codesearch/view/7746672/",
      "md5hash": "c22ba3268f053ffaf617474defb88da2",
      "lines": {
        "1": "/*",
        "2": " * DateParser.java",
        "36": " * @author Andrew Rambaut",
        "37": " * @version $Id: DateParser.java,v 1.2 2005/05/24 20:25:59 rambaut Exp $",
        "38": " */",
        "39": "public class DateParser extends AbstractXMLObjectParser {"
      },
      "id": 7746672,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://code.google.com/p/ganttproject/",
      "language": "Java",
      "linescount": 280,
      "location": "/ganttproject/src/org/w3c/util",
      "name": "ganttproject",
      "url": "https://searchcode.com/codesearch/view/8440793/",
      "md5hash": "90df7a7022f3f2a2fc5955da06360de3",
      "lines": {
        "19": " */",
        "1": "// DateParser.java",
        "2": "// $Id: DateParser.java,v 1.5 2005/05/14 15:53:00 dbarashev Exp $",
        "3": "// (c) COPYRIGHT MIT, INRIA and Keio, 2000.",
        "20": "public class DateParser {"
      },
      "id": 8440793,
      "filename": "DateParser.java"
    },
    {
      "repo": "http://beast-mcmc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 88,
      "location": "/src/dr/evoxml",
      "name": "beast-mcmc",
      "url": "https://searchcode.com/codesearch/view/7746658/",
      "md5hash": "46b31131b4e17dab36e1138c531eb475",
      "lines": {
        "1": "/*",
        "2": " * DateParser.java",
        "34": " * @version $Id: DateParser.java,v 1.2 2005/05/24 20:25:59 rambaut Exp $",
        "33": " *"
      },
      "id": 7746658,
      "filename": "LocationParser.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 334,
      "location": "/ojc-core/component-common/wsdlmodel/src/com/sun/wsdl/model/common/util",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43257304/",
      "md5hash": "a66ea52ed46a7a136aeca2a3420d6668",
      "lines": {
        "130": "                    System.out.println(MESSAGES.getString(",
        "131": "                            \"DateParser.DATE_PARSER_DAY\",",
        "134": "                } else {",
        "135": "                    System.out.println(MESSAGES.getString(\"DateParser.NO_DAY\"));",
        "264": "                        MESSAGES.getString(",
        "265": "                        \"DateParser.x_IS_NOT_AN_INTEGER\", ",
        "49": "",
        "50": "    public class DateParser {",
        "116": "                            MESSAGES.getString(",
        "117": "                            \"DateParser.DATE_PARSER_MNTH\",",
        "23": "/*",
        "24": " * @(#)DateParser.java ",
        "61": "        private static final Messages MESSAGES = ",
        "62": "                Messages.getMessages(DateParser.class);",
        "63": "        private static final Logger LOGGER = "
      },
      "id": 43257304,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 334,
      "location": "/ojc-core/component-common/wsdlmodel/src/com/sun/wsdl/model/common/util",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49197832/",
      "md5hash": "a66ea52ed46a7a136aeca2a3420d6668",
      "lines": {
        "130": "                    System.out.println(MESSAGES.getString(",
        "131": "                            \"DateParser.DATE_PARSER_DAY\",",
        "134": "                } else {",
        "135": "                    System.out.println(MESSAGES.getString(\"DateParser.NO_DAY\"));",
        "264": "                        MESSAGES.getString(",
        "265": "                        \"DateParser.x_IS_NOT_AN_INTEGER\", ",
        "49": "",
        "50": "    public class DateParser {",
        "116": "                            MESSAGES.getString(",
        "117": "                            \"DateParser.DATE_PARSER_MNTH\",",
        "23": "/*",
        "24": " * @(#)DateParser.java ",
        "61": "        private static final Messages MESSAGES = ",
        "62": "                Messages.getMessages(DateParser.class);",
        "63": "        private static final Logger LOGGER = "
      },
      "id": 49197832,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/examtool.git",
      "language": "Java",
      "linescount": 321,
      "location": "/pripTool/src/at.tuwien.prip.common/src/at/tuwien/prip/common/utils",
      "name": "examtool",
      "url": "https://searchcode.com/codesearch/view/44027008/",
      "md5hash": "2325c40fc5da8a20df6ae2e3adc96f1e",
      "lines": {
        "32": "         -->  1998, 11, 23",
        "33": "         NumberFormatter.ISOtime(DateParser.getCalendar(\"November 24th 1998\"))",
        "37": "",
        "38": "public class DateParser {",
        "20": "",
        "21": "The DateParser normalizes date expressions in english natural language text",
        "310": "  public static void main(String[] argv) throws Exception {",
        "311": "    System.out.println(NumberFormatter.ISOtime(DateParser.asCalendar(DateParser.normalize(\"November 24th 1998\"))));",
        "24": "where <i>year</i> is either positive negative.",
        "25": "The DateParser understands expressions like \"4th century BC\" or \"3rd of November 2004\".",
        "28": "   <PRE>",
        "29": "         DateParser.normalize(\"It was November 23rd to 24th 1998.\")",
        "30": "         --> \"It was 1998-11-23 to 1998-11-24.\"",
        "31": "         DateParser.getDate(\"It was 1998-11-23 to 1998-11-24.\")"
      },
      "id": 44027008,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/secollab/linphone-blackberry-mikey-sakke.git",
      "language": "Java",
      "linescount": 76,
      "location": "/submodules/jliblinphone/submodules/externals/sip-for-me/src/sip4me/gov/nist/siplite/parser",
      "name": "linphone-blackberry-mikey-sakke",
      "url": "https://searchcode.com/codesearch/view/45765257/",
      "md5hash": "b70036867600518dd6c17a7cdec9d8db",
      "lines": {
        "64": "\t\t    System.out.println(\"Parsing \" + date[i]);",
        "33": "\tpublic Header parse()  throws ParseException {",
        "34": "\t   if (debug) dbg_enter(\"DateParser.parse\");",
        "50": "            } finally {",
        "66": "\t\t\t  new DateParser(date[i]);",
        "51": "\t\tif (debug) dbg_leave(\"DateParser.parse\");",
        "65": "\t\t    DateParser dp = ",
        "11": " */",
        "12": "public class DateParser extends HeaderParser {",
        "13": "",
        "14": "\tDateParser() {}",
        "18": "         */",
        "19": "        public DateParser (String date) {",
        "22": "",
        "23": "        protected DateParser(Lexer lexer) {",
        "67": "\t\t    DateHeader d = (DateHeader) dp.parse();"
      },
      "id": 45765257,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/tableannotator.git",
      "language": "Java",
      "linescount": 331,
      "location": "/plugins/at.tuwien.prip.common/src/at/tuwien/prip/common/utils",
      "name": "tableannotator",
      "url": "https://searchcode.com/codesearch/view/50149840/",
      "md5hash": "fce9d5bea15df2da07d626db9de449a4",
      "lines": {
        "320": "  public static void main(String[] argv) throws Exception {",
        "321": "    System.out.println(NumberFormatter.ISOtime(DateParser.asCalendar(DateParser.normalize(\"November 24th 1998\"))));",
        "34": "where <i>year</i> is either positive negative.",
        "35": "The DateParser understands expressions like \"4th century BC\" or \"3rd of November 2004\".",
        "38": "   <PRE>",
        "39": "         DateParser.normalize(\"It was November 23rd to 24th 1998.\")",
        "40": "         --> \"It was 1998-11-23 to 1998-11-24.\"",
        "41": "         DateParser.getDate(\"It was 1998-11-23 to 1998-11-24.\")",
        "42": "         -->  1998, 11, 23",
        "43": "         NumberFormatter.ISOtime(DateParser.getCalendar(\"November 24th 1998\"))",
        "47": "",
        "48": "public class DateParser {",
        "30": "",
        "31": "The DateParser normalizes date expressions in english natural language text"
      },
      "id": 50149840,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/a30151/mikey-sakke.git",
      "language": "Java",
      "linescount": 76,
      "location": "/Java/MSLinphone/src/sip4me/gov/nist/siplite/parser",
      "name": "mikey-sakke",
      "url": "https://searchcode.com/codesearch/view/52563988/",
      "md5hash": "b70036867600518dd6c17a7cdec9d8db",
      "lines": {
        "64": "\t\t    System.out.println(\"Parsing \" + date[i]);",
        "33": "\tpublic Header parse()  throws ParseException {",
        "34": "\t   if (debug) dbg_enter(\"DateParser.parse\");",
        "50": "            } finally {",
        "66": "\t\t\t  new DateParser(date[i]);",
        "51": "\t\tif (debug) dbg_leave(\"DateParser.parse\");",
        "65": "\t\t    DateParser dp = ",
        "11": " */",
        "12": "public class DateParser extends HeaderParser {",
        "13": "",
        "14": "\tDateParser() {}",
        "18": "         */",
        "19": "        public DateParser (String date) {",
        "22": "",
        "23": "        protected DateParser(Lexer lexer) {",
        "67": "\t\t    DateHeader d = (DateHeader) dp.parse();"
      },
      "id": 52563988,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 305,
      "location": "/ojc-core/component-common/bpelmodel/src/com/sun/bpel/model/util",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43258999/",
      "md5hash": "5bea676f8112b3bf0d401e600d68ccf2",
      "lines": {
        "112": "                    int day = Integer.parseInt(st.nextToken());",
        "102": "                    int month = Integer.parseInt(st.nextToken()) - 1;",
        "103": "                    System.out.println(\"@@@### DateParser month: \" + month);",
        "105": "                } else {",
        "106": "                    System.out.println(\"@@@### DateParser NO MONTH \");",
        "47": "",
        "48": "    public class DateParser {",
        "113": "                    System.out.println(\"@@@### DateParser day: \" + day);",
        "23": "/*",
        "24": " * @(#)DateParser.java ",
        "93": "                    int year = Integer.parseInt(st.nextToken());",
        "94": "                    System.out.println(\"@@@### DateParser year: \" + year);"
      },
      "id": 43258999,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 305,
      "location": "/ojc-core/component-common/bpelmodel/src/com/sun/bpel/model/util",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49199527/",
      "md5hash": "5bea676f8112b3bf0d401e600d68ccf2",
      "lines": {
        "112": "                    int day = Integer.parseInt(st.nextToken());",
        "102": "                    int month = Integer.parseInt(st.nextToken()) - 1;",
        "103": "                    System.out.println(\"@@@### DateParser month: \" + month);",
        "105": "                } else {",
        "106": "                    System.out.println(\"@@@### DateParser NO MONTH \");",
        "47": "",
        "48": "    public class DateParser {",
        "113": "                    System.out.println(\"@@@### DateParser day: \" + day);",
        "23": "/*",
        "24": " * @(#)DateParser.java ",
        "93": "                    int year = Integer.parseInt(st.nextToken());",
        "94": "                    System.out.println(\"@@@### DateParser year: \" + year);"
      },
      "id": 49199527,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_external_nist-sip.git",
      "language": "Java",
      "linescount": 85,
      "location": "/java/gov/nist/javax/sip/parser",
      "name": "android_external_nist-sip",
      "url": "https://searchcode.com/codesearch/view/40502003/",
      "md5hash": "d85451808f6c0a5a1f1dbcd6d4273012",
      "lines": {
        "36": " */",
        "37": "public class DateParser extends HeaderParser {",
        "77": "                dbg_leave(\"DateParser.parse\");",
        "57": "        if (debug)",
        "42": "     */",
        "43": "    public DateParser(String date) {",
        "76": "            if (debug)",
        "58": "            dbg_enter(\"DateParser.parse\");",
        "46": "",
        "47": "    protected DateParser(Lexer lexer) {"
      },
      "id": 40502003,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/cwensel/cascading.git",
      "language": "Java",
      "linescount": 206,
      "location": "/cascading-core/src/main/java/cascading/operation/text",
      "name": "cascading",
      "url": "https://searchcode.com/codesearch/view/104381003/",
      "md5hash": "d9a758bc6b21d0030954c115e0f4ee43",
      "lines": {
        "65": "  /**",
        "66": "   * Constructor DateParser creates a new DateParser instance.",
        "71": "  @ConstructorProperties({\"fieldDeclaration\", \"dateFormatString\"})",
        "40": "/**",
        "41": " * Class DateParser is used to convert a text date string to a timestamp, the number of milliseconds",
        "45": " */",
        "46": "public class DateParser extends DateOperation implements Function<Pair<SimpleDateFormat, Tuple>>",
        "72": "  public DateParser( Fields fieldDeclaration, String dateFormatString )",
        "54": "  /**",
        "55": "   * Constructor DateParser creates a new DateParser instance that creates a simple long time stamp of the parsed date.",
        "184": "      return true;",
        "185": "    if( !( object instanceof DateParser ) )",
        "59": "  @ConstructorProperties({\"dateFormatString\"})",
        "60": "  public DateParser( String dateFormatString )",
        "189": "",
        "190": "    DateParser that = (DateParser) object;"
      },
      "id": 104381003,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/bsimpson/halcyon.git",
      "language": "Java",
      "linescount": 143,
      "location": "/clients/java/src/org/apache/commons/httpclient/util",
      "name": "halcyon",
      "url": "https://searchcode.com/codesearch/view/137569603/",
      "md5hash": "79e3941ac65a9f942c98052e11e0833b",
      "lines": {
        "128": "            try {",
        "1": "/*",
        "2": " * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//httpclient/src/java/org/apache/commons/httpclient/util/DateParser.java,v 1.11 2004/11/06 19:15:42 mbecke Exp $",
        "116": "        ",
        "129": "                return dateParser.parse(dateValue);",
        "139": "    /** This class should not be instantiated. */    ",
        "140": "    private DateParser() { }",
        "51": " */",
        "52": "public class DateParser {",
        "117": "        SimpleDateFormat dateParser = null;        ",
        "121": "            String format = (String) formatIter.next();            ",
        "122": "            if (dateParser == null) {",
        "123": "                dateParser = new SimpleDateFormat(format, Locale.US);",
        "124": "                dateParser.setTimeZone(TimeZone.getTimeZone(\"GMT\"));",
        "125": "            } else {"
      },
      "id": 137569603,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/uggedal/halcyon.git",
      "language": "Java",
      "linescount": 143,
      "location": "/clients/java/src/org/apache/commons/httpclient/util",
      "name": "halcyon",
      "url": "https://searchcode.com/codesearch/view/137786088/",
      "md5hash": "79e3941ac65a9f942c98052e11e0833b",
      "lines": {
        "128": "            try {",
        "1": "/*",
        "2": " * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//httpclient/src/java/org/apache/commons/httpclient/util/DateParser.java,v 1.11 2004/11/06 19:15:42 mbecke Exp $",
        "116": "        ",
        "129": "                return dateParser.parse(dateValue);",
        "139": "    /** This class should not be instantiated. */    ",
        "140": "    private DateParser() { }",
        "51": " */",
        "52": "public class DateParser {",
        "117": "        SimpleDateFormat dateParser = null;        ",
        "121": "            String format = (String) formatIter.next();            ",
        "122": "            if (dateParser == null) {",
        "123": "                dateParser = new SimpleDateFormat(format, Locale.US);",
        "124": "                dateParser.setTimeZone(TimeZone.getTimeZone(\"GMT\"));",
        "125": "            } else {"
      },
      "id": 137786088,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/mtodd/halcyon-clients.git",
      "language": "Java",
      "linescount": 143,
      "location": "/java/src/org/apache/commons/httpclient/util",
      "name": "halcyon-clients",
      "url": "https://searchcode.com/codesearch/view/138030184/",
      "md5hash": "79e3941ac65a9f942c98052e11e0833b",
      "lines": {
        "128": "            try {",
        "1": "/*",
        "2": " * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//httpclient/src/java/org/apache/commons/httpclient/util/DateParser.java,v 1.11 2004/11/06 19:15:42 mbecke Exp $",
        "116": "        ",
        "129": "                return dateParser.parse(dateValue);",
        "139": "    /** This class should not be instantiated. */    ",
        "140": "    private DateParser() { }",
        "51": " */",
        "52": "public class DateParser {",
        "117": "        SimpleDateFormat dateParser = null;        ",
        "121": "            String format = (String) formatIter.next();            ",
        "122": "            if (dateParser == null) {",
        "123": "                dateParser = new SimpleDateFormat(format, Locale.US);",
        "124": "                dateParser.setTimeZone(TimeZone.getTimeZone(\"GMT\"));",
        "125": "            } else {"
      },
      "id": 138030184,
      "filename": "DateParser.java"
    },
    {
      "repo": "https://github.com/hegjon/enterprisebooking-client.git",
      "language": "Java",
      "linescount": 143,
      "location": "/src/org/apache/commons/httpclient/util",
      "name": "enterprisebooking-client",
      "url": "https://searchcode.com/codesearch/view/138868599/",
      "md5hash": "79e3941ac65a9f942c98052e11e0833b",
      "lines": {
        "128": "            try {",
        "1": "/*",
        "2": " * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//httpclient/src/java/org/apache/commons/httpclient/util/DateParser.java,v 1.11 2004/11/06 19:15:42 mbecke Exp $",
        "116": "        ",
        "129": "                return dateParser.parse(dateValue);",
        "139": "    /** This class should not be instantiated. */    ",
        "140": "    private DateParser() { }",
        "51": " */",
        "52": "public class DateParser {",
        "117": "        SimpleDateFormat dateParser = null;        ",
        "121": "            String format = (String) formatIter.next();            ",
        "122": "            if (dateParser == null) {",
        "123": "                dateParser = new SimpleDateFormat(format, Locale.US);",
        "124": "                dateParser.setTimeZone(TimeZone.getTimeZone(\"GMT\"));",
        "125": "            } else {"
      },
      "id": 138868599,
      "filename": "DateParser.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 254,
      "source": "Github",
      "id": 2
    },
    {
      "count": 208,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 82,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 13,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 5,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1,
      "source": "Unknown",
      "id": 0
    }
  ]
}