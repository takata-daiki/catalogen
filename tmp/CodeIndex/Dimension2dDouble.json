{
  "matchterm": "Dimension2dDouble",
  "previouspage": null,
  "searchterm": "Dimension2dDouble",
  "query": "Dimension2dDouble",
  "language_filters": [
    {
      "count": 207,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 207,
  "results": [
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 172,
      "location": "/src/org/jhotdraw/geom",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992386/",
      "md5hash": "bf0c4a6bda477a132c0ed93986b9d6d4",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java  1.0  January 14, 2006",
        "66": "     * Constructs a <code>Dimension2DDouble</code> and initializes",
        "65": "    /** ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 52992386,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 175,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/geom",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884830/",
      "md5hash": "f354e09969923b5fb3fb8aca09658254",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java",
        "51": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "42": "    /** ",
        "43": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "45": "     */",
        "46": "    public Dimension2DDouble() {",
        "16": "/**",
        "17": " * Dimension2DDouble.",
        "50": "    /** ",
        "19": " * @author  Werner Randelshofer",
        "20": " * @version $Id: Dimension2DDouble.java 717 2010-11-21 12:30:57Z rawcoder $",
        "21": " */",
        "22": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "57": "     */",
        "58": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 2884830,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD458target/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136063711/",
      "md5hash": "bf0c4a6bda477a132c0ed93986b9d6d4",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java  1.0  January 14, 2006",
        "66": "     * Constructs a <code>Dimension2DDouble</code> and initializes",
        "65": "    /** ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136063711,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD324source/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136065239/",
      "md5hash": "d436351e09ebae05fb92defd4c1f3379",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java  1.0  January 14, 2006",
        "66": "     * Constructs a <code>Dimension2DDouble</code> and initializes",
        "65": "    /** ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136065239,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD596source/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066827/",
      "md5hash": "791637dd3a09e4042f7ddb5271d16f9f",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "22": " * @author  Werner Randelshofer",
        "23": " * @version $Id: Dimension2DDouble.java 592 2009-12-21 13:30:39Z rawcoder $",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136066827,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD596target/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136067803/",
      "md5hash": "791637dd3a09e4042f7ddb5271d16f9f",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "22": " * @author  Werner Randelshofer",
        "23": " * @version $Id: Dimension2DDouble.java 592 2009-12-21 13:30:39Z rawcoder $",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136067803,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD458source/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136068668/",
      "md5hash": "bf0c4a6bda477a132c0ed93986b9d6d4",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java  1.0  January 14, 2006",
        "66": "     * Constructs a <code>Dimension2DDouble</code> and initializes",
        "65": "    /** ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136068668,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 172,
      "location": "/test/subjects/JHD324target/src/org/jhotdraw/geom",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136069445/",
      "md5hash": "d436351e09ebae05fb92defd4c1f3379",
      "lines": {
        "1": "/*",
        "2": " * @(#)Dimension2DDouble.java  1.0  January 14, 2006",
        "66": "     * Constructs a <code>Dimension2DDouble</code> and initializes",
        "65": "    /** ",
        "45": "    /** ",
        "46": "     * Creates an instance of <code>Dimension2DDouble</code> with a width ",
        "48": "     */",
        "49": "    public Dimension2DDouble() {",
        "19": "/**",
        "20": " * Dimension2DDouble.",
        "53": "    /** ",
        "54": "     * Creates an instance of <code>Dimension2DDouble</code> whose width  ",
        "24": " */",
        "25": "public class Dimension2DDouble extends Dimension2D implements java.io.Serializable {",
        "60": "     */",
        "61": "    public Dimension2DDouble(Dimension2DDouble d) {"
      },
      "id": 136069445,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 99,
      "location": "/commons/src/main/java/org/apache/xmlgraphics/java2d",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96980009/",
      "md5hash": "68a2dbe5f9f9365175b63d7a772877e8",
      "lines": {
        "37": "     */",
        "38": "    public Dimension2DDouble() {",
        "73": "        }",
        "74": "        if (obj instanceof Dimension2DDouble) {",
        "75": "            final Dimension2DDouble other = (Dimension2DDouble)obj;",
        "76": "            if (Double.doubleToLongBits(height) != Double.doubleToLongBits(other.height)) {",
        "47": "     */",
        "48": "    public Dimension2DDouble(double width, double height) {",
        "17": "",
        "18": "/* $Id: Dimension2DDouble.java 1345683 2012-06-03 14:50:33Z gadams $ */",
        "27": " */",
        "28": "public class Dimension2DDouble extends Dimension2D implements Serializable {"
      },
      "id": 96980009,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/xmlgraphics-commons",
      "language": "Java",
      "linescount": 98,
      "location": "/src/java/org/apache/xmlgraphics/java2d",
      "name": "xmlgraphics-commons",
      "url": "https://searchcode.com/codesearch/view/59766398/",
      "md5hash": "7dd61b4b7a1d98ce99add609e790de29",
      "lines": {
        "37": "     */",
        "38": "    public Dimension2DDouble() {",
        "73": "        }",
        "74": "        if (obj instanceof Dimension2DDouble) {",
        "75": "            final Dimension2DDouble other = (Dimension2DDouble)obj;",
        "76": "            if (Double.doubleToLongBits(height) != Double.doubleToLongBits(other.height)) {",
        "47": "     */",
        "48": "    public Dimension2DDouble(double width, double height) {",
        "17": "",
        "18": "/* $Id: Dimension2DDouble.java 750418 2009-03-05 11:03:54Z vhennebert $ */",
        "27": " */",
        "28": "public class Dimension2DDouble extends Dimension2D implements Serializable {"
      },
      "id": 59766398,
      "filename": "Dimension2DDouble.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 167,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/samples/svg/figures",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884738/",
      "md5hash": "5714a4e6a881e33ebb30d29b22d6c3c7",
      "lines": {
        "34": "    private static final int OFFSET = 6;",
        "35": "    private Dimension2DDouble originalArc2D;",
        "106": "        final SVGRectFigure svgRect = (SVGRectFigure) getOwner();",
        "107": "        final Dimension2DDouble oldValue = originalArc2D;",
        "108": "        final Dimension2DDouble newValue = new Dimension2DDouble(svgRect.getArcWidth(), svgRect.getArcHeight());",
        "109": "",
        "79": "        SVGRectFigure svgRect = (SVGRectFigure) getOwner();",
        "80": "        originalArc2D = new Dimension2DDouble(svgRect.getArcWidth(), svgRect.getArcHeight());",
        "122": "        SVGRectFigure owner = (SVGRectFigure) getOwner();",
        "123": "        Dimension2DDouble oldArc = new Dimension2DDouble(owner.getArcWidth(), owner.getArcHeight());",
        "124": "        Dimension2DDouble newArc = new Dimension2DDouble(owner.getArcWidth(), owner.getArcHeight());",
        "125": "        switch (evt.getKeyCode()) {"
      },
      "id": 2884738,
      "filename": "SVGRectRadiusHandle.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 267,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992486/",
      "md5hash": "92af1cf2ba9359b24eb1db64331de4c5",
      "lines": {
        "16": "import java.awt.event.MouseEvent;",
        "17": "import org.jhotdraw.geom.Dimension2DDouble;",
        "242": "    public Dimension2DDouble getCanvasSize() {",
        "243": "        return canvasBounds == null || canvasBounds.isEmpty() ? null : new Dimension2DDouble(",
        "244": "                canvasBounds.width, canvasBounds.height);",
        "241": "",
        "233": "",
        "234": "    public void setCanvasSize(Dimension2DDouble newValue) {",
        "235": "        Dimension2DDouble oldValue = new Dimension2DDouble(",
        "236": "                canvasBounds.width, canvasBounds.height);"
      },
      "id": 52992486,
      "filename": "DefaultDrawing.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 325,
      "location": "/src/com/thoughtworks/studio/tools/cardkit/gui",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992703/",
      "md5hash": "6a16fe2f6351c0a6fd5f2911419591bb",
      "lines": {
        "288": "        Dimension2DDouble oldValue = new Dimension2DDouble(",
        "289": "                canvasBounds.width, canvasBounds.height);",
        "4": "import org.jhotdraw.util.ReversedList;",
        "5": "import org.jhotdraw.geom.Dimension2DDouble;",
        "294": "",
        "295": "    public Dimension2DDouble getCanvasSize() {",
        "296": "        return canvasBounds == null || canvasBounds.isEmpty() ? null : new Dimension2DDouble(",
        "297": "                canvasBounds.width, canvasBounds.height);",
        "286": "",
        "287": "    public void setCanvasSize(Dimension2DDouble newValue) {"
      },
      "id": 52992703,
      "filename": "CardwallDrawing.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 198,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992402/",
      "md5hash": "9dec3e2739f251fb8bd7d51e829532e0",
      "lines": {
        "130": "            figure.setText(buf.toString());",
        "131": "            Dimension2DDouble s = figure.getPreferredSize();",
        "182": "                figure.setText(line);",
        "169": "            Dimension2DDouble s = figure.getPreferredSize();",
        "168": "            figure.setText(text);",
        "25": "import javax.swing.filechooser.*;",
        "26": "import org.jhotdraw.geom.Dimension2DDouble;",
        "183": "                Dimension2DDouble s = figure.getPreferredSize();",
        "141": "                figure.setText(line);",
        "142": "                Dimension2DDouble s = figure.getPreferredSize();"
      },
      "id": 52992402,
      "filename": "TextInputFormat.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 301,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992421/",
      "md5hash": "bc25468f2ecebf78290d7f0b78d5d570",
      "lines": {
        "16": "",
        "17": "import org.jhotdraw.geom.Dimension2DDouble;",
        "258": "    ",
        "259": "    public void setCanvasSize(Dimension2DDouble newValue) {",
        "260": "        Dimension2DDouble oldValue = canvasSize;",
        "261": "        canvasSize = newValue;",
        "39": "    private boolean needsSorting = false;",
        "40": "    private Dimension2DDouble canvasSize;",
        "265": "    public Dimension2DDouble getCanvasSize() {",
        "264": "    "
      },
      "id": 52992421,
      "filename": "QuadTreeDrawing.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 302,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992422/",
      "md5hash": "01a12bf1c7e7d1abaea53a52970b431e",
      "lines": {
        "16": "",
        "17": "import org.jhotdraw.geom.Dimension2DDouble;",
        "38": "    private FigureHandler figureHandler;",
        "39": "    private Dimension2DDouble canvasSize;",
        "265": "    ",
        "266": "    public void setCanvasSize(Dimension2DDouble newValue) {",
        "267": "        Dimension2DDouble oldValue = canvasSize;",
        "268": "        canvasSize = newValue;",
        "272": "    public Dimension2DDouble getCanvasSize() {",
        "271": "    "
      },
      "id": 52992422,
      "filename": "QuadTreeCompositeFigure.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 310,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884341/",
      "md5hash": "0f5a21f9e2fd630895ee0140073f0b61",
      "lines": {
        "16": "import org.jhotdraw.draw.event.FigureEvent;",
        "17": "import org.jhotdraw.geom.Dimension2DDouble;",
        "274": "        Dimension2DDouble oldValue = canvasSize;",
        "275": "        canvasSize = newValue;",
        "36": "    private FigureHandler figureHandler;",
        "37": "    private Dimension2DDouble canvasSize;",
        "278": "    ",
        "273": "    public void setCanvasSize(Dimension2DDouble newValue) {",
        "279": "    public Dimension2DDouble getCanvasSize() {",
        "272": "    "
      },
      "id": 2884341,
      "filename": "QuadTreeCompositeFigure.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 224,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw/io",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884435/",
      "md5hash": "09655609dace06d0c10c07a98d89d6ec",
      "lines": {
        "193": "            figure.setText(text);",
        "194": "            Dimension2DDouble s = figure.getPreferredSize();",
        "20": "import javax.swing.*;",
        "21": "import org.jhotdraw.geom.Dimension2DDouble;",
        "166": "                Dimension2DDouble s = figure.getPreferredSize();",
        "207": "                Dimension2DDouble s = figure.getPreferredSize();",
        "155": "            figure.setText(buf.toString());",
        "156": "            Dimension2DDouble s = figure.getPreferredSize();",
        "206": "                figure.setText(line);",
        "165": "                figure.setText(line);"
      },
      "id": 2884435,
      "filename": "TextInputFormat.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 611,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884343/",
      "md5hash": "4817255eb82ee2051ae923e8d42525f8",
      "lines": {
        "226": "    /**",
        "227": "     * Text shadow offset. The value of this attribute is a Dimension2DDouble object.",
        "228": "     */",
        "229": "    public final static AttributeKey<Dimension2DDouble> TEXT_SHADOW_OFFSET = new AttributeKey<Dimension2DDouble>(\"textShadowOffset\", Dimension2DDouble.class, new Dimension2DDouble(1d, 1d), false, labels);"
      },
      "id": 2884343,
      "filename": "AttributeKeys.java"
    },
    {
      "repo": "https://bitbucket.org/moppelkotze/oose",
      "language": "Java",
      "linescount": 44,
      "location": "/trunk/Daniel/UE04/Gruppe15/src/org/jhotdraw/samples/pert/figures",
      "name": "oose",
      "url": "https://searchcode.com/codesearch/view/55539912/",
      "md5hash": "8bff247eb7dec6fc6d16353de4af9668",
      "lines": {
        "40": "        double width = Math.ceil(get(STROKE_WIDTH));",
        "41": "        return new Dimension2DDouble(width, width);",
        "38": "    }",
        "39": "    public Dimension2DDouble getPreferredSize() {"
      },
      "id": 55539912,
      "filename": "SeparatorLineFigure.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 176,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 24,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 7,
      "source": "Github",
      "id": 2
    }
  ]
}