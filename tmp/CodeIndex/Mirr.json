{
  "matchterm": "Mirr",
  "previouspage": null,
  "searchterm": "Mirr",
  "query": "Mirr",
  "language_filters": [
    {
      "count": 19,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 19,
  "results": [
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 13,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105399204/",
      "md5hash": "db2d11c4cf0add58e559c2d490ac21e9",
      "lines": {
        "6": "",
        "7": "public class MIRR extends AbstractFunction"
      },
      "id": 105399204,
      "filename": "MIRR.java"
    },
    {
      "repo": "https://github.com/nikshev/elsa.git",
      "language": "Java",
      "linescount": 347,
      "location": "",
      "name": "elsa",
      "url": "https://searchcode.com/codesearch/view/95032786/",
      "md5hash": "15d0e4064f43a9791ed5d60f5b173d78",
      "lines": {
        "226": " /*",
        "227": "  * dMirr_dHe(t)",
        "228": "  */",
        "229": " private double dMirr_dHe(double t)",
        "231": "  double ret_val;",
        "200": " /*",
        "201": "  * Mirr(t)",
        "202": "  */",
        "203": " private double Mirr(double t)",
        "206": "  ret_val=(M_old()-C*Man(t))/(1-C);",
        "207": " // System.out.print(\"t=\"+Double.toString(t)+\"Mirr ret_val=\"+Double.toString(ret_val)+\"\\r\\n\");",
        "232": "   ret_val=(Man(t)-Mirr(t))/(K*sigma(t));",
        "235": " //  System.out.print(\"t=\"+Double.toString(t)+\"dMirr_dHe ret_val=\"+Double.toString(ret_val)+\"\\r\\n\");",
        "248": "  a_b=(1-C)*dMirr_dHe(t)+C*dMan_dHe(t);",
        "249": "  b_b=1-ALPHA*C*dMan_dHe(t);",
        "234": "\tret_val=0;",
        "247": "  double c_b;"
      },
      "id": 95032786,
      "filename": "JAModelClass.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 127,
      "location": "/org.boris.expr/java/test/org/boris/expr",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398266/",
      "md5hash": "cb4732cc95f7dc6e1eec169221790ab0",
      "lines": {
        "17": "import org.boris.expr.function.excel.ISPMT;",
        "18": "import org.boris.expr.function.excel.MIRR;",
        "70": "",
        "71": "    public void testMIRR() throws Exception {",
        "72": "        MIRR m = new MIRR();",
        "73": "        fail(\"MIRR not implemented\");",
        "74": "    }"
      },
      "id": 105398266,
      "filename": "ExcelFinancialFunctionsTest.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1397,
      "location": "/testsrc/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100409289/",
      "md5hash": "f6546f8bce8c16a0de1f0521b83a6154",
      "lines": {
        "880": "        assertTrue(",
        "881": "            Math.abs(0.04490701 - Vba.MIRR(vals, 0.06, 0.04)) < 0.0000001);",
        "870": "",
        "871": "    public void testMIRR() {",
        "872": "        double vals[] = {-1000, 50, 50, 50, 50, 50, 1050};",
        "873": "        assertTrue(Math.abs(0.05 - Vba.MIRR(vals, 0.05, 0.05)) < 0.0000001);",
        "876": "        assertTrue(",
        "877": "            Math.abs(0.05263266 - Vba.MIRR(vals, 0.05, 0.05)) < 0.0000001);"
      },
      "id": 100409289,
      "filename": "VbaTest.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1397,
      "location": "/testsrc/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69449093/",
      "md5hash": "39d6493c70f41f9341c601162a933250",
      "lines": {
        "880": "        assertTrue(",
        "881": "            Math.abs(0.04490701 - Vba.MIRR(vals, 0.06, 0.04)) < 0.0000001);",
        "870": "",
        "871": "    public void testMIRR() {",
        "872": "        double vals[] = {-1000, 50, 50, 50, 50, 50, 1050};",
        "873": "        assertTrue(Math.abs(0.05 - Vba.MIRR(vals, 0.05, 0.05)) < 0.0000001);",
        "876": "        assertTrue(",
        "877": "            Math.abs(0.05263266 - Vba.MIRR(vals, 0.05, 0.05)) < 0.0000001);"
      },
      "id": 69449093,
      "filename": "VbaTest.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 2500,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456310/",
      "md5hash": "67a51ed00e7b0438ab0a0fa75f26792c",
      "lines": {
        "881": "        + \"a series of periodic cash flows (payments and receipts).\")",
        "882": "    public static double MIRR(",
        "876": "",
        "877": "    @FunctionName(\"MIRR\")",
        "878": "    @Signature(\"MIRR(values(), finance_rate, reinvest_rate)\")",
        "879": "    @Description("
      },
      "id": 69456310,
      "filename": "Vba.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100412065/",
      "md5hash": "97269efda67b1f67b152b3400030b364",
      "lines": {
        "699": "",
        "700": "    // Todo: MIrr Returns the modified internal rate of return for a series of",
        "701": "    // periodic cash flows. MIRR considers both the cost of the investment and",
        "702": "    // the interest received on reinvestment of cash."
      },
      "id": 100412065,
      "filename": "Excel.java"
    },
    {
      "repo": "git://github.com/kilim/kilim.git",
      "language": "Java",
      "linescount": 228,
      "location": "/src/kilim/mirrors",
      "name": "kilim",
      "url": "https://searchcode.com/codesearch/view/300872/",
      "md5hash": "d5b087bf1193b5e73dbbe1f488515956",
      "lines": {
        "32": "    public ClassMirror classForName(String className)",
        "1": "package kilim.mirrors;",
        "2": "",
        "33": "            throws ClassMirrorNotFoundException {",
        "16": "/**",
        "17": " * CachedClassMirrors caches information about a set of classes that are loaded through byte arrays, and which ",
        "20": "",
        "21": "public class CachedClassMirrors implements Mirrors {",
        "23": "    ",
        "24": "    final RuntimeClassMirrors delegate;",
        "25": "    ConcurrentHashMap<String,ClassMirror> cachedClasses = new ConcurrentHashMap<String, ClassMirror>();",
        "26": "",
        "27": "    public CachedClassMirrors(ClassLoader cl) {",
        "28": "        delegate = new RuntimeClassMirrors(cl);",
        "29": "    }",
        "31": "    @Override"
      },
      "id": 300872,
      "filename": "CachedClassMirrors.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1430,
      "location": "/zssapp/src/org/zkoss/zss/app/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969892/",
      "md5hash": "a07bf1b4287ec51f4c6c5c920d857dd5",
      "lines": {
        "201": "\t\tfinanceAry.add(new FormulaMetaInfo(FINANCIAL,",
        "202": "\t\t\t\t\t\"MIRR\",",
        "203": "\t\t\t\t\t\"MIRR(values, finance_rate, reinvest_rate)\",",
        "204": "\t\t\t\t\t\"Returns the modified internal rate of return for a series of periodic cash flows. MIRR considers both the cost of the investment and the interest received on reinvestment of cash.\",",
        "205": "\t\t\t\t\t3, null));"
      },
      "id": 3969892,
      "filename": "Formulas.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 3453,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124971/",
      "md5hash": "3c788f981451f0037f54e553a922448f",
      "lines": {
        "1835": "\t\t// Calculate MIRR from NPV values",
        "1797": "\t */",
        "1798": "\tprotected static Ptg calcMIRR(Ptg[] operands) {",
        "1802": "\t\tif (DEBUG)",
        "1803": "\t\t\tdebugOperands(operands, \"calcMIRR\");",
        "1842": "\t\tif (DEBUG)",
        "1774": "\t/**",
        "1775": "\t * MIRR Returns the internal rate of return where positive and negative cash",
        "1808": "\t\t\tdebugOperands(params, \"calcMIRR\"); // AFTER converting references",
        "1777": "\t * ",
        "1778": "\t * MIRR(values,finance_rate,reinvest_rate)",
        "1843": "\t\t\tLogger.logInfo(\"Result from calcMIRR= \" + result);",
        "1784": "\t * Values must contain at least one positive value and one negative value to",
        "1785": "\t * calculate the modified internal rate of return. Otherwise, MIRR returns",
        "1807": "\t\tif (DEBUG)",
        "1834": ""
      },
      "id": 47124971,
      "filename": "FinancialCalculator.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 3453,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976595/",
      "md5hash": "3c788f981451f0037f54e553a922448f",
      "lines": {
        "1835": "\t\t// Calculate MIRR from NPV values",
        "1797": "\t */",
        "1798": "\tprotected static Ptg calcMIRR(Ptg[] operands) {",
        "1802": "\t\tif (DEBUG)",
        "1803": "\t\t\tdebugOperands(operands, \"calcMIRR\");",
        "1842": "\t\tif (DEBUG)",
        "1774": "\t/**",
        "1775": "\t * MIRR Returns the internal rate of return where positive and negative cash",
        "1808": "\t\t\tdebugOperands(params, \"calcMIRR\"); // AFTER converting references",
        "1777": "\t * ",
        "1778": "\t * MIRR(values,finance_rate,reinvest_rate)",
        "1843": "\t\t\tLogger.logInfo(\"Result from calcMIRR= \" + result);",
        "1784": "\t * Values must contain at least one positive value and one negative value to",
        "1785": "\t * calculate the modified internal rate of return. Otherwise, MIRR returns",
        "1807": "\t\tif (DEBUG)",
        "1834": ""
      },
      "id": 50976595,
      "filename": "FinancialCalculator.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456290/",
      "md5hash": "d000de4330f4246f9ea598129c490c5c",
      "lines": {
        "699": "",
        "700": "    // Todo: MIrr Returns the modified internal rate of return for a series of",
        "701": "    // periodic cash flows. MIRR considers both the cost of the investment and",
        "702": "    // the interest received on reinvestment of cash."
      },
      "id": 69456290,
      "filename": "Excel.java"
    },
    {
      "repo": "git://github.com/krestenkrab/kilim-erjang.git",
      "language": "Java",
      "linescount": 188,
      "location": "/src/kilim/mirrors",
      "name": "kilim-erjang",
      "url": "https://searchcode.com/codesearch/view/15285767/",
      "md5hash": "e26d55f78034321549862f28caf5dc79",
      "lines": {
        "1": "package kilim.mirrors;",
        "2": "",
        "35": "\t\t\tif (member == null) return null;",
        "33": "",
        "8": "",
        "9": "class RuntimeClassMirrors extends Mirrors {",
        "10": "",
        "11": "\tstatic class RuntimeMemberMirror implements MemberMirror {",
        "34": "\t\tpublic static FieldMirror forField(Field member) {",
        "14": "",
        "15": "\t\tpublic RuntimeMemberMirror(Member member) {",
        "24": "",
        "25": "\tstatic class RuntimeFieldMirror extends RuntimeMemberMirror implements FieldMirror {",
        "28": "",
        "29": "\t\tpublic RuntimeFieldMirror(Field field) {"
      },
      "id": 15285767,
      "filename": "RuntimeClassMirrors.java"
    },
    {
      "repo": "https://bitbucket.org/tasyrkin/algorithms-and-competitions",
      "language": "Java",
      "linescount": 32,
      "location": "/Codeforces/src",
      "name": "algorithms-and-competitions",
      "url": "https://searchcode.com/codesearch/view/124644296/",
      "md5hash": "58cc8a1869eb8dc157d4fef56b56ede4",
      "lines": {
        "16": "\t\t\t}",
        "17": "\t\t\tmir[j] = (char)mirr;",
        "12": "\t\tfor(int j = 0; j < mir.length; j++){\t\t",
        "13": "\t\t\tint mirr = 0;",
        "14": "\t\t\tfor(int i = 0; i < 8; i++){",
        "15": "\t\t\t\tmirr |= (0x1&(arr[j]>>i))<<(7-i);"
      },
      "id": 124644296,
      "filename": "CF96C.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260581/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "296": "  //public static final Function MIRR =  new Function(0x3d, \"MIRR\",);",
        "295": "    new Function(0x3c, \"rate\", 0xff);"
      },
      "id": 43260581,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124968/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "1414": "\t\tif (iftab == xlfExp) return 1;",
        "114": "\tpublic static final int xlfRate     = 60;",
        "115": "\tpublic static final int xlfMirr     = 61;",
        "660": "\t\t\t{\"EXP\", String.valueOf(xlfExp), String.valueOf(FTYPE_PTGFUNC)},",
        "661": "\t\t\t{\"MIRR\", String.valueOf(xlfMirr), String.valueOf(FTYPE_PTGFUNC)},",
        "966": "\t\t\tcase xlfMirr: return \"MIRR(\";",
        "1415": "\t\tif (iftab == xlfMirr) return 3;",
        "965": "\t\t\tcase xlfRate: return \"RATE(\";"
      },
      "id": 47124968,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201109/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "296": "  //public static final Function MIRR =  new Function(0x3d, \"MIRR\",);",
        "295": "    new Function(0x3c, \"rate\", 0xff);"
      },
      "id": 49201109,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976592/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "1414": "\t\tif (iftab == xlfExp) return 1;",
        "114": "\tpublic static final int xlfRate     = 60;",
        "115": "\tpublic static final int xlfMirr     = 61;",
        "660": "\t\t\t{\"EXP\", String.valueOf(xlfExp), String.valueOf(FTYPE_PTGFUNC)},",
        "661": "\t\t\t{\"MIRR\", String.valueOf(xlfMirr), String.valueOf(FTYPE_PTGFUNC)},",
        "966": "\t\t\tcase xlfMirr: return \"MIRR(\";",
        "1415": "\t\tif (iftab == xlfMirr) return 3;",
        "965": "\t\t\tcase xlfRate: return \"RATE(\";"
      },
      "id": 50976592,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "http://pentahoanalysistool.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 233,
      "location": "/pat/src/main/java/org/pentaho/pat/client/ui/widgets",
      "name": "pentahoanalysistool",
      "url": "https://searchcode.com/codesearch/view/2003837/",
      "md5hash": "27343e1cfc8a4083999aad5efe67523f",
      "lines": {
        "61": "            +",
        "62": "            \"(LinRegSlope)|(LinRegVariance)|(Log)|(Log10)|(MIRR)|(Max)|(Median)|(Members)|(Mid)|(Min)|(Minute)|(Month)|\" //$NON-NLS-1$"
      },
      "id": 2003837,
      "filename": "MDXRichTextArea.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 7,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 2,
      "source": "Google Code",
      "id": 1
    }
  ]
}