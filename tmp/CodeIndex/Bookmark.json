{
  "matchterm": "Bookmark",
  "previouspage": null,
  "searchterm": "Bookmark",
  "query": "Bookmark",
  "language_filters": [
    {
      "count": 3068,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 3068,
  "results": [
    {
      "repo": "http://jbible.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 237,
      "location": "/mobile/src/jbible/mobile",
      "name": "jbible",
      "url": "https://searchcode.com/codesearch/view/13146316/",
      "md5hash": "120ee75054d03eec0008d65799678644",
      "lines": {
        "32": "        Storage.saveBookmarks(list);",
        "1": "/*",
        "2": " * Bookmark.java - ????????????? ????????",
        "163": "        return book==(((Bookmark)another).getBook()) && chapter==(((Bookmark)another).getChapter()) && verse==(((Bookmark)another).getVerse());",
        "40": "     */",
        "41": "    public Bookmark(int book, int chapter, int verse) {",
        "162": "    public boolean equals(Object another){",
        "15": " */",
        "16": "public class Bookmark {",
        "177": "     */",
        "178": "    public static int getBookmarkCount(){",
        "51": "     */",
        "52": "    public Bookmark(int book,int chapter,int verse,String text){",
        "23": "    static{",
        "24": "        list=Storage.readBookmarks();",
        "31": "    public static void save(){"
      },
      "id": 13146316,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/felixlong/android-rdp.git",
      "language": "Java",
      "linescount": 529,
      "location": "/src/com/softmedia/remote/presentation",
      "name": "android-rdp",
      "url": "https://searchcode.com/codesearch/view/42919012/",
      "md5hash": "d48e0126fe174d017ffa95f3cda709cf",
      "lines": {
        "1": "/*",
        "2": "   Bookmark editing activity",
        "35": "\tprivate static final int PREFERENCES_BOOKMARK = 1;",
        "43": "",
        "44": "\t// bookmark needs to be static because the activity is started for each subview ",
        "34": "\tprivate int current_preferences;",
        "14": "import com.softmedia.remote.application.Utils;",
        "15": "import com.softmedia.remote.domain.BookmarkBase;",
        "16": "import com.softmedia.remote.domain.ConnectionReference;",
        "17": "import com.softmedia.remote.domain.ManualBookmark;",
        "18": "import com.softmedia.remote.services.BookmarkBaseGateway;",
        "19": "",
        "46": "\t// is only applied to the first PreferenceScreen but not to subsequent ones)",
        "47": "\tprivate static BookmarkBase bookmark = null;",
        "29": "",
        "30": "public class BookmarkActivity extends PreferenceActivity implements OnSharedPreferenceChangeListener"
      },
      "id": 42919012,
      "filename": "BookmarkActivity.java"
    },
    {
      "repo": "https://bitbucket.org/felixlong/android-rdp.git",
      "language": "Java",
      "linescount": 451,
      "location": "/jni/FreeRDP/client/Android/src/com/freerdp/afreerdp/presentation",
      "name": "android-rdp",
      "url": "https://searchcode.com/codesearch/view/42922772/",
      "md5hash": "8f544a0c763055abd7d82f9e5ad8d694",
      "lines": {
        "32": "\tprivate static final int PREFERENCES_BOOKMARK = 1;",
        "1": "/*",
        "2": "   Bookmark editing activity",
        "39": "",
        "40": "\t// bookmark needs to be static because the activity is started for each subview ",
        "42": "\t// is only applied to the first PreferenceScreen but not to subsequent ones)",
        "43": "\tprivate static BookmarkBase bookmark = null;",
        "13": "import com.freerdp.afreerdp.application.GlobalApp;",
        "14": "import com.freerdp.afreerdp.domain.BookmarkBase;",
        "15": "import com.freerdp.afreerdp.domain.ConnectionReference;",
        "16": "import com.freerdp.afreerdp.domain.ManualBookmark;",
        "17": "import com.freerdp.afreerdp.services.BookmarkBaseGateway;",
        "18": "",
        "26": "",
        "27": "public class BookmarkActivity extends PreferenceActivity implements OnSharedPreferenceChangeListener",
        "31": "\tprivate int current_preferences;"
      },
      "id": 42922772,
      "filename": "BookmarkActivity.java"
    },
    {
      "repo": "https://github.com/AsherBond/FreeRDP.git",
      "language": "Java",
      "linescount": 555,
      "location": "/client/Android/FreeRDPCore/src/com/freerdp/freerdpcore/presentation",
      "name": "FreeRDP",
      "url": "https://searchcode.com/codesearch/view/71279257/",
      "md5hash": "d5bd1215f8335a1114c2c1ec6e1a9a13",
      "lines": {
        "1": "/*",
        "2": "   Bookmark editing activity",
        "48": "",
        "37": "",
        "38": "\tprivate static final String TAG = \"BookmarkActivity\";",
        "33": "",
        "40": "\tprivate int current_preferences;",
        "41": "\tprivate static final int PREFERENCES_BOOKMARK = 1;",
        "34": "public class BookmarkActivity extends PreferenceActivity implements OnSharedPreferenceChangeListener",
        "16": "import com.freerdp.freerdpcore.application.GlobalApp;",
        "17": "import com.freerdp.freerdpcore.domain.BookmarkBase;",
        "18": "import com.freerdp.freerdpcore.domain.ConnectionReference;",
        "19": "import com.freerdp.freerdpcore.domain.ManualBookmark;",
        "20": "import com.freerdp.freerdpcore.services.BookmarkBaseGateway;",
        "21": "import com.freerdp.freerdpcore.utils.RDPFileParser;",
        "49": "\t// bookmark needs to be static because the activity is started for each subview "
      },
      "id": 71279257,
      "filename": "BookmarkActivity.java"
    },
    {
      "repo": "http://android-daisy-epub-reader.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 255,
      "location": "/src/com/ader",
      "name": "android-daisy-epub-reader",
      "url": "https://searchcode.com/codesearch/view/7299465/",
      "md5hash": "8423a02ae66cdb07393b32007faf77ba",
      "lines": {
        "32": "\tprivate static final String BOOKMARKS_FILENAME = \"bookmarks.bmk\";",
        "33": "\tprivate String pathToBook; ",
        "38": "\t/**",
        "39": "\t * Load the bookmarks from a given path. Only called in this class.",
        "16": "/**",
        "17": " * Represents bookmarks for a given book.",
        "19": " * Currently the code is limited to processing the existing automatically",
        "20": " * maintained bookmark. I plan to extend the class to use and process the",
        "21": " * DAISY 3 bookmarks file. To do so, we will need to:",
        "22": " * - parse the XML file format and be able to write it out, probably ",
        "23": " *   on serialization and explicitly when called to do so.",
        "24": " * - enable callers to add, list and retrieve individual bookmarks.",
        "28": " */",
        "29": "public final class Bookmark implements Serializable {",
        "30": "\tprotected static final String AUTO_BMK = \"auto.bmk\";",
        "31": "\tprivate static final String TAG = \"Bookmark\";"
      },
      "id": 7299465,
      "filename": "Bookmark.java"
    },
    {
      "repo": "http://pagavcs.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 137,
      "location": "/mugcommander/java/source/com/mucommander/bookmark",
      "name": "pagavcs",
      "url": "https://searchcode.com/codesearch/view/11717890/",
      "md5hash": "04fdbe02bde914b2b2ff4d6911d03a50",
      "lines": {
        "34": " */",
        "35": "public class Bookmark implements Cloneable {",
        "40": "    /**",
        "41": "     * Creates a new Bookmark using the given name and location.",
        "42": "     *",
        "43": "     * @param name name given to this bookmark",
        "44": "     * @param location location (path or URL) this bookmark points to",
        "45": "     */",
        "19": "",
        "20": "package com.mucommander.bookmark;",
        "22": "/**",
        "23": " * Represents a bookmark.",
        "24": " * <p>Bookmarks are simple name/location pairs:",
        "25": " *   <ul>",
        "26": " *     <li>The name is a String describing the bookmark.</li>"
      },
      "id": 11717890,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/nan21/nan21.dnet.modules.git",
      "language": "Java",
      "linescount": 200,
      "location": "/nan21.dnet.module.ad/nan21.dnet.module.ad.domain/src/main/java/net/nan21/dnet/module/ad/usr/domain/entity",
      "name": "nan21.dnet.modules",
      "url": "https://searchcode.com/codesearch/view/36093239/",
      "md5hash": "c6d7da33826d501a81e9247d52f972da",
      "lines": {
        "32": "@Entity",
        "33": "@Table(name = Bookmark.TABLE_NAME, uniqueConstraints = { @UniqueConstraint(name = Bookmark.TABLE_NAME",
        "36": "@NamedQueries({",
        "37": "        @NamedQuery(name = Bookmark.NQ_FIND_BY_ID, query = \"SELECT e FROM Bookmark e WHERE e.clientId = :pClientId and e.id = :pId \", hints = @QueryHint(name = QueryHints.BIND_PARAMETERS, value = HintValues.TRUE)),",
        "38": "        @NamedQuery(name = Bookmark.NQ_FIND_BY_IDS, query = \"SELECT e FROM Bookmark e WHERE e.clientId = :pClientId and e.id in :pIds\", hints = @QueryHint(name = QueryHints.BIND_PARAMETERS, value = HintValues.TRUE)),",
        "39": "        @NamedQuery(name = Bookmark.NQ_FIND_BY_NAME, query = \"SELECT e FROM Bookmark e WHERE e.clientId = :pClientId and  e.owner = :pOwner and e.name = :pName \", hints = @QueryHint(name = QueryHints.BIND_PARAMETERS, value = HintValues.TRUE)) })",
        "40": "public class Bookmark extends AbstractType {",
        "41": "",
        "42": "    public static final String TABLE_NAME = \"AD_BOOKMARK\";",
        "43": "    public static final String SEQUENCE_NAME = \"AD_BOOKMARK_SEQ\";",
        "44": "",
        "23": "import net.nan21.dnet.core.domain.model.AbstractType;",
        "24": "import net.nan21.dnet.module.ad.usr.domain.entity.Bookmark;",
        "30": "",
        "31": "/** Bookmark. */"
      },
      "id": 36093239,
      "filename": "Bookmark.java"
    },
    {
      "repo": "http://and-bible.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 52,
      "location": "/AndBible/src/net/bible/android/control/bookmark",
      "name": "and-bible",
      "url": "https://searchcode.com/codesearch/view/2237656/",
      "md5hash": "ccaad62c49b3a3db23d47111ad6bf53a",
      "lines": {
        "1": "package net.bible.android.control.bookmark;",
        "2": "",
        "4": "",
        "5": "import net.bible.service.db.bookmark.BookmarkDto;",
        "6": "import net.bible.service.db.bookmark.LabelDto;",
        "7": "",
        "8": "public interface Bookmark {",
        "10": "\t//** business method */",
        "11": "\tboolean bookmarkCurrentVerse();",
        "12": "\t",
        "13": "\tString getBookmarkVerseText(BookmarkDto bookmark);",
        "17": "",
        "18": "\t/** get labels that can be assigned to a bookmark */",
        "20": "",
        "21": "\t/** get bookmarks with the given label */",
        "22": "\tBookmarkDto getBookmarkById(Long id);"
      },
      "id": 2237656,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/pdboynton/fpcmobile-android.git",
      "language": "Java",
      "linescount": 58,
      "location": "/src/com/firstpentecostalchurch/FPCMobile/control/bookmark",
      "name": "fpcmobile-android",
      "url": "https://searchcode.com/codesearch/view/50219896/",
      "md5hash": "780ec124a898490d04ed93ce7319bf71",
      "lines": {
        "1": "package com.firstpentecostalchurch.FPCMobile.control.bookmark;",
        "2": "",
        "6": "",
        "7": "import net.bible.service.db.bookmark.BookmarkDto;",
        "8": "import net.bible.service.db.bookmark.LabelDto;",
        "9": "",
        "10": "public interface Bookmark {",
        "12": "\t//** business method */",
        "13": "\tboolean bookmarkCurrentVerse();",
        "14": "\t",
        "15": "\tString getBookmarkVerseText(BookmarkDto bookmark);",
        "19": "",
        "20": "\t/** get labels that can be assigned to a bookmark */",
        "22": "",
        "23": "\t/** get bookmarks with the given label */",
        "24": "\tBookmarkDto getBookmarkById(Long id);"
      },
      "id": 50219896,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://code.google.com/p/apv/",
      "language": "Java",
      "linescount": 221,
      "location": "/pdfview/src/cx/hell/android/pdfview",
      "name": "apv",
      "url": "https://searchcode.com/codesearch/view/1566820/",
      "md5hash": "ca49f4647bd9918905409195bdb734e8",
      "lines": {
        "129": "\t",
        "34": "/**",
        "35": " * Class to manage the last opened page and bookmarks of PDF files",
        "68": "\tpublic Bookmark(Context ctx) {",
        "133": "",
        "134": "\t\tCursor cur = db.query(true, \"bookmark\", new String[] { KEY_ENTRY },",
        "39": " */",
        "40": "public class Bookmark {",
        "67": "\t */",
        "140": "\t\t\t\tentry = new BookmarkEntry(cur.getString(0));",
        "130": "\tpublic BookmarkEntry getLast(String file) {",
        "51": "",
        "52": "\tprivate static final String DATABASE_CREATE = \"create table bookmark \"",
        "131": "\t\tBookmarkEntry entry = null;",
        "132": "\t\tString md5 = nameToMD5(file);",
        "139": "\t\t\tif (cur.moveToFirst()) {"
      },
      "id": 1566820,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 293,
      "location": "/platform/lang-impl/src/com/intellij/ide/bookmarks",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39399368/",
      "md5hash": "64460c749afeba8b6c163a4c920e33e4",
      "lines": {
        "277": "      return myBookmark.getBookmarkTooltip();",
        "262": "  private static class MyGutterIconRenderer extends GutterIconRenderer {",
        "263": "    private final Bookmark myBookmark;",
        "264": "",
        "265": "    public MyGutterIconRenderer(@NotNull Bookmark bookmark) {",
        "266": "      myBookmark = bookmark;",
        "267": "    }",
        "16": "",
        "17": "package com.intellij.ide.bookmarks;",
        "51": "",
        "52": "public class Bookmark {",
        "62": "",
        "276": "    public String getTooltipText() {",
        "157": "",
        "158": "    // There is a possible case that target document line that is referenced by the current bookmark is removed. We assume",
        "63": "  public Bookmark(@NotNull Project project, @NotNull VirtualFile file, int line, @NotNull String description) {"
      },
      "id": 39399368,
      "filename": "Bookmark.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 451,
      "location": "/platform/lang-impl/src/com/intellij/ide/bookmarks",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/7345172/",
      "md5hash": "34b7c119efd290d4e74b28f482f42904",
      "lines": {
        "420": "  private static class MyGutterIconRenderer extends GutterIconRenderer implements DumbAware {",
        "421": "    private final Bookmark myBookmark;",
        "422": "",
        "177": "      GutterMark renderer = highlighter.getGutterIconRenderer();",
        "424": "      myBookmark = bookmark;",
        "425": "    }",
        "423": "    public MyGutterIconRenderer(@NotNull Bookmark bookmark) {",
        "429": "    public Icon getIcon() {",
        "430": "      return myBookmark.getIcon();",
        "434": "    public String getTooltipText() {",
        "16": "",
        "17": "package com.intellij.ide.bookmarks;",
        "178": "      if (renderer instanceof MyGutterIconRenderer && ((MyGutterIconRenderer)renderer).myBookmark == this) {",
        "435": "      return myBookmark.getBookmarkTooltip();",
        "308": "",
        "309": "    return IdeBundle.message(\"bookmark.file.X.line.Y\", presentableUrl, getLine() + 1);"
      },
      "id": 7345172,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://github.com/treejames/openfire-1.git",
      "language": "Java",
      "linescount": 684,
      "location": "/openfire_src/src/plugins/clientControl/src/java/org/jivesoftware/openfire/plugin/spark",
      "name": "openfire-1",
      "url": "https://searchcode.com/codesearch/view/98288848/",
      "md5hash": "fd8ff5c38c6d67d81f3ea135c35efa3f",
      "lines": {
        "42": "/**",
        "43": " * Represents a Bookmark. Each bookmark can apply to a set of users and groups, or to",
        "44": " * everyone in the system. There are two types of bookmarks:<ul>",
        "45": " * <p/>",
        "49": " * <p/>",
        "50": " * Each bookmark has a name and value. The value of the bokmark is either a URL or",
        "51": " * a conference room address, depending on the bookmark type. Each bookmark type has",
        "52": " * optional attributes stored as properties:<ul>",
        "53": " * <p/>",
        "54": " * <li><tt>autojoin</tt> ({@link Type#group_chat group chat} bookmarks): when set",
        "56": " * conference room when starting up.</li>",
        "57": " * <li><tt>rss</tt> ({@link Type#url url} bookmarks): when set",
        "58": " * to <tt>true</tt>, indicates that the bookmark is for an RSS feed.</li>",
        "59": " * <li><tt>atom</tt> ({@link Type#url url} bookmarks): when set",
        "60": " * to <tt>true</tt>, indicates that the bookmark is for an ATOM feed.</li>"
      },
      "id": 98288848,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/VahidN/pdfclown",
      "language": "Java",
      "linescount": 398,
      "location": "/java/pdfclown.lib/src/org/pdfclown/documents/interaction/navigation/document",
      "name": "pdfclown",
      "url": "https://searchcode.com/codesearch/view/62442026/",
      "md5hash": "0212695cfbe4c6e6975838b9a01bac39",
      "lines": {
        "160": "  public Bookmark(",
        "181": "    )",
        "179": "  public Bookmark clone(",
        "169": "",
        "170": "  Bookmark(",
        "140": "  // <constructors>",
        "141": "  public Bookmark(",
        "178": "  @Override",
        "51": "@PDF(VersionEnum.PDF10)",
        "52": "public final class Bookmark",
        "149": "",
        "150": "  public Bookmark(",
        "184": "  /**",
        "185": "    Gets the child bookmarks.",
        "186": "  */",
        "182": "  {return (Bookmark)super.clone(context);}",
        "159": ""
      },
      "id": 62442026,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/netbeans/main_contrib",
      "language": "Java",
      "linescount": 98,
      "location": "/bookmarks/src/org/netbeans/api/bookmarks",
      "name": "main_contrib",
      "url": "https://searchcode.com/codesearch/view/122823848/",
      "md5hash": "e72cf7ab42e59b118faf87d05551cd1a",
      "lines": {
        "64": "    /**",
        "65": "     * The name identifes the bookmark. It does not have to be unique.",
        "67": "     * will be called e.g. when the user will try to rename the",
        "68": "     * stored bookmark.",
        "40": " */",
        "41": "package org.netbeans.api.bookmarks;",
        "46": "/**",
        "47": " * Bookmark is somewhat similar to Action. It can be invoked and must",
        "50": " * requirement: object implementing this interface that will be used",
        "51": " * with BookmarkService must support default persistence mechanism of",
        "55": " */",
        "56": "public interface Bookmark extends Presenter.Menu, Presenter.Toolbar {",
        "57": "        ",
        "58": "    /** The name identifes the bookmark. It does not have to be unique.",
        "59": "     * The name can be used in the visual representation.",
        "60": "     * @returns name of the bookmark"
      },
      "id": 122823848,
      "filename": "Bookmark.java"
    },
    {
      "repo": "http://genxdm.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 71,
      "location": "/project/api/core/src/main/java/org/genxdm/nodes",
      "name": "genxdm",
      "url": "https://searchcode.com/codesearch/view/11585039/",
      "md5hash": "5a32924d4859e333fbbb7d6a65632e02",
      "lines": {
        "32": " * The Bookmark can supply either a {@link Model} or {@link Cursor} (the latter initialized",
        "36": " */",
        "37": "public interface Bookmark<N>",
        "39": "{",
        "40": "    /** Allow navigation of the tree in which this bookmark is positioned.",
        "46": "    /** Supply a model which may be used to investigate the tree in which",
        "47": "     * this bookmark is positioned.",
        "23": " * ",
        "24": " * The Bookmark abstraction is primarily intended to allow applications and processors",
        "25": " * to retain state in a context surrounding a node, without requiring that a processing",
        "26": " * context also be part of the state.  The bookmark is an {@link Informer}, which can",
        "28": " * ",
        "29": " * Bookmark guarantees immutability of position.  Implementations must <em>not</em>",
        "30": " * permit a Bookmark's node reference to change.",
        "31": " * "
      },
      "id": 11585039,
      "filename": "Bookmark.java"
    },
    {
      "repo": "http://cng1985.googlecode.com/svn/",
      "language": "Java",
      "linescount": 247,
      "location": "/books/src/org/geometerplus/fbreader/library",
      "name": "cng1985",
      "url": "https://searchcode.com/codesearch/view/12416501/",
      "md5hash": "f838aa89614bb2471140b8e754ac043e",
      "lines": {
        "32": "\tpublic static List<Bookmark> bookmarks() {",
        "33": "\t\treturn BooksDatabase.Instance().loadAllVisibleBookmarks();",
        "161": "\tprivate static String createBookmarkText(ZLTextWordCursor cursor, int maxWords) {",
        "160": "",
        "143": "\t\tif (myIsChanged) {",
        "144": "\t\t\tmyId = BooksDatabase.Instance().saveBookmark(this);",
        "157": "\t\t\treturn bm1.getTime(LATEST).compareTo(bm0.getTime(LATEST));",
        "150": "\t\tif (myId != -1) {",
        "151": "\t\t\tBooksDatabase.Instance().deleteBookmark(this);",
        "25": "",
        "26": "public final class Bookmark extends ZLTextFixedPosition {",
        "155": "\tpublic static class ByTimeComparator implements Comparator<Bookmark> {",
        "156": "\t\tpublic int compare(Bookmark bm0, Bookmark bm1) {",
        "154": "",
        "31": ""
      },
      "id": 12416501,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/nrkarthickkumar/piabandroid",
      "language": "Java",
      "linescount": 549,
      "location": "/src/com/piab/catalogue/android",
      "name": "piabandroid",
      "url": "https://searchcode.com/codesearch/view/102592817/",
      "md5hash": "27d29b2d1470321a3c904c212d62600b",
      "lines": {
        "149": "\t\t\t\t// editStatus, null);",
        "160": "\t\t\t\t\t// \"bkmId\");",
        "187": "\t\t\t\t\t\t\t\t\t\t\t// why this condition means while",
        "161": "\t\t\t\t\t// showBookmark.update_list(show_all, cntx, getListView(),",
        "188": "\t\t\t\t\t\t\t\t\t\t\t// edit the bookmark it will not",
        "146": "\t\t\t\t// title.setText(\"Edit\");",
        "147": "\t\t\t\t// JsonToDB showBookmark = new JsonToDB(\"Bookmark\", \"bkmId\");",
        "148": "\t\t\t\t// showBookmark.update_list(show_all, cntx, getListView(),",
        "53": "",
        "54": "public class Bookmark extends ListActivity {",
        "155": "\t\t\t\t\t// editStatus = true;",
        "156": "\t\t\t\t\t// title.setText(\"Bookmarks\");",
        "189": "\t\t\t\t\t\t\t\t\t\t\t// respont in proper lost posison",
        "158": "\t\t\t\t\t// btnDone.setVisibility(View.INVISIBLE);",
        "159": "\t\t\t\t\t// JsonToDB showBookmark = new JsonToDB(\"Bookmark\","
      },
      "id": 102592817,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/nrkarthickkumar/androidpiab",
      "language": "Java",
      "linescount": 549,
      "location": "/src/com/piab/catalogue/android",
      "name": "androidpiab",
      "url": "https://searchcode.com/codesearch/view/102593034/",
      "md5hash": "27d29b2d1470321a3c904c212d62600b",
      "lines": {
        "149": "\t\t\t\t// editStatus, null);",
        "160": "\t\t\t\t\t// \"bkmId\");",
        "187": "\t\t\t\t\t\t\t\t\t\t\t// why this condition means while",
        "161": "\t\t\t\t\t// showBookmark.update_list(show_all, cntx, getListView(),",
        "188": "\t\t\t\t\t\t\t\t\t\t\t// edit the bookmark it will not",
        "146": "\t\t\t\t// title.setText(\"Edit\");",
        "147": "\t\t\t\t// JsonToDB showBookmark = new JsonToDB(\"Bookmark\", \"bkmId\");",
        "148": "\t\t\t\t// showBookmark.update_list(show_all, cntx, getListView(),",
        "53": "",
        "54": "public class Bookmark extends ListActivity {",
        "155": "\t\t\t\t\t// editStatus = true;",
        "156": "\t\t\t\t\t// title.setText(\"Bookmarks\");",
        "189": "\t\t\t\t\t\t\t\t\t\t\t// respont in proper lost posison",
        "158": "\t\t\t\t\t// btnDone.setVisibility(View.INVISIBLE);",
        "159": "\t\t\t\t\t// JsonToDB showBookmark = new JsonToDB(\"Bookmark\","
      },
      "id": 102593034,
      "filename": "Bookmark.java"
    },
    {
      "repo": "https://bitbucket.org/unitsdev/bookmarking-protocol",
      "language": "Java",
      "linescount": 67,
      "location": "/src/main/java/it/units/stud/bookmarking/protocol",
      "name": "bookmarking-protocol",
      "url": "https://searchcode.com/codesearch/view/103348986/",
      "md5hash": "132bf5cdc7327b686b9015a860003ff3",
      "lines": {
        "1": "package it.units.stud.bookmarking.protocol;",
        "2": "",
        "6": "",
        "7": "public class Bookmark {",
        "42": "    ",
        "43": "    public Bookmark withDescription(String description) {",
        "44": "        return new Bookmark(url, description, tags, rank, owner);",
        "45": "    }",
        "14": "",
        "15": "    public Bookmark(String url, String description, Set<String> tags, int rank, String owner) {",
        "48": "        return new Bookmark(url, description, tags, rank, owner);",
        "49": "    }",
        "50": "    ",
        "51": "    public Bookmark addTags(String... tags) {",
        "52": "        final Bookmark bookmark = new Bookmark(url, description, this.tags, rank, owner);",
        "46": "    ",
        "47": "    public Bookmark withTags(Set<String> tags) {"
      },
      "id": 103348986,
      "filename": "Bookmark.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 1668,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1032,
      "source": "Github",
      "id": 2
    },
    {
      "count": 272,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 40,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 38,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 13,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 5,
      "source": "CodePlex",
      "id": 5
    }
  ]
}