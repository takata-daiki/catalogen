{
  "matchterm": "Property",
  "previouspage": null,
  "searchterm": "Property",
  "query": "Property",
  "language_filters": [
    {
      "count": 194698,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 194698,
  "results": [
    {
      "repo": "https://bitbucket.org/interactivemediamanagement/converge-1.x.git",
      "language": "Java",
      "linescount": 85,
      "location": "/converge-server/modules/converge-ejb/src/main/java/dk/i2m/converge/domain",
      "name": "converge-1.x",
      "url": "https://searchcode.com/codesearch/view/39694418/",
      "md5hash": "510b7f45314cb621be17c2184f430029",
      "lines": {
        "32": "    public Property() {",
        "1": "/*",
        "2": " * Property.java",
        "35": "    public Property(String key, String value) {",
        "64": "        final Property other = (Property) obj;",
        "34": "",
        "21": "/**",
        "22": " * Non persisted property.",
        "25": " */",
        "26": "public class Property {",
        "63": "        }",
        "31": ""
      },
      "id": 39694418,
      "filename": "Property.java"
    },
    {
      "repo": "https://github.com/carrot-garden/carrot-jnlper.git",
      "language": "Java",
      "linescount": 140,
      "location": "/carrot-jdk6-jnlp-macosx/src/common/share/classes/com/sun/deploy/util",
      "name": "carrot-jnlper",
      "url": "https://searchcode.com/codesearch/view/114340905/",
      "md5hash": "a21fbce9183ea7992d74d096cccc89d3",
      "lines": {
        "1": "/*",
        "2": " * @(#)Property.java\t1.3 10/03/24",
        "37": "        }",
        "38": "        this.isSecure=Config.isSecureSystemPropertyKey(this.key);",
        "39": "        if(DEBUG) {",
        "40": "            System.out.println(\"new Property: isSecure: \"+isSecure+\", spec: <\"+spec+\"> -> <\"+this.key+\"> <\"+this.value+\">\");",
        "43": "",
        "44": "    public static Property createProperty(String spec) {",
        "13": "",
        "14": "// A property spec, unique by it's key",
        "15": "// Handles all quoting at toString() and unquoting at construction",
        "16": "public class Property implements Cloneable {",
        "21": "",
        "22": "    public Property(String spec) {",
        "45": "        Property prop = null;",
        "25": "        if(startKey<0 || startKey==spec.length()-2 ) {",
        "26": "            throw new IllegalArgumentException(\"Property invalid\");"
      },
      "id": 114340905,
      "filename": "Property.java"
    },
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 251,
      "location": "/src/main/java/com/flagstone/transform/action",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059597/",
      "md5hash": "6d3ec80c1cd98dbfaa33ef9e5a80a8ee",
      "lines": {
        "1": "/*",
        "2": " * Property.java",
        "38": " */",
        "33": "/**",
        "41": "    /** Format string used in toString() method. */",
        "42": "    private static final String FORMAT = \"Property: { value=%d}\";",
        "39": "public final class Property {",
        "34": " * Property defines the set of attributes that can accessed for movies and movie",
        "46": "    /** Value used to identify an X Property when it is encoded. */",
        "45": "",
        "48": "    /** Value used to identify an Y Property when it is encoded. */",
        "49": "    private static final int YCOORD_VAL = 1;",
        "50": "    /** Value used to identify an XSCALE Property when it is encoded. */",
        "51": "    private static final int XSCALE_VAL = 2;",
        "47": "    private static final int XCOORD_VAL = 0;"
      },
      "id": 16059597,
      "filename": "Property.java"
    },
    {
      "repo": "https://github.com/structureddynamics/Scones.git",
      "language": "Java",
      "linescount": 66,
      "location": "/Scones/Gate-Plugins/Ontology/src/gate/creole/ontology/impl",
      "name": "Scones",
      "url": "https://searchcode.com/codesearch/view/67989810/",
      "md5hash": "cf24fccce54208ac04425c3d130d4df9",
      "lines": {
        "1": "/**",
        "2": " * Property.java",
        "37": "    /**",
        "38": "     * Sets the type value for this Property.",
        "48": "     * Gets the uri value for this Property.",
        "9": "",
        "10": "public class Property {",
        "47": "    /**",
        "15": "",
        "16": "    public Property() {",
        "18": "",
        "19": "    public Property(",
        "57": "    /**",
        "58": "     * Sets the uri value for this Property.",
        "27": "    /**",
        "28": "     * Gets the type value for this Property."
      },
      "id": 67989810,
      "filename": "Property.java"
    },
    {
      "repo": "http://gwittir.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 89,
      "location": "/gwittir-core/src/main/java/com/totsp/gwittir/client/beans",
      "name": "gwittir",
      "url": "https://searchcode.com/codesearch/view/1262846/",
      "md5hash": "db8af3b2ae2eedcf7a5d2969420729d1",
      "lines": {
        "1": "/*",
        "2": " * Property.java",
        "35": "     * @param name Name of the property",
        "36": "     * @param type Class literal type of the property",
        "37": "     * @param accessorMethod The accessor method for the property.",
        "38": "     * @param mutatorMethod The mutator method for the property.",
        "33": "    /**",
        "40": "    public Property(String name, Class type, Method accessorMethod,",
        "39": "     */",
        "34": "     * Creates a new instance of Property",
        "48": "    /**",
        "49": "     * Returns the accessor method for the property.",
        "50": "     * @return The accessor method for the property.",
        "23": "/**",
        "24": " * A container for information about a Property on a type.",
        "26": " */",
        "27": "public class Property {"
      },
      "id": 1262846,
      "filename": "Property.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 395,
      "location": "/zk/src/org/zkoss/zk/ui/metainfo",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17662304/",
      "md5hash": "796fea618c43ce705d57727c885f4470",
      "lines": {
        "1": "/* Property.java",
        "2": "",
        "70": "",
        "39": "/**",
        "40": " * Information about how to initialize a property (aka., a field of a component).",
        "73": "\t */",
        "74": "\tpublic Property(EvaluatorRef evalr, String name, String value,",
        "71": "\t/** Constructs a property with a class that is known in advance.",
        "77": "\t}",
        "46": " */",
        "47": "public class Property extends ConditionValue {",
        "48": "\tprivate static final Log log = Log.lookup(Property.class);",
        "49": "\tprivate static final long serialVersionUID = 20060622L;",
        "78": "\t/** Constructs a property with the native content.",
        "154": "\t * @exception UnsupportedOperationException if value is the native content,",
        "155": "\t * i.e., it is constructed by use of {@link #Property(EvaluatorRef, String, NativeInfo, ConditionImpl)}."
      },
      "id": 17662304,
      "filename": "Property.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 38,
      "location": "/zkbind/src/org/zkoss/bind",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17661780/",
      "md5hash": "f93fddf952821d456a0ec2c4c9539be6",
      "lines": {
        "32": "\t/**",
        "1": "/* Property.java",
        "2": "",
        "35": "\t */",
        "36": "\tpublic String getProperty();",
        "33": "\t * Returns the name of this property. ",
        "34": "\t * @return the name of this property. ",
        "14": "/**",
        "15": " * Represent a property of a base object in the binding.",
        "18": " */",
        "19": "public interface Property {",
        "20": "\t/**",
        "21": "\t * Returns the base object of this property.",
        "22": "\t * @return the base object of this property.",
        "23": "\t */"
      },
      "id": 17661780,
      "filename": "Property.java"
    },
    {
      "repo": "http://beast-mcmc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 113,
      "location": "/src/dr/util",
      "name": "beast-mcmc",
      "url": "https://searchcode.com/codesearch/view/7747215/",
      "md5hash": "9ff4f8a2c55b1a39abcd189f274a86d2",
      "lines": {
        "32": " * Gets a property of another object using introspection.",
        "1": "/*",
        "2": " * Property.java",
        "35": " * @author Alexei Drummond",
        "36": " * @version $Id: Property.java,v 1.19 2005/05/24 20:26:01 rambaut Exp $",
        "37": " */",
        "38": "public class Property implements Attribute {",
        "104": "",
        "105": "    public String getPropertyName() {",
        "44": "",
        "45": "    public Property(Object object, String name) {",
        "48": "",
        "49": "    public Property(Object object, String name, Object argument) {",
        "31": "/**"
      },
      "id": 7747215,
      "filename": "Property.java"
    },
    {
      "repo": "https://github.com/aboutyang/jhipster-sample-app.git",
      "language": "Java",
      "linescount": 5,
      "location": "/src/main/java/com/mycompany/myapp/web/propertyeditors",
      "name": "jhipster-sample-app",
      "url": "https://searchcode.com/codesearch/view/95978990/",
      "md5hash": "cabeede66b1a521480040e41f1b10e28",
      "lines": {
        "1": "/**",
        "2": " * Property Editors.",
        "3": " */",
        "4": "package com.mycompany.myapp.web.propertyeditors;"
      },
      "id": 95978990,
      "filename": "package-info.java"
    },
    {
      "repo": "https://github.com/ghais/store.hbase.git",
      "language": "Java",
      "linescount": 63,
      "location": "/src/test/java/org/datanucleus/test/models",
      "name": "store.hbase",
      "url": "https://searchcode.com/codesearch/view/110500147/",
      "md5hash": "f070db4b4d06756d367fc836e727902d",
      "lines": {
        "1": "/**",
        "2": " * Property of Digi-Net Technologies, Inc. "
      },
      "id": 110500147,
      "filename": "JDOHasSerializable.java"
    },
    {
      "repo": "https://bitbucket.org/akademy/photoss",
      "language": "Java",
      "linescount": 67,
      "location": "/NetBeans/PhotoSS/src/PhotoSS/uk/co/akademy/PhotoShow",
      "name": "photoss",
      "url": "https://searchcode.com/codesearch/view/119720080/",
      "md5hash": "ec789b7f146f54bee59252b93737f508",
      "lines": {
        "32": "\tpublic void setProperty( String prop, String value )",
        "1": "/**",
        "2": " * Property helper class",
        "33": "\t{\t\t",
        "34": "\t\t_properties.setProperty( prop, value );",
        "17": " */",
        "18": "public class PropertyFetcher",
        "21": "    ",
        "22": "    public PropertyFetcher()",
        "26": "    ",
        "27": "\tpublic String getProperty( String prop )",
        "28": "\t{\t\t",
        "29": "\t\treturn _properties.getProperty( prop );",
        "31": "\t"
      },
      "id": 119720080,
      "filename": "PropertyFetcher.java"
    },
    {
      "repo": "https://bitbucket.org/heila/starlight.git",
      "language": "Java",
      "linescount": 569,
      "location": "/code/Starlight/src/com/vdm/starlight/client/editor",
      "name": "starlight",
      "url": "https://searchcode.com/codesearch/view/39114962/",
      "md5hash": "a118877e1803da36ff30ce4a1f6144a3",
      "lines": {
        "64": "\tprivate Property(int id, String name, String description) {",
        "304": "\tpublic static HorizontalPanel getNumberWidget(final Property property, String value, ImageResource image) {",
        "36": "",
        "37": "public enum Property {",
        "171": "",
        "172": "\t\tpublic TextDialog(String value, final Property p) {",
        "207": "\t\t\t\t\tif (text.length() > 0) { // if text was entered",
        "208": "\t\t\t\t\t\tif (p.equals(Property.List)) { // Parse into list",
        "209": "\t\t\t\t\t\t\tfor (Widget s : widgets) {",
        "303": "",
        "55": "",
        "56": "\tpublic static PropertyImages images = GWT.create(PropertyImages.class);",
        "31": "import com.vdm.starlight.client.editor.images.PropertyImages;",
        "30": "import com.vdm.starlight.client.DatabaseServiceAsync;",
        "63": ""
      },
      "id": 39114962,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_external_eclipse-windowbuilder.git",
      "language": "Java",
      "linescount": 233,
      "location": "/propertysheet/src/org/eclipse/wb/internal/core/model/property",
      "name": "android_external_eclipse-windowbuilder",
      "url": "https://searchcode.com/codesearch/view/40473046/",
      "md5hash": "5d0dfb08a7329b31047a1b10eeda39fa",
      "lines": {
        "43": "  protected final PropertyEditor m_editor;",
        "10": " *******************************************************************************/",
        "11": "package org.eclipse.wb.internal.core.model.property;",
        "14": "",
        "15": "import org.eclipse.wb.internal.core.model.property.category.PropertyCategory;",
        "16": "import org.eclipse.wb.internal.core.model.property.editor.PropertyEditor;",
        "17": "",
        "42": "  ////////////////////////////////////////////////////////////////////////////",
        "21": "/**",
        "22": " * {@link Property} is used to display/change properties of ObjectInfo's.",
        "24": " * @author scheglov_ke",
        "25": " * @coverage core.model.property",
        "26": " */",
        "27": "public abstract class Property {",
        "28": "  /**",
        "29": "   * The value that should be used when we don't know real value of {@link Property}. We can not use"
      },
      "id": 40473046,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/netbeans-soa.git",
      "language": "Java",
      "linescount": 933,
      "location": "/xml.wsdlui/src/org/netbeans/modules/xml/wsdl/ui/property/model",
      "name": "netbeans-soa",
      "url": "https://searchcode.com/codesearch/view/43327495/",
      "md5hash": "d602988991f56147dabb0a2966096cfe",
      "lines": {
        "67": "",
        "68": "package org.netbeans.modules.xml.wsdl.ui.property.model;",
        "69": "",
        "45": "/**",
        "46": " *  This generated bean class Property",
        "47": " *  matches the schema element 'Property'.",
        "48": " *  The root bean class is ElementProperties",
        "50": " *  ===============================================================",
        "51": " *  Property represents each attribute that would be created for the Node in the wsdleditor tree.",
        "52": " *                  It defines a way to specify customizers for attributes. ",
        "53": " *                  There are 3 types of Property customizers:",
        "54": " *                  SchemaCustomizer : The default Customizer is the SchemaCustomizer, which shows drop downs for enumerations and boolean attributes,",
        "55": " *                  and String customizer for all other types. So if there is no Property defined for a attribute, it will have ",
        "59": " *                  to implement the SPI org.netbeans.modules.xml.wsdl.ui.spi.WSDLLookupProvider, and add a implementation of ",
        "60": " *                  org.netbeans.modules.xml.wsdl.ui.spi.NewCustomizerProvider, which will provide the custom Node.Property to be shown in the ",
        "61": " *                  wsdl editor property sheet.",
        "62": " *              "
      },
      "id": 43327495,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/dyp/geotools.git",
      "language": "Java",
      "linescount": 190,
      "location": "/modules/library/opengis/src/main/java/org/opengis/feature",
      "name": "geotools",
      "url": "https://searchcode.com/codesearch/view/47138312/",
      "md5hash": "d18497c9acaf8ee5876103f949705c21",
      "lines": {
        "35": " * <p>",
        "36": " * Every property has a type. This {@link PropertyType} defines information",
        "37": " * about the property. This includes which java class the value of the property",
        "14": "import org.opengis.feature.type.Name;",
        "15": "import org.opengis.feature.type.PropertyDescriptor;",
        "16": "import org.opengis.feature.type.PropertyType;",
        "17": "",
        "18": "/**",
        "19": " * An instance of a {@link PropertyType} relised as a {@link Attribute} or {@link Association}.",
        "20": " * <p>",
        "21": " * A property is a wrapper around an arbitrary object or value. The value is",
        "24": " * <pre>",
        "25": " *  Property property = ...;",
        "27": " *  //set the value",
        "28": " *  property.setValue( &quot;foo&quot; );",
        "30": " *  //get the value",
        "31": " *  String value = (String) property.getValue();"
      },
      "id": 47138312,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 169,
      "location": "/plugins/ui-designer/src/com/intellij/uiDesigner/propertyInspector",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39376459/",
      "md5hash": "8c56910d9c23e00314cc49c2f25f30a8",
      "lines": {
        "32": "  public static final Property[] EMPTY_ARRAY=new Property[]{};",
        "33": "",
        "34": "  private static final Logger LOG = Logger.getInstance(\"#com.intellij.uiDesigner.propertyInspector.Property\");",
        "36": "  /**",
        "37": "   * Parent property",
        "38": "   */",
        "39": "  private final Property myParent;",
        "44": "",
        "45": "  public Property(final Property parent, @NotNull @NonNls final String name) {",
        "15": " */",
        "16": "package com.intellij.uiDesigner.propertyInspector;",
        "18": "import com.intellij.uiDesigner.radComponents.RadComponent;",
        "19": "import com.intellij.uiDesigner.lw.IProperty;",
        "30": " */",
        "31": "public abstract class Property<T extends RadComponent, V> implements IProperty {"
      },
      "id": 39376459,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/netbeans-soa.git",
      "language": "Java",
      "linescount": 308,
      "location": "/dm.virtual.db/src/org/netbeans/modules/dm/virtual/db/api",
      "name": "netbeans-soa",
      "url": "https://searchcode.com/codesearch/view/43334734/",
      "md5hash": "031ff1ab35b9f1cf4ba2621f3178a82e",
      "lines": {
        "66": "    private Object value;",
        "67": "    private static Logger mLogger = Logger.getLogger(Property.class.getName());",
        "68": "",
        "150": "                throw new IllegalArgumentException(NbBundle.getMessage(Property.class, \"MSG_supplied_nullValue\"));",
        "168": "            } catch (Exception ex) {",
        "169": "                throw new ClassCastException(NbBundle.getMessage(Property.class, \"MSG_type_value\") + newValClass.getName() + NbBundle.getMessage(Property.class, \"MSG_cannot_assign\"));",
        "184": "        } catch (Exception ex) {            ",
        "53": "/**",
        "54": " * Simple class to bind property key, type, current value, required flag and (optional)",
        "55": " * default value information for a key-value property.",
        "56": " * ",
        "185": "            mLogger.log(Level.INFO, NbBundle.getMessage(Property.class, \"MSG_constructor\",type,def) +ex);",
        "58": " */",
        "59": "public class Property implements Cloneable, Comparable {",
        "149": "            if ((defaultValue == null) && required) {"
      },
      "id": 43334734,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/4dmodding/pska.git",
      "language": "Java",
      "linescount": 375,
      "location": "/mcp/src/minecraft/net/minecraftforge/common",
      "name": "pska",
      "url": "https://searchcode.com/codesearch/view/49270599/",
      "md5hash": "f7c6e1a2f3d0da6b151cc0c798a118d1",
      "lines": {
        "163": "    /**",
        "164": "     * Checks if the current value held by this property is a valid double value.",
        "134": "    /**",
        "135": "     * Returns the value in this property as a boolean,",
        "9": "",
        "10": "import net.minecraftforge.common.Property.Type;",
        "11": "",
        "12": "public class Property",
        "50": "",
        "51": "    public Property()",
        "180": "    /**",
        "181": "     * Returns the value in this property as a double,",
        "57": "",
        "58": "    public Property(String name, String value, Type type)",
        "155": "     * Checks if the current value held by this property is a valid boolean value.",
        "154": "    /**"
      },
      "id": 49270599,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/nevo/jade.git",
      "language": "Java",
      "linescount": 131,
      "location": "/src/jade/domain/FIPAAgentManagement",
      "name": "jade",
      "url": "https://searchcode.com/codesearch/view/36711546/",
      "md5hash": "0864e4bdac5e9d30ec9500c3835870fa",
      "lines": {
        "32": " This class implements the <code>property</code> type, a pair of a",
        "37": " */",
        "38": "public class Property implements Concept {",
        "46": "\t */",
        "47": "\tpublic Property() {",
        "50": "\t/**",
        "51": "       Create a property object, with the given name and value pair.",
        "52": "       @param name The name of the property.",
        "53": "       @param value The Java object associated with the given name.",
        "54": "\t */",
        "55": "\tpublic Property(String name, Object value) {",
        "60": "\t/**",
        "61": "       Set the name of the property object.",
        "62": "       @param n The new name for this property.",
        "31": "/** "
      },
      "id": 36711546,
      "filename": "Property.java"
    },
    {
      "repo": "https://bitbucket.org/seandroid/frameworks-base.git",
      "language": "Java",
      "linescount": 107,
      "location": "/core/java/android/util",
      "name": "frameworks-base",
      "url": "https://searchcode.com/codesearch/view/37047469/",
      "md5hash": "4d4ee805325631577f0849518bbfd3f6",
      "lines": {
        "33": "    /**",
        "34": "     * This factory method creates and returns a Property given the <code>class</code> and",
        "46": "     * <p>If either of the get/is method alternatives is found on the class, but an appropriate",
        "47": "     * <code>setName()</code> method is not found, the <code>Property</code> will be",
        "48": "     * {@link #isReadOnly() readOnly}. Calling the {@link #set(Object, Object)} method on such",
        "49": "     * a property is allowed, but will have no effect.</p>",
        "19": "/**",
        "20": " * A property is an abstraction that can be used to represent a <emb>mutable</em> value that is held",
        "21": " * in a <em>host</em> object. The Property's {@link #set(Object, Object)} or {@link #get(Object)}",
        "22": " * methods can be implemented in terms of the private fields of the host object, or via \"setter\" and",
        "24": " *",
        "25": " * @param <T> The class on which the property is declared.",
        "26": " * @param <V> The type that this property represents.",
        "27": " */",
        "28": "public abstract class Property<T, V> {"
      },
      "id": 37047469,
      "filename": "Property.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 87687,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 80813,
      "source": "Github",
      "id": 2
    },
    {
      "count": 19446,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 3114,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1566,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1544,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 243,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 232,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 53,
      "source": "Gitorious",
      "id": 10
    }
  ]
}