{
  "matchterm": "POILogger",
  "previouspage": null,
  "searchterm": "POILogger",
  "query": "POILogger",
  "language_filters": [
    {
      "count": 59,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 59,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 718,
      "location": "/components/forks/poi/src/loci/poi/util",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642655/",
      "md5hash": "9483ffd2f362c2befd0cbb1c396549e2",
      "lines": {
        "67": "     * package scope so it cannot be instantiated outside of the util",
        "68": "     * package. You need a POILogger? Go to the POILogFactory for one",
        "70": "     */",
        "71": "    POILogger()",
        "56": "",
        "57": "public abstract class POILogger",
        "715": "                                 ",
        "716": "}   // end package scope abstract class POILogger"
      },
      "id": 15642655,
      "filename": "POILogger.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 684,
      "location": "/src/org/apache/poi/util",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97383536/",
      "md5hash": "6733c7ad687623ef99d9d66573796382",
      "lines": {
        "32": " */",
        "33": "public abstract class POILogger {",
        "50": "     */",
        "51": "    POILogger() {",
        "48": "     * package scope so it cannot be instantiated outside of the util",
        "49": "     * package. You need a POILogger? Go to the POILogFactory for one"
      },
      "id": 97383536,
      "filename": "POILogger.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 3300,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642365/",
      "md5hash": "1e8d548d196dc1063c30d9430b35b9f5",
      "lines": {
        "420": "    {",
        "421": "        if (log.check( POILogger.DEBUG ))",
        "422": "            log.log(POILogger.DEBUG,",
        "423": "                    \"Sheet createSheet (exisiting file) assumed offset 0\");",
        "171": "                bofEofNestingLevel++;",
        "172": "                if (log.check( POILogger.DEBUG ))",
        "173": "                    log.log(POILogger.DEBUG, \"Hit BOF record. Nesting increased to \" + bofEofNestingLevel);",
        "174": "            }",
        "177": "                --bofEofNestingLevel;",
        "178": "                if (log.check( POILogger.DEBUG ))",
        "179": "                    log.log(POILogger.DEBUG, \"Hit EOF record. Nesting decreased to \" + bofEofNestingLevel);",
        "154": "    {",
        "155": "        if (log.check( POILogger.DEBUG ))",
        "156": "            log.logFormatted(POILogger.DEBUG,",
        "157": "                    \"Sheet createSheet (existing file) with %\","
      },
      "id": 15642365,
      "filename": "Sheet.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 2351,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642358/",
      "md5hash": "2f47d8e4aa73ffbba0d056d2a6f68eee",
      "lines": {
        "130": "",
        "131": "    private static POILogger   log = POILogFactory.getLogger(Workbook.class);",
        "164": "                if (log.check( POILogger.DEBUG ))",
        "177": "                case SSTRecord.sid :",
        "170": "                case BoundSheetRecord.sid :",
        "171": "                    if (log.check( POILogger.DEBUG ))",
        "48": "import loci.poi.util.POILogFactory;",
        "49": "import loci.poi.util.POILogger;",
        "178": "                    if (log.check( POILogger.DEBUG ))",
        "163": "                records.add(rec);",
        "183": "                case FontRecord.sid :",
        "152": "    public static Workbook createWorkbook(List recs) {",
        "153": "        if (log.check( POILogger.DEBUG ))",
        "184": "                    if (log.check( POILogger.DEBUG ))",
        "190": "                case ExtendedFormatRecord.sid :",
        "191": "                    if (log.check( POILogger.DEBUG ))"
      },
      "id": 15642358,
      "filename": "Workbook.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 531,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642323/",
      "md5hash": "90bc5f20331e7dcb9050bcbf7dd0d9c3",
      "lines": {
        "160": "    }",
        "163": "    {",
        "164": "        if (logger.check( POILogger.WARN ))",
        "165": "            logger.log(POILogger.WARN,\"copyArea not supported\");",
        "166": "    }",
        "43": "import loci.poi.util.POILogFactory;",
        "44": "import loci.poi.util.POILogger;",
        "275": "    {",
        "276": "        if (logger.check( POILogger.WARN ))",
        "277": "            logger.log(POILogger.WARN,\"drawPolyline not supported\");",
        "278": "    }",
        "281": "    {",
        "282": "        if (logger.check( POILogger.WARN ))",
        "157": "    {",
        "158": "        if (logger.check( POILogger.WARN ))",
        "159": "            logger.log(POILogger.WARN,\"clipRect not supported\");"
      },
      "id": 15642323,
      "filename": "EscherGraphics.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1774,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/model",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394403/",
      "md5hash": "c1eed61b5e85ccbd507d7e9acd97a919",
      "lines": {
        "35": "import org.apache.poi.hslf.exceptions.HSLFException;",
        "36": "import org.apache.poi.util.POILogger;",
        "1348": "        log.log(POILogger.WARN, \"Not implemented\");",
        "649": "                             ImageObserver observer){",
        "650": "        log.log(POILogger.WARN, \"Not implemented\");",
        "45": "",
        "1038": "    public void setClip(Shape clip) {",
        "1039": "        log.log(POILogger.WARN, \"Not implemented\");",
        "816": "        log.log(POILogger.WARN, \"Not implemented\");",
        "1592": "        log.log(POILogger.WARN, \"Not implemented\");",
        "1347": "    public Composite getComposite(){",
        "46": "    protected POILogger log = POILogFactory.getLogger(this.getClass());",
        "1591": "     public boolean drawImage(Image img, AffineTransform xform, ImageObserver obs) {",
        "1336": "    public void setComposite(Composite comp){",
        "1337": "        log.log(POILogger.WARN, \"Not implemented\");",
        "815": "                             ImageObserver observer){"
      },
      "id": 97394403,
      "filename": "PPGraphics2D.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 635,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642327/",
      "md5hash": "3992ca0664b8dfcbb274eac5ed29285e",
      "lines": {
        "579": "//    {",
        "580": "//        logger.log(POILogger.WARN,\"transformImage() not supported\");",
        "199": "    {",
        "200": "        if (logger.check( POILogger.WARN ))",
        "201": "            logger.log(POILogger.WARN,\"drawImage() not supported\");",
        "42": "import loci.poi.util.POILogFactory;",
        "43": "import loci.poi.util.POILogger;",
        "207": "    {",
        "208": "        if (logger.check( POILogger.WARN ))",
        "209": "            logger.log(POILogger.WARN,\"drawImage() not supported\");",
        "573": "//    {",
        "180": "        {",
        "181": "            if (logger.check(POILogger.WARN))",
        "182": "                logger.log(POILogger.WARN, \"draw not fully supported\");",
        "183": "        }",
        "202": "        return true;",
        "574": "//        logger.log(POILogger.WARN,\"transformImage() not supported\");"
      },
      "id": 15642327,
      "filename": "EscherGraphics2d.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 612,
      "location": "/ppt/poi/org/apache/poi/hssf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97401504/",
      "md5hash": "62e15ade5342d1b79ba29319ce48d052",
      "lines": {
        "160": "        }",
        "550": "//    {",
        "551": "//        logger.log(POILogger.WARN,\"transformImage() not supported\");",
        "556": "//    {",
        "557": "//        logger.log(POILogger.WARN,\"transformImage() not supported\");",
        "176": "    {",
        "177": "        if (logger.check( POILogger.WARN ))",
        "178": "            logger.log(POILogger.WARN,\"drawImage() not supported\");",
        "179": "        return true;",
        "20": "import org.apache.poi.util.POILogFactory;",
        "21": "import org.apache.poi.util.POILogger;",
        "184": "    {",
        "185": "        if (logger.check( POILogger.WARN ))",
        "186": "            logger.log(POILogger.WARN,\"drawImage() not supported\");",
        "157": "        {",
        "158": "            if (logger.check(POILogger.WARN))",
        "159": "                logger.log(POILogger.WARN, \"draw not fully supported\");"
      },
      "id": 97401504,
      "filename": "EscherGraphics2d.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 1219,
      "location": "/src/org/apache/poi/hwpf/converter",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97383976/",
      "md5hash": "a222c0be0731737a174a7721c959c7e2",
      "lines": {
        "452": "            {",
        "453": "                logger.log( POILogger.WARN, \"Latest structure in \", range,",
        "678": "        }",
        "679": "        logger.log( POILogger.WARN, debug );",
        "712": "        {",
        "713": "            logger.log( POILogger.WARN,",
        "174": "",
        "175": "    private POILogger log = POILogFactory.getLogger( getClass() );",
        "904": "",
        "818": "            {",
        "819": "                logger.log( POILogger.WARN, parentRange + \" contains \" + field",
        "53": "import org.apache.poi.util.POILogFactory;",
        "54": "import org.apache.poi.util.POILogger;",
        "905": "        logger.log( POILogger.WARN, parentRange + \" contains \" + field",
        "1028": "        {",
        "1029": "            logger.log( POILogger.WARN,"
      },
      "id": 97383976,
      "filename": "AbstractWordConverter.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 132,
      "location": "/ppt/poi/org/apache/poi/util",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97399957/",
      "md5hash": "fec4de1d768a33c0d041b1301f59c457",
      "lines": {
        "64": "     * @return a POILogger for the specified class",
        "66": "",
        "67": "    public static POILogger getLogger(final Class theclass)",
        "36": "    /**",
        "37": "     * Map of POILogger instances, with classes as keys",
        "38": "     */",
        "39": "    private static Map<String,POILogger> _loggers = new HashMap<String,POILogger>();;",
        "76": "     *",
        "44": "     */",
        "45": "    private static POILogger _nullLogger = new NullLogger();",
        "77": "     * @return a POILogger for the specified class",
        "80": "    public static POILogger getLogger(final String cat)",
        "81": "    {",
        "79": "",
        "63": "     *"
      },
      "id": 97399957,
      "filename": "POILogFactory.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 129,
      "location": "/pptx/src/org/apache/poi/util",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406181/",
      "md5hash": "ba492855987766cac27915d80c0c6660",
      "lines": {
        "64": "     * @return a POILogger for the specified class",
        "66": "",
        "67": "    public static POILogger getLogger(final Class theclass)",
        "36": "    /**",
        "37": "     * Map of POILogger instances, with classes as keys",
        "38": "     */",
        "39": "    private static Map<String,POILogger> _loggers = new HashMap<String,POILogger>();;",
        "76": "     *",
        "44": "     */",
        "45": "    private static POILogger _nullLogger = new NullLogger();",
        "77": "     * @return a POILogger for the specified class",
        "80": "    public static POILogger getLogger(final String cat)",
        "81": "    {",
        "79": "",
        "63": "     *"
      },
      "id": 97406181,
      "filename": "POILogFactory.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 119,
      "location": "/components/forks/poi/src/loci/poi/util",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642665/",
      "md5hash": "40e81dab87dd457971f17a1edd3ed9c1",
      "lines": {
        "96": "        {",
        "97": "            logger = ( POILogger ) _loggers.get(cat);",
        "101": "            try{",
        "102": "              String loggerClassName = System.getProperty(\"loci.poi.util.POILogger\");",
        "103": "              Class loggerClass = Class.forName(loggerClassName);",
        "104": "              logger = ( POILogger ) loggerClass.newInstance();",
        "74": "     *",
        "75": "     * @return a POILogger for the specified class",
        "77": "",
        "78": "    public static POILogger getLogger(final Class theclass)",
        "87": "     *",
        "88": "     * @return a POILogger for the specified class",
        "90": "",
        "91": "    public static POILogger getLogger(final String cat)",
        "92": "    {",
        "93": "        POILogger logger = null;"
      },
      "id": 15642665,
      "filename": "POILogFactory.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 275,
      "location": "/src/org/apache/poi",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97383067/",
      "md5hash": "afa24f033acdbeef13a37ab141698759",
      "lines": {
        "129": "\t\t} else if(ps != null) {",
        "130": "\t\t\tlogger.log(POILogger.WARN, \"DocumentSummaryInformation property set came back with wrong class - \", ps.getClass());",
        "227": "\t\t\tlogger.log(POILogger.INFO, \"Wrote property set \" + name + \" of size \" + data.length);",
        "228": "\t\t} catch(org.apache.poi.hpsf.WritingNotSupportedException wnse) {",
        "229": "\t\t\tlogger.log( POILogger.ERROR, \"Couldn't write property set with name \" + name + \" as not supported by HPSF yet\");",
        "39": "import org.apache.poi.util.POILogFactory;",
        "40": "import org.apache.poi.util.POILogger;",
        "169": "\t      logger.log(POILogger.WARN, \"Error creating property set with name \" + setName + \"\\n\" + ie);",
        "138": "\t\t\tlogger.log(POILogger.WARN, \"SummaryInformation property set came back with wrong class - \", ps.getClass());",
        "171": "\t      // Oh well, doesn't exist",
        "172": "\t      logger.log(POILogger.WARN, \"Error creating property set with name \" + setName + \"\\n\" + he);",
        "226": "",
        "168": "\t      // Must be corrupt or something like that",
        "137": "\t\t} else if(ps != null) {",
        "57": "\t/** For our own logging use */",
        "58": "\tprivate final static POILogger logger = POILogFactory.getLogger(POIDocument.class);"
      },
      "id": 97383067,
      "filename": "POIDocument.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1489,
      "location": "/pptx/src/org/apache/poi/openxml4j/opc",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406292/",
      "md5hash": "47fc882bc196bd395e952d6ada656cd9",
      "lines": {
        "640": "\t\t\t\t\t   logger.log(POILogger.WARN, \"OPC Compliance error [M4.1]: \" +",
        "992": "\t\t} catch (InvalidFormatException e) {",
        "993": "\t\t\tlogger.log(POILogger.WARN, \"An exception occurs while deleting part '\"",
        "68": "\t */",
        "69": "    private static POILogger logger = POILogFactory.getLogger(OPCPackage.class);",
        "358": "\t\tif (this.packageAccess == PackageAccess.READ) {",
        "359": "\t\t\tlogger.log(POILogger.WARN, ",
        "1266": "\t\t} catch (InvalidFormatException e) {",
        "1267": "\t\t\tlogger.log(POILogger.WARN, \"The specified content type is not valid: '\"",
        "54": "import org.apache.poi.openxml4j.util.Nullable;",
        "55": "import org.apache.poi.util.POILogger;",
        "664": "\t\t\t\t\t} catch (IOException ioe) {",
        "665": "\t\t\t\t\t\tlogger.log(POILogger.WARN, \"Unmarshall operation : IOException for \"",
        "891": "\t\t\t\tlogger",
        "892": "\t\t\t\t\t\t.log(POILogger.ERROR, \"Part name URI '\"",
        "639": "\t\t\t\t\t} else {"
      },
      "id": 97406292,
      "filename": "OPCPackage.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1082,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394959/",
      "md5hash": "5d80afff23c354813b0c27bde8e947ac",
      "lines": {
        "384": "\t\t\t\t} else {",
        "385": "\t\t\t\t\tlogger.log(POILogger.ERROR, \"A Slide SlideAtomSet at \" + i",
        "356": "\t\t\t\t} else {",
        "357": "\t\t\t\t\tlogger.log(POILogger.ERROR, \"A Notes SlideAtomSet at \" + i",
        "416": "\t\t\t\t\tlogger.log(POILogger.ERROR, \"Notes not found for noteId=\" + noteId);",
        "41": "import org.apache.poi.util.POILogFactory;",
        "42": "import org.apache.poi.util.POILogger;",
        "779": "\t\tptr.addSlideLookup(sp.getRefID(), slideOffset);",
        "780": "\t\tlogger.log(POILogger.INFO, \"New slide ended up at \" + slideOffset);",
        "82": "\t// For logging",
        "83": "\tprivate POILogger logger = POILogFactory.getLogger(this.getClass());",
        "729": "\t\t_slides = s;",
        "730": "\t\tlogger.log(POILogger.INFO, \"Added slide \" + _slides.length + \" with ref \" + sp.getRefID()",
        "252": "\t\t}",
        "253": "\t\tlogger.log(POILogger.ERROR,",
        "415": "\t\t\t\telse"
      },
      "id": 97394959,
      "filename": "SlideShow.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 1445,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642316/",
      "md5hash": "4f7b036daf89776dc4ee4606b7972144",
      "lines": {
        "91": "{",
        "92": "    private static final int DEBUG = POILogger.DEBUG;",
        "987": "        if (log.check( POILogger.DEBUG ))",
        "335": "         }",
        "336": "         if (log.check( POILogger.DEBUG ))",
        "337": "             log.log(POILogger.DEBUG, \"convertLabelRecords exit\");",
        "338": "     }",
        "149": "",
        "150": "    private static POILogger log = POILogFactory.getLogger(HSSFWorkbook.class);",
        "313": "     {",
        "314": "         if (log.check( POILogger.DEBUG ))",
        "315": "             log.log(POILogger.DEBUG, \"convertLabelRecords called\");",
        "316": "         for (int k = offset; k < records.size(); k++)",
        "986": "    {"
      },
      "id": 15642316,
      "filename": "HSSFWorkbook.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 1607,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642322/",
      "md5hash": "5084cc24e46752bd3911d5d0a983e0a6",
      "lines": {
        "194": "                cval = sheet.getNextValueRecord();",
        "195": "                if (log.check( POILogger.DEBUG ))",
        "113": "    private int lastrow;",
        "203": "        }",
        "204": "        if (log.check( POILogger.DEBUG ))",
        "114": "    private static POILogger log = POILogFactory.getLogger(HSSFSheet.class);",
        "174": "        if (log.check( POILogger.DEBUG ))",
        "173": "",
        "81": "{",
        "82": "    private static final int DEBUG = POILogger.DEBUG;",
        "53": "import loci.poi.util.POILogFactory;",
        "54": "import loci.poi.util.POILogger;",
        "190": "                lastrow = hrow;",
        "191": "                if (log.check( POILogger.DEBUG ))"
      },
      "id": 15642322,
      "filename": "HSSFSheet.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 760,
      "location": "/src/org/apache/poi/hwpf/sprm",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384370/",
      "md5hash": "ad7ef563bd5c85239b2ca09f401501f5",
      "lines": {
        "32": "import org.apache.poi.util.POILogger;",
        "144": "            logger.log( POILogger.ERROR,",
        "36": "{",
        "37": "    private static final POILogger logger = POILogFactory",
        "714": "      default:",
        "715": "          logger.log( POILogger.DEBUG, \"Unknown CHP sprm ignored: \" + sprm );",
        "143": "        {",
        "80": "            {",
        "81": "                logger.log( POILogger.ERROR, \"Unable to apply all style \",",
        "114": "                {",
        "115": "                    logger.log( POILogger.WARN,",
        "31": "import org.apache.poi.util.POILogFactory;",
        "94": "        {",
        "95": "            logger.log( POILogger.ERROR,"
      },
      "id": 97384370,
      "filename": "CharacterSprmUncompressor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 688,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394255/",
      "md5hash": "40d5716cbdc5b9b544fff845bb8e0c6f",
      "lines": {
        "448": "\t\t\t\t} catch(IllegalArgumentException e) {",
        "449": "\t\t\t\t\tlogger.log(POILogger.ERROR, \"Problem reading picture: \" + e + \"\\nYou document will probably become corrupted if you save it!\");",
        "322": "\t\t} catch(IOException ie) {",
        "323": "\t\t\tlogger.log(POILogger.ERROR, \"Error finding Current User Atom:\\n\" + ie);",
        "391": "\t\t\tif(type == 0) {",
        "392": "\t\t\t\tlogger.log(POILogger.ERROR, \"Problem reading picture: Invalid image type 0, on picture with length \" + imgsize + \".\\nYou document will probably become corrupted if you save it!\");",
        "393": "\t\t\t\tlogger.log(POILogger.ERROR, \"\" + pos);",
        "74": "\t// For logging",
        "75": "    private POILogger logger = POILogFactory.getLogger(this.getClass());",
        "54": "import org.apache.poi.util.POILogFactory;",
        "55": "import org.apache.poi.util.POILogger;",
        "394": "\t\t\t} else {"
      },
      "id": 97394255,
      "filename": "HSLFSlideShow.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 244,
      "location": "/components/forks/poi/src/loci/poi",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642236/",
      "md5hash": "d16ea92e13b3c1846cc34e8c5e120339",
      "lines": {
        "128": "\t\t\tlogger.log(POILogger.WARN, \"Error creating property set with name \" + setName + \"\\n\" + he);",
        "114": "\t\t\t// Oh well, doesn't exist",
        "115": "\t\t\tlogger.log(POILogger.WARN, \"Error getting property set with name \" + setName + \"\\n\" + ie);",
        "174": "",
        "175": "\t\t\tlogger.log(POILogger.INFO, \"Wrote property set \" + name + \" of size \" + data.length);",
        "127": "\t\t\t// Oh well, doesn't exist",
        "124": "\t\t\t// Must be corrupt or something like that",
        "125": "\t\t\tlogger.log(POILogger.WARN, \"Error creating property set with name \" + setName + \"\\n\" + ie);",
        "78": "\t/** For our own logging use */",
        "79": "\tprotected POILogger logger = POILogFactory.getLogger(this.getClass());"
      },
      "id": 15642236,
      "filename": "POIDocument.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 56,
      "source": "Github",
      "id": 2
    },
    {
      "count": 3,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}