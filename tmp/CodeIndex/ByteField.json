{
  "matchterm": "ByteField",
  "previouspage": null,
  "searchterm": "ByteField",
  "query": "ByteField",
  "language_filters": [
    {
      "count": 268,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 268,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 244,
      "location": "/components/forks/poi/src/loci/poi/util",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642654/",
      "md5hash": "4ab855776cb20854e7eea02a313d89e7",
      "lines": {
        "160": "     * set the ByteField's current value and write it to a byte array",
        "129": "",
        "130": "    public ByteField(final int offset, final byte value, final byte [] data)",
        "70": "",
        "71": "    public ByteField(final int offset)",
        "137": "    /**",
        "138": "     * get the ByteField's current value",
        "77": "    /**",
        "78": "     * construct the ByteField with its offset into its containing",
        "148": "    /**",
        "149": "     * set the ByteField's current value",
        "54": "",
        "55": "public class ByteField",
        "159": "    /**",
        "62": "    /**",
        "63": "     * construct the ByteField with its offset into its containing"
      },
      "id": 15642654,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/xiaoqiangnk/hotspot-mips",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "hotspot-mips",
      "url": "https://searchcode.com/codesearch/view/118290461/",
      "md5hash": "946686cc390be812a610d023ffc49a47",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ByteField(sun.jvm.hotspot.types.JByteField vmField, long startOffset) {",
        "38": "",
        "39": "  public ByteField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a byte field simply provides access to the value.",
        "30": "public class ByteField extends Field {",
        "31": "  public ByteField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 118290461,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/luchsh/openjdk8-hotspot",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "openjdk8-hotspot",
      "url": "https://searchcode.com/codesearch/view/125202929/",
      "md5hash": "ace97d3164573a348991cc60ca07c241",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ByteField(sun.jvm.hotspot.types.JByteField vmField, long startOffset) {",
        "38": "",
        "39": "  public ByteField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a byte field simply provides access to the value.",
        "30": "public class ByteField extends Field {",
        "31": "  public ByteField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 125202929,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/hamishm/haiku-jdk-hotspot",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "haiku-jdk-hotspot",
      "url": "https://searchcode.com/codesearch/view/127217452/",
      "md5hash": "ace97d3164573a348991cc60ca07c241",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ByteField(sun.jvm.hotspot.types.JByteField vmField, long startOffset) {",
        "38": "",
        "39": "  public ByteField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a byte field simply provides access to the value.",
        "30": "public class ByteField extends Field {",
        "31": "  public ByteField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 127217452,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/jaroslav/hotspot",
      "language": "Java",
      "linescount": 50,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "hotspot",
      "url": "https://searchcode.com/codesearch/view/133432919/",
      "md5hash": "b953f84982fba2bddd50c4f95433336a",
      "lines": {
        "32": "  public ByteField(FieldIdentifier id, long offset, boolean isVMField) {",
        "33": "    super(id, offset, isVMField);",
        "35": "",
        "36": "  public ByteField(sun.jvm.hotspot.types.JByteField vmField, long startOffset) {",
        "39": "",
        "40": "  public ByteField(InstanceKlass holder, int fieldArrayIndex) {",
        "30": "// The class for a byte field simply provides access to the value.",
        "31": "public class ByteField extends Field {"
      },
      "id": 133432919,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/touwolf/bridje",
      "language": "Java",
      "linescount": 50,
      "location": "/apis/bridje-dm/src/main/java/com/touwolf/bridje/dm",
      "name": "bridje",
      "url": "https://searchcode.com/codesearch/view/92135621/",
      "md5hash": "0de47c06c9ab3687b1122ec1ba09203c",
      "lines": {
        "12": "@XmlAccessorType(XmlAccessType.FIELD)",
        "13": "public class ByteField extends AbstractNumericField"
      },
      "id": 92135621,
      "filename": "ByteField.java"
    },
    {
      "repo": "git://github.com/apache/lucene-solr.git",
      "language": "Java",
      "linescount": 99,
      "location": "/solr/core/src/java/org/apache/solr/schema",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/3019290/",
      "md5hash": "de5b5daa877c8e758ee4658672d96bbd",
      "lines": {
        "48": " */",
        "49": "public class ByteField extends PrimitiveFieldType {",
        "66": "    return new ByteFieldSource(field.name);",
        "19": "import org.apache.lucene.queries.function.ValueSource;",
        "20": "import org.apache.lucene.queries.function.valuesource.ByteFieldSource;",
        "65": "    field.checkFieldCacheSource(qparser);"
      },
      "id": 3019290,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://bitbucket.org/azinman/konbit",
      "language": "Java",
      "linescount": 81,
      "location": "/solr/src/java/org/apache/solr/schema",
      "name": "konbit",
      "url": "https://searchcode.com/codesearch/view/54928237/",
      "md5hash": "371d6773b6efe5021ba881c4c16ca490",
      "lines": {
        "32": " */",
        "33": "public class ByteField extends FieldType {",
        "24": "import org.apache.solr.search.function.ValueSource;",
        "25": "import org.apache.solr.search.function.ByteFieldSource;",
        "43": "  public ValueSource getValueSource(SchemaField field) {",
        "44": "    return new ByteFieldSource(field.name);"
      },
      "id": 54928237,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://github.com/safrain/oPool.git",
      "language": "Java",
      "linescount": 17,
      "location": "/PulsarCraft/src/main/java/safrain/nodelet/structure/fieldsetter",
      "name": "oPool",
      "url": "https://searchcode.com/codesearch/view/67140349/",
      "md5hash": "beb96be77a11c2d3f08bf01119339a1b",
      "lines": {
        "2": "",
        "3": "public class ByteField extends AbstractValueField {"
      },
      "id": 67140349,
      "filename": "ByteField.java"
    },
    {
      "repo": "https://github.com/ClarenceAu/kryo.git",
      "language": "Java",
      "linescount": 742,
      "location": "/test/com/esotericsoftware/kryo",
      "name": "kryo",
      "url": "https://searchcode.com/codesearch/view/71550005/",
      "md5hash": "b3ac1fcd54511479ae8d65e446b9e8a7",
      "lines": {
        "33": "\t\ttest.BooleanField = true;",
        "34": "\t\ttest.ByteField = -12;",
        "99": "\t\ttest.booleanField = true;",
        "100": "\t\ttest.byteField = 123;",
        "396": "\t\t\t} else if (!BooleanField.equals(other.BooleanField)) return false;",
        "107": "\t\ttest.BooleanField = true;",
        "108": "\t\ttest.ByteField = -12;",
        "365": "\t\tpublic boolean booleanField;",
        "366": "\t\tpublic byte byteField;",
        "397": "\t\t\tif (ByteField == null) {",
        "434": "",
        "435": "\t\t\tif (byteField != other.byteField) return false;",
        "398": "\t\t\t\tif (other.ByteField != null) return false;",
        "374": "\t\tpublic Boolean BooleanField;",
        "375": "\t\tpublic Byte ByteField;",
        "399": "\t\t\t} else if (!ByteField.equals(other.ByteField)) return false;"
      },
      "id": 71550005,
      "filename": "FieldSerializerTest.java"
    },
    {
      "repo": "https://github.com/DerTeufel/android_libcore.git",
      "language": "Java",
      "linescount": 2158,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/82997100/",
      "md5hash": "e7795f1e2ae30f2e2f8ee4ae78b7c03f",
      "lines": {
        "512": "            fieldName = \"byteField\";",
        "513": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "514": "",
        "778": "        try {",
        "779": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "813": "        try {",
        "814": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "111": "",
        "112": "        protected byte byteField = Byte.MAX_VALUE;",
        "497": "        Field booleanField = null;",
        "498": "        Field byteField = null;",
        "1524": "        try {",
        "565": "        char types[] = { 'L', 'B', 'S', 'C', 'I', 'J', 'F', 'D' };",
        "566": "        Field fields[] = { objectField, byteField, shortField, charField,",
        "1525": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "511": ""
      },
      "id": 82997100,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://github.com/soulsheng/struts2.git",
      "language": "Java",
      "linescount": 152,
      "location": "/plugins/json/src/test/java/org/apache/struts2/json",
      "name": "struts2",
      "url": "https://searchcode.com/codesearch/view/73139431/",
      "md5hash": "b1402d1761923c4a91d5cbf1848d9512",
      "lines": {
        "34": "    private Object objectField;",
        "35": "    private byte byteField;",
        "41": "    /**",
        "42": "     * @return the byteField",
        "43": "     */",
        "44": "    public byte getByteField() {",
        "45": "        return this.byteField;",
        "46": "    }",
        "48": "    /**",
        "49": "     * @param byteField",
        "50": "     *            the byteField to set",
        "51": "     */",
        "52": "    public void setByteField(byte byteField) {",
        "53": "        this.byteField = byteField;",
        "54": "    }"
      },
      "id": 73139431,
      "filename": "Bean.java"
    },
    {
      "repo": "https://github.com/LiviaH/lombok.git",
      "language": "Java",
      "linescount": 168,
      "location": "/parent/test/src/test/resources/transform/after-ecj",
      "name": "lombok",
      "url": "https://searchcode.com/codesearch/view/74562463/",
      "md5hash": "b2eee868d3048e4af35f36cb0fc54874",
      "lines": {
        "32": "    java.util.concurrent.atomic.AtomicReference<java.lang.Byte> value = this.byteField.get();",
        "33": "    if ((value == null))",
        "2": "  private final @lombok.Getter(lazy = true) java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Boolean>> booleanField = new java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Boolean>>();",
        "3": "  private final @lombok.Getter(lazy = true) java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Byte>> byteField = new java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Byte>>();",
        "36": "            {",
        "37": "              value = this.byteField.get();",
        "41": "                    value = new java.util.concurrent.atomic.AtomicReference<java.lang.Byte>(actualValue);",
        "42": "                    this.byteField.set(value);",
        "34": "        {",
        "35": "          synchronized (this.byteField)",
        "30": "  }",
        "31": "  public @java.lang.SuppressWarnings(\"all\") byte getByteField() {"
      },
      "id": 74562463,
      "filename": "GetterLazyNative.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 259,
      "location": "/tests/gdx-tests/src/com/badlogic/gdx/tests",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/116100416/",
      "md5hash": "a37db3fd2a69d0b0e64311dca0b4ac00",
      "lines": {
        "32": "\t\ttest.BooleanField = true;",
        "33": "\t\ttest.ByteField = -12;",
        "162": "\t\tpublic Boolean BooleanField;",
        "163": "\t\tpublic Byte ByteField;",
        "235": "",
        "236": "\t\t\tif (byteField != other.byteField) return false;",
        "189": "\t\t\t} else if (!ByteField.equals(other.ByteField)) return false;",
        "25": "\t\ttest.byteField = 123;",
        "24": "\t\ttest.booleanField = true;",
        "153": "\t\tpublic boolean booleanField;",
        "154": "\t\tpublic byte byteField;",
        "187": "\t\t\tif (ByteField == null) {",
        "188": "\t\t\t\tif (other.ByteField != null) return false;",
        "186": "\t\t\t} else if (!BooleanField.equals(other.BooleanField)) return false;",
        "190": "\t\t\tif (CharacterField == null) {"
      },
      "id": 116100416,
      "filename": "JsonTest.java"
    },
    {
      "repo": "git://github.com/apache/avro.git",
      "language": "Java",
      "linescount": 2012,
      "location": "/lang/java/thrift/src/test/java/org/apache/avro/thrift/test",
      "name": "avro",
      "url": "https://searchcode.com/codesearch/view/3808365/",
      "md5hash": "2989f646c33005933f9ba4947fec93fa",
      "lines": {
        "258": "    setBoolFieldIsSet(true);",
        "259": "    this.byteField = byteField;",
        "260": "    setByteFieldIsSet(true);",
        "261": "    this.i16Field = i16Field;",
        "38": "  private static final org.apache.thrift.protocol.TField BOOL_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField(\"boolField\", org.apache.thrift.protocol.TType.BOOL, (short)1);",
        "39": "  private static final org.apache.thrift.protocol.TField BYTE_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField(\"byteField\", org.apache.thrift.protocol.TType.BYTE, (short)2);",
        "328": "    this.byteField = 0;",
        "327": "    setByteFieldIsSet(false);",
        "282": "    this.byteField = other.byteField;",
        "243": "    boolean boolField,",
        "244": "    byte byteField,",
        "326": "    this.boolField = false;",
        "281": "    this.boolField = other.boolField;",
        "186": "  private static final int __BOOLFIELD_ISSET_ID = 0;",
        "187": "  private static final int __BYTEFIELD_ISSET_ID = 1;",
        "61": "  private boolean boolField; // required",
        "62": "  private byte byteField; // required"
      },
      "id": 3808365,
      "filename": "Test.java"
    },
    {
      "repo": "https://bitbucket.org/generalplus/android_libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/35460570/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "1347": "        try {",
        "1348": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "645": "        try {",
        "390": "",
        "391": "            fieldName = \"byteField\";",
        "392": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "393": "",
        "106": "",
        "107": "        protected byte byteField = Byte.MAX_VALUE;",
        "1313": "        try {",
        "646": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "680": "        try {",
        "681": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "1314": "            f = x.getClass().getDeclaredField(\"byteField\");"
      },
      "id": 35460570,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://bitbucket.org/tamacjp/android_libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/37324009/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "1347": "        try {",
        "1348": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "645": "        try {",
        "390": "",
        "391": "            fieldName = \"byteField\";",
        "392": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "393": "",
        "106": "",
        "107": "        protected byte byteField = Byte.MAX_VALUE;",
        "1313": "        try {",
        "646": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "680": "        try {",
        "681": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "1314": "            f = x.getClass().getDeclaredField(\"byteField\");"
      },
      "id": 37324009,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_libcore.git",
      "language": "Java",
      "linescount": 2158,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/41531063/",
      "md5hash": "6130ea89d451c7dd3d329bf23065751a",
      "lines": {
        "512": "            fieldName = \"byteField\";",
        "513": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "514": "",
        "778": "        try {",
        "779": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "813": "        try {",
        "814": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "111": "",
        "112": "        protected byte byteField = Byte.MAX_VALUE;",
        "497": "        Field booleanField = null;",
        "498": "        Field byteField = null;",
        "1524": "        try {",
        "565": "        char types[] = { 'L', 'B', 'S', 'C', 'I', 'J', 'F', 'D' };",
        "566": "        Field fields[] = { objectField, byteField, shortField, charField,",
        "1525": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "511": ""
      },
      "id": 41531063,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "libcore",
      "url": "https://searchcode.com/codesearch/view/43778095/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "1347": "        try {",
        "1348": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "645": "        try {",
        "390": "",
        "391": "            fieldName = \"byteField\";",
        "392": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "393": "",
        "106": "",
        "107": "        protected byte byteField = Byte.MAX_VALUE;",
        "1313": "        try {",
        "646": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "680": "        try {",
        "681": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "1314": "            f = x.getClass().getDeclaredField(\"byteField\");"
      },
      "id": 43778095,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://bitbucket.org/slukk/atsmp_4.2-libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "atsmp_4.2-libcore",
      "url": "https://searchcode.com/codesearch/view/49850005/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "1347": "        try {",
        "1348": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "645": "        try {",
        "390": "",
        "391": "            fieldName = \"byteField\";",
        "392": "            byteField = fieldClass.getDeclaredField(fieldName);",
        "393": "",
        "106": "",
        "107": "        protected byte byteField = Byte.MAX_VALUE;",
        "1313": "        try {",
        "646": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "680": "        try {",
        "681": "            f = x.getClass().getDeclaredField(\"byteField\");",
        "1314": "            f = x.getClass().getDeclaredField(\"byteField\");"
      },
      "id": 49850005,
      "filename": "FieldTest.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 179,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 71,
      "source": "Github",
      "id": 2
    },
    {
      "count": 18,
      "source": "Google Code",
      "id": 1
    }
  ]
}