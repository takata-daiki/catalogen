{
  "matchterm": "DrawShape",
  "previouspage": null,
  "searchterm": "DrawShape",
  "query": "DrawShape",
  "language_filters": [
    {
      "count": 394,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 394,
  "results": [
    {
      "repo": "https://bitbucket.org/Moorkh/secondtry.git",
      "language": "Java",
      "linescount": 101,
      "location": "/src/display",
      "name": "secondtry",
      "url": "https://searchcode.com/codesearch/view/39133139/",
      "md5hash": "b75c8bfc70de1d1786e5a5b9ae787546",
      "lines": {
        "19": "\t",
        "20": "\tDrawShape()",
        "6": "",
        "7": "public class DrawShape extends Canvas",
        "28": "    {",
        "29": "        DrawShape canvas = new DrawShape();"
      },
      "id": 39133139,
      "filename": "DrawShape.java"
    },
    {
      "repo": "https://github.com/jorisvddonk/strategoids.git",
      "language": "Java",
      "linescount": 23,
      "location": "/src/strategoids/drawing",
      "name": "strategoids",
      "url": "https://searchcode.com/codesearch/view/109056372/",
      "md5hash": "8e94a8e424b129a89a1cb28ec1521ce6",
      "lines": {
        "17": "        if (gl == null) {",
        "18": "            System.err.println(\"Drawshape.drawCircle: gl is null!\");",
        "14": " */",
        "15": "public class DrawShape {"
      },
      "id": 109056372,
      "filename": "DrawShape.java"
    },
    {
      "repo": "https://github.com/mudogg/libgdx.git",
      "language": "Java",
      "linescount": 362,
      "location": "/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/73256645/",
      "md5hash": "f33b27a53b2c1b3ed91f7f63d7c547e4",
      "lines": {
        "193": "",
        "130": "\t\t\t\tif (body.isActive() == false && drawInactiveBodies)",
        "131": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_ACTIVE);",
        "132": "\t\t\t\telse if (body.getType() == BodyType.StaticBody)",
        "133": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_STATIC);",
        "134": "\t\t\t\telse if (body.getType() == BodyType.KinematicBody)",
        "135": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_KINEMATIC);",
        "136": "\t\t\t\telse if (body.isAwake() == false)",
        "137": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_AWAKE);",
        "138": "\t\t\t\telse",
        "139": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_AWAKE);",
        "194": "\tprivate void drawShape (Fixture fixture, Transform transform, Color color) {"
      },
      "id": 73256645,
      "filename": "Box2DDebugRenderer.java"
    },
    {
      "repo": "https://github.com/mudogg/libgdx.git",
      "language": "Java",
      "linescount": 360,
      "location": "/gdx/src/com/badlogic/gdx/physics/box2d",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/73263909/",
      "md5hash": "719e5f0f9e6d434b185f1a71bf134011",
      "lines": {
        "128": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_KINEMATIC);",
        "129": "\t\t\t\telse if (body.isAwake() == false)",
        "130": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_AWAKE);",
        "131": "\t\t\t\telse",
        "132": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_AWAKE);",
        "192": "\tprivate void drawShape (Fixture fixture, Transform transform, Color color) {",
        "191": "",
        "123": "\t\t\t\tif (body.isActive() == false)",
        "124": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_ACTIVE);",
        "125": "\t\t\t\telse if (body.getType() == BodyType.StaticBody)",
        "126": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_STATIC);",
        "127": "\t\t\t\telse if (body.getType() == BodyType.KinematicBody)"
      },
      "id": 73263909,
      "filename": "Box2DDebugRenderer.java"
    },
    {
      "repo": "https://github.com/shihuaxian/libgdx.git",
      "language": "Java",
      "linescount": 368,
      "location": "/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/physics/box2d",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/75881084/",
      "md5hash": "80757fa8c6dc2db3dda4c62f275dcada",
      "lines": {
        "199": "",
        "136": "\t\t\t\tif (body.isActive() == false && drawInactiveBodies)",
        "137": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_ACTIVE);",
        "138": "\t\t\t\telse if (body.getType() == BodyType.StaticBody)",
        "139": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_STATIC);",
        "140": "\t\t\t\telse if (body.getType() == BodyType.KinematicBody)",
        "141": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_KINEMATIC);",
        "142": "\t\t\t\telse if (body.isAwake() == false)",
        "143": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_AWAKE);",
        "144": "\t\t\t\telse",
        "145": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_AWAKE);",
        "200": "\tprivate void drawShape (Fixture fixture, Transform transform, Color color) {"
      },
      "id": 75881084,
      "filename": "Box2DDebugRenderer.java"
    },
    {
      "repo": "https://github.com/burakkara/libgdx.git",
      "language": "Java",
      "linescount": 350,
      "location": "/gdx/src/com/badlogic/gdx/physics/box2d",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/82560500/",
      "md5hash": "69a457f25180a4e36a5970bc02f12767",
      "lines": {
        "108": "\t\t\t\t\t\tif (body.isActive() == false)",
        "109": "\t\t\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_ACTIVE);",
        "110": "\t\t\t\t\t\telse if (body.getType() == BodyType.StaticBody)",
        "111": "\t\t\t\t\t\t\tdrawShape(fixture, transform, SHAPE_STATIC);",
        "112": "\t\t\t\t\t\telse if (body.getType() == BodyType.KinematicBody)",
        "113": "\t\t\t\t\t\t\tdrawShape(fixture, transform, SHAPE_KINEMATIC);",
        "114": "\t\t\t\t\t\telse if (body.isAwake() == false)",
        "115": "\t\t\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_AWAKE);",
        "116": "\t\t\t\t\t\telse",
        "117": "\t\t\t\t\t\t\tdrawShape(fixture, transform, SHAPE_AWAKE);",
        "189": "",
        "190": "\tprivate void drawShape (Fixture fixture, Transform transform, Color color) {"
      },
      "id": 82560500,
      "filename": "Box2DDebugRenderer.java"
    },
    {
      "repo": "https://github.com/trevwilson/CoolDraw.git",
      "language": "Java",
      "linescount": 40,
      "location": "",
      "name": "CoolDraw",
      "url": "https://searchcode.com/codesearch/view/74270969/",
      "md5hash": "cde54455ca47422643db55168e3c11f0",
      "lines": {
        "19": "\t\t\ty = event.getY();",
        "20": "\t\t\tShape drawShape = new CircleShape(x,y);",
        "21": "\t\t\tif(menuBar.getShape().equals(\"Circle\")){",
        "22": "\t\t\t\tdrawShape = new CircleShape(x,y);",
        "24": "\t\t\telse if(menuBar.getShape().equals(\"Rectangle\")){",
        "25": "\t\t\t\tdrawShape = new RectangleShape(x,y);",
        "27": "\t\t\telse if(menuBar.getShape().equals(\"Triangle\")){",
        "28": "\t\t\t\tdrawShape = new TriangleShape(x,y);",
        "29": "\t\t\t}",
        "30": "\t\t\tdrawShape.draw(menuBar.getColor(),g);"
      },
      "id": 74270969,
      "filename": "CoordinatePanel.java"
    },
    {
      "repo": "https://bitbucket.org/goatchurch/tunnelx",
      "language": "Java",
      "linescount": 3130,
      "location": "/trunk/src",
      "name": "tunnelx",
      "url": "https://searchcode.com/codesearch/view/117542912/",
      "md5hash": "83d0093663e626345fa74a87ab428ca0",
      "lines": {
        "960": "                        for (ElevCLine ecl : currgenpath.plabedl.sketchframedef.elevclines)",
        "961": "                            ga.drawShape(ecl.gp, SketchLineStyle.ActiveLineStyleAttrs[ecl.linestyle]); ",
        "997": "\t\tif (bmoulinactive)",
        "998": "\t\t\tga.drawShape(moupath, SketchLineStyle.ActiveLineStyleAttrs[SketchLineStyle.SLS_DETAIL]);  // moulin/",
        "1036": "\t\t\tga.drawShape(elevarrow, SketchLineStyle.ActiveLineStyleAttrs[SketchLineStyle.SLS_DETAIL]);  ",
        "1034": "\t\tif (sketchdisplay.selectedsubsetstruct.elevset.bIsElevStruct)",
        "1035": "\t\t\t//ga.drawShape(elevpoint, SketchLineStyle.ActiveLineStyleAttrs[SketchLineStyle.SLS_DETAIL]);  ",
        "972": "\t\t\tif (currgenpath.pnstart != null)",
        "973": "\t\t\t\tga.drawShape(currgenpath.pnstart.Getpnell(), SketchLineStyle.firstselpnlinestyleattr);",
        "974": "\t\t\tif (currgenpath.pnend != null)",
        "1037": "",
        "914": "\t\t\tif (((ipn - pipn) % 2) == 1)",
        "915": "\t\t\t\tga.drawShape(vactivepathsnodecounts.get(pipn).Getpnell(), SketchLineStyle.activepnlinestyleattr);",
        "920": "\t\t{",
        "921": "\t\t\tga.drawShape(currpathnode.Getpnell(), SketchLineStyle.activepnlinestyleattr);"
      },
      "id": 117542912,
      "filename": "SketchGraphics.java"
    },
    {
      "repo": "https://github.com/rdwebster/Open-Quark.git",
      "language": "Java",
      "linescount": 1224,
      "location": "/src/CAL_Libraries/src/org/openquark/cal/module/Cal/Experimental/Graphics",
      "name": "Open-Quark",
      "url": "https://searchcode.com/codesearch/view/107271800/",
      "md5hash": "563ba292803bddf1d718951ebd77ab94",
      "lines": {
        "385": "\t\t */",
        "386": "\t\tpublic static final SourceModel.Expr drawShapes(SourceModel.Expr paint, SourceModel.Expr stroke, SourceModel.Expr shapes, SourceModel.Expr graphics) {",
        "388": "\t\t\t\tSourceModel.Expr.Application.make(",
        "389": "\t\t\t\t\tnew SourceModel.Expr[] {SourceModel.Expr.Var.make(Functions.drawShapes), paint, stroke, shapes, graphics});",
        "392": "\t\t/**",
        "393": "\t\t * Name binding for function: drawShapes.",
        "394": "\t\t * @see #drawShapes(org.openquark.cal.compiler.SourceModel.Expr, org.openquark.cal.compiler.SourceModel.Expr, org.openquark.cal.compiler.SourceModel.Expr, org.openquark.cal.compiler.SourceModel.Expr)",
        "395": "\t\t */",
        "364": "\t\t */",
        "365": "\t\tpublic static final SourceModel.Expr drawShape(SourceModel.Expr paint, SourceModel.Expr stroke, SourceModel.Expr shape, SourceModel.Expr graphics) {",
        "398": "",
        "367": "\t\t\t\tSourceModel.Expr.Application.make(",
        "368": "\t\t\t\t\tnew SourceModel.Expr[] {SourceModel.Expr.Var.make(Functions.drawShape), paint, stroke, shape, graphics});",
        "397": "\t\t\tQualifiedName.make(CAL_Drawing.MODULE_NAME, \"drawShapes\");",
        "396": "\t\tpublic static final QualifiedName drawShapes = "
      },
      "id": 107271800,
      "filename": "CAL_Drawing.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 376,
      "location": "/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/116102480/",
      "md5hash": "220b5c798fe3ff6524f2152bfc95c5cd",
      "lines": {
        "199": "",
        "136": "\t\t\t\tif (body.isActive() == false && drawInactiveBodies)",
        "137": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_ACTIVE);",
        "138": "\t\t\t\telse if (body.getType() == BodyType.StaticBody)",
        "139": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_STATIC);",
        "140": "\t\t\t\telse if (body.getType() == BodyType.KinematicBody)",
        "141": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_KINEMATIC);",
        "142": "\t\t\t\telse if (body.isAwake() == false)",
        "143": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_NOT_AWAKE);",
        "144": "\t\t\t\telse",
        "145": "\t\t\t\t\tdrawShape(fixture, transform, SHAPE_AWAKE);",
        "200": "\tprivate void drawShape (Fixture fixture, Transform transform, Color color) {"
      },
      "id": 116102480,
      "filename": "Box2DDebugRenderer.java"
    },
    {
      "repo": "https://bitbucket.org/goatchurch/tunnelx",
      "language": "Java",
      "linescount": 1429,
      "location": "/trunk/src",
      "name": "tunnelx",
      "url": "https://searchcode.com/codesearch/view/117542913/",
      "md5hash": "a249042267f649bcba5cb147c97c6bfa",
      "lines": {
        "1408": "        }",
        "1377": "                GeneralPath gppos = gpspirals[nivalue]; ",
        "1378": "                ga.drawShape(gppos, SketchLineStyle.activepnlinestyleattr, Color.green); ",
        "1385": "                GeneralPath gppos = gpspirals[nivalue]; ",
        "1386": "                ga.drawShape(gppos, SketchLineStyle.activepnlinestyleattr, Color.red); ",
        "1393": "                GeneralPath gppos = gpsplaysnegative[Math.min(nivalue, gpsplaysnegative.length - 1)]; ",
        "1394": "                ga.drawShape(gppos, lsanegsplay); ",
        "1369": "                GeneralPath gppos = gpspirals[nivalue]; ",
        "1370": "                ga.drawShape(gppos, SketchLineStyle.activepnlinestyleattr, lightgreen); ",
        "1405": "            Line2D lnspike = new Line2D.Double(psv.spos.getX(), psv.spos.getY(), psv.spos.getX() - psv.stan.getX() * spikel, psv.spos.getY() - psv.stan.getY() * spikel); ",
        "1406": "            ga.drawShape(lnspike, lsaspikeout);",
        "1407": "            ga.drawShape(lnspike, lsaspike);"
      },
      "id": 117542913,
      "filename": "TodeNode.java"
    },
    {
      "repo": "http://jsilhouette.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 383,
      "location": "/jsilhouette-geom/src/demo/java/org/kordamp/jsilhouette",
      "name": "jsilhouette",
      "url": "https://searchcode.com/codesearch/view/12863834/",
      "md5hash": "6b528eccbbfa03faf2172a471b53e59f",
      "lines": {
        "128": "            drawShape( g2, new Arrow(140,20,100,60,0.5f,0.2f), Color.GREEN );",
        "129": "            drawShape( g2, new Arrow(20,100,100,60,0.75f,0.5f), Color.BLUE );",
        "130": "            drawShape( g2, new Arrow(140,100,100,60,0.25f,0.5f), Color.ORANGE );",
        "131": "            drawShape( g2, new Arrow(20,200,100,60,0.5f,0.5f,45), Color.MAGENTA );",
        "132": "            drawShape( g2, new Arrow(140,200,100,60,0.5f,0.5f,180), Color.CYAN );",
        "133": "         }",
        "141": "",
        "142": "            drawShape( g2, new Balloon(20,20,50,50,0,20,10,Balloon.TAB_AT_BOTTOM,0.5f), Color.RED );",
        "143": "            drawShape( g2, new Balloon(90,20,50,50,0,20,10,Balloon.TAB_AT_LEFT,0.5f), Color.RED );",
        "144": "            drawShape( g2, new Balloon(160,20,50,50,0,20,10,Balloon.TAB_AT_TOP,0.5f), Color.RED );",
        "145": "            drawShape( g2, new Balloon(230,20,50,50,0,20,10,Balloon.TAB_AT_RIGHT,0.5f), Color.RED );",
        "146": "",
        "147": "            drawShape( g2, new Balloon(20,90,50,50,10,20,10,Balloon.TAB_AT_BOTTOM,0.5f,Balloon.ANGLE_AT_END), Color.GREEN );",
        "148": "            drawShape( g2, new Balloon(90,90,50,50,10,20,10,Balloon.TAB_AT_LEFT,0.5f,Balloon.ANGLE_AT_END), Color.GREEN );",
        "127": "            drawShape( g2, new Arrow(20,20,100,60), Color.RED );"
      },
      "id": 12863834,
      "filename": "ShapesDemoJava.java"
    },
    {
      "repo": "https://github.com/jorisvddonk/strategoids.git",
      "language": "Java",
      "linescount": 519,
      "location": "/src/strategoids/gui",
      "name": "strategoids",
      "url": "https://searchcode.com/codesearch/view/109056477/",
      "md5hash": "deef8fbea98a61b2ef6135ecefc542da",
      "lines": {
        "288": "            if (iO.persistent) {",
        "289": "                DrawShape.drawCircle(iopt.x, iopt.y, (double) 20 / (double) Main.strategoids.FIELDSIZE, gl, 1, 1, 0); //Persistent order circles",
        "291": "            if (iO.target.isShip()) {",
        "292": "                DrawShape.drawCircle(iopt.x, iopt.y, (double) 25 / (double) Main.strategoids.FIELDSIZE, gl, 0.2, 0.2, 1); //Persistent order circles",
        "197": "            Point ipt = Main.strategoids.gameToGUI(i.getX(), i.getY());",
        "198": "            DrawShape.drawCircle(ipt.x, ipt.y, 3, gl, 0, 1, 1);",
        "273": "                    //    DrawShape.drawCircle(iopt.x, iopt.y, (double) 25 / (double) Fortress.fieldsize, gl, 0.2, 0.2, 1); //Persistent order circles",
        "267": "                    //Point persisPt = Fortress.gameToGUI(iO.getTargetPosition().x, iO.getTargetPosition().y);",
        "268": "                    //DrawShape.drawCircle(persisPt.x, persisPt.y, (double) 20 / (double) Fortress.fieldsize, gl, 1, 1, 0); //Persistent order circles",
        "272": "                    //if (iO.target.isShip()) {",
        "16": "import strategoids.Main;",
        "17": "import strategoids.drawing.DrawShape;"
      },
      "id": 109056477,
      "filename": "GUIToolkitContainer.java"
    },
    {
      "repo": "https://github.com/robbythedude/FunPaint.git",
      "language": "Java",
      "linescount": 1113,
      "location": "/FunPaint/src",
      "name": "FunPaint",
      "url": "https://searchcode.com/codesearch/view/74571175/",
      "md5hash": "a28f108220b23dcbc22d31006278c320",
      "lines": {
        "720": "        s.drawShape(fgg);  ",
        "833": "            Graphics g = jCenterPanel.getGraphics();",
        "834": "            s.drawShape(g);",
        "895": "            currShape.drawShape(g);",
        "894": "            Shape currShape = storage.elementAt(i);",
        "719": "        s.shapeColor = jColorPanel.getBackground();  //Storing color of shape"
      },
      "id": 74571175,
      "filename": "DrawGUI.java"
    },
    {
      "repo": "http://mt4j.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 200,
      "location": "/examples/advanced/drawing",
      "name": "mt4j",
      "url": "https://searchcode.com/codesearch/view/209396/",
      "md5hash": "880f9e85d26444c52bf3e116a07b4ebf",
      "lines": {
        "176": "\t\tthis.stepDistance = brushWidthHalf/2.8f;",
        "177": "\t\tthis.drawShape.setFillColor(this.brushColor);",
        "171": "\tpublic void setBrush(AbstractShape brush){",
        "172": "\t\tthis.drawShape = brush;",
        "173": "\t\tthis.localBrushCenter = drawShape.getCenterPointLocal();",
        "174": "\t\tthis.brushWidthHalf = drawShape.getWidthXY(TransformSpace.LOCAL)/2f;",
        "143": "\t\t\t\t\t\t\t\t\t */",
        "144": "\t\t\t\t\t\t\t\t\tAbstractShape brushToDraw = drawShape;",
        "24": "",
        "178": "\t\tthis.drawShape.setStrokeColor(this.brushColor);",
        "179": "\t}",
        "25": "\tprivate AbstractShape drawShape;",
        "56": "\t\tthis.drawShape = getDefaultBrush();",
        "57": "\t\tthis.localBrushCenter = drawShape.getCenterPointLocal();",
        "175": "\t\tthis.brushHeightHalf = drawShape.getHeightXY(TransformSpace.LOCAL)/2f;",
        "55": "\t\t/*"
      },
      "id": 209396,
      "filename": "DrawSurfaceScene.java"
    },
    {
      "repo": "https://github.com/genevictor/cocos2d.git",
      "language": "Java",
      "linescount": 214,
      "location": "/JBox2D_2.0.1/src/org/jbox2d/testbed",
      "name": "cocos2d",
      "url": "https://searchcode.com/codesearch/view/113845600/",
      "md5hash": "5d0932d4149ab7554195fbee349d552d",
      "lines": {
        "129": "//                else if (b.isSleeping()) {",
        "130": "//                    DrawShape(s, color(30, 30, 90));",
        "132": "//                else {",
        "133": "//                    DrawShape(s, color(30, 30, 30));",
        "140": "//    ",
        "141": "//    void DrawShape(Shape shape, int c) {",
        "126": "//                if (b.m_invMass == 0.0f) {",
        "127": "//                    DrawShape(s, color(100, 100, 100));"
      },
      "id": 113845600,
      "filename": "TimingTest.java"
    },
    {
      "repo": "https://bitbucket.org/goatchurch/tunnelx",
      "language": "Java",
      "linescount": 612,
      "location": "/trunk/src",
      "name": "tunnelx",
      "url": "https://searchcode.com/codesearch/view/117542887/",
      "md5hash": "ab9703cf9d46299c02acfb84e0ba3c70",
      "lines": {
        "320": "\tvoid drawShape(Shape shape, LineStyleAttr linestyleattr, Color color) // Just used for odd things like dotted cut-out rectangles",
        "499": "\t\tstartSymbolClip(osa);",
        "500": "\t\tdrawShape(gphatch, (isa % 2) == 0 ? SketchLineStyle.linestylehatch1 : SketchLineStyle.linestylehatch2);",
        "316": "    ",
        "317": "\tvoid drawShape(Shape shape, LineStyleAttr linestyleattr)",
        "318": "\t\t{ drawShape(shape, linestyleattr, null);  }",
        "319": ""
      },
      "id": 117542887,
      "filename": "GraphicsAbstraction.java"
    },
    {
      "repo": "https://bitbucket.org/glinsky/qiworkbench",
      "language": "Java",
      "linescount": 220,
      "location": "/gwLogViewer/dev/src/com/gwsys/welllog/view/curve",
      "name": "qiworkbench",
      "url": "https://searchcode.com/codesearch/view/123689216/",
      "md5hash": "72cca485b148549738a833b743b09ed7",
      "lines": {
        "192": "\t\t\t\t.drawShape(meanData.getX(), meanData.getY()));",
        "187": "\t\t",
        "188": "\t\tp10.setOriginalCurve(OperationClass.drawShape(p10Data.getX(), p10Data.getY()));",
        "189": "\t\tp50.setOriginalCurve(OperationClass.drawShape(p50Data.getX(), p50Data.getY()));",
        "190": "\t\tp90.setOriginalCurve(OperationClass.drawShape(p90Data.getX(), p90Data.getY()));",
        "191": "\t\tmean.setOriginalCurve(OperationClass"
      },
      "id": 123689216,
      "filename": "CurveP105090Mean.java"
    },
    {
      "repo": "https://bitbucket.org/vikingshooter/code-examples.git",
      "language": "Java",
      "linescount": 2529,
      "location": "/processingTest/src/processing/core",
      "name": "code-examples",
      "url": "https://searchcode.com/codesearch/view/40049085/",
      "md5hash": "ff69985d25091c327471888fc0f42b37",
      "lines": {
        "896": "    gpath.closePath();",
        "897": "    drawShape(gpath);",
        "928": "    rect.setFrame(x1, y1, x2-x1, y2-y1);",
        "929": "    drawShape(rect);",
        "648": "        }",
        "649": "        drawShape(gpath);",
        "909": "    gp.closePath();",
        "910": "    drawShape(gp);",
        "1041": "",
        "1042": "  protected void drawShape(Shape s) {",
        "947": "    ellipse.setFrame(x, y, w, h);",
        "948": "    drawShape(ellipse);"
      },
      "id": 40049085,
      "filename": "PGraphicsJava2D.java"
    },
    {
      "repo": "https://github.com/farnyser/wireframe.git",
      "language": "Java",
      "linescount": 200,
      "location": "/src/view",
      "name": "wireframe",
      "url": "https://searchcode.com/codesearch/view/68531475/",
      "md5hash": "f7e9e098f646ae42f37daab1d295ca1b",
      "lines": {
        "176": "\t\tthis.stepDistance = brushWidthHalf/2.8f;",
        "177": "\t\tthis.drawShape.setFillColor(this.brushColor);",
        "171": "\tpublic void setBrush(final AbstractShape brush){",
        "172": "\t\tthis.drawShape = brush;",
        "173": "\t\tthis.localBrushCenter = drawShape.getCenterPointLocal();",
        "174": "\t\tthis.brushWidthHalf = drawShape.getWidthXY(TransformSpace.LOCAL)/2f;",
        "143": "\t\t\t\t\t\t\t\t\t */",
        "144": "\t\t\t\t\t\t\t\t\tAbstractShape brushToDraw = drawShape;",
        "24": "",
        "178": "\t\tthis.drawShape.setStrokeColor(this.brushColor);",
        "179": "\t}",
        "25": "\tprivate AbstractShape drawShape;",
        "56": "\t\tthis.drawShape = getDefaultBrush();",
        "57": "\t\tthis.localBrushCenter = drawShape.getCenterPointLocal();",
        "175": "\t\tthis.brushHeightHalf = drawShape.getHeightXY(TransformSpace.LOCAL)/2f;",
        "55": "\t\t/*"
      },
      "id": 68531475,
      "filename": "DrawSurfaceScene.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 239,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 124,
      "source": "Github",
      "id": 2
    },
    {
      "count": 31,
      "source": "Google Code",
      "id": 1
    }
  ]
}