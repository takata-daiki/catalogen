{
  "matchterm": "HSSFListener",
  "previouspage": null,
  "searchterm": "HSSFListener",
  "query": "HSSFListener",
  "language_filters": [
    {
      "count": 11,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 11,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 64,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventusermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642336/",
      "md5hash": "a6db776133d50183038ac0566a50b83d",
      "lines": {
        "54": "",
        "55": "public interface HSSFListener"
      },
      "id": 15642336,
      "filename": "HSSFListener.java"
    },
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 595,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785559/",
      "md5hash": "6b55090236799f49ee0f5bd7d54bbbac",
      "lines": {
        "34": "import org.apache.poi.ddf.EscherRecord;",
        "35": "import org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener;",
        "36": "import org.apache.poi.hssf.eventusermodel.HSSFEventFactory;",
        "37": "import org.apache.poi.hssf.eventusermodel.HSSFListener;",
        "136": "            Locale locale) throws IOException, SAXException, TikaException {",
        "137": "        TikaHSSFListener listener = new TikaHSSFListener(xhtml, locale, this);",
        "186": "        private FormatTrackingHSSFListener formatListener;",
        "83": " *",
        "84": " * @see org.apache.poi.hssf.eventusermodel.HSSFListener",
        "182": "        /**",
        "183": "         * Internal <code>FormatTrackingHSSFListener</code> to handle cell",
        "185": "         */",
        "90": "    /**",
        "91": "     * <code>true</code> if the HSSFListener should be registered",
        "157": "     */",
        "158": "    private static class TikaHSSFListener implements HSSFListener {"
      },
      "id": 111785559,
      "filename": "ExcelExtractor.java"
    },
    {
      "repo": "https://github.com/xiezhaohui/DataViewer.git",
      "language": "Java",
      "linescount": 304,
      "location": "/ETL/src/com/util",
      "name": "DataViewer",
      "url": "https://searchcode.com/codesearch/view/68613461/",
      "md5hash": "8bd64dddea629578a6d8e6f976c7b348",
      "lines": {
        "96": "\tpublic void process() throws IOException {",
        "97": "\t\tMissingRecordAwareHSSFListener listener = new MissingRecordAwareHSSFListener(",
        "34": "",
        "35": "public abstract class HxlsAbstract implements HSSFListener {",
        "98": "\t\t\t\tthis);",
        "9": "",
        "10": "import org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener;",
        "11": "import org.apache.poi.hssf.eventusermodel.HSSFEventFactory;",
        "12": "import org.apache.poi.hssf.eventusermodel.HSSFListener;",
        "13": "import org.apache.poi.hssf.eventusermodel.HSSFRequest;",
        "14": "import org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener;",
        "99": "\t\tformatListener = new FormatTrackingHSSFListener(listener);",
        "115": "\t/**",
        "51": "\tprivate SSTRecord sstRecord;",
        "52": "\tprivate FormatTrackingHSSFListener formatListener;",
        "116": "\t * HSSFListener \u76d1\u542c\u65b9\u6cd5\uff0c\u5904\u7406 Record"
      },
      "id": 68613461,
      "filename": "HxlsAbstract.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 166,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventusermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642339/",
      "md5hash": "b121d0bf53bbf50e1642cf6873264092",
      "lines": {
        "149": "                Object listenObj = listeners.get(k);",
        "150": "                if (listenObj instanceof AbortableHSSFListener)",
        "151": "                {",
        "158": "\t\t\t\t\tHSSFListener listener = ( HSSFListener ) listenObj;",
        "81": "     *",
        "82": "     * @see #addListenerForAllRecords(HSSFListener)",
        "52": " * An HSSFRequest object should be constructed registering an instance or multiple",
        "53": " * instances of HSSFListener with each Record.sid you wish to listen for.",
        "118": "    public void addListenerForAllRecords(HSSFListener lsnr)",
        "55": " * @see loci.poi.hssf.eventusermodel.HSSFEventFactory",
        "56": " * @see loci.poi.hssf.eventusermodel.HSSFListener",
        "89": "    public void addListener(HSSFListener lsnr, short sid)",
        "152": "\t\t\t\t\tAbortableHSSFListener listener = ( AbortableHSSFListener ) listenObj;",
        "157": "\t\t\t\t{ ",
        "88": "",
        "117": ""
      },
      "id": 15642339,
      "filename": "HSSFRequest.java"
    },
    {
      "repo": "https://github.com/kissys/es.git",
      "language": "Java",
      "linescount": 117,
      "location": "/web/src/main/java/com/sishuok/es/showcase/excel/service",
      "name": "es",
      "url": "https://searchcode.com/codesearch/view/92669296/",
      "md5hash": "ae59df26890bbbe2087f556c2c4c51ca",
      "lines": {
        "8": "import com.sishuok.es.showcase.excel.entity.ExcelData;",
        "9": "import org.apache.poi.hssf.eventusermodel.HSSFListener;",
        "18": " */",
        "19": "class Excel2003ImportListener implements HSSFListener {"
      },
      "id": 92669296,
      "filename": "Excel2003ImportListener.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 183,
      "location": "/source/net/yacy/document/parser",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62351863/",
      "md5hash": "906975e8bac9b8ac7a3bea4d738e46c3",
      "lines": {
        "72": "            InterruptedException {",
        "82": "        public XLSHSSFListener() {",
        "81": "",
        "73": "        return new XLSHSSFListener().parse(location, mimeType, charset, source);",
        "40": "import org.apache.poi.hssf.eventusermodel.HSSFEventFactory;",
        "41": "import org.apache.poi.hssf.eventusermodel.HSSFListener;",
        "75": "",
        "76": "    public class XLSHSSFListener implements HSSFListener {"
      },
      "id": 62351863,
      "filename": "xlsParser.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 93,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventusermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642338/",
      "md5hash": "d3e5ac48b71463b18a6b381228a1a65a",
      "lines": {
        "59": "",
        "60": "public abstract class AbortableHSSFListener implements HSSFListener",
        "62": "    /**",
        "63": "     * This method, inherited from HSSFListener is implemented as a stub."
      },
      "id": 15642338,
      "filename": "AbortableHSSFListener.java"
    },
    {
      "repo": "http://tongue-tied.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 52,
      "location": "/Application/src/org/tonguetied/datatransfer/importing",
      "name": "tongue-tied",
      "url": "https://searchcode.com/codesearch/view/12440054/",
      "md5hash": "7a98df67631dd0a058675f0e56dca218",
      "lines": {
        "34": " */",
        "35": "public interface ExcelParser extends HSSFListener",
        "20": "",
        "21": "import org.apache.poi.hssf.eventusermodel.HSSFListener;"
      },
      "id": 12440054,
      "filename": "ExcelParser.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 122,
      "location": "/components/forks/poi/src/loci/poi/hssf/dev",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642598/",
      "md5hash": "b4bd1864cb6b3833d908f06334bca3e3",
      "lines": {
        "51": "import loci.poi.hssf.eventusermodel.HSSFRequest;",
        "52": "import loci.poi.hssf.eventusermodel.HSSFListener;",
        "77": "",
        "78": "        req.addListenerForAllRecords(new HSSFListener()"
      },
      "id": 15642598,
      "filename": "EFBiffViewer.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 219,
      "location": "/components/forks/poi/src/loci/poi/hssf/dev",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642601/",
      "md5hash": "7074b47e27144ba07a0a686221787116",
      "lines": {
        "208": "//",
        "209": "//    public EFHSSFListener(EFHSSF efhssf)",
        "206": "//{",
        "55": "import loci.poi.hssf.eventusermodel.HSSFRequest;",
        "56": "import loci.poi.hssf.eventusermodel.HSSFListener;",
        "203": "//",
        "204": "//class EFHSSFListener",
        "205": "//    implements HSSFListener",
        "94": "//",
        "95": "//        req.addListenerForAllRecords(new EFHSSFListener(this));"
      },
      "id": 15642601,
      "filename": "EFHSSF.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 260,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventusermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642337/",
      "md5hash": "880394f1b0f8ed8b4183af136268bc56",
      "lines": {
        "56": " * a static id matching one that you have registed in your HSSFRequest will be passed",
        "57": " * to your associated HSSFListener.",
        "106": "     * If an <code>AbortableHSSFListener</code> causes a halt to processing during this call",
        "105": "     *"
      },
      "id": 15642337,
      "filename": "HSSFEventFactory.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 9,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 1,
      "source": "Google Code",
      "id": 1
    }
  ]
}