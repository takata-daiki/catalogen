{
  "matchterm": "Background",
  "previouspage": null,
  "searchterm": "Background",
  "query": "Background",
  "language_filters": [
    {
      "count": 48942,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 48941,
  "results": [
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 164,
      "location": "/src/main/java/com/flagstone/transform",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059441/",
      "md5hash": "c1c33ea54214404f5da7f6b08b7e792b",
      "lines": {
        "64": "    private static final String FORMAT = \"Background: { color=%s}\";",
        "1": "/*",
        "2": " * Background.java",
        "65": "",
        "42": "/**",
        "43": " * Background sets the background colour displayed in every frame in the movie.",
        "51": " * <p>",
        "52": " * The background colour must be set before the first frame is displayed",
        "53": " * otherwise the background colour defaults to white. This is typically the",
        "54": " * first object in a coder. If more than one Background object is added to a",
        "55": " * movie then only first one sets the background colour. Subsequent objects are",
        "56": " * ignored.",
        "60": " */",
        "61": "public final class Background implements MovieTag {",
        "63": "    /** Format string used in toString() method. */"
      },
      "id": 16059441,
      "filename": "Background.java"
    },
    {
      "repo": "https://github.com/urcogt/SuperMarioJava.git",
      "language": "Java",
      "linescount": 164,
      "location": "/src/com/blogspot/programmingheroes/supermariojava",
      "name": "SuperMarioJava",
      "url": "https://searchcode.com/codesearch/view/96476475/",
      "md5hash": "70ffa0216ca5b34bccd598c54c8bfe66",
      "lines": {
        "16": "public class Background {",
        "1": "",
        "2": "// Background.java --------------------------------------------------",
        "35": "\t */",
        "36": "\tpublic Background(Stage s, String imgName) {",
        "39": "",
        "40": "\tpublic Background(Stage s, String imgName, double speedFactor,",
        "15": " */"
      },
      "id": 96476475,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/marpiech/genomestore.git",
      "language": "Java",
      "linescount": 427,
      "location": "/src/main/java/org/cremag/utils/file/genomic",
      "name": "genomestore",
      "url": "https://searchcode.com/codesearch/view/37328441/",
      "md5hash": "f3e539c4d4bd51c80b5b4f5f841ef75d",
      "lines": {
        "130": "\t\t",
        "131": "\t\tMap <String, StatisticalSummary> recomputedBackground = ",
        "150": "\t\t\t\t\trecomputedBackground.put(track.getId(), summary);",
        "135": "\t\t\t",
        "136": "\t\t\tStatisticalSummary existingSummary = background.get(track.getId()); ",
        "151": "\t\t\t\telse ",
        "152": "\t\t\t\t\tbackground.put(track.getId(), summary);",
        "50": " * @author marpiech",
        "51": " * Background class contains description of precomputed background for calculation",
        "53": " */",
        "54": "public class Background {",
        "55": "\t",
        "56": "\tprivate static final Logger logger = Logger.getLogger(Background.class);",
        "58": "\t/**",
        "59": "\t * List of genomic intervals for which background is computed",
        "149": "\t\t\t\tif (includeFilters)"
      },
      "id": 37328441,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 307,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/csd02",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355595/",
      "md5hash": "5572bbbb096cb3dbf7f77b42119c1f49",
      "lines": {
        "128": "        setType(\"background\");",
        "132": "    /**",
        "133": "     * Create a <code>Background</code> object with the given DOM element",
        "134": "     */",
        "135": "    public Background(Element element) {",
        "157": "     * @param classAttr new value",
        "146": "     * @param alternativeToAttr new value",
        "147": "     * @return <code> Background</code> instance",
        "148": "     */",
        "149": "    public Background alternativeToAttr(final AnyURISimpleType alternativeToAttr) {",
        "24": "/**",
        "25": " * this element is a structural container for the section of a judgement containing the background",
        "159": "     */",
        "28": "",
        "29": "public class Background extends MaincontentComplexType {",
        "158": "     * @return <code> Background</code> instance",
        "127": "        super(create());"
      },
      "id": 40355595,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 297,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/akomantoso20",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355951/",
      "md5hash": "3d4ab36e34aaada37d6f411443e4a100",
      "lines": {
        "128": "        super(create());",
        "129": "        setType(\"background\");",
        "133": "    /**",
        "134": "     * Create a <code>Background</code> object with the given DOM element",
        "135": "     */",
        "136": "    public Background(Element element) {",
        "160": "     */",
        "147": "     * @param alternativeToAttr new value",
        "148": "     * @return <code> Background</code> instance",
        "149": "     */",
        "150": "    public Background alternativeToAttr(final AnyURISimpleType alternativeToAttr) {",
        "24": "/**",
        "25": " * this element is a structural container for the section of a judgement containing the<br/> background",
        "28": "",
        "29": "public class Background extends MaincontentComplexType {",
        "158": "     * @param classAttr new value",
        "159": "     * @return <code> Background</code> instance"
      },
      "id": 40355951,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/ashokhari/bungeni-at4am.git",
      "language": "Java",
      "linescount": 285,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/client/ui/overlay/document/gen/akomantoso20",
      "name": "bungeni-at4am",
      "url": "https://searchcode.com/codesearch/view/51611341/",
      "md5hash": "afba40e425ee83249ac8fa536abff77a",
      "lines": {
        "32": "public class Background extends MaincontentComplexType {",
        "155": "     * @return <code> Background</code> instance",
        "132": "     * @param wildcardContentAttr new value",
        "133": "     * @return <code> Background</code> instance",
        "134": "     */",
        "135": "    public Background wildcardContentAttr(final String wildcardContentAttr) {",
        "156": "     */",
        "143": "     * @param classAttr new value",
        "144": "     * @return <code> Background</code> instance",
        "145": "     */",
        "146": "    public Background classAttr(final StringSimpleType classAttr) {",
        "154": "     * @param styleAttr new value",
        "27": "/**",
        "28": " * this element is a structural container for the section of a judgement containing the background",
        "157": "    public Background styleAttr(final StringSimpleType styleAttr) {",
        "31": ""
      },
      "id": 51611341,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/minelabtw/2011ce1002.git",
      "language": "Java",
      "linescount": 109,
      "location": "/Final Project/FP/FP-100502013/src/fp/s100502013",
      "name": "2011ce1002",
      "url": "https://searchcode.com/codesearch/view/42729187/",
      "md5hash": "7769684724d42ce77f9496f65846fd9c",
      "lines": {
        "6": "",
        "7": "public class Background extends JPanel{ //gameplaying-background",
        "8": "\tprivate Timer bgtimer = new Timer(100,new backgroundtime());",
        "9": "\tprivate ImageIcon background = new ImageIcon(\"src/fp/s100502013/BACK01.png\");",
        "10": "\tprivate int bgtype = 1;",
        "12": "\t",
        "13": "\tpublic Background(){",
        "17": "\tpublic void paintComponent(Graphics g){",
        "18": "\t\tg.drawImage(background.getImage(), 0, 0, 600, 600, null);",
        "20": "\t",
        "21": "\tclass backgroundtime implements ActionListener{ //background animate set",
        "23": "\t\t\tif(bgtype==1){",
        "24": "\t\t\t\tbackground = new ImageIcon(\"src/fp/s100502013/BACK01.png\");",
        "28": "\t\t\telse if(bgtype==2){",
        "29": "\t\t\t\tbackground = new ImageIcon(\"src/fp/s100502013/BACK02.png\");"
      },
      "id": 42729187,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/vestrel00/kungfunekko.git",
      "language": "Java",
      "linescount": 70,
      "location": "/KungFuNekko/src/com/vestrel00/nekko/maps/components",
      "name": "kungfunekko",
      "url": "https://searchcode.com/codesearch/view/46088754/",
      "md5hash": "602817f2d2c06980a8a8271ef817c2ed",
      "lines": {
        "33": "",
        "34": "\tpublic Background() {",
        "35": "\t\tbackground = KFNekko.resource.atlas.findRegion(\"background\");",
        "36": "\t\tmoon = KFNekko.resource.atlas.findRegion(\"moon\");",
        "39": "\t\t// calculate the amount of unseen space in the texture",
        "40": "\t\tmaxXOffset = (float) background.originalWidth",
        "54": "",
        "55": "\t\tbatch.draw(background, KFNekko.camera.rect.x - xOffset,",
        "28": "",
        "29": "public class Background implements Updatable, Drawable {",
        "30": "",
        "31": "\tprivate AtlasRegion background, moon;"
      },
      "id": 46088754,
      "filename": "Background.java"
    },
    {
      "repo": "https://github.com/phillco/Disasteroids.git",
      "language": "Java",
      "linescount": 291,
      "location": "/Disasteroids/trunk/src/disasteroids/gui",
      "name": "Disasteroids",
      "url": "https://searchcode.com/codesearch/view/112760530/",
      "md5hash": "027a85d2e7695ee4928dab9b968144cb",
      "lines": {
        "2": " * DISASTEROIDS",
        "3": " * Background.java",
        "38": "\t/**",
        "39": "\t * Messages that are to be drawn temporarily on the star background.",
        "41": "\t */",
        "42": "\tprivate ConcurrentLinkedQueue<Background.BackgroundMessage> starMessages = new ConcurrentLinkedQueue<BackgroundMessage>();",
        "44": "\t/**",
        "45": "\t * Creates the background.",
        "46": "\t * ",
        "19": "/**",
        "20": " * The star background.",
        "23": " */",
        "24": "public class Background",
        "26": "\t/**",
        "27": "\t * Dimensions of the background."
      },
      "id": 112760530,
      "filename": "Background.java"
    },
    {
      "repo": "http://gtge.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 334,
      "location": "/GTGE/src/com/golden/gamedev/object",
      "name": "gtge",
      "url": "https://searchcode.com/codesearch/view/3030270/",
      "md5hash": "39a46194d1c10e95e23d9daf19510f05",
      "lines": {
        "32": " * x 480 dimension, the background view area would be also 640 x 480, thus",
        "33": " * occupy all the game view. To set the background view area, use",
        "34": " * {@linkplain #setClip(int, int, int, int) setClip(x, y, width, height)}.",
        "36": " * ",
        "37": " * If the background size is larger than view area, means there is area not",
        "41": " * ",
        "42": " * To set a sprite to be the center of the background, use",
        "44": " * ",
        "45": " * @see com.golden.gamedev.object.background",
        "46": " */",
        "25": "/**",
        "26": " * <code>Background</code> is the area where every sprites lived.",
        "28": " * ",
        "29": " * A background has a view area/view port/clipping area, that is the area which",
        "30": " * is seen to the player. By default the view area of a newly created background",
        "31": " * is as big as game dimension. For example if the game is created as big as 640"
      },
      "id": 3030270,
      "filename": "Background.java"
    },
    {
      "repo": "git://github.com/hharrison/java3d-core.git",
      "language": "Java",
      "linescount": 790,
      "location": "/src/classes/share/javax/media/j3d",
      "name": "java3d-core",
      "url": "https://searchcode.com/codesearch/view/15264347/",
      "md5hash": "875b9b488469e9ede8c123b6898ad362",
      "lines": {
        "32": " * The Background leaf node defines a solid background color",
        "33": " * and a background image that are used to fill the window at the",
        "34": " * beginning of each new frame.  The background image may be null.",
        "35": " * It optionally allows background",
        "36": " * geometry---which is pre-tessellated onto a unit sphere and is drawn",
        "37": " * at infinity---to be referenced.  It also specifies an application",
        "38": " * region in which this background is active.  A Background node is",
        "39": " * active when its application region intersects the ViewPlatform's",
        "40": " * activation volume. If multiple Background nodes are active, the",
        "41": " * Background node that is \"closest\" to the eye will be used. If no",
        "42": " * Background nodes are active, then the window is cleared to black.",
        "43": " *",
        "45": " * The set of nodes that can be added to a BranchGroup associated with",
        "46": " * a Background node is limited. All Group nodes except",
        "47": " * ViewSpecificGroup are legal in a background geometry branch",
        "31": "/**"
      },
      "id": 15264347,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/selaxor/luciddreamer.git",
      "language": "Java",
      "linescount": 157,
      "location": "/AndEngine-GLES2/src/org/andengine/entity/scene/background",
      "name": "luciddreamer",
      "url": "https://searchcode.com/codesearch/view/46915340/",
      "md5hash": "6530ab03f80c73b9654677188c0feb30",
      "lines": {
        "1": "package org.andengine.entity.scene.background;",
        "2": "",
        "38": "",
        "39": "\tprotected Background() {",
        "42": "",
        "43": "\tpublic Background(final float pRed, final float pGreen, final float pBlue) {",
        "50": "",
        "46": "",
        "47": "\tpublic Background(final float pRed, final float pGreen, final float pBlue, final float pAlpha) {",
        "18": " */",
        "19": "public class Background implements IBackground {",
        "23": "",
        "24": "\tprivate static final int BACKGROUNDMODIFIERS_CAPACITY_DEFAULT = 4;",
        "29": "",
        "30": "\tprivate ModifierList<IBackground> mBackgroundModifiers = null;",
        "51": "\tpublic Background(final Color pColor) {"
      },
      "id": 46915340,
      "filename": "Background.java"
    },
    {
      "repo": "https://github.com/sunnygleason/xfaban.git",
      "language": "Java",
      "linescount": 73,
      "location": "/src/main/java/com/sun/faban/driver",
      "name": "xfaban",
      "url": "https://searchcode.com/codesearch/view/109507103/",
      "md5hash": "1c4421ecb9686e40f9e4e76663292d92",
      "lines": {
        "32": " * Specifies simulated operations performed in the background without user",
        "34": " * new mail without the user initiating the download. There are certain",
        "35": " * restrictions imposed on background operations:",
        "36": " * <ul>",
        "37": " * <li>The sequence of background operation execution is fixed</li>",
        "38": " * <li>The cyclet time, if explicitly specified for background operations must",
        "39": " *     be FixedTime</li>",
        "40": " *</ul>",
        "41": " * However, if an operation is used solely for background simulation but",
        "49": "@Target(ElementType.TYPE)",
        "50": "public @interface Background {",
        "19": " *",
        "20": " * $Id: Background.java,v 1.3.8.1 2009/09/21 05:01:25 akara Exp $",
        "53": "     * The list of operation names to be run in the background. The same",
        "54": "     * operation may be run both in the foreground and in the background.",
        "52": "    /**",
        "31": "/**"
      },
      "id": 109507103,
      "filename": "Background.java"
    },
    {
      "repo": "https://github.com/ymasory/iText-4.2.0.git",
      "language": "Java",
      "linescount": 91,
      "location": "/www/examples/com/lowagie/examples/objects/chunk",
      "name": "iText-4.2.0",
      "url": "https://searchcode.com/codesearch/view/111837134/",
      "md5hash": "3c8cc41b286fa1f3305d624edc7280db",
      "lines": {
        "1": "/*",
        "2": " * $Id: Background.java 3373 2008-05-12 16:21:24Z xlv $",
        "36": "\t/**",
        "37": "\t * Using Background Colors in Chunks.",
        "33": "",
        "42": "",
        "43": "\t\tSystem.out.println(\"Background color\");",
        "34": "public class Background {",
        "61": "\t\t\tChunk c;",
        "50": "\t\t\tPdfWriter.getInstance(document,",
        "51": "\t\t\t\t\tnew FileOutputStream(\"Background.pdf\"));",
        "56": "\t\t\tChunk high = new Chunk(\"highlighted\");",
        "57": "\t\t\thigh.setBackground(new Color(0xFF, 0xFF, 0x00));",
        "28": "/**",
        "29": " * Demonstrates how 'highlight' Chunks using a Background color.",
        "62": "\t\t\tc = new Chunk(\"background\");",
        "63": "\t\t\tc.setBackground(new Color(0xC0, 0xC0, 0xC0));"
      },
      "id": 111837134,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/danseku/spillprosjekt",
      "language": "Java",
      "linescount": 48,
      "location": "/src/prosjekt/models",
      "name": "spillprosjekt",
      "url": "https://searchcode.com/codesearch/view/53126220/",
      "md5hash": "34a0dcbaaaa97b2a6a1e020aa5702cfd",
      "lines": {
        "43": "\t */",
        "18": "\t",
        "19": "\tpublic Background (char symbol, String imageFileName, String modifiers) {",
        "6": " * ",
        "7": " * A background is an object defined by an image, and modifiers.",
        "10": " */",
        "11": "public class Background extends Entity {",
        "44": "\tpublic Background clone () {",
        "45": "\t\treturn new Background (this.getSymbol(), this.imageFileName, this.modifiers);",
        "46": "\t}"
      },
      "id": 53126220,
      "filename": "Background.java"
    },
    {
      "repo": "https://github.com/Blackchild/UguuJump.git",
      "language": "Java",
      "linescount": 184,
      "location": "/UguuJump/src/code/guicomponents",
      "name": "UguuJump",
      "url": "https://searchcode.com/codesearch/view/69075715/",
      "md5hash": "7533458febdbbd1f0fe48dead5c1286a",
      "lines": {
        "51": "\t\t\tBackground.counter++;",
        "50": "\t\tif(OptionManager.Flags.ERO.isEnabled()){",
        "43": "",
        "44": "\t\treturn OptionManager.Flags.ERO.isEnabled() ? Background.eroCount : Background.regCount;",
        "13": "",
        "14": "public class Background{",
        "15": "",
        "16": "\tprivate static final String\t\t\t\tero\t\t\t\t\t= \"res/images/backgrounds/ero/ero (%d).jpg\";",
        "17": "\tprivate static final String\t\t\t\treg\t\t\t\t\t= \"res/images/backgrounds/regular/reg (%d).jpg\";",
        "18": "",
        "19": "\tprivate static final String\t\t\t\teroResize\t\t\t= \"res/images/backgrounds/ero/ero_resize (%d).jpg\";",
        "20": "\tprivate static final String\t\t\t\tregResize\t\t\t= \"res/images/backgrounds/regular/reg_resize (%d).jpg\";",
        "21": "",
        "52": "\t\t\tif(Background.counter > Background.eroCount){",
        "53": "\t\t\t\tBackground.counter = 1;"
      },
      "id": 69075715,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 502,
      "location": "/javafx-ui-common/src/javafx/scene/layout",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60435465/",
      "md5hash": "ff2b76ef5b17bc4d147f4cb7f14d6dad",
      "lines": {
        "41": "import com.sun.javafx.css.converters.URLConverter;",
        "42": "import com.sun.javafx.scene.layout.region.LayeredBackgroundPositionConverter;",
        "43": "import com.sun.javafx.scene.layout.region.LayeredBackgroundSizeConverter;",
        "44": "import com.sun.javafx.scene.layout.region.RepeatStruct;",
        "47": "/**",
        "48": " * The Background of a {@link Region}. A Background is an immutable object which",
        "49": " * encapsulates the entire set of data required to render the background",
        "50": " * of a Region. Because this class is immutable, you can freely reuse the same",
        "51": " * Background on many different Regions. Please refer to",
        "52": " * {@link ../doc-files/cssref.html JavaFX CSS Reference} for a complete description",
        "53": " * of the CSS rules for styling the background of a Region.",
        "54": " * <p/>",
        "55": " * Every Background is comprised of {@link #getFills() fills} and / or",
        "56": " * {@link #getImages() images}. Neither list will ever be null, but either or",
        "57": " * both may be empty. Each defined {@link BackgroundFill} is rendered in order,",
        "58": " * followed by each defined {@link BackgroundImage}."
      },
      "id": 60435465,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 505,
      "location": "/javafx-ui-common/src/javafx/scene/layout",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/64650899/",
      "md5hash": "3853b488d039b4aa856dbb51e0378c7f",
      "lines": {
        "41": "import com.sun.javafx.css.converters.URLConverter;",
        "42": "import com.sun.javafx.scene.layout.region.LayeredBackgroundPositionConverter;",
        "43": "import com.sun.javafx.scene.layout.region.LayeredBackgroundSizeConverter;",
        "44": "import com.sun.javafx.scene.layout.region.RepeatStruct;",
        "48": "/**",
        "49": " * The Background of a {@link Region}. A Background is an immutable object which",
        "50": " * encapsulates the entire set of data required to render the background",
        "51": " * of a Region. Because this class is immutable, you can freely reuse the same",
        "52": " * Background on many different Regions. Please refer to",
        "53": " * {@link ../doc-files/cssref.html JavaFX CSS Reference} for a complete description",
        "54": " * of the CSS rules for styling the background of a Region.",
        "55": " * <p/>",
        "56": " * Every Background is comprised of {@link #getFills() fills} and / or",
        "57": " * {@link #getImages() images}. Neither list will ever be null, but either or",
        "58": " * both may be empty. Each defined {@link BackgroundFill} is rendered in order,",
        "59": " * followed by each defined {@link BackgroundImage}."
      },
      "id": 64650899,
      "filename": "Background.java"
    },
    {
      "repo": "git://github.com/lmco/eurekastreams.git",
      "language": "Java",
      "linescount": 245,
      "location": "/server/src/main/java/org/eurekastreams/server/domain",
      "name": "eurekastreams",
      "url": "https://searchcode.com/codesearch/view/7163771/",
      "md5hash": "9b869fb1bfc0e3f0b25258384df378ba",
      "lines": {
        "32": "/**",
        "33": " * Represents the background of a person using the system.",
        "36": "@Entity",
        "37": "public class Background extends DomainEntity implements Serializable",
        "39": "    /**",
        "40": "     * Private reference back to the person for mapper queries originating with the background.",
        "47": "    /**",
        "48": "     * The skills that are contained in this background.",
        "51": "    @OneToMany(fetch = FetchType.EAGER, cascade = { CascadeType.ALL })",
        "52": "    @JoinTable(name = \"Background_Skills\", inverseJoinColumns = {",
        "53": "    // inverse join column",
        "54": "    @JoinColumn(table = \"BackgroundItem\", name = \"BackgroundItem_Id\", referencedColumnName = \"id\") })",
        "55": "    private List<BackgroundItem> skills;",
        "56": "",
        "57": "    /**",
        "58": "     * The interests that are contained in this background."
      },
      "id": 7163771,
      "filename": "Background.java"
    },
    {
      "repo": "https://bitbucket.org/netbeans/main_contrib",
      "language": "Java",
      "linescount": 201,
      "location": "/tasklist.core/src/org/netbeans/modules/tasklist/core",
      "name": "main_contrib",
      "url": "https://searchcode.com/codesearch/view/122824244/",
      "md5hash": "97ec23326409f1cd24f2bbb80e97c439",
      "lines": {
        "64": "",
        "65": "    private Background(Thread peer, Cancellable c) {",
        "69": "",
        "70": "    public static Background execute(Runnable run) {",
        "81": "            RequestProcessor.getDefault().post(extractor, 0, Thread.MIN_PRIORITY);",
        "72": "        if (useHack()) {",
        "73": "            Thread t = new Thread(new Wrapper(run), \"Background\");  // NOI18N",
        "77": "",
        "78": "            return new Background(t, cancel);",
        "48": "/**",
        "49": " * Workarounds RequestProcessor (and JVM) background threads behaviour",
        "82": "            return new Background(extractor.getThread(), cancel);",
        "56": " */",
        "57": "public final class Background {"
      },
      "id": 122824244,
      "filename": "Background.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 27496,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 15317,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4778,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 762,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 357,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 97,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 85,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 43,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 7,
      "source": "Gitorious",
      "id": 10
    }
  ]
}