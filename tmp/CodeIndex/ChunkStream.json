{
  "matchterm": "ChunkStream",
  "previouspage": null,
  "searchterm": "ChunkStream",
  "query": "ChunkStream",
  "language_filters": [
    {
      "count": 22,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 22,
  "results": [
    {
      "repo": "https://bitbucket.org/xiaoqiangnk/openjdk-mips",
      "language": "Java",
      "linescount": 1173,
      "location": "/jdk/src/share/classes/com/sun/imageio/plugins/png",
      "name": "openjdk-mips",
      "url": "https://searchcode.com/codesearch/view/118248586/",
      "md5hash": "3e524b94646d268be077e6bf8b6eff99",
      "lines": {
        "416": "        if (metadata.gAMA_present) {",
        "417": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);",
        "642": "        if (metadata.tIME_present) {",
        "643": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "516": "        if (metadata.tRNS_present) {",
        "517": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "424": "        if (metadata.iCCP_present) {",
        "425": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "559": "        if (metadata.bKGD_present) {",
        "560": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "401": "        if (metadata.cHRM_present) {",
        "402": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "436": "        if (metadata.sBIT_present) {",
        "437": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "502": "        if (metadata.hIST_present) {",
        "503": "            ChunkStream cs = new ChunkStream(PNGImageReader.hIST_TYPE, stream);"
      },
      "id": 118248586,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/xmlgraphics-commons",
      "language": "Java",
      "linescount": 1053,
      "location": "/src/java/org/apache/xmlgraphics/image/codec/png",
      "name": "xmlgraphics-commons",
      "url": "https://searchcode.com/codesearch/view/59766570/",
      "md5hash": "f31e0004dc5c070feee38658c504a991",
      "lines": {
        "577": "        if (param.isSignificantBitsSet()) {",
        "578": "            ChunkStream cs = new ChunkStream(\"sBIT\");",
        "549": "        if (param.isGammaSet() || param.isSRGBIntentSet()) {",
        "550": "            ChunkStream cs = new ChunkStream(\"gAMA\");",
        "519": "    private void writeIEND() throws IOException {",
        "520": "        ChunkStream cs = new ChunkStream(\"IEND\");",
        "649": "            ChunkStream cs = new ChunkStream(\"hIST\");",
        "664": "            (colorType != PNG_COLOR_RGB_ALPHA)) {",
        "695": "                ChunkStream cs = new ChunkStream(\"tRNS\");",
        "648": "        if (param.isPaletteHistogramSet()) {",
        "530": "        if (param.isChromaticitySet() || param.isSRGBIntentSet()) {",
        "531": "            ChunkStream cs = new ChunkStream(\"cHRM\");",
        "694": "            if (nonOpaque >= 0) {",
        "567": "        if (param.isICCProfileDataSet()) {",
        "568": "            ChunkStream cs = new ChunkStream(\"iCCP\");",
        "665": "            ChunkStream cs = new ChunkStream(\"tRNS\");"
      },
      "id": 59766570,
      "filename": "PNGImageEncoder.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 1173,
      "location": "/MRI-J/jdk/src/share/classes/com/sun/imageio/plugins/png",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17108751/",
      "md5hash": "e98aaae23c054354bd4cbeb2fef6f2b4",
      "lines": {
        "416": "        if (metadata.gAMA_present) {",
        "417": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);",
        "642": "        if (metadata.tIME_present) {",
        "643": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "516": "        if (metadata.tRNS_present) {",
        "517": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "424": "        if (metadata.iCCP_present) {",
        "425": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "559": "        if (metadata.bKGD_present) {",
        "560": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "401": "        if (metadata.cHRM_present) {",
        "402": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "436": "        if (metadata.sBIT_present) {",
        "437": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "502": "        if (metadata.hIST_present) {",
        "503": "            ChunkStream cs = new ChunkStream(PNGImageReader.hIST_TYPE, stream);"
      },
      "id": 17108751,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "http://h2database.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 812,
      "location": "/h2/src/tools/org/h2/dev/fs",
      "name": "h2database",
      "url": "https://searchcode.com/codesearch/view/63792823/",
      "md5hash": "a69d216d16bc4f61b48a5fab2730a18a",
      "lines": {
        "417": "            Collections.sort(segmentIn);",
        "418": "            ChunkStream s = segmentIn.get(0);",
        "619": "    static class ChunkStream implements Comparable<ChunkStream> {",
        "394": "        inPos = 0;",
        "395": "        ArrayList<ChunkStream> segmentIn = new ArrayList<ChunkStream>();",
        "588": "        inPos = 0;",
        "589": "        ArrayList<ChunkStream> segmentIn = new ArrayList<ChunkStream>();",
        "398": "            in.skip(segmentStart.get(i));",
        "399": "            ChunkStream s = new ChunkStream();",
        "592": "            f.skip(segmentStart.get(i));",
        "593": "            ChunkStream s = new ChunkStream();",
        "602": "            Collections.sort(segmentIn);",
        "603": "            ChunkStream s = segmentIn.get(0);",
        "618": "     */",
        "638": "        public int compareTo(ChunkStream o) {",
        "637": "        @Override"
      },
      "id": 63792823,
      "filename": "ArchiveTool.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 1063,
      "location": "/commons/src/main/java/org/apache/xmlgraphics/image/codec/png",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96979050/",
      "md5hash": "519b2c4d7d63c2dd1186a090d5a6c452",
      "lines": {
        "704": "            if (nonOpaque >= 0) {",
        "577": "        if (param.isICCProfileDataSet()) {",
        "578": "            ChunkStream cs = new ChunkStream(\"iCCP\");",
        "675": "            ChunkStream cs = new ChunkStream(\"tRNS\");",
        "705": "                ChunkStream cs = new ChunkStream(\"tRNS\");",
        "587": "        if (param.isSignificantBitsSet()) {",
        "588": "            ChunkStream cs = new ChunkStream(\"sBIT\");",
        "658": "        if (param.isPaletteHistogramSet()) {",
        "559": "        if (param.isGammaSet() || param.isSRGBIntentSet()) {",
        "560": "            ChunkStream cs = new ChunkStream(\"gAMA\");",
        "529": "    private void writeIEND() throws IOException {",
        "530": "        ChunkStream cs = new ChunkStream(\"IEND\");",
        "659": "            ChunkStream cs = new ChunkStream(\"hIST\");",
        "674": "            && (colorType != PNG_COLOR_RGB_ALPHA)) {",
        "540": "        if (param.isChromaticitySet() || param.isSRGBIntentSet()) {",
        "541": "            ChunkStream cs = new ChunkStream(\"cHRM\");"
      },
      "id": 96979050,
      "filename": "PNGImageEncoder.java"
    },
    {
      "repo": "https://bitbucket.org/hamishm/haiku-jdk-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "haiku-jdk-jdk",
      "url": "https://searchcode.com/codesearch/view/127228499/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 127228499,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/chegar/jigsaw_jigsaw_jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "jigsaw_jigsaw_jdk",
      "url": "https://searchcode.com/codesearch/view/129545279/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 129545279,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/chegar/jigsaw_modulefileparser",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "jigsaw_modulefileparser",
      "url": "https://searchcode.com/codesearch/view/129565016/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 129565016,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/sreilly/openjdk7u-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "openjdk7u-jdk",
      "url": "https://searchcode.com/codesearch/view/130313193/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 130313193,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/infinitekind/openjdk7u-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "openjdk7u-jdk",
      "url": "https://searchcode.com/codesearch/view/132212477/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 132212477,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/psandoz/lambda-jdk-pipeline-patches",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "lambda-jdk-pipeline-patches",
      "url": "https://searchcode.com/codesearch/view/132818830/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 132818830,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/psandoz/lambda-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "lambda-jdk",
      "url": "https://searchcode.com/codesearch/view/132838154/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 132838154,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/screenconnect/openjdk8-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "openjdk8-jdk",
      "url": "https://searchcode.com/codesearch/view/136817027/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 136817027,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/adoptopenjdk/jdk8-jdk",
      "language": "Java",
      "linescount": 1172,
      "location": "/src/share/classes/com/sun/imageio/plugins/png",
      "name": "jdk8-jdk",
      "url": "https://searchcode.com/codesearch/view/137374178/",
      "md5hash": "b97768042a51d66101a94dca17a8f5d4",
      "lines": {
        "420": "        if (metadata.gAMA_present) {",
        "470": "        if (metadata.sRGB_present) {",
        "646": "        if (metadata.tIME_present) {",
        "647": "            ChunkStream cs = new ChunkStream(PNGImageReader.tIME_TYPE, stream);",
        "520": "        if (metadata.tRNS_present) {",
        "521": "            ChunkStream cs = new ChunkStream(PNGImageReader.tRNS_TYPE, stream);",
        "428": "        if (metadata.iCCP_present) {",
        "429": "            ChunkStream cs = new ChunkStream(PNGImageReader.iCCP_TYPE, stream);",
        "563": "        if (metadata.bKGD_present) {",
        "564": "            ChunkStream cs = new ChunkStream(PNGImageReader.bKGD_TYPE, stream);",
        "405": "        if (metadata.cHRM_present) {",
        "406": "            ChunkStream cs = new ChunkStream(PNGImageReader.cHRM_TYPE, stream);",
        "471": "            ChunkStream cs = new ChunkStream(PNGImageReader.sRGB_TYPE, stream);",
        "440": "        if (metadata.sBIT_present) {",
        "441": "            ChunkStream cs = new ChunkStream(PNGImageReader.sBIT_TYPE, stream);",
        "421": "            ChunkStream cs = new ChunkStream(PNGImageReader.gAMA_TYPE, stream);"
      },
      "id": 137374178,
      "filename": "PNGImageWriter.java"
    },
    {
      "repo": "https://bitbucket.org/spacecubes/space-cubes.git",
      "language": "Java",
      "linescount": 93,
      "location": "/src/com/github/limdingwen/SpaceCubes/File",
      "name": "space-cubes",
      "url": "https://searchcode.com/codesearch/view/42994693/",
      "md5hash": "d27becd92f56e21d52e5d0c9d69d79d8",
      "lines": {
        "64": "\t\t\tchunkStream.write(metas, World.CHUNK_HEIGHT*World.CHUNK_LENGTH*World.CHUNK_LENGTH, World.CHUNK_HEIGHT*World.CHUNK_LENGTH*World.CHUNK_LENGTH); // Meta",
        "65": "\t\t} catch (IndexOutOfBoundsException ex) {",
        "67": "",
        "68": "\t\t\tchunkStream.close();",
        "71": "",
        "40": "\t\ttry {",
        "41": "\t\t\tchunkStream = new FileOutputStream(file);",
        "72": "\t\tchunkStream.close();",
        "22": "\tpublic static void encodeChunk(String worldName, Chunk chunk, int x, int y) throws FileNotFoundException, IOException {",
        "23": "\t\tFileOutputStream chunkStream = null;",
        "62": "\t\ttry {",
        "63": "\t\t\tchunkStream.write(ids, 0, World.CHUNK_HEIGHT*World.CHUNK_LENGTH*World.CHUNK_LENGTH); // ID"
      },
      "id": 42994693,
      "filename": "ChunkLevelEncoder.java"
    },
    {
      "repo": "https://github.com/rajapaju/jersey.git",
      "language": "Java",
      "linescount": 328,
      "location": "/core-client/src/main/java/org/glassfish/jersey/client",
      "name": "jersey",
      "url": "https://searchcode.com/codesearch/view/73024136/",
      "md5hash": "b6ae21bc3cc58bd25bc55def04458140",
      "lines": {
        "308": "            } else {",
        "309": "                ByteArrayInputStream chunkStream = new ByteArrayInputStream(chunk);",
        "318": "                        chunkStream,",
        "317": "                        propertiesDelegate,"
      },
      "id": 73024136,
      "filename": "ChunkedInput.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 124,
      "location": "/ppt/scratchpad/src/org/apache/poi/hdgf/dev",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97396300/",
      "md5hash": "f08b2eea782e030096ccaf8367f64ad3",
      "lines": {
        "100": "\t\t}",
        "101": "\t\tif(stream instanceof ChunkStream) {",
        "102": "\t\t\tChunkStream cs = (ChunkStream)stream;",
        "103": "\t\t\tSystem.out.println(ind + \"  Has \" + cs.getChunks().length +",
        "25": "import org.apache.poi.hdgf.pointers.Pointer;",
        "26": "import org.apache.poi.hdgf.streams.ChunkStream;"
      },
      "id": 97396300,
      "filename": "VSDDumper.java"
    },
    {
      "repo": "https://github.com/scottcagno/sphinx4.git",
      "language": "Java",
      "linescount": 128,
      "location": "/sphinx4-core/src/main/java/edu/cmu/sphinx/tools/aligner",
      "name": "sphinx4",
      "url": "https://searchcode.com/codesearch/view/93699372/",
      "md5hash": "409b6b289d3737755ed8b7385ea66825",
      "lines": {
        "120": "        inputStream.skip(offset * bitrate);",
        "121": "        AudioInputStream chunkStream =",
        "122": "            new AudioInputStream(inputStream, audioFormat, length * bitrate);",
        "123": "        AudioSystem.write(chunkStream, fileFormat.getType(), new File(dstPath));",
        "124": "        inputStream.close();",
        "125": "        chunkStream.close();"
      },
      "id": 93699372,
      "filename": "Aligner.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 103,
      "location": "/ppt/scratchpad/testcases/org/apache/poi/hdgf/streams",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97397248/",
      "md5hash": "3eb320077de8a4bc1854a83f8ac115d8",
      "lines": {
        "80": "\t\t\t\tChunkStream cStream = (ChunkStream)stream;",
        "81": "\t\t\t\tcStream.findChunks();",
        "78": "\t\t\t\tStream.createStream(ptrs[i], contents, chunkFactory, ptrFactory);",
        "79": "\t\t\tif(stream instanceof ChunkStream) {"
      },
      "id": 97397248,
      "filename": "TestStreamBugs.java"
    },
    {
      "repo": "https://github.com/sirdyf/jersey.git",
      "language": "Java",
      "linescount": 332,
      "location": "/core-client/src/main/java/org/glassfish/jersey/client",
      "name": "jersey",
      "url": "https://searchcode.com/codesearch/view/70131381/",
      "md5hash": "a3dbf35174d74fa37f11eb11305ceb26",
      "lines": {
        "320": "                        propertiesDelegate,",
        "321": "                        chunkStream,",
        "306": "            } else {",
        "307": "                ByteArrayInputStream chunkStream = new ByteArrayInputStream(chunk);"
      },
      "id": 70131381,
      "filename": "ChunkedInput.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 13,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 8,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1,
      "source": "Google Code",
      "id": 1
    }
  ]
}