{
  "matchterm": "Types",
  "previouspage": null,
  "searchterm": "Types",
  "query": "Types",
  "language_filters": [
    {
      "count": 161603,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 161603,
  "results": [
    {
      "repo": "https://bitbucket.org/gargdeendayal/procyon",
      "language": "Java",
      "linescount": 186,
      "location": "/Procyon.Reflection/src/main/java/com/strobel/reflection",
      "name": "Procyon",
      "url": "https://searchcode.com/codesearch/view/67351613/",
      "md5hash": "aade2eb72ac431d53be65884c1697c32",
      "lines": {
        "48": "public final class Types {",
        "1": "/*",
        "2": " * Types.java",
        "181": "    static void ensureRegistered() {",
        "182": "        if (Types.Object != Type.CACHE.find(java.lang.Object.class)) {",
        "49": "",
        "184": "        }",
        "183": "            throw new IllegalStateException(\"Standard Java types were not successfully registered!\");",
        "50": "    private Types() {}",
        "47": " */"
      },
      "id": 67351613,
      "filename": "Types.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 86,
      "location": "/gcc-4.2.1/libjava/classpath/java/sql",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12732674/",
      "md5hash": "18ae6a542e389d1b44c161b83c9264c6",
      "lines": {
        "1": "/* Types.java -- SQL type constants",
        "2": "   Copyright (C) 1999, 2001 Free Software Foundation, Inc.",
        "82": "  private Types()",
        "81": "  // This class can't be instantiated.",
        "41": "/**",
        "42": " * This class contains constants that are used to identify SQL data types.",
        "45": " */",
        "46": "public class Types "
      },
      "id": 12732674,
      "filename": "Types.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 86,
      "location": "/libjava/classpath/java/sql",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127597747/",
      "md5hash": "6a3948f9fb801ffb2bac46869f9e4ee2",
      "lines": {
        "1": "/* Types.java -- SQL type constants",
        "2": "   Copyright (C) 1999, 2001 Free Software Foundation, Inc.",
        "82": "  private Types()",
        "81": "  // This class can't be instantiated.",
        "41": "/**",
        "42": " * This class contains constants that are used to identify SQL data types.",
        "45": " */",
        "46": "public class Types"
      },
      "id": 127597747,
      "filename": "Types.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 86,
      "location": "/libjava/classpath/java/sql",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130225008/",
      "md5hash": "6a3948f9fb801ffb2bac46869f9e4ee2",
      "lines": {
        "1": "/* Types.java -- SQL type constants",
        "2": "   Copyright (C) 1999, 2001 Free Software Foundation, Inc.",
        "82": "  private Types()",
        "81": "  // This class can't be instantiated.",
        "41": "/**",
        "42": " * This class contains constants that are used to identify SQL data types.",
        "45": " */",
        "46": "public class Types"
      },
      "id": 130225008,
      "filename": "Types.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 86,
      "location": "/libjava/classpath/java/sql",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37947406/",
      "md5hash": "6a3948f9fb801ffb2bac46869f9e4ee2",
      "lines": {
        "1": "/* Types.java -- SQL type constants",
        "2": "   Copyright (C) 1999, 2001 Free Software Foundation, Inc.",
        "82": "  private Types()",
        "81": "  // This class can't be instantiated.",
        "41": "/**",
        "42": " * This class contains constants that are used to identify SQL data types.",
        "45": " */",
        "46": "public class Types"
      },
      "id": 37947406,
      "filename": "Types.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 86,
      "location": "/libjava/classpath/java/sql",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46813041/",
      "md5hash": "6a3948f9fb801ffb2bac46869f9e4ee2",
      "lines": {
        "1": "/* Types.java -- SQL type constants",
        "2": "   Copyright (C) 1999, 2001 Free Software Foundation, Inc.",
        "82": "  private Types()",
        "81": "  // This class can't be instantiated.",
        "41": "/**",
        "42": " * This class contains constants that are used to identify SQL data types.",
        "45": " */",
        "46": "public class Types"
      },
      "id": 46813041,
      "filename": "Types.java"
    },
    {
      "repo": "git://github.com/functionaljava/functionaljava.git",
      "language": "Java",
      "linescount": 7,
      "location": "/core/src/main/java/fj",
      "name": "functionaljava",
      "url": "https://searchcode.com/codesearch/view/15152230/",
      "md5hash": "003497e4294368e237bb614c32d969bd",
      "lines": {
        "1": "/**",
        "2": " * Types that set the premise for the existence of Functional Java."
      },
      "id": 15152230,
      "filename": "package-info.java"
    },
    {
      "repo": "https://github.com/akiellor/dynjs.git",
      "language": "Java",
      "linescount": 768,
      "location": "/src/main/java/org/dynjs/runtime",
      "name": "dynjs",
      "url": "https://searchcode.com/codesearch/view/75813298/",
      "md5hash": "8bfdd634061b7aed8cba33b36a8a1a60",
      "lines": {
        "128": "",
        "129": "        if (o == Types.NULL) {",
        "7": "import org.dynjs.exception.ThrowException;",
        "8": "import org.dynjs.runtime.builtins.types.bool.DynBoolean;",
        "9": "import org.dynjs.runtime.builtins.types.number.DynNumber;",
        "10": "import org.dynjs.runtime.builtins.types.string.DynString;",
        "11": "",
        "12": "public class Types {",
        "270": "",
        "271": "        if (o == Types.UNDEFINED || o == Types.NULL) {",
        "17": "    public static void checkObjectCoercible(ExecutionContext context, Object o) {",
        "18": "        if (o == Types.UNDEFINED) {",
        "21": "",
        "22": "        if (o == Types.NULL) {",
        "29": "    public static void checkObjectCoercible(ExecutionContext context, Object o, String debug) {",
        "30": "        if (o == Types.UNDEFINED) {"
      },
      "id": 75813298,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/gbervik/Resteasy.git",
      "language": "Java",
      "linescount": 611,
      "location": "/jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/util",
      "name": "Resteasy",
      "url": "https://searchcode.com/codesearch/view/70888335/",
      "md5hash": "dd7ebb6849b8dcedabcc05d3a0a9509c",
      "lines": {
        "160": "",
        "161": "      Class[] paramTypes = intfMethod.getParameterTypes();",
        "162": "",
        "163": "      if (declaringClass.getTypeParameters().length > 0 && paramTypes.length > 0)",
        "164": "      {",
        "137": "      if (!method.getName().equals(intfMethod.getName())) return false;",
        "138": "      if (method.getParameterTypes().length != intfMethod.getParameterTypes().length) return false;",
        "139": "",
        "140": "      for (int i = 0; i < method.getParameterTypes().length; i++)",
        "141": "      {",
        "142": "         Class rootParam = method.getParameterTypes()[i];",
        "143": "         Class intfParam = intfMethod.getParameterTypes()[i];",
        "144": "         if (!intfParam.isAssignableFrom(rootParam)) return false;",
        "17": " */",
        "18": "public class Types"
      },
      "id": 70888335,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/ergatech/linq4j.git",
      "language": "Java",
      "linescount": 489,
      "location": "/src/main/java/net/hydromatic/linq4j/expressions",
      "name": "linq4j",
      "url": "https://searchcode.com/codesearch/view/72932370/",
      "md5hash": "671150143b21fe00e1de3fe28ee0ec72",
      "lines": {
        "260": "     * Includes in its search inherited methods and methods with wider argument",
        "261": "     * types.",
        "264": "     * @param methodName Name of method",
        "265": "     * @param argumentTypes Types of arguments",
        "274": "            return clazz.getMethod(methodName, argumentTypes);",
        "31": "public class Types {",
        "271": "        Class clazz, String methodName, Class... argumentTypes)",
        "273": "        try {",
        "270": "    public static Method lookupMethod(",
        "222": "        if (varArgs) {",
        "279": "                        method.isVarArgs(),",
        "280": "                        method.getParameterTypes(),",
        "219": "    static boolean allAssignable(",
        "220": "        boolean varArgs, Class[] parameterTypes, Class[] argumentTypes)",
        "30": " */",
        "223": "            if (argumentTypes.length < parameterTypes.length - 1) {"
      },
      "id": 72932370,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/rjohanss/gmp.graphiti.git",
      "language": "Java",
      "linescount": 354,
      "location": "/examples/org.eclipse.graphiti.examples.chess/src-gen/org/eclipse/graphiti/examples/mm/chess",
      "name": "gmp.graphiti",
      "url": "https://searchcode.com/codesearch/view/72293945/",
      "md5hash": "f51f53a93dd6328a006825afefccedac",
      "lines": {
        "32": "public enum Types implements Enumerator {",
        "224": "\t * A public read-only list of all the '<em><b>Types</b></em>' enumerators.",
        "223": "\t/**",
        "264": "\t * Returns the '<em><b>Types</b></em>' literal with the specified integer value.",
        "263": "\t/**",
        "206": "\t/**",
        "207": "\t * An array of all the '<em><b>Types</b></em>' enumerators.",
        "211": "\t */",
        "212": "\tprivate static final Types[] VALUES_ARRAY =",
        "213": "\t\tnew Types[] {",
        "214": "\t\t\tNONE,",
        "24": " * <!-- begin-user-doc -->",
        "25": " * A representation of the literals of the enumeration '<em><b>Types</b></em>',",
        "27": " * <!-- end-user-doc -->",
        "28": " * @see org.eclipse.graphiti.examples.mm.chess.ChessPackage#getTypes()",
        "31": " */"
      },
      "id": 72293945,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/palvarez89/Webapp-NodeJS.git",
      "language": "Java",
      "linescount": 217,
      "location": "/bridge-java/src/org/meshpoint/anode/idl",
      "name": "Webapp-NodeJS",
      "url": "https://searchcode.com/codesearch/view/74839766/",
      "md5hash": "603861cf26a35f26ef8071121bfb9d6d",
      "lines": {
        "139": "\t\t/* handle interface types */",
        "36": " * or return value of an operation.",
        "37": " * For interface types, and array<interface> types, the type",
        "134": "\t\t}",
        "135": "\t\t/* handle basic types */",
        "42": " */",
        "43": "public class Types {",
        "138": "\t\t\treturn baseClassIndex;",
        "111": "\t\t}",
        "112": "\t\t/* handle sequence types; mutidimensional types are not supported */",
        "52": "\t/*",
        "53": "\t * basic types",
        "118": "\t\t}",
        "119": "\t\t/* handle array types; mutidimensional types are not supported */",
        "125": "\t\t}",
        "126": "\t\t/* handle dictionary types */"
      },
      "id": 74839766,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/vkhoroshko/voltdb.git",
      "language": "Java",
      "linescount": 1204,
      "location": "/src/hsqldb19b3/org/hsqldb_voltpatches",
      "name": "voltdb",
      "url": "https://searchcode.com/codesearch/view/95179876/",
      "md5hash": "16c7027ba2fde8e2b437d3c839e9b3da",
      "lines": {
        "555": "        javaTypeNumbers.put(\"java.lang.Double\", Types.SQL_DOUBLE);",
        "130": "    public static final int SQL_MULTISET_LOCATOR = 56;",
        "131": "    public static final int SQL_ALL_TYPES        = 0;",
        "40": "/**",
        "41": " * Defines the constants that are used to identify SQL types for HSQLDB JDBC",
        "42": " * inteface type reporting. The actual type constant values are equivalent",
        "43": " * to those defined in the latest java.sql.Types, where available,",
        "556": "        javaTypeNumbers.put(\"java.lang.String\", Types.SQL_VARCHAR);",
        "557": "        javaTypeNumbers.put(DateClassName, Types.SQL_DATE);",
        "558": "        javaTypeNumbers.put(TimeClassName, Types.SQL_TIME);",
        "50": " */",
        "51": "public class Types {",
        "553": "        javaTypeNumbers.put(\"java.lang.Integer\", Types.SQL_INTEGER);",
        "539": "",
        "540": "// lookup for types",
        "554": "        javaTypeNumbers.put(\"double\", Types.SQL_DOUBLE);"
      },
      "id": 95179876,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/zheltkov/Resteasy.git",
      "language": "Java",
      "linescount": 562,
      "location": "/jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/util",
      "name": "Resteasy",
      "url": "https://searchcode.com/codesearch/view/96901014/",
      "md5hash": "9618be90cde6ee85a8c42c45f19d4f67",
      "lines": {
        "129": "",
        "130": "      Class[] paramTypes = intfMethod.getParameterTypes();",
        "131": "",
        "132": "      if (declaringClass.getTypeParameters().length > 0 && paramTypes.length > 0)",
        "133": "      {",
        "134": "         Type[] intfTypes = findParameterizedTypes(clazz, declaringClass);",
        "138": "         {",
        "139": "            if (intfTypes != null && i < intfTypes.length)",
        "140": "            {",
        "141": "               typeVarMap.put(vars[i].getName(), intfTypes[i]);",
        "17": " */",
        "18": "public class Types",
        "148": "         }",
        "149": "         Type[] paramGenericTypes = intfMethod.getGenericParameterTypes();",
        "150": "         paramTypes = new Class[paramTypes.length];"
      },
      "id": 96901014,
      "filename": "Types.java"
    },
    {
      "repo": "https://bitbucket.org/taraathan/oojdrew",
      "language": "Java",
      "linescount": 752,
      "location": "/src/main/java/org/ruleml/oojdrew/util",
      "name": "oojdrew",
      "url": "https://searchcode.com/codesearch/view/102506599/",
      "md5hash": "325d10246c2aaf911b15b21d9f50b573",
      "lines": {
        "129": "         */",
        "130": "        public static Vector tempTypes = new Vector();",
        "163": "        types = new Vector();",
        "164": "        types.add(OBJECT);",
        "133": "        /**",
        "134": "         * A dag that represents the types and their inheritance pathways.",
        "139": "\t\t\t\t",
        "140": "        static Logger log = Logger.getLogger(\"jdrew.oo.util.Types\");",
        "162": "        dag = new DirectedAcyclicGraph();",
        "142": "    /**",
        "143": "     * The static initialization of the base types in the type system.",
        "145": "    static {",
        "146": "        types.add(OBJECT);",
        "26": "/**",
        "27": " * This class represents the types that are defined within OO jDREW's built-in"
      },
      "id": 102506599,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/SumitOnGit/org.parallelj.git",
      "language": "Java",
      "linescount": 256,
      "location": "/parallelj-tools/src/main/java/org/parallelj/tools/util",
      "name": "org.parallelj",
      "url": "https://searchcode.com/codesearch/view/93302134/",
      "md5hash": "fc009ee29c1f6c640851231e49522f17",
      "lines": {
        "64": "\t * @return",
        "65": "\t * @see javax.lang.model.util.Types#asElement(javax.lang.model.type.TypeMirror)",
        "131": "\t * @return",
        "132": "\t * @see javax.lang.model.util.Types#getArrayType(javax.lang.model.type.TypeMirror)",
        "166": "\t * @return",
        "167": "\t * @see javax.lang.model.util.Types#getNoType(javax.lang.model.type.TypeKind)",
        "74": "\t * @return",
        "75": "\t * @see javax.lang.model.util.Types#asMemberOf(javax.lang.model.type.DeclaredType,",
        "44": "",
        "45": "public class Types {",
        "142": "\t * @return",
        "143": "\t * @see javax.lang.model.util.Types#getDeclaredType(javax.lang.model.type.DeclaredType,",
        "174": "\t * @return",
        "175": "\t * @see javax.lang.model.util.Types#getNullType()",
        "156": "\t * @return",
        "157": "\t * @see javax.lang.model.util.Types#getDeclaredType(javax.lang.model.element.TypeElement,"
      },
      "id": 93302134,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/danielcweeks/incubator-parquet-mr.git",
      "language": "Java",
      "linescount": 651,
      "location": "/parquet-column/src/main/java/parquet/schema",
      "name": "incubator-parquet-mr",
      "url": "https://searchcode.com/codesearch/view/96356133/",
      "md5hash": "91a15f6a208bd0b5cdbd4ba66735c5a7",
      "lines": {
        "32": " * version) to return a group builder. Group builders provide {@code required}",
        "33": " * and {@code optional} to add primitive types, which return primitive builders",
        "10": "/**",
        "11": " * This class provides fluent builders that produce Parquet schema Types.",
        "12": " * <p>",
        "13": " * The most basic use is to build primitive types:",
        "14": " * <pre>",
        "15": " *   Types.required(INT64).named(\"id\");",
        "16": " *   Types.optional(INT32).named(\"number\");",
        "17": " * </pre>",
        "23": " * <pre>",
        "24": " *   Types.required(BINARY).as(UTF8).named(\"username\");",
        "25": " *   Types.optional(FIXED_LEN_BYTE_ARRAY).length(20).named(\"sha1\");",
        "26": " * </pre>",
        "27": " * <p>",
        "28": " * Optional types are built using {@link #optional(PrimitiveTypeName)} to get"
      },
      "id": 96356133,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/aniket486/incubator-parquet-mr.git",
      "language": "Java",
      "linescount": 603,
      "location": "/parquet-column/src/main/java/parquet/schema",
      "name": "incubator-parquet-mr",
      "url": "https://searchcode.com/codesearch/view/96471753/",
      "md5hash": "6e40d334d6c15e33d60dd194d576872c",
      "lines": {
        "8": "/**",
        "9": " * This class provides fluent builders that produce Parquet schema Types.",
        "10": " * <p>",
        "11": " * The most basic use is to build primitive types:",
        "12": " * <pre>",
        "13": " *   Types.required(INT64).named(\"id\");",
        "14": " *   Types.optional(INT32).named(\"number\");",
        "15": " * </pre>",
        "21": " * <pre>",
        "22": " *   Types.required(BINARY).as(UTF8).named(\"username\");",
        "23": " *   Types.optional(FIXED_LEN_BYTE_ARRAY).length(20).named(\"sha1\");",
        "24": " * </pre>",
        "25": " * <p>",
        "26": " * Optional types are built using {@link #optional(PrimitiveTypeName)} to get",
        "30": " * version) to return a group builder. Group builders provide {@code required}",
        "31": " * and {@code optional} to add primitive types, which return primitive builders"
      },
      "id": 96471753,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/felipero/examples.git",
      "language": "Java",
      "linescount": 1199,
      "location": "/parsers/tpdsl-code/semantics/safety",
      "name": "examples",
      "url": "https://searchcode.com/codesearch/view/107472393/",
      "md5hash": "431787e70da970edf2fb25a4df1f6b02",
      "lines": {
        "162": "                case 3 :",
        "163": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g:20:7: ret",
        "8": "***/",
        "9": "// $ANTLR 3.2 Sep 23, 2009 12:02:23 /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g 2009-09-23 17:37:51",
        "140": "                case 1 :",
        "77": "",
        "78": "        public Types(TreeNodeStream input) {",
        "141": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g:18:9: exprRoot",
        "16": "import java.util.HashMap;",
        "17": "public class Types extends TreeFilter {",
        "174": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g:21:7: assignment",
        "173": "                case 4 :",
        "151": "                case 2 :",
        "152": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g:19:7: decl",
        "185": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/safety/Types.g:22:7: ifstat",
        "184": "                case 5 :"
      },
      "id": 107472393,
      "filename": "Types.java"
    },
    {
      "repo": "https://github.com/felipero/examples.git",
      "language": "Java",
      "linescount": 1124,
      "location": "/parsers/tpdsl-code/semantics/promote",
      "name": "examples",
      "url": "https://searchcode.com/codesearch/view/107472508/",
      "md5hash": "2acc119ce0655fb46f40981a9bb007e0",
      "lines": {
        "193": "    // $ANTLR start \"decl\"",
        "194": "    // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:25:1: decl : ^( VAR_DECL . ID (init= . )? ) ;",
        "135": "                case 1 :",
        "8": "***/",
        "9": "// $ANTLR 3.2 Sep 23, 2009 12:02:23 /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g 2009-09-23 17:37:49",
        "199": "        try {",
        "16": "import java.util.HashMap;",
        "17": "public class Types extends TreeFilter {",
        "146": "                case 2 :",
        "147": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:19:9: decl",
        "169": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:21:9: assignment",
        "136": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:18:9: exprRoot",
        "168": "                case 4 :",
        "200": "            // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:25:5: ( ^( VAR_DECL . ID (init= . )? ) )",
        "157": "                case 3 :",
        "158": "                    // /Users/parrt/research/book/TPDSL/Book/code/semantics/promote/Types.g:20:9: ret"
      },
      "id": 107472508,
      "filename": "Types.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 75118,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 65945,
      "source": "Github",
      "id": 2
    },
    {
      "count": 16774,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1179,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1089,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 739,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 563,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 178,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 18,
      "source": "Gitorious",
      "id": 10
    }
  ]
}