{
  "matchterm": "ImageUtils",
  "previouspage": null,
  "searchterm": "ImageUtils",
  "query": "ImageUtils",
  "language_filters": [
    {
      "count": 1309,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1309,
  "results": [
    {
      "repo": "https://github.com/arden/jrails.git",
      "language": "Java",
      "linescount": 199,
      "location": "/src/main/java/com/jrails/commons/utils",
      "name": "jrails",
      "url": "https://searchcode.com/codesearch/view/111011953/",
      "md5hash": "29fd82dacea5de6201cd98b5f78ac548",
      "lines": {
        "128": "     * @param compress   Set to <code>true</code> if you want to compress the image.",
        "1": "/* ImageUtils.java",
        "2": " * --------------------------------------",
        "37": " */",
        "38": "public class ImageUtils {",
        "167": "        if (type == ImageUtils.IMAGE_PNG && hasAlpha(image)) {",
        "110": "     * @param toFileName The filename to use",
        "111": "     * @param type       The image type. Use <code>ImageUtils.IMAGE_JPEG</code> to save as JPEG",
        "112": "     *                   images, or <code>ImageUtils.IMAGE_PNG</code> to save as PNG.",
        "113": "     * @return <code>false</code> if no appropriate writer is found",
        "166": "    public static BufferedImage createBufferedImage(Image image, int type, int w, int h) {",
        "125": "     * @param toFileName The filename to use",
        "126": "     * @param type       The image type. Use <code>ImageUtils.IMAGE_JPEG</code> to save as JPEG",
        "127": "     *                   images, or <code>ImageUtils.IMAGE_PNG</code> to save as PNG."
      },
      "id": 111011953,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://code.google.com/p/ingatan/",
      "language": "Java",
      "linescount": 699,
      "location": "/src/org/ingatan/image",
      "name": "ingatan",
      "url": "https://searchcode.com/codesearch/view/141785/",
      "md5hash": "84d560877376ce9d1832acaf67490222",
      "lines": {
        "640": "        } catch (OutOfMemoryError e) {",
        "1": "/*",
        "2": " * ImageUtils.java",
        "67": " */",
        "68": "public class ImageUtils {",
        "638": "        } catch (Exception ignore) {",
        "641": "            Logger.getLogger(ImageUtils.class.getName()).log(Level.SEVERE, \"While attempting to load image: \" + filename,e);",
        "621": "        } catch (IOException e) {",
        "622": "            JOptionPane.showMessageDialog(parent, \"An error occurred while attempting to save to '\" + filename + \"'.\\n\\n(class: ImageUtils)\", \"Save Image\", JOptionPane.OK_OPTION);",
        "639": "            Logger.getLogger(ImageUtils.class.getName()).log(Level.SEVERE, \"While attempting to load image: \" + filename,ignore);"
      },
      "id": 141785,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://code.google.com/p/openbravoposru/",
      "language": "Java",
      "linescount": 52,
      "location": "/src-pos/com/openbravo/pos/printer/shtrihfr/util",
      "name": "openbravoposru",
      "url": "https://searchcode.com/codesearch/view/14194002/",
      "md5hash": "205abbe45e9f18a40ad4493d8436fd67",
      "lines": {
        "1": "/*",
        "2": " * ImageUtils.java",
        "19": "",
        "20": "public class ImageUtils {",
        "22": "    /**",
        "23": "     * Creates a new instance of ImageUtils",
        "24": "     */",
        "25": "    public ImageUtils() {"
      },
      "id": 14194002,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://github.com/freeocs/dlog4j.git",
      "language": "Java",
      "linescount": 305,
      "location": "/src/com/liusoft/dlog4j/util",
      "name": "dlog4j",
      "url": "https://searchcode.com/codesearch/view/111496436/",
      "md5hash": "df2135be73c0aeb5d8aff19897b7d35a",
      "lines": {
        "1": "/*",
        "2": " *  ImageUtils.java",
        "52": " */",
        "53": "public class ImageUtils {"
      },
      "id": 111496436,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 294,
      "location": "/src/main/java/com/flagstone/transform/util/image",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059534/",
      "md5hash": "4e5bb74b44261b973892792992ccd97e",
      "lines": {
        "1": "/*",
        "2": " * ImageUtils.java"
      },
      "id": 16059534,
      "filename": "ImageShape.java"
    },
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 326,
      "location": "/src/main/java/com/flagstone/transform/util/image",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059546/",
      "md5hash": "a0ddbc3ca98ead0047be4759aaf7673f",
      "lines": {
        "1": "/*",
        "2": " * ImageUtils.java"
      },
      "id": 16059546,
      "filename": "ImageFilter.java"
    },
    {
      "repo": "https://bitbucket.org/lojzatran/gocms.git",
      "language": "Java",
      "linescount": 391,
      "location": "/src/java/com/imaginaworks/util",
      "name": "gocms",
      "url": "https://searchcode.com/codesearch/view/38849786/",
      "md5hash": "f901649c25ff8c68f3fd5c59b7c5068c",
      "lines": {
        "315": "            Log.trace(ImageUtils.class, \"Error al crear la imagen: \");",
        "37": " */",
        "38": "public class ImageUtils {",
        "332": "        } catch (Exception x) {",
        "75": "        int imgHeight = iInfo.getHeight();",
        "76": "        Log.trace(ImageUtils.class, \"Imagen original: \" + imgWidth + \"x\" + imgHeight);",
        "333": "            Log.trace(ImageUtils.class, \"Error al crear la imagen: \");",
        "78": "        if (imgWidth > screenWidth) {",
        "79": "            Log.trace(ImageUtils.class, \"Pantalla ms pequea que la imagen: escalando...\");",
        "81": "        } else if ((double) imgHeight / (double) screenHeight < FACTOR_AIRE) {",
        "82": "            Log.trace(ImageUtils.class, \"Imagen mucho ms pequea que la pantalla: aumentamos y metemos aire.\");",
        "275": "",
        "276": "            Log.trace(ImageUtils.class, \"Escalando de \" + imgWidth + \"x\" + imgHeight + \" a \" + thumbWidth + \"x\" + thumbHeight);",
        "282": "        } catch (Exception x) {",
        "283": "            Log.trace(ImageUtils.class, \"Error al crear la imagen: \");",
        "314": "        } catch (Exception x) {"
      },
      "id": 38849786,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://bitbucket.org/tas_taska/openbravo-pos",
      "language": "Java",
      "linescount": 192,
      "location": "/POS2.3/src-data/com/openbravo/data/loader",
      "name": "openbravo-pos",
      "url": "https://searchcode.com/codesearch/view/126157421/",
      "md5hash": "abf7713d9c95665ca93714e275947eec",
      "lines": {
        "33": "    ",
        "34": "    /** Creates a new instance of ImageUtils */",
        "35": "    private ImageUtils() {",
        "36": "    }",
        "53": "        ",
        "54": "        InputStream in = ImageUtils.class.getResourceAsStream(file);",
        "59": "            try {",
        "60": "                return ImageUtils.readStream(in);",
        "29": "",
        "30": "public class ImageUtils {"
      },
      "id": 126157421,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/openbravopos_ramwools_enhancements",
      "language": "Java",
      "linescount": 192,
      "location": "/src-data/com/openbravo/data/loader",
      "name": "openbravopos_ramwools_enhancements",
      "url": "https://searchcode.com/codesearch/view/131958882/",
      "md5hash": "abf7713d9c95665ca93714e275947eec",
      "lines": {
        "33": "    ",
        "34": "    /** Creates a new instance of ImageUtils */",
        "35": "    private ImageUtils() {",
        "36": "    }",
        "53": "        ",
        "54": "        InputStream in = ImageUtils.class.getResourceAsStream(file);",
        "59": "            try {",
        "60": "                return ImageUtils.readStream(in);",
        "29": "",
        "30": "public class ImageUtils {"
      },
      "id": 131958882,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://bitbucket.org/ASalexander/idempiere_posactivemq",
      "language": "Java",
      "linescount": 192,
      "location": "/src-data/com/openbravo/data/loader",
      "name": "idempiere_posactivemq",
      "url": "https://searchcode.com/codesearch/view/134263584/",
      "md5hash": "abf7713d9c95665ca93714e275947eec",
      "lines": {
        "33": "    ",
        "34": "    /** Creates a new instance of ImageUtils */",
        "35": "    private ImageUtils() {",
        "36": "    }",
        "53": "        ",
        "54": "        InputStream in = ImageUtils.class.getResourceAsStream(file);",
        "59": "            try {",
        "60": "                return ImageUtils.readStream(in);",
        "29": "",
        "30": "public class ImageUtils {"
      },
      "id": 134263584,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://bitbucket.org/seandroid/frameworks-base.git",
      "language": "Java",
      "linescount": 337,
      "location": "/tools/layoutlib/bridge/tests/src/com/android/layoutlib/bridge/intensive",
      "name": "frameworks-base",
      "url": "https://searchcode.com/codesearch/view/130958555/",
      "md5hash": "6a63374db06b7a7186695f04765c04d3",
      "lines": {
        "48": "public class ImageUtils {",
        "66": "",
        "67": "        InputStream is = ImageUtils.class.getResourceAsStream(relativePath);",
        "326": "//        initialMessage += String.format(\"mv %1$s %2$s\", output.getPath(),",
        "327": "//                ImageUtils.class.getResource(relativePath).getPath());",
        "41": "//",
        "42": "// com.android.tools.idea.rendering.ImageUtils,",
        "47": " */"
      },
      "id": 130958555,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://github.com/fengweiyou/juapk.git",
      "language": "Java",
      "linescount": 502,
      "location": "/src/com/juapk/frame/util",
      "name": "juapk",
      "url": "https://searchcode.com/codesearch/view/75479594/",
      "md5hash": "f235d0864ecfd47c379a9f3cb5793f29",
      "lines": {
        "64": "    \t// ImageUtils.cut3(\"e:/abc.jpg\", \"e:/\", 300, 300 );//\u6d4b\u8bd5OK",
        "34": " */",
        "35": "public class ImageUtils {",
        "66": "        // 3-\u56fe\u50cf\u7c7b\u578b\u8f6c\u6362\uff1a",
        "24": " * \u9879\u76ee\u540d\u79f0\uff1ajuapk",
        "67": "    \t// ImageUtils.convert(\"e:/abc.jpg\", \"png\", \"e:/abc_convert.png\");//\u6d4b\u8bd5OK",
        "53": "        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6bd4\u4f8b\u7f29\u653e",
        "54": "    \t// ImageUtils.scale(\"e:/abc.jpg\", \"e:/abc_scale.jpg\", 2, true);//\u6d4b\u8bd5OK",
        "55": "        // \u65b9\u6cd5\u4e8c\uff1a\u6309\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7f29\u653e",
        "56": "    \t// ImageUtils.scale2(\"e:/abc.jpg\", \"e:/abc_scale2.jpg\", 200, 100, true);//\u6d4b\u8bd5OK",
        "25": " * \u7c7b\u540d\u79f0\uff1aImageUtils",
        "59": "        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6307\u5b9a\u8d77\u70b9\u5750\u6807\u548c\u5bbd\u9ad8\u5207\u5272",
        "60": "    \t// ImageUtils.cut(\"e:/abc.jpg\", \"e:/abc_cut.jpg\", 0, 0, 400, 400 );//\u6d4b\u8bd5OK",
        "61": "        // \u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u5207\u7247\u7684\u884c\u6570\u548c\u5217\u6570",
        "62": "    \t// ImageUtils.cut2(\"e:/abc.jpg\", \"e:/\", 2, 2 );//\u6d4b\u8bd5OK",
        "63": "        // \u65b9\u6cd5\u4e09\uff1a\u6307\u5b9a\u5207\u7247\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6"
      },
      "id": 75479594,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://github.com/Naituw/lwapi.git",
      "language": "Java",
      "linescount": 464,
      "location": "/src/com/wave/util",
      "name": "lwapi",
      "url": "https://searchcode.com/codesearch/view/72477439/",
      "md5hash": "57b558be3833e8041866496919d5c85f",
      "lines": {
        "43": "        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6bd4\u4f8b\u7f29\u653e",
        "44": "//        ImageUtils.scale(\"e:/abc.jpg\", \"e:/abc_scale.jpg\", 2, true);//\u6d4b\u8bd5OK",
        "45": "        // \u65b9\u6cd5\u4e8c\uff1a\u6309\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7f29\u653e",
        "46": "        ImageUtils.scale2(\"E:/work/Tomcat 7.0/temp/test.jpg\", \"E:/work/Tomcat 7.0/temp/abc_scale2.jpg\", 51, 51, true);//\u6d4b\u8bd5OK",
        "48": "//        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6307\u5b9a\u8d77\u70b9\u5750\u6807\u548c\u5bbd\u9ad8\u5207\u5272",
        "49": "//        ImageUtils.cut(\"e:/abc.jpg\", \"e:/abc_cut.jpg\", 0, 0, 400, 400 );//\u6d4b\u8bd5OK",
        "50": "//        // \u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u5207\u7247\u7684\u884c\u6570\u548c\u5217\u6570",
        "51": "//        ImageUtils.cut2(\"e:/abc.jpg\", \"e:/\", 2, 2 );//\u6d4b\u8bd5OK",
        "52": "//        // \u65b9\u6cd5\u4e09\uff1a\u6307\u5b9a\u5207\u7247\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
        "53": "//        ImageUtils.cut3(\"e:/abc.jpg\", \"e:/\", 300, 300 );//\u6d4b\u8bd5OK",
        "54": "//        // 3-\u56fe\u50cf\u7c7b\u578b\u8f6c\u6362\uff1a",
        "55": "//        ImageUtils.convert(\"e:/abc.jpg\", \"GIF\", \"e:/abc_convert.gif\");//\u6d4b\u8bd5OK",
        "56": "//        // 4-\u5f69\u8272\u8f6c\u9ed1\u767d\uff1a",
        "26": " */",
        "27": "public class ImageUtils {"
      },
      "id": 72477439,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://bitbucket.org/jervisfm/android-research.git",
      "language": "Java",
      "linescount": 444,
      "location": "/com.google.android.apps.translate-141/com.google.android.apps.translate-java/com/google/android/apps/unveil/env",
      "name": "android-research",
      "url": "https://searchcode.com/codesearch/view/52604822/",
      "md5hash": "8a770534b14ebe575ec2adcedaa01dd1",
      "lines": {
        "411": "      {",
        "92": "    ImageUtils localImageUtils = new ImageUtils();",
        "27": "    ResourceUtils.loadNativeLibrary(\"imageutils\");",
        "18": "",
        "19": "public class ImageUtils",
        "441": "/* Location:           D:\\Jervis\\Documents\\Programming\\Research\\Android\\apks\\com.google.android.apps.translate-141\\classes_dex2jar.jar",
        "26": "  {",
        "91": "  {",
        "412": "        byte[] arrayOfByte = ImageUtils.rotateAndCompressImage(this.picture, this.rotationAngle, this.outputMaxPixels);",
        "93": "    localImageUtils.getClass();",
        "94": "    return new ImageStatistics(computeImageStatisticsNative(paramInt1, paramInt2, paramArrayOfByte));",
        "442": " * Qualified Name:     com.google.android.apps.unveil.env.ImageUtils"
      },
      "id": 52604822,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://gitlab.com/badthinking/libgdx-cookbook.git",
      "language": "Java",
      "linescount": 141,
      "location": "/my-gdx-java-client/core/test/test",
      "name": "libgdx-cookbook",
      "url": "https://searchcode.com/codesearch/view/115579697/",
      "md5hash": "f013390a73ffb1f09de1fa063e7f425f",
      "lines": {
        "123": "\t\t\t\tBufferedImage bufferedImage = ImageUtils",
        "36": "",
        "37": "public class ImageUtils {",
        "124": "\t\t\t\t\t\t.getScreenBufferedImage();",
        "122": "\t\t\t\t}",
        "91": "\t\t}",
        "92": "\t\tBufferedImage bufferedImage = ImageUtils.getScreenBufferedImage();",
        "93": "\t\tbyte[] bytes = ImageUtils.getBufferedImageBytes(bufferedImage);",
        "94": "\t\tPixmap pixmap = new Pixmap(bytes, 0, bytes.length);",
        "125": "\t\t\t\tbyte[] bytes = ImageUtils.getBufferedImageBytes(bufferedImage);"
      },
      "id": 115579697,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "git://github.com/cgeo/c-geo-opensource.git",
      "language": "Java",
      "linescount": 492,
      "location": "/main/src/cgeo/geocaching/utils",
      "name": "c-geo-opensource",
      "url": "https://searchcode.com/codesearch/view/116104947/",
      "md5hash": "bd93a32961f9e4ac7fdc655c71679d7f",
      "lines": {
        "208": "        } catch (final IOException e) {",
        "209": "            Log.e(\"ImageUtils.readDownsampledImage\", e);",
        "180": "        if (tempImageFile == null) {",
        "69": "",
        "70": "    private ImageUtils() {",
        "55": "",
        "56": "public final class ImageUtils {",
        "249": "        if (!mediaStorageDir.exists() && !FileUtils.mkdirs(mediaStorageDir)) {",
        "250": "            Log.e(\"ImageUtils.getOutputImageFile: cannot create media storage directory\");",
        "181": "            Log.e(\"ImageUtils.readScaleAndWriteImage: unable to write scaled image\");"
      },
      "id": 116104947,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "git://github.com/caelum/guj.com.br.git",
      "language": "Java",
      "linescount": 330,
      "location": "/src/net/jforum/util/image",
      "name": "guj.com.br",
      "url": "https://searchcode.com/codesearch/view/17502328/",
      "md5hash": "4c495590125e33b2853f965ed5eb5b80",
      "lines": {
        "67": " * @author Rafael Steil",
        "68": " * @version $Id: ImageUtils.java,v 1.23 2007/09/09 01:05:22 rafaelsteil Exp $",
        "69": " */",
        "70": "public class ImageUtils",
        "138": "\t * @param toFileName The filename to use",
        "139": "\t * @param type The image type. Use <code>ImageUtils.IMAGE_JPEG</code> to save as JPEG images,",
        "140": "\t *  or <code>ImageUtils.IMAGE_PNG</code> to save as PNG.",
        "141": "\t * @return <code>false</code> if no appropriate writer is found",
        "206": "\t\tif (type == ImageUtils.IMAGE_PNG && hasAlpha(image)) {",
        "205": "\t{",
        "237": "\t{",
        "238": "\t\tif (type == ImageUtils.IMAGE_PNG && hasAlpha(source)) {",
        "157": "\t * @param toFileName The filename to use",
        "158": "\t * @param type The image type. Use <code>ImageUtils.IMAGE_JPEG</code> to save as JPEG images,",
        "159": "\t * or <code>ImageUtils.IMAGE_PNG</code> to save as PNG."
      },
      "id": 17502328,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "https://github.com/zhishan332/mana.git",
      "language": "Java",
      "linescount": 796,
      "location": "/src/main/java/com/wq/util",
      "name": "mana",
      "url": "https://searchcode.com/codesearch/view/93047034/",
      "md5hash": "20db2a6d3cdde74a080aa7d32331ec94",
      "lines": {
        "64": "        // 4-\u5f69\u8272\u8f6c\u9ed1\u767d\uff1a",
        "65": "        ImageUtils.gray(\"e:/abc.jpg\", \"e:/abc_gray.jpg\");//\u6d4b\u8bd5OK",
        "61": "        // 3-\u56fe\u50cf\u7c7b\u578b\u8f6c\u6362\uff1a",
        "48": "        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6bd4\u4f8b\u7f29\u653e",
        "49": "        ImageUtils.scale(\"e:/abc.jpg\", \"e:/abc_scale.jpg\", 2, true);//\u6d4b\u8bd5OK",
        "50": "        // \u65b9\u6cd5\u4e8c\uff1a\u6309\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u7f29\u653e",
        "51": "        ImageUtils.scale2(\"e:/abc.jpg\", \"e:/abc_scale2.jpg\", 500, 300, true);//\u6d4b\u8bd5OK",
        "54": "        // \u65b9\u6cd5\u4e00\uff1a\u6309\u6307\u5b9a\u8d77\u70b9\u5750\u6807\u548c\u5bbd\u9ad8\u5207\u5272",
        "55": "        ImageUtils.cut(\"e:/abc.jpg\", \"e:/abc_cut.jpg\", 0, 0, 400, 400);//\u6d4b\u8bd5OK",
        "56": "        // \u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u5207\u7247\u7684\u884c\u6570\u548c\u5217\u6570",
        "57": "        ImageUtils.cut2(\"e:/abc.jpg\", \"e:/\", 2, 2);//\u6d4b\u8bd5OK",
        "58": "        // \u65b9\u6cd5\u4e09\uff1a\u6307\u5b9a\u5207\u7247\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6",
        "59": "        ImageUtils.cut3(\"e:/abc.jpg\", \"e:/\", 300, 300);//\u6d4b\u8bd5OK",
        "28": " */",
        "29": "public class ImageUtils {",
        "62": "        ImageUtils.convert(\"e:/abc.jpg\", \"GIF\", \"e:/abc_convert.gif\");//\u6d4b\u8bd5OK"
      },
      "id": 93047034,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "http://jmonkeyengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 473,
      "location": "/engine/src/blender/com/jme3/scene/plugins/blender/textures",
      "name": "jmonkeyengine",
      "url": "https://searchcode.com/codesearch/view/63790657/",
      "md5hash": "972cfb971527188f11a3aaa891f95a98",
      "lines": {
        "226": "        op.filter(sourceImage, sourceImage);",
        "227": "        return ImageUtils.toJmeImage(sourceImage, source.getFormat());",
        "197": "                S.y = 0;",
        "198": "                S.z = strengthFactor * ImageUtils.getHeight(heightMap, x + 1, y) - strengthFactor * ImageUtils.getHeight(heightMap, x - 1, y);",
        "209": "                // setting thge pixel in the result image",
        "200": "                T.y = 1;",
        "201": "                T.z = strengthFactor * ImageUtils.getHeight(heightMap, x, y + 1) - strengthFactor * ImageUtils.getHeight(heightMap, x, y - 1);",
        "168": "        BufferedImage scaledImage = bilinearScaleOp.filter(sourceImage, new BufferedImage(width, height, sourceImage.getType()));",
        "210": "                bumpMap.setRGB(x, y, ImageUtils.vectorToColor(N.x, N.y, N.z));",
        "212": "        }",
        "213": "        return ImageUtils.toJmeImage(bumpMap, source.getFormat());",
        "169": "        return ImageUtils.toJmeImage(scaledImage, source.getFormat());",
        "27": " */",
        "28": "public final class ImageUtils {"
      },
      "id": 63790657,
      "filename": "ImageUtils.java"
    },
    {
      "repo": "git://github.com/CyanogenMod/android_frameworks_base.git",
      "language": "Java",
      "linescount": 337,
      "location": "/tools/layoutlib/bridge/tests/src/com/android/layoutlib/bridge/intensive",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/116014051/",
      "md5hash": "6a63374db06b7a7186695f04765c04d3",
      "lines": {
        "48": "public class ImageUtils {",
        "66": "",
        "67": "        InputStream is = ImageUtils.class.getResourceAsStream(relativePath);",
        "326": "//        initialMessage += String.format(\"mv %1$s %2$s\", output.getPath(),",
        "327": "//                ImageUtils.class.getResource(relativePath).getPath());",
        "41": "//",
        "42": "// com.android.tools.idea.rendering.ImageUtils,",
        "47": " */"
      },
      "id": 116014051,
      "filename": "ImageUtils.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 554,
      "source": "Github",
      "id": 2
    },
    {
      "count": 502,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 220,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 20,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 13,
      "source": "Google Android",
      "id": 12
    }
  ]
}