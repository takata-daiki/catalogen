{
  "matchterm": "XSSFSheet",
  "previouspage": null,
  "searchterm": "XSSFSheet",
  "query": "XSSFSheet",
  "language_filters": [
    {
      "count": 84,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 84,
  "results": [
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 291,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854562/",
      "md5hash": "6097966462091e76b85ae67e547abd0b",
      "lines": {
        "193": "    \t}",
        "194": "    \tXSSFSheet xssfSheet = workbook.createSheet(name);",
        "195": "    \treturn new SheetXSSFImpl(this, xssfSheet);",
        "196": "    }    ",
        "229": "    public Sheet getSheet(String name) {",
        "230": "        XSSFSheet xssfSheet = workbook.getSheet(name);",
        "231": "        if (xssfSheet == null) {",
        "232": "            return null;",
        "234": "        else {",
        "235": "            return new SheetXSSFImpl(this, xssfSheet);",
        "239": "    public Sheet getSheet(int index) {",
        "240": "        XSSFSheet xssfSheet = workbook.getSheetAt(index);",
        "241": "        if(xssfSheet == null) {",
        "19": "import org.apache.poi.xssf.usermodel.XSSFRow;",
        "20": "import org.apache.poi.xssf.usermodel.XSSFSheet;"
      },
      "id": 72854562,
      "filename": "WorkbookXSSFImpl.java"
    },
    {
      "repo": "https://bitbucket.org/yaytay/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 212,
      "location": "/SpudSoft BIRT Excel Emitters Tests/src/uk/co/spudsoft/birt/emitters/excel/tests",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/122565020/",
      "md5hash": "78793e799a6379da4f94392482a6db16",
      "lines": {
        "133": "",
        "134": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "135": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);",
        "136": "\t\t\tXSSFSheet sheet2 = workbook.getSheetAt(2);",
        "41": "",
        "42": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "43": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);",
        "44": "\t\t\tXSSFSheet sheet2 = workbook.getSheetAt(2);",
        "45": "\t\t\tassertEquals( \"HeaderAndFooter\", sheet0.getSheetName());",
        "178": "",
        "179": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "180": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);",
        "22": "",
        "23": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "137": "\t\t\tassertEquals( \"HeaderAndFooter\", sheet0.getSheetName());"
      },
      "id": 122565020,
      "filename": "Groupings.java"
    },
    {
      "repo": "https://bitbucket.org/rapidpm/tablemodell.git",
      "language": "Java",
      "linescount": 107,
      "location": "/src/org/rapidpm/data/table/export",
      "name": "tablemodell",
      "url": "https://searchcode.com/codesearch/view/37860178/",
      "md5hash": "44b86ac9fbf3c35cb8d792fa6a92ad96",
      "lines": {
        "57": "        for (final Row row : tableRowList) {",
        "40": "",
        "41": "        final XSSFSheet xssfSheet = workbook.createSheet(table.getTableName());",
        "42": "        final Collection<ColumnInformation> infoList = table.getColumnInfoList();",
        "43": "        final XSSFRow xssfHeaderRow = xssfSheet.createRow(0);",
        "58": "            final XSSFRow xssfRow = xssfSheet.createRow(row.getRowNr() + 1);"
      },
      "id": 37860178,
      "filename": "Table2XLSX.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1242,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970692/",
      "md5hash": "7da77111e27cd710cd143cdee57bc0a6",
      "lines": {
        "1": "/* XSSFSheetImpl.java",
        "2": "",
        "69": "/**",
        "70": " * Implementation of {@link Worksheet} based on XSSFSheet.",
        "73": " */",
        "74": "public class XSSFSheetImpl extends XSSFSheet implements SheetCtrl, Worksheet {",
        "75": "\t//--XSSFSheet--//",
        "76": "    public XSSFSheetImpl() {",
        "77": "        super();",
        "80": "\t/**",
        "81": "     * Creates an XSSFSheet representing the given package part and relationship.",
        "86": "     */",
        "87": "    public XSSFSheetImpl(PackagePart part, PackageRelationship rel) {",
        "62": "import org.zkoss.poi.xssf.usermodel.XSSFRowHelper;",
        "63": "import org.zkoss.poi.xssf.usermodel.XSSFSheet;"
      },
      "id": 3970692,
      "filename": "XSSFSheetImpl.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 5111,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970697/",
      "md5hash": "f6740268ba4be4778508748ca1c3becc",
      "lines": {
        "1824": "\t\t\tfinal XSSFSheet sheet = (XSSFSheet) cell.getSheet();",
        "2091": "\t\tfinal List<CellRangeAddress[]> shiftedRanges = ((XSSFSheetImpl)sheet).shiftRowsOnly(startRow0, lastRowNum, -num, true, false, true, true, Range.FORMAT_NONE);",
        "2341": "\t\tfinal List<CellRangeAddress[]> shiftedRanges = nCol != 0 && nRow == 0 ? ",
        "2342": "\t\t\t((XSSFSheetImpl)sheet).shiftColumnsRange(lCol, rCol, nCol, tRow, bRow, true, false, true, false, Range.FORMAT_NONE):",
        "2343": "\t\t\tnCol == 0 && nRow != 0 ?",
        "2344": "\t\t\t((XSSFSheetImpl)sheet).shiftRowsRange(tRow, bRow, nRow, lCol, rCol, true, false, true, false, Range.FORMAT_NONE):",
        "2345": "\t\t\t((XSSFSheetImpl)sheet).shiftBothRange(tRow, bRow, nRow, lCol, rCol, nCol, true); //nCol != 0 && nRow != 0",
        "2090": "\t\t}",
        "2219": "\t\tfinal List<CellRangeAddress[]> shiftedRanges = horizontal ? ",
        "2220": "\t\t\t((XSSFSheetImpl)sheet).shiftColumnsRange(lCol, -1, num, tRow, bRow, true, false, true, false, copyRightBelow):",
        "2221": "\t\t\t((XSSFSheetImpl)sheet).shiftRowsRange(tRow, -1, num, lCol, rCol, true, false, true, false, copyRightBelow);",
        "2222": "\t\tfinal List<MergeChange> changeMerges = prepareChangeMerges(refSheet, shiftedRanges);",
        "1592": "\t\t} else {",
        "1593": "\t\t\treturn ((XSSFSheet)sheet).getDataValidations();",
        "2346": "\t\tfinal List<MergeChange> changeMerges = prepareChangeMerges(refSheet, shiftedRanges);",
        "1823": "\t\t\tfinal String formula = cell.getCellFormula();"
      },
      "id": 3970697,
      "filename": "BookHelper.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 431,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970717/",
      "md5hash": "7316273b22d01b3aaca97abfed972abf",
      "lines": {
        "80": "\t//override the XSSFSheet Relation",
        "49": "import org.zkoss.poi.xssf.usermodel.XSSFRelation;",
        "50": "import org.zkoss.poi.xssf.usermodel.XSSFSheet;",
        "100": "\t\tsuper(is);",
        "101": "\t\tfor(XSSFSheet sheet : this) {",
        "249": "\t\t}",
        "90": "\t\t\tfd.setAccessible(true);",
        "91": "\t\t\tfd.set(XSSFRelation.WORKSHEET, XSSFSheetImpl.class); //Use the new XSSFSheet implementation ",
        "250": "\t\tfor (XSSFSheet sheet : this) { //scan all sheets to change the possible reference",
        "79": "\t"
      },
      "id": 3970717,
      "filename": "XSSFBookImpl.java"
    },
    {
      "repo": "https://github.com/dunkelrot/xpview.git",
      "language": "Java",
      "linescount": 120,
      "location": "/org.dexpi.xpview.model/src/org/dexpi/xpview/model/report",
      "name": "xpview",
      "url": "https://searchcode.com/codesearch/view/71257075/",
      "md5hash": "37dd7e3ab6bb7822c0f6372c753d465c",
      "lines": {
        "16": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "84": "",
        "85": "\tprotected void createDataRows(XSSFSheet dataSheet) {",
        "55": "",
        "56": "\tprotected int createHeaderRow(XSSFSheet dataSheet) {",
        "43": "",
        "44": "\t\tXSSFSheet dataSheet = wb.createSheet(\"Data\");",
        "15": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;"
      },
      "id": 71257075,
      "filename": "ExcelReport.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854574/",
      "md5hash": "89d090836d344e0f32e8aeef1b00d9eb",
      "lines": {
        "16": "import org.apache.poi.xssf.usermodel.XSSFRow;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "36": "",
        "37": "    private XSSFSheet sheet;",
        "112": "    public XSSFSheet getHSSFSheet() {",
        "45": "",
        "46": "    public SheetXSSFImpl(WorkbookXSSFImpl workbook, XSSFSheet hssfSheet) {",
        "111": ""
      },
      "id": 72854574,
      "filename": "SheetXSSFImpl.java"
    },
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 208,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785572/",
      "md5hash": "cbe6aea6e2c67bdf72e6eb288fadfc2d",
      "lines": {
        "197": "                for (int i = 0; i < document.getNumberOfSheets(); i++) {",
        "158": "       for(XSSFSheet sheet : document) {",
        "198": "                    XSSFSheet sheet = document.getSheetAt(i);",
        "40": "import org.apache.poi.xssf.usermodel.XSSFRelation;",
        "41": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "77": "            xhtml.startElement(\"div\");",
        "78": "            XSSFSheet sheet = (XSSFSheet) document.getSheetAt(i);",
        "157": "       XSSFWorkbook document = (XSSFWorkbook) extractor.getDocument();"
      },
      "id": 111785572,
      "filename": "XSSFExcelExtractorDecorator.java"
    },
    {
      "repo": "https://gitlab.com/jforge/Modules.git",
      "language": "Java",
      "linescount": 376,
      "location": "/_deactivated/javafx-filtered-tableview/src/main/java/org/rapidpm/modul/javafx/tableview/filtered/contextmenue",
      "name": "Modules",
      "url": "https://searchcode.com/codesearch/view/115088176/",
      "md5hash": "a08ae3a3ea52f96da725f24765898b8d",
      "lines": {
        "311": "            final XSSFRow xssfRow = xssfSheet.createRow(rowNr);",
        "310": "        for (final FilteredTableDataRow row : rowList) {",
        "295": "        final XSSFWorkbook workbook = new XSSFWorkbook();",
        "296": "        final XSSFSheet xssfSheet = workbook.createSheet(\"ExcelExport_\" + sdf.format(new Date()));",
        "297": "        final XSSFRow xssfHeaderRow = xssfSheet.createRow(0);",
        "42": "import org.apache.poi.xssf.usermodel.XSSFRow;",
        "43": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "298": "        final ObservableList<TableColumn> columns = filteredTableView.getColumns();"
      },
      "id": 115088176,
      "filename": "FilteredTableContextMenu.java"
    },
    {
      "repo": "https://gitlab.com/jforge/Modules.git",
      "language": "Java",
      "linescount": 126,
      "location": "/_deactivated/cdi-tablemodel/src/main/java/org/rapidpm/data/table/export",
      "name": "Modules",
      "url": "https://searchcode.com/codesearch/view/115088748/",
      "md5hash": "afac3844787763a363133f64554db882",
      "lines": {
        "32": "import org.apache.poi.xssf.usermodel.XSSFRow;",
        "33": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "76": "        for (final Row row : tableRowList) {",
        "59": "",
        "60": "        final XSSFSheet xssfSheet = workbook.createSheet(table.getTableName());",
        "61": "        final Collection<ColumnInformation> infoList = table.getColumnInfoList();",
        "62": "        final XSSFRow xssfHeaderRow = xssfSheet.createRow(0);",
        "77": "            final XSSFRow xssfRow = xssfSheet.createRow(row.getRowNr() + 1);"
      },
      "id": 115088748,
      "filename": "Table2XLSX.java"
    },
    {
      "repo": "https://github.com/akpaide/exporter.git",
      "language": "Java",
      "linescount": 441,
      "location": "/exporter/src/main/java/org/zkoss/exporter/excel",
      "name": "exporter",
      "url": "https://searchcode.com/codesearch/view/101231435/",
      "md5hash": "39a61bd64ca3c5b98b6d33a3d2d23b55",
      "lines": {
        "64": "\t\tExportContext ctx = new ExportContext(true, book.createSheet(\"Sheet1\"));",
        "65": "\t\tXSSFSheet sheet = ctx.getSheet();",
        "195": "\t\tExportContext ctx = getExportContext();",
        "196": "\t\tXSSFSheet sheet = ctx.getSheet();",
        "129": "\t\tXSSFSheet sheet = getExportContext().getSheet();",
        "275": "\t\tXSSFSheet sheet = ctx.getSheet();",
        "428": "\t\t\t\tExportContext ctx = getExportContext();",
        "128": "\tprivate void adjustColumnWidth(int columnSize) {",
        "43": "import org.zkoss.poi.xssf.usermodel.XSSFCellStyle;",
        "44": "import org.zkoss.poi.xssf.usermodel.XSSFSheet;",
        "429": "\t\t\t\tXSSFSheet sheet = ctx.getSheet();",
        "274": "\t\tExportContext ctx = getExportContext();",
        "211": "\t\tExportContext context = getExportContext();",
        "212": "\t\tXSSFSheet sheet = context.getSheet();",
        "85": "\t\tExportContext ctx = new ExportContext(true, book.createSheet(\"Sheet1\"));",
        "86": "\t\tXSSFSheet sheet = ctx.getSheet();"
      },
      "id": 101231435,
      "filename": "ExcelExporter.java"
    },
    {
      "repo": "https://bitbucket.org/xunchangguo/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 222,
      "location": "/SpudSoft BIRT Excel Emitters Tests/src/uk/co/spudsoft/birt/emitters/excel/tests",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/64531374/",
      "md5hash": "47903e688184871447c50396943073ff",
      "lines": {
        "32": "",
        "33": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "147": "\t\t\tassertEquals( \"HeaderAndFooter\", sheet0.getSheetName());",
        "143": "",
        "144": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "145": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);",
        "146": "\t\t\tXSSFSheet sheet2 = workbook.getSheetAt(2);",
        "51": "",
        "52": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "53": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);",
        "54": "\t\t\tXSSFSheet sheet2 = workbook.getSheetAt(2);",
        "55": "\t\t\tassertEquals( \"HeaderAndFooter\", sheet0.getSheetName());",
        "188": "",
        "189": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt(0);",
        "190": "\t\t\tXSSFSheet sheet1 = workbook.getSheetAt(1);"
      },
      "id": 64531374,
      "filename": "Groupings.java"
    },
    {
      "repo": "https://github.com/zypacsinc/src.git",
      "language": "Java",
      "linescount": 384,
      "location": "/com/cf/tkconnect/data",
      "name": "src",
      "url": "https://searchcode.com/codesearch/view/93053244/",
      "md5hash": "0256d5b9985793107258b24ca50edb91",
      "lines": {
        "160": "\t",
        "97": "\tprivate void setWB() throws Exception{",
        "98": "\t\tXSSFSheet sheet1 = wb.createSheet(\"Upper Form\");",
        "99": "\t\tsheet1.setDisplayGridlines(true);",
        "100": "\t    XSSFSheet sheet2 = null;",
        "161": "\tprivate void createSheetData(XSSFSheet sheet,  List<String> delist, String type) throws Exception {",
        "298": "\t}",
        "119": "\t\t if(setResponse && batch){",
        "242": "\tprivate void setInstructions(XSSFSheet sheet, CreationHelper createHelper, XSSFCellStyle cs){",
        "241": "\t}",
        "114": "\t    }",
        "115": "\t\t XSSFSheet sheet3 = wb.createSheet(\"Instructions\");",
        "22": "import org.apache.poi.xssf.usermodel.XSSFWorkbook;",
        "23": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "120": "\t\t\t XSSFSheet sheet4 = wb.createSheet(\"Status\");",
        "299": "\tprivate void createIntructionRow(XSSFSheet sheet, CreationHelper createHelper, XSSFCellStyle cs, short rowindex, String value){"
      },
      "id": 93053244,
      "filename": "WriteExcelBook.java"
    },
    {
      "repo": "https://bitbucket.org/krabuzin/mp_jobs",
      "language": "Java",
      "linescount": 2080,
      "location": "/workspace/.JETEmitters/src/org/talend/designer/codegen/translators/file/input",
      "name": "mp_jobs",
      "url": "https://searchcode.com/codesearch/view/128910886/",
      "md5hash": "75ba1544ce93e33d510ca361547ce6b5",
      "lines": {
        "320": "  protected final String TEXT_294 = NL + \"        sheetList_\";",
        "356": "  protected final String TEXT_330 = \";\" + NL + \"        \" + NL + \"        org.apache.poi.xssf.usermodel.XSSFRow row_\";",
        "357": "  protected final String TEXT_331 = \" = null;\" + NL + \"        org.apache.poi.xssf.usermodel.XSSFSheet sheet_\";",
        "299": "  protected final String TEXT_273 = \".setLevel(org.apache.log4j.Level.WARN);\" + NL + \"\\t\\t\\tclass RegexUtil_\";",
        "300": "  protected final String TEXT_274 = \" {\" + NL + \"\\t\\t\\t\\t\" + NL + \"\\t\\t    \\tpublic java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {\" + NL + \"\\t\\t\\t        \" + NL + \"\\t\\t\\t        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();\" + NL + \"\\t\\t\\t        \" + NL + \"\\t\\t\\t        if(useRegex){//this part process the regex issue\" + NL + \"\\t\\t\\t        \\t\" + NL + \"\\t\\t\\t\\t        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);\" + NL + \"\\t\\t\\t\\t        for (org.apache.poi.xssf.usermodel.XSSFSheet sheet : workbook) {\" + NL + \"\\t\\t\\t\\t            String sheetName = sheet.getSheetName();\" + NL + \"\\t\\t\\t\\t            java.util.regex.Matcher matcher = pattern.matcher(sheetName);\" + NL + \"\\t\\t\\t\\t            if (matcher.matches()) {\" + NL + \"\\t\\t\\t\\t            \\tif(sheet != null){\" + NL + \"\\t\\t\\t\\t                \\tlist.add(sheet);\" + NL + \"\\t\\t\\t\\t                }\\t\" + NL + \"\\t\\t\\t\\t            }\" + NL + \"\\t\\t\\t\\t        }\" + NL + \"\\t\\t\\t\\t        \" + NL + \"\\t\\t\\t        }else{\\t\" + NL + \"\\t\\t\\t        \\torg.apache.poi.xssf.usermodel.XSSFSheet sheet = workbook.getSheet(oneSheetName);\" + NL + \"\\t\\t            \\tif(sheet != null){\" + NL + \"\\t\\t                \\tlist.add(sheet);\" + NL + \"\\t\\t                }\" + NL + \"\\t\\t\\t        \\t\" + NL + \"\\t\\t\\t        }\" + NL + \"\\t\\t\\t        \" + NL + \"\\t\\t\\t        return list;\" + NL + \"\\t\\t\\t    }\" + NL + \"\\t\\t    \\t\" + NL + \"\\t\\t\\t    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {\" + NL + \"\\t\\t\\t    \\tjava.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();\" + NL + \"\\t\\t\\t    \\torg.apache.poi.xssf.usermodel.XSSFSheet sheet = workbook.getSheetAt(index);\" + NL + \"\\t            \\tif(sheet != null){\" + NL + \"\\t                \\tlist.add(sheet);\" + NL + \"\\t                }\" + NL + \"\\t\\t\\t    \\treturn list;\" + NL + \"\\t\\t\\t    }\" + NL + \"\\t\\t\\t    \" + NL + \"\\t\\t\\t}\" + NL + \"\\t\\tRegexUtil_\";",
        "334": "  protected final String TEXT_308 = \";\" + NL + \"        \" + NL + \"        int end_line_\";",
        "335": "  protected final String TEXT_309 = \"=0;\" + NL + \"        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_\";",
        "311": "  protected final String TEXT_285 = \" = null;\" + NL + \"\\t\\t\\tthrow new Exception(\\\"The data source should be specified as Inputstream or File Path!\\\");\" + NL + \"\\t\\t}\" + NL + \"\\t\\ttry {\" + NL + \"\\t\\t\";",
        "312": "  protected final String TEXT_286 = NL + \"    \\tjava.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_\";",
        "313": "  protected final String TEXT_287 = \" = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();\" + NL + \"    \\tfor(org.apache.poi.xssf.usermodel.XSSFSheet sheet_\";",
        "314": "  protected final String TEXT_288 = \":workbook_\";",
        "317": "  protected final String TEXT_291 = \");\" + NL + \"    \\t}\";",
        "318": "  protected final String TEXT_292 = NL + \"\\t\\tjava.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_\";",
        "319": "  protected final String TEXT_293 = \" = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();\";"
      },
      "id": 128910886,
      "filename": "TFileInputExcelBeginJava.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 104,
      "location": "/zsstest/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969787/",
      "md5hash": "39effe8a8cc85b445af4b345b8e296f1",
      "lines": {
        "68": "\tpublic void testColumnchart() {",
        "28": "import org.zkoss.poi.ss.usermodel.ZssChartX;",
        "29": "import org.zkoss.poi.xssf.usermodel.XSSFSheet;",
        "69": "\t\tXSSFSheet sheet1 = (XSSFSheet) _book.getSheet(\"Sheet1\");"
      },
      "id": 3969787,
      "filename": "ColumnchartXlsxChartTest.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 83,
      "location": "/zsstest/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969794/",
      "md5hash": "8aedc7edc57bd1699d2c77c9d0421688",
      "lines": {
        "25": "import org.zkoss.poi.ss.usermodel.Cell;",
        "26": "import org.zkoss.poi.xssf.usermodel.XSSFSheet;",
        "69": "\tpublic void testPictures() {",
        "70": "\t\tXSSFSheet sheet1 = (XSSFSheet)_book.getSheetAt(0);"
      },
      "id": 3969794,
      "filename": "ImageXlsxPictureTest.java"
    },
    {
      "repo": "https://bitbucket.org/rapidpm/tablemodell.git",
      "language": "Java",
      "linescount": 710,
      "location": "/src/org/rapidpm/data/table/importer/xlsx",
      "name": "tablemodell",
      "url": "https://searchcode.com/codesearch/view/37860156/",
      "md5hash": "e03479193feb818d2f288147b1e378d5",
      "lines": {
        "194": "",
        "195": "    public XSSFCell[][] getCells(final Coordinate start, final Coordinate end, final XSSFSheet sheet) {",
        "180": "",
        "181": "    public XSSFCell getCell(final Coordinate coordinate, final XSSFSheet sheet) {"
      },
      "id": 37860156,
      "filename": "XSSFAssistant.java"
    },
    {
      "repo": "https://bitbucket.org/xunchangguo/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 395,
      "location": "/SpudSoft BIRT Excel Emitters Tests/src/uk/co/spudsoft/birt/emitters/excel/tests",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/64531352/",
      "md5hash": "f0919a44ff31e67eb928f6146dc8f53a",
      "lines": {
        "115": "\t\t\t",
        "48": "\t\t\t",
        "49": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt( 0 );",
        "82": "\t\t\t",
        "83": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt( 0 );",
        "116": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt( 0 );",
        "30": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "315": "\t\t\t",
        "316": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt( 0 );",
        "29": "",
        "222": "\t\t\t",
        "223": "\t\t\tXSSFSheet sheet0 = workbook.getSheetAt( 0 );"
      },
      "id": 64531352,
      "filename": "Issue55GroupsNotWorkingCorrectly.java"
    },
    {
      "repo": "https://github.com/myGrid/simple-spreadsheet-extractor.git",
      "language": "Java",
      "linescount": 387,
      "location": "/src/main/java/org/sysmodb/xml",
      "name": "simple-spreadsheet-extractor",
      "url": "https://searchcode.com/codesearch/view/110498474/",
      "md5hash": "0fed632f7793d1d3fbb576bed59a234a",
      "lines": {
        "148": "\tprivate void writeXSSFDataValidations(XMLStreamWriter xmlWriter,",
        "149": "\t\t\tXSSFSheet sheet) throws XMLStreamException {",
        "105": "\t\t} else {",
        "25": "import org.apache.poi.xssf.usermodel.XSSFDataValidation;",
        "26": "import org.apache.poi.xssf.usermodel.XSSFSheet;",
        "106": "\t\t\twriteXSSFDataValidations(xmlWriter, (XSSFSheet) sheet);"
      },
      "id": 110498474,
      "filename": "XMLGeneration.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 45,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 29,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    }
  ]
}