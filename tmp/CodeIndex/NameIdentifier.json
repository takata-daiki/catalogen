{
  "matchterm": "NameIdentifier",
  "previouspage": null,
  "searchterm": "NameIdentifier",
  "query": "NameIdentifier",
  "language_filters": [
    {
      "count": 225,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 225,
  "results": [
    {
      "repo": "https://bitbucket.org/wuweisolutions-internal/ams.model",
      "language": "Java",
      "linescount": 10,
      "location": "/src/main/java/com/wuweisol/model/party",
      "name": "ams.model",
      "url": "https://searchcode.com/codesearch/view/120180309/",
      "md5hash": "6e45d411e6f2f00494257001181e8ebc",
      "lines": {
        "4": "",
        "5": "public interface NameIdentifier"
      },
      "id": 120180309,
      "filename": "NameIdentifier.java"
    },
    {
      "repo": "https://android.googlesource.com/platform/tools/adt/idea",
      "language": "Java",
      "linescount": 1881,
      "location": "/android/src/org/jetbrains/android/inspections/lint",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/68849854/",
      "md5hash": "452671daf85a36a99f9439b9f0d77040",
      "lines": {
        "384": "      }",
        "385": "      PsiIdentifier nameIdentifier = psiClass.getNameIdentifier();",
        "386": "      if (nameIdentifier != null) {",
        "387": "        declaration.astName(toIdentifier(nameIdentifier));",
        "388": "      }",
        "327": "      bind(declaration, psiClass);",
        "328": "      PsiIdentifier nameIdentifier = psiClass.getNameIdentifier();",
        "329": "      if (nameIdentifier != null) {",
        "654": "        bind(element, pair);",
        "655": "        PsiIdentifier nameIdentifier = pair.getNameIdentifier();",
        "656": "        if (nameIdentifier != null) {",
        "657": "          element.astName(toIdentifier(nameIdentifier));",
        "314": "      bind(declaration, psiClass);",
        "315": "      PsiIdentifier nameIdentifier = psiClass.getNameIdentifier();",
        "316": "      if (nameIdentifier != null) {",
        "317": "        declaration.astName(toIdentifier(nameIdentifier));",
        "318": "      }"
      },
      "id": 68849854,
      "filename": "LombokPsiConverter.java"
    },
    {
      "repo": "https://github.com/iamsteveholmes/kotlin.git",
      "language": "Java",
      "linescount": 351,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/74089029/",
      "md5hash": "16ed513ed69cfeed07fe7c27dc7e6155",
      "lines": {
        "65": "        private ASTNode getNameNode(JetNamedDeclaration function) {",
        "66": "            PsiElement nameIdentifier = function.getNameIdentifier();",
        "67": "            return nameIdentifier == null ? null : nameIdentifier.getNode();",
        "68": "        }",
        "70": "",
        "71": "    public static final PositioningStrategy<PsiNameIdentifierOwner> NAME_IDENTIFIER = new PositioningStrategy<PsiNameIdentifierOwner>() {",
        "73": "        @Override",
        "74": "        public List<TextRange> mark(@NotNull PsiNameIdentifierOwner element) {",
        "75": "            PsiElement nameIdentifier = element.getNameIdentifier();",
        "76": "            if (nameIdentifier != null) {",
        "77": "                return markElement(nameIdentifier);",
        "78": "            }",
        "82": "",
        "83": "    public static final PositioningStrategy<PsiNameIdentifierOwner> NAMED_ELEMENT = new PositioningStrategy<PsiNameIdentifierOwner>() {",
        "23": "import com.intellij.psi.PsiElement;",
        "24": "import com.intellij.psi.PsiNameIdentifierOwner;"
      },
      "id": 74089029,
      "filename": "PositioningStrategies.java"
    },
    {
      "repo": "https://github.com/lalyos/kotlin.git",
      "language": "Java",
      "linescount": 325,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/75560553/",
      "md5hash": "0836ae4d807b71559179d3e69550334f",
      "lines": {
        "65": "        private ASTNode getNameNode(JetNamedDeclaration function) {",
        "66": "            PsiElement nameIdentifier = function.getNameIdentifier();",
        "67": "            return nameIdentifier == null ? null : nameIdentifier.getNode();",
        "68": "        }",
        "70": "",
        "71": "    public static final PositioningStrategy<PsiNameIdentifierOwner> NAME_IDENTIFIER = new PositioningStrategy<PsiNameIdentifierOwner>() {",
        "73": "        @Override",
        "74": "        public List<TextRange> mark(@NotNull PsiNameIdentifierOwner element) {",
        "75": "            PsiElement nameIdentifier = element.getNameIdentifier();",
        "76": "            if (nameIdentifier != null) {",
        "77": "                return markElement(nameIdentifier);",
        "78": "            }",
        "82": "",
        "83": "    public static final PositioningStrategy<PsiNameIdentifierOwner> NAMED_ELEMENT = new PositioningStrategy<PsiNameIdentifierOwner>() {",
        "23": "import com.intellij.psi.PsiElement;",
        "24": "import com.intellij.psi.PsiNameIdentifierOwner;"
      },
      "id": 75560553,
      "filename": "PositioningStrategies.java"
    },
    {
      "repo": "https://github.com/lalyos/kotlin.git",
      "language": "Java",
      "linescount": 609,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/resolve",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/75560366/",
      "md5hash": "8cc202b99057fd13b65cb0a0cc35773c",
      "lines": {
        "418": "        }",
        "419": "        PsiElement nameIdentifier = member.getNameIdentifier();",
        "420": "        if (!hasOverrideModifier && declared.getOverriddenDescriptors().size() > 0 && nameIdentifier != null) {",
        "421": "            CallableMemberDescriptor overridden = declared.getOverriddenDescriptors().iterator().next();",
        "294": "        for (CallableMemberDescriptor memberDescriptor : abstractNoImpl) {",
        "295": "            trace.report(ABSTRACT_MEMBER_NOT_IMPLEMENTED.on(nameIdentifier, klass, memberDescriptor));",
        "271": "",
        "272": "        PsiElement nameIdentifier = null;",
        "273": "        if (klass instanceof JetClass) {",
        "274": "            nameIdentifier = klass.getNameIdentifier();",
        "276": "        else if (klass instanceof JetObjectDeclaration) {",
        "277": "            nameIdentifier = klass.getNameIdentifier();",
        "278": "            if (nameIdentifier == null) {",
        "279": "                nameIdentifier = ((JetObjectDeclaration) klass).getObjectKeyword();",
        "280": "            }"
      },
      "id": 75560366,
      "filename": "OverrideResolver.java"
    },
    {
      "repo": "https://github.com/iamsteveholmes/kotlin.git",
      "language": "Java",
      "linescount": 944,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/resolve",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/74085654/",
      "md5hash": "6db195a95a8ba8a01130cb221391ff20",
      "lines": {
        "386": "",
        "387": "        PsiElement nameIdentifier = null;",
        "388": "        if (klass instanceof JetClass) {",
        "389": "            nameIdentifier = klass.getNameIdentifier();",
        "391": "        else if (klass instanceof JetObjectDeclaration) {",
        "392": "            nameIdentifier = klass.getNameIdentifier();",
        "393": "            if (nameIdentifier == null) {",
        "394": "                nameIdentifier = ((JetObjectDeclaration) klass).getObjectKeyword();",
        "395": "            }",
        "396": "        }",
        "397": "        if (nameIdentifier == null) return;",
        "399": "        for (CallableMemberDescriptor memberDescriptor : manyImpl) {",
        "400": "            trace.report(MANY_IMPL_MEMBER_NOT_IMPLEMENTED.on(nameIdentifier, klass, memberDescriptor));",
        "409": "        for (CallableMemberDescriptor memberDescriptor : abstractNoImpl) {",
        "410": "            trace.report(ABSTRACT_MEMBER_NOT_IMPLEMENTED.on(nameIdentifier, klass, memberDescriptor));"
      },
      "id": 74085654,
      "filename": "OverrideResolver.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 239,
      "location": "/plugins/InspectionGadgets/src/com/siyeh/ig",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39391602/",
      "md5hash": "abdedb5f174e07721c1001e7919b5cab",
      "lines": {
        "96": "    }",
        "97": "    if (nameIdentifier != null && !nameIdentifier.isPhysical()) {",
        "98": "      nameIdentifier = nameIdentifier.getNavigationElement();",
        "99": "    }",
        "100": "    if (nameIdentifier == null || !nameIdentifier.isPhysical()) {",
        "81": "                                          Object... infos) {",
        "82": "    PsiElement nameIdentifier;",
        "131": "    @NotNull PsiTypeParameter typeParameter, Object... infos) {",
        "87": "        enumConstantInitializer.getEnumConstant();",
        "88": "      nameIdentifier = enumConstant.getNameIdentifier();",
        "132": "    final PsiElement nameIdentifier = typeParameter.getNameIdentifier();",
        "91": "      final PsiAnonymousClass anonymousClass = (PsiAnonymousClass)aClass;",
        "92": "      nameIdentifier = anonymousClass.getBaseClassReference();",
        "94": "    else {",
        "95": "      nameIdentifier = aClass.getNameIdentifier();"
      },
      "id": 39391602,
      "filename": "BaseInspectionVisitor.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 1194,
      "location": "/java/java-impl/src/com/intellij/codeInspection/javaDoc",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39417189/",
      "md5hash": "7365fc7b0fe3776e6598757116e4be29",
      "lines": {
        "581": "    if (required && isReturnRequired && isReturnAbsent) {",
        "582": "      final PsiIdentifier psiIdentifier = psiMethod.getNameIdentifier();",
        "519": "        if (superMethods.length == 0) {",
        "520": "          final PsiIdentifier nameIdentifier = psiMethod.getNameIdentifier();",
        "521": "          return nameIdentifier != null ? new ProblemDescriptor[] { createDescriptor(nameIdentifier, REQUIRED_JAVADOC_IS_ABSENT, manager,",
        "522": "                                                                                     isOnTheFly)} : null;",
        "455": "        for (PsiTypeParameter psiTypeParameter : absentParameters) {",
        "589": "      for (PsiParameter psiParameter : absentParameters) {",
        "590": "        final PsiIdentifier nameIdentifier = psiMethod.getNameIdentifier();",
        "591": "        if (nameIdentifier != null) {",
        "592": "          problems.add(createMissingParamTagDescriptor(nameIdentifier, psiParameter, manager, isOnTheFly));",
        "456": "          problems.add(createMissingParamTagDescriptor(nameIdentifier, psiTypeParameter, manager, isOnTheFly));",
        "593": "        }",
        "444": "",
        "445": "    if (required && isTagRequired(psiClass, \"param\") && psiClass.hasTypeParameters() && nameIdentifier != null) {"
      },
      "id": 39417189,
      "filename": "JavaDocLocalInspection.java"
    },
    {
      "repo": "https://github.com/peter-lawrey/kotlin.git",
      "language": "Java",
      "linescount": 126,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/68159920/",
      "md5hash": "6edcd1b63f3504dd6b97514b614855a6",
      "lines": {
        "112": "                    return markElement(nameIdentifier);",
        "113": "                }",
        "116": "                JetFile file = (JetFile) element;",
        "117": "                PsiElement nameIdentifier = file.getNamespaceHeader().getNameIdentifier();",
        "118": "                if (nameIdentifier != null) {",
        "119": "                    return markElement(nameIdentifier);",
        "120": "                }",
        "109": "            if (element instanceof JetNamedDeclaration) {",
        "110": "                PsiElement nameIdentifier = ((JetNamedDeclaration) element).getNameIdentifier();",
        "111": "                if (nameIdentifier != null) {"
      },
      "id": 68159920,
      "filename": "RedeclarationDiagnostic.java"
    },
    {
      "repo": "https://github.com/peter-lawrey/kotlin.git",
      "language": "Java",
      "linescount": 114,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/68160054/",
      "md5hash": "31fe26b31e490ff24e4b75d27d5ef5b5",
      "lines": {
        "67": "        private ASTNode getNameNode(JetNamedDeclaration function) {",
        "68": "            PsiElement nameIdentifier = function.getNameIdentifier();",
        "69": "            return nameIdentifier == null ? null : nameIdentifier.getNode();",
        "70": "        }",
        "72": "",
        "73": "    public static final PositioningStrategy<PsiNameIdentifierOwner> POSITION_NAME_IDENTIFIER = new PositioningStrategy<PsiNameIdentifierOwner>() {",
        "75": "        @Override",
        "76": "        public List<TextRange> mark(@NotNull PsiNameIdentifierOwner element) {",
        "79": "            }",
        "80": "            PsiElement nameIdentifier = element.getNameIdentifier();",
        "81": "            if (nameIdentifier != null) {",
        "82": "                return markElement(nameIdentifier);",
        "83": "            }",
        "23": "import com.intellij.psi.PsiErrorElement;",
        "24": "import com.intellij.psi.PsiNameIdentifierOwner;"
      },
      "id": 68160054,
      "filename": "PositioningStrategies.java"
    },
    {
      "repo": "https://github.com/dedoz/kotlin.git",
      "language": "Java",
      "linescount": 542,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/100043986/",
      "md5hash": "1e8a699005100bcddc71c993b4313b5d",
      "lines": {
        "160": "                    endOfSignatureElement = nameIdentifier;",
        "161": "                }",
        "171": "                PsiElement nameIdentifier = property.getNameIdentifier();",
        "71": "            JetTypeReference returnTypeRef = null;",
        "72": "            PsiElement nameIdentifierOrPlaceholder = null;",
        "170": "                JetTypeReference propertyTypeRef = property.getTypeRef();",
        "75": "                returnTypeRef = function.getReturnTypeRef();",
        "76": "                nameIdentifierOrPlaceholder = function.getNameIdentifier();",
        "80": "                returnTypeRef = property.getTypeRef();",
        "81": "                nameIdentifierOrPlaceholder = property.getNameIdentifier();",
        "151": "                JetElement returnTypeRef = function.getReturnTypeRef();",
        "24": "import com.intellij.psi.PsiElement;",
        "25": "import com.intellij.psi.PsiNameIdentifierOwner;",
        "152": "                PsiElement nameIdentifier = function.getNameIdentifier();",
        "158": "                }",
        "159": "                else if (nameIdentifier != null) {"
      },
      "id": 100043986,
      "filename": "PositioningStrategies.java"
    },
    {
      "repo": "https://github.com/inamori/google-go-lang-idea-plugin.git",
      "language": "Java",
      "linescount": 446,
      "location": "/src/ro/redeul/google/go/annotator",
      "name": "google-go-lang-idea-plugin",
      "url": "https://searchcode.com/codesearch/view/71947885/",
      "md5hash": "717ab55841be3080d1a2d9a25f5e792e",
      "lines": {
        "326": "            Annotation ann = annotationHolder.createInfoAnnotation(",
        "307": "",
        "308": "        PsiElement nameIdentifier = declaration.getNameIdentifier();",
        "309": "        if (nameIdentifier != null) {",
        "310": "            Annotation ann = annotationHolder.createInfoAnnotation(",
        "311": "                nameIdentifier, null);",
        "324": "        PsiElement nameIdentifier = declaration.getNameIdentifier();",
        "323": "",
        "327": "                nameIdentifier, null);",
        "325": "        if (nameIdentifier != null) {"
      },
      "id": 71947885,
      "filename": "GoAnnotator.java"
    },
    {
      "repo": "https://github.com/iamsteveholmes/kotlin.git",
      "language": "Java",
      "linescount": 138,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/psi",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/74082978/",
      "md5hash": "aea5c622127e2a5d5d9127dc65b58f84",
      "lines": {
        "80": "    public String getName() {",
        "81": "        PsiElement nameIdentifier = getNameIdentifier();",
        "82": "        return nameIdentifier == null ? \"\" : nameIdentifier.getText();",
        "83": "    }",
        "68": "    @Nullable",
        "69": "    public PsiElement getNameIdentifier() {",
        "86": "    public Name getNameAsName() {",
        "87": "        PsiElement nameIdentifier = getNameIdentifier();",
        "88": "        return nameIdentifier == null ? JetPsiUtil.ROOT_NAMESPACE_NAME : Name.identifier(nameIdentifier.getText());",
        "89": "    }"
      },
      "id": 74082978,
      "filename": "JetNamespaceHeader.java"
    },
    {
      "repo": "https://github.com/iamsteveholmes/kotlin.git",
      "language": "Java",
      "linescount": 56,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/diagnostics",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/74088992/",
      "md5hash": "d5be2b307866758df276f1dec90180d9",
      "lines": {
        "35": "            if (element instanceof JetNamedDeclaration) {",
        "36": "                PsiElement nameIdentifier = ((JetNamedDeclaration) element).getNameIdentifier();",
        "37": "                if (nameIdentifier != null) {",
        "38": "                    return markElement(nameIdentifier);",
        "39": "                }",
        "42": "                JetFile file = (JetFile) element;",
        "43": "                PsiElement nameIdentifier = file.getNamespaceHeader().getNameIdentifier();",
        "44": "                if (nameIdentifier != null) {",
        "45": "                    return markElement(nameIdentifier);",
        "46": "                }"
      },
      "id": 74088992,
      "filename": "RedeclarationDiagnosticFactory.java"
    },
    {
      "repo": "https://github.com/lalyos/kotlin.git",
      "language": "Java",
      "linescount": 104,
      "location": "/compiler/frontend/src/org/jetbrains/jet/lang/psi",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/75560219/",
      "md5hash": "bbc22880c4ddf5e18e3f067dc57a6976",
      "lines": {
        "80": "    }",
        "65": "    @Nullable",
        "66": "    public PsiElement getNameIdentifier() {",
        "83": "    public Name getNameAsName() {",
        "84": "        PsiElement nameIdentifier = getNameIdentifier();",
        "85": "        return nameIdentifier == null ? JetPsiUtil.ROOT_NAMESPACE_NAME : Name.identifier(nameIdentifier.getText());",
        "86": "    }",
        "77": "    public String getName() {",
        "78": "        PsiElement nameIdentifier = getNameIdentifier();",
        "79": "        return nameIdentifier == null ? \"\" : nameIdentifier.getText();"
      },
      "id": 75560219,
      "filename": "JetNamespaceHeader.java"
    },
    {
      "repo": "https://github.com/lalyos/kotlin.git",
      "language": "Java",
      "linescount": 91,
      "location": "/idea/src/org/jetbrains/jet/plugin/highlighter",
      "name": "kotlin",
      "url": "https://searchcode.com/codesearch/view/75564254/",
      "md5hash": "c79701fdc871baa980a766272072f9bd",
      "lines": {
        "64": "        PsiElement nameIdentifier = parameter.getNameIdentifier();",
        "65": "        if (nameIdentifier == null) return;",
        "66": "        PropertyDescriptor propertyDescriptor = bindingContext.get(BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER, parameter);",
        "68": "            Boolean backingFieldRequired = bindingContext.get(BindingContext.BACKING_FIELD_REQUIRED, propertyDescriptor);",
        "69": "            highlightProperty(nameIdentifier, propertyDescriptor, Boolean.TRUE.equals(backingFieldRequired));",
        "50": "    public void visitProperty(@NotNull JetProperty property) {",
        "51": "        PsiElement nameIdentifier = property.getNameIdentifier();",
        "52": "        if (nameIdentifier == null) return;",
        "53": "        VariableDescriptor propertyDescriptor = bindingContext.get(BindingContext.VARIABLE, property);",
        "55": "            Boolean backingFieldRequired = bindingContext.get(BindingContext.BACKING_FIELD_REQUIRED, (PropertyDescriptor)propertyDescriptor);",
        "56": "            highlightProperty(nameIdentifier, (PropertyDescriptor) propertyDescriptor, Boolean.TRUE.equals(backingFieldRequired));",
        "63": "    public void visitParameter(@NotNull JetParameter parameter) {"
      },
      "id": 75564254,
      "filename": "PropertiesHighlightingVisitor.java"
    },
    {
      "repo": "https://github.com/thyzhang/cas.git",
      "language": "Java",
      "linescount": 211,
      "location": "/cas-server-support-saml/src/main/java/org/jasig/cas/support/saml/web/view",
      "name": "cas",
      "url": "https://searchcode.com/codesearch/view/71946361/",
      "md5hash": "9704e9796b94222c88a67b71429f72c1",
      "lines": {
        "132": "        confirmation.getConfirmationMethods().add(method);",
        "133": "        final NameIdentifier nameIdentifier = newSamlObject(NameIdentifier.class);",
        "134": "        nameIdentifier.setNameIdentifier(identifier);",
        "135": "        final Subject subject = newSamlObject(Subject.class);",
        "136": "        subject.setNameIdentifier(nameIdentifier);",
        "41": "import org.opensaml.saml1.core.ConfirmationMethod;",
        "42": "import org.opensaml.saml1.core.NameIdentifier;"
      },
      "id": 71946361,
      "filename": "Saml10SuccessResponseView.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 239,
      "location": "/plugins/InspectionGadgets/src/com/siyeh/ig",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/7358317/",
      "md5hash": "abdedb5f174e07721c1001e7919b5cab",
      "lines": {
        "96": "    }",
        "97": "    if (nameIdentifier != null && !nameIdentifier.isPhysical()) {",
        "98": "      nameIdentifier = nameIdentifier.getNavigationElement();",
        "99": "    }",
        "100": "    if (nameIdentifier == null || !nameIdentifier.isPhysical()) {",
        "81": "                                          Object... infos) {",
        "82": "    PsiElement nameIdentifier;",
        "131": "    @NotNull PsiTypeParameter typeParameter, Object... infos) {",
        "87": "        enumConstantInitializer.getEnumConstant();",
        "88": "      nameIdentifier = enumConstant.getNameIdentifier();",
        "132": "    final PsiElement nameIdentifier = typeParameter.getNameIdentifier();",
        "91": "      final PsiAnonymousClass anonymousClass = (PsiAnonymousClass)aClass;",
        "92": "      nameIdentifier = anonymousClass.getBaseClassReference();",
        "94": "    else {",
        "95": "      nameIdentifier = aClass.getNameIdentifier();"
      },
      "id": 7358317,
      "filename": "BaseInspectionVisitor.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 797,
      "location": "/platform/lang-impl/src/com/intellij/refactoring/rename/inplace",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39398312/",
      "md5hash": "04f2236f6ed51b25187de6ab9773b6f7",
      "lines": {
        "651": "      final TextRange range = nameIdentifier.getTextRange();",
        "645": "",
        "646": "  private static PsiElement getSelectedInEditorElement(@Nullable PsiElement nameIdentifier,",
        "649": "                                                       final int offset) {",
        "458": "      if (Comparing.strEqual(myOldName, myElementToRename.getName())) return myElementToRename;",
        "459": "      if (myRenameOffset != null) return PsiTreeUtil.getParentOfType(myElementToRename.getContainingFile().findElementAt(myRenameOffset.getStartOffset()), PsiNameIdentifierOwner.class);",
        "652": "      if (range != null && contains(range, offset)) return nameIdentifier;",
        "653": "    }",
        "431": "  @Nullable",
        "432": "  protected PsiElement getNameIdentifier() {",
        "433": "    return myElementToRename instanceof PsiNameIdentifierOwner ? ((PsiNameIdentifierOwner)myElementToRename).getNameIdentifier() : null;",
        "434": "  }",
        "664": "",
        "665": "    LOG.error(nameIdentifier);",
        "650": "    if (nameIdentifier != null) {"
      },
      "id": 39398312,
      "filename": "InplaceRefactoring.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 199,
      "location": "/java/java-psi-impl/src/com/intellij/psi/impl/source/tree/java",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39415582/",
      "md5hash": "8d260cafe8bdfe08d19b1b4ed95a3916",
      "lines": {
        "74": "  @Override",
        "75": "  public PsiIdentifier getNameIdentifier() {",
        "144": "      public PsiElement handleElementRename(String newElementName) throws IncorrectOperationException {",
        "145": "        PsiIdentifier nameIdentifier = getNameIdentifier();",
        "146": "        if (nameIdentifier != null) {",
        "147": "          PsiImplUtil.setName(nameIdentifier, newElementName);",
        "148": "        }",
        "150": "          PsiElementFactory factory = JavaPsiFacade.getInstance(getProject()).getElementFactory();",
        "151": "          nameIdentifier = factory.createIdentifier(newElementName);",
        "152": "          addBefore(nameIdentifier, SourceTreeToPsiMap.treeElementToPsi(getNode().getFirstChildNode()));",
        "153": "        }",
        "59": "    if (stub == null) {",
        "60": "      PsiIdentifier nameIdentifier = getNameIdentifier();",
        "61": "      return nameIdentifier == null ? null : nameIdentifier.getText();",
        "62": "    }"
      },
      "id": 39415582,
      "filename": "PsiNameValuePairImpl.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 144,
      "source": "Github",
      "id": 2
    },
    {
      "count": 78,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Android",
      "id": 12
    }
  ]
}