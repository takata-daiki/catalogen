{
  "matchterm": "CipherAlgorithm",
  "previouspage": null,
  "searchterm": "CipherAlgorithm",
  "query": "CipherAlgorithm",
  "language_filters": [
    {
      "count": 106,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 106,
  "results": [
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 48,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37949291/",
      "md5hash": "c6b58228e6631ec8919e98a1a9df1ed7",
      "lines": {
        "1": "/* CipherAlgorithm.java -- Cipher algorithm enumeration.",
        "2": "   Copyright (C) 2006  Free Software Foundation, Inc.",
        "43": " */",
        "44": "public enum CipherAlgorithm"
      },
      "id": 37949291,
      "filename": "CipherAlgorithm.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 48,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46814928/",
      "md5hash": "c6b58228e6631ec8919e98a1a9df1ed7",
      "lines": {
        "1": "/* CipherAlgorithm.java -- Cipher algorithm enumeration.",
        "2": "   Copyright (C) 2006  Free Software Foundation, Inc.",
        "43": " */",
        "44": "public enum CipherAlgorithm"
      },
      "id": 46814928,
      "filename": "CipherAlgorithm.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 48,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127593421/",
      "md5hash": "c6b58228e6631ec8919e98a1a9df1ed7",
      "lines": {
        "1": "/* CipherAlgorithm.java -- Cipher algorithm enumeration.",
        "2": "   Copyright (C) 2006  Free Software Foundation, Inc.",
        "43": " */",
        "44": "public enum CipherAlgorithm"
      },
      "id": 127593421,
      "filename": "CipherAlgorithm.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 48,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223067/",
      "md5hash": "c6b58228e6631ec8919e98a1a9df1ed7",
      "lines": {
        "1": "/* CipherAlgorithm.java -- Cipher algorithm enumeration.",
        "2": "   Copyright (C) 2006  Free Software Foundation, Inc.",
        "43": " */",
        "44": "public enum CipherAlgorithm"
      },
      "id": 130223067,
      "filename": "CipherAlgorithm.java"
    },
    {
      "repo": "https://bitbucket.org/jcsirot/gliese",
      "language": "Java",
      "linescount": 52,
      "location": "/libgliese/src/main/java/org/xulfactory/gliese",
      "name": "gliese",
      "url": "https://searchcode.com/codesearch/view/53740953/",
      "md5hash": "6d703b7717f7796ab24c1e5c1e937c8c",
      "lines": {
        "26": " */",
        "27": "public interface CipherAlgorithm extends SSHAlgorithm"
      },
      "id": 53740953,
      "filename": "CipherAlgorithm.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 268,
      "location": "/common-core/src/main/java/org/teiid/core/crypto",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73447720/",
      "md5hash": "3a53484760a6d2d02ae069d12fcb6128",
      "lines": {
        "64": "    \tthis.encryptKey = encryptKey;",
        "65": "        this.cipherAlgorithm = algorithm;",
        "235": "            encryptCipher = Cipher.getInstance( cipherAlgorithm );",
        "135": "        try {",
        "136": "            decryptCipher = Cipher.getInstance( cipherAlgorithm); ",
        "138": "        } catch ( NoSuchAlgorithmException e ) {",
        "139": "              throw new CryptoException(CorePlugin.Event.TEIID10009,  e,  CorePlugin.Util.gs(CorePlugin.Event.TEIID10009, cipherAlgorithm ));",
        "140": "        } catch ( NoSuchPaddingException e ) {",
        "141": "              throw new CryptoException(CorePlugin.Event.TEIID10010,  CorePlugin.Util.gs(CorePlugin.Event.TEIID10010, cipherAlgorithm, e.getClass().getName(),  e.getMessage() ));",
        "238": "              throw new CryptoException(CorePlugin.Event.TEIID10016,  e, CorePlugin.Util.gs(CorePlugin.Event.TEIID10016, cipherAlgorithm ));",
        "237": "        } catch ( NoSuchAlgorithmException e ) {",
        "240": "              throw new CryptoException(CorePlugin.Event.TEIID10017, e, CorePlugin.Util.gs(CorePlugin.Event.TEIID10017, cipherAlgorithm , e.getMessage() ));",
        "55": "    protected Cipher encryptCipher;",
        "56": "    protected String cipherAlgorithm;",
        "239": "        } catch ( NoSuchPaddingException e ) {",
        "234": "        try {"
      },
      "id": 73447720,
      "filename": "BasicCryptor.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 849,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37949290/",
      "md5hash": "25cef5cd67b6a17a0db1f720679cf470",
      "lines": {
        "131": "  public static final CipherSuite TLS_DH_DSS_WITH_DES_CBC_SHA =",
        "132": "    new CipherSuite (CipherAlgorithm.DES,",
        "71": "  public static final CipherSuite TLS_NULL_WITH_NULL_NULL =",
        "72": "    new CipherSuite (CipherAlgorithm.NULL,",
        "137": "  public static final CipherSuite TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA =",
        "138": "    new CipherSuite (CipherAlgorithm.DESede,",
        "77": "  public static final CipherSuite TLS_RSA_WITH_NULL_MD5 =",
        "78": "    new CipherSuite (CipherAlgorithm.NULL,",
        "143": "  public static final CipherSuite TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA =",
        "144": "    new CipherSuite (CipherAlgorithm.DES,",
        "83": "  public static final CipherSuite TLS_RSA_WITH_NULL_SHA =",
        "84": "    new CipherSuite (CipherAlgorithm.NULL,",
        "149": "  public static final CipherSuite TLS_DH_RSA_WITH_DES_CBC_SHA =",
        "150": "    new CipherSuite (CipherAlgorithm.DES,",
        "155": "  public static final CipherSuite TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA =",
        "156": "    new CipherSuite (CipherAlgorithm.DESede,"
      },
      "id": 37949290,
      "filename": "CipherSuite.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 849,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46814927/",
      "md5hash": "25cef5cd67b6a17a0db1f720679cf470",
      "lines": {
        "131": "  public static final CipherSuite TLS_DH_DSS_WITH_DES_CBC_SHA =",
        "132": "    new CipherSuite (CipherAlgorithm.DES,",
        "71": "  public static final CipherSuite TLS_NULL_WITH_NULL_NULL =",
        "72": "    new CipherSuite (CipherAlgorithm.NULL,",
        "137": "  public static final CipherSuite TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA =",
        "138": "    new CipherSuite (CipherAlgorithm.DESede,",
        "77": "  public static final CipherSuite TLS_RSA_WITH_NULL_MD5 =",
        "78": "    new CipherSuite (CipherAlgorithm.NULL,",
        "143": "  public static final CipherSuite TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA =",
        "144": "    new CipherSuite (CipherAlgorithm.DES,",
        "83": "  public static final CipherSuite TLS_RSA_WITH_NULL_SHA =",
        "84": "    new CipherSuite (CipherAlgorithm.NULL,",
        "149": "  public static final CipherSuite TLS_DH_RSA_WITH_DES_CBC_SHA =",
        "150": "    new CipherSuite (CipherAlgorithm.DES,",
        "155": "  public static final CipherSuite TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA =",
        "156": "    new CipherSuite (CipherAlgorithm.DESede,"
      },
      "id": 46814927,
      "filename": "CipherSuite.java"
    },
    {
      "repo": "https://github.com/tjwatson/rt.equinox.bundles.git",
      "language": "Java",
      "linescount": 314,
      "location": "/bundles/org.eclipse.equinox.security/src/org/eclipse/equinox/internal/security/storage",
      "name": "rt.equinox.bundles",
      "url": "https://searchcode.com/codesearch/view/94900037/",
      "md5hash": "f105caea7176c59449488bf1c05b4606",
      "lines": {
        "64": "\t\treturn cipherAlgorithm;",
        "65": "\t}",
        "66": "",
        "67": "\tpublic void setAlgorithms(String cipherAlgorithm, String keyFactoryAlgorithm) {",
        "100": "\t\tif (cipherAlgorithm != null && keyFactoryAlgorithm != null) {",
        "69": "\t\t\tlock.acquire(); // avoid conflict with init()",
        "70": "\t\t\tthis.cipherAlgorithm = cipherAlgorithm;",
        "103": "\t\t\t// this is a bad situation - JVM cipher no longer available. Both log and throw an exception",
        "104": "\t\t\tString msg = NLS.bind(SecAuthMessages.noAlgorithm, cipherAlgorithm);",
        "48": "\tprivate String keyFactoryAlgorithm = null;",
        "49": "\tprivate String cipherAlgorithm = null;",
        "99": "\tprotected void internalInitialize() throws StorageException {",
        "101": "\t\t\tif (roundtrip(cipherAlgorithm, keyFactoryAlgorithm))",
        "102": "\t\t\t\treturn;",
        "62": "",
        "63": "\tpublic String getCipherAlgorithm() {"
      },
      "id": 94900037,
      "filename": "JavaEncryption.java"
    },
    {
      "repo": "https://bitbucket.org/nkabir/jdk-6",
      "language": "Java",
      "linescount": 191,
      "location": "/jdk/test/sun/security/pkcs11/tls",
      "name": "jdk-6",
      "url": "https://searchcode.com/codesearch/view/60691274/",
      "md5hash": "5b6ed00d229dc6e2c582fd148213fe2a",
      "lines": {
        "160": "",
        "161": "    private static void match(int lineNumber, byte[] out, Object res, String cipherAlgorithm) throws Exception {",
        "130": "                TlsKeyMaterialParameterSpec spec = new TlsKeyMaterialParameterSpec",
        "131": "                (masterKey, major, minor, clientRandom, serverRandom, cipherAlgorithm,",
        "69": "        byte[] serverRandom = null;",
        "102": "            } else if (line.startsWith(\"km-cipalg:\")) {",
        "103": "                cipherAlgorithm = data;",
        "136": "                match(lineNumber, clientCipherBytes, result.getClientCipherKey(), cipherAlgorithm);",
        "137": "                match(lineNumber, serverCipherBytes, result.getServerCipherKey(), cipherAlgorithm);",
        "138": "                match(lineNumber, clientIv, result.getClientIv(), \"\");",
        "135": "                TlsKeyMaterialSpec result = (TlsKeyMaterialSpec)kg.generateKey();",
        "172": "            if (cipherAlgorithm.equalsIgnoreCase(\"DES\") || cipherAlgorithm.equalsIgnoreCase(\"DESede\")) {",
        "171": "            b = ((SecretKey)res).getEncoded();",
        "70": "        String cipherAlgorithm = null;"
      },
      "id": 60691274,
      "filename": "TestKeyMaterial.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 1206,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37949304/",
      "md5hash": "474d9f60ece2ca89cbc707c64a35d514",
      "lines": {
        "962": "                       new SecretKeySpec(keys[isClient ? 2 : 3],",
        "963": "                                         s.cipherAlgorithm().toString()),",
        "948": "                      new SecretKeySpec(keys[isClient ? 3 : 2],",
        "949": "                                        s.cipherAlgorithm().toString()),",
        "566": "    int ivlen = 0;",
        "567": "    if (session.suite.cipherAlgorithm() == CipherAlgorithm.DES",
        "568": "        || session.suite.cipherAlgorithm() == CipherAlgorithm.DESede)",
        "569": "      ivlen = 8;",
        "570": "    if (session.suite.cipherAlgorithm() == CipherAlgorithm.AES)"
      },
      "id": 37949304,
      "filename": "AbstractHandshake.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 1206,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46814941/",
      "md5hash": "474d9f60ece2ca89cbc707c64a35d514",
      "lines": {
        "962": "                       new SecretKeySpec(keys[isClient ? 2 : 3],",
        "963": "                                         s.cipherAlgorithm().toString()),",
        "948": "                      new SecretKeySpec(keys[isClient ? 3 : 2],",
        "949": "                                        s.cipherAlgorithm().toString()),",
        "566": "    int ivlen = 0;",
        "567": "    if (session.suite.cipherAlgorithm() == CipherAlgorithm.DES",
        "568": "        || session.suite.cipherAlgorithm() == CipherAlgorithm.DESede)",
        "569": "      ivlen = 8;",
        "570": "    if (session.suite.cipherAlgorithm() == CipherAlgorithm.AES)"
      },
      "id": 46814941,
      "filename": "AbstractHandshake.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 849,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127593459/",
      "md5hash": "25cef5cd67b6a17a0db1f720679cf470",
      "lines": {
        "131": "  public static final CipherSuite TLS_DH_DSS_WITH_DES_CBC_SHA =",
        "132": "    new CipherSuite (CipherAlgorithm.DES,",
        "71": "  public static final CipherSuite TLS_NULL_WITH_NULL_NULL =",
        "72": "    new CipherSuite (CipherAlgorithm.NULL,",
        "137": "  public static final CipherSuite TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA =",
        "138": "    new CipherSuite (CipherAlgorithm.DESede,",
        "77": "  public static final CipherSuite TLS_RSA_WITH_NULL_MD5 =",
        "78": "    new CipherSuite (CipherAlgorithm.NULL,",
        "143": "  public static final CipherSuite TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA =",
        "144": "    new CipherSuite (CipherAlgorithm.DES,",
        "83": "  public static final CipherSuite TLS_RSA_WITH_NULL_SHA =",
        "84": "    new CipherSuite (CipherAlgorithm.NULL,",
        "149": "  public static final CipherSuite TLS_DH_RSA_WITH_DES_CBC_SHA =",
        "150": "    new CipherSuite (CipherAlgorithm.DES,",
        "155": "  public static final CipherSuite TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA =",
        "156": "    new CipherSuite (CipherAlgorithm.DESede,"
      },
      "id": 127593459,
      "filename": "CipherSuite.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 849,
      "location": "/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223028/",
      "md5hash": "25cef5cd67b6a17a0db1f720679cf470",
      "lines": {
        "131": "  public static final CipherSuite TLS_DH_DSS_WITH_DES_CBC_SHA =",
        "132": "    new CipherSuite (CipherAlgorithm.DES,",
        "71": "  public static final CipherSuite TLS_NULL_WITH_NULL_NULL =",
        "72": "    new CipherSuite (CipherAlgorithm.NULL,",
        "137": "  public static final CipherSuite TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA =",
        "138": "    new CipherSuite (CipherAlgorithm.DESede,",
        "77": "  public static final CipherSuite TLS_RSA_WITH_NULL_MD5 =",
        "78": "    new CipherSuite (CipherAlgorithm.NULL,",
        "143": "  public static final CipherSuite TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA =",
        "144": "    new CipherSuite (CipherAlgorithm.DES,",
        "83": "  public static final CipherSuite TLS_RSA_WITH_NULL_SHA =",
        "84": "    new CipherSuite (CipherAlgorithm.NULL,",
        "149": "  public static final CipherSuite TLS_DH_RSA_WITH_DES_CBC_SHA =",
        "150": "    new CipherSuite (CipherAlgorithm.DES,",
        "155": "  public static final CipherSuite TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA =",
        "156": "    new CipherSuite (CipherAlgorithm.DESede,"
      },
      "id": 130223028,
      "filename": "CipherSuite.java"
    },
    {
      "repo": "https://bitbucket.org/nkabir/jdk-6",
      "language": "Java",
      "linescount": 202,
      "location": "/jdk/src/share/classes/sun/security/internal/spec",
      "name": "jdk-6",
      "url": "https://searchcode.com/codesearch/view/60699930/",
      "md5hash": "fec6fc85fea2e65a050fad171491b6e7",
      "lines": {
        "96": "        this.serverRandom = serverRandom.clone();",
        "97": "        this.cipherAlgorithm = cipherAlgorithm;",
        "162": "        return cipherAlgorithm;",
        "163": "    }",
        "161": "    public String getCipherAlgorithm() {",
        "75": "     * @throws NullPointerException if masterSecret, clientRandom,",
        "76": "     *   serverRandom, or cipherAlgorithm are null",
        "49": "    private final byte[] clientRandom, serverRandom;",
        "50": "    private final String cipherAlgorithm;",
        "83": "            int majorVersion, int minorVersion, byte[] clientRandom,",
        "84": "            byte[] serverRandom, String cipherAlgorithm, int cipherKeyLength,",
        "160": "     */",
        "88": "        }",
        "89": "        if (cipherAlgorithm == null) {",
        "61": "     * @param serverRandom the server's random value",
        "62": "     * @param cipherAlgorithm the algorithm name of the cipher keys to"
      },
      "id": 60699930,
      "filename": "TlsKeyMaterialParameterSpec.java"
    },
    {
      "repo": "https://bitbucket.org/jcsirot/gliese",
      "language": "Java",
      "linescount": 103,
      "location": "/libgliese/src/main/java/org/xulfactory/gliese",
      "name": "gliese",
      "url": "https://searchcode.com/codesearch/view/53740957/",
      "md5hash": "aa28748170e9168e47327feb57ca5a12",
      "lines": {
        "33": "\t\t= new HashMap<String, SSHPublicKeyFactory>();",
        "34": "\tprivate Map<String, CipherAlgorithm> ciphers",
        "35": "\t\t= new HashMap<String, CipherAlgorithm>();",
        "36": "\tprivate Map<String, MacAlgorithm> macs",
        "45": "\t\t}",
        "46": "\t\tServiceLoader<CipherAlgorithm> cipherLoader =",
        "47": "\t\t\tServiceLoader.load(CipherAlgorithm.class);",
        "48": "\t\tfor (CipherAlgorithm cipher: cipherLoader) {",
        "49": "\t\t\tregister(cipher);",
        "82": "",
        "83": "\tvoid register(CipherAlgorithm cipher)",
        "87": "",
        "88": "\tCipherAlgorithm getCipher(String name)"
      },
      "id": 53740957,
      "filename": "AlgorithmRegistry.java"
    },
    {
      "repo": "https://bitbucket.org/seandroid/frameworks-base.git",
      "language": "Java",
      "linescount": 1332,
      "location": "/media/java/android/media",
      "name": "frameworks-base",
      "url": "https://searchcode.com/codesearch/view/57973365/",
      "md5hash": "33722bf1387a6f906ffcaa18f79da6e2",
      "lines": {
        "1088": "        CryptoSession(@NonNull MediaDrm drm, @NonNull byte[] sessionId,",
        "1089": "                @NonNull String cipherAlgorithm, @NonNull String macAlgorithm)",
        "1092": "            mDrm = drm;",
        "1093": "            setCipherAlgorithmNative(drm, sessionId, cipherAlgorithm);",
        "1035": "",
        "1036": "    private static final native void setCipherAlgorithmNative(",
        "1170": "            @NonNull byte[] sessionId,",
        "1171": "            @NonNull String cipherAlgorithm, @NonNull String macAlgorithm)",
        "1172": "    {",
        "1173": "        return new CryptoSession(this, sessionId, cipherAlgorithm, macAlgorithm);",
        "1156": "     * to be used for encrypt, decrypt, sign and/or verify",
        "1157": "     * @param cipherAlgorithm the algorithm to use for encryption and"
      },
      "id": 57973365,
      "filename": "MediaDrm.java"
    },
    {
      "repo": "https://bitbucket.org/htchoi1995/frameworks_base.git",
      "language": "Java",
      "linescount": 690,
      "location": "/media/java/android/media",
      "name": "frameworks_base",
      "url": "https://searchcode.com/codesearch/view/59267161/",
      "md5hash": "3f5ccd408179d7b822df593cad794d57",
      "lines": {
        "544": "",
        "545": "    private static final native void setCipherAlgorithmNative(MediaDrm drm, byte[] sessionId,",
        "653": "     * to be used for encrypt, decrypt, sign and/or verify",
        "654": "     * @param cipherAlgorithm the algorithm to use for encryption and",
        "591": "        CryptoSession(MediaDrm drm, byte[] sessionId,",
        "592": "                      String cipherAlgorithm, String macAlgorithm)",
        "595": "            mDrm = drm;",
        "596": "            setCipherAlgorithmNative(drm, sessionId, cipherAlgorithm);",
        "666": "    public CryptoSession getCryptoSession(byte[] sessionId,",
        "667": "                                          String cipherAlgorithm,",
        "669": "    {",
        "670": "        return new CryptoSession(this, sessionId, cipherAlgorithm, macAlgorithm);"
      },
      "id": 59267161,
      "filename": "MediaDrm.java"
    },
    {
      "repo": "https://github.com/navssurtani/JBossAS51.git",
      "language": "Java",
      "linescount": 979,
      "location": "/security/src/main/org/jboss/security/plugins",
      "name": "JBossAS51",
      "url": "https://searchcode.com/codesearch/view/109271977/",
      "md5hash": "975fe48a1e3378733f1513f891af00ec",
      "lines": {
        "384": "   public String getCipherAlgorithm()",
        "385": "   {",
        "386": "      return cipherAlgorithm;",
        "517": "",
        "518": "      Cipher cipher = Cipher.getInstance(cipherAlgorithm);",
        "393": "    * ",
        "394": "    * @param cipherAlgorithm a {@code String} representing the name of the cipher algorithm.",
        "395": "    */",
        "396": "   public void setCipherAlgorithm(String cipherAlgorithm)",
        "397": "   {",
        "142": "   /** The encode/decode cipher algorigthm */",
        "143": "   private String cipherAlgorithm = \"PBEwithMD5andDES\";",
        "398": "      this.cipherAlgorithm = cipherAlgorithm;",
        "537": "",
        "538": "      Cipher cipher = Cipher.getInstance(cipherAlgorithm);",
        "383": "   @ManagementProperty(use = {ViewUse.CONFIGURATION}, description = \"The cipher algorithm used in the encode/decode operations - default is PBEwithMD5andDES\")"
      },
      "id": 109271977,
      "filename": "JaasSecurityDomain.java"
    },
    {
      "repo": "https://bitbucket.org/tonivade/personal",
      "language": "Java",
      "linescount": 125,
      "location": "/myjce/src/com/agmc/crypto/provider/cipher",
      "name": "personal",
      "url": "https://searchcode.com/codesearch/view/120262056/",
      "md5hash": "d39d9d2a8e0b16de6f0b8610d2392439",
      "lines": {
        "33": "    private String mdAlgorithm;",
        "34": "    private String cipherAlgorithm;",
        "80": "            SecretKeySpec keySpec = new SecretKeySpec(key, cipherAlgorithm);",
        "40": "     * @param blockSize tama\u00f1o de un bloque, usualmente 16.",
        "41": "     * @param cipherAlgorithm algoritmo de cifrado a usar",
        "44": "     */",
        "45": "    public MyPBES1(int blockSize, String cipherAlgorithm, String mdAlgorithm) {",
        "46": "        super(cipherAlgorithm);",
        "79": "        try {",
        "48": "        this.cipherAlgorithm = cipherAlgorithm;",
        "81": "            SecretKeyFactory factory = SecretKeyFactory.getInstance(cipherAlgorithm, \"MyJCE\");",
        "82": "",
        "47": "        this.mdAlgorithm = mdAlgorithm;"
      },
      "id": 120262056,
      "filename": "MyPBES1.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 64,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 25,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 17,
      "source": "Github",
      "id": 2
    }
  ]
}