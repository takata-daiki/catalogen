{
  "matchterm": "TargetMode",
  "previouspage": null,
  "searchterm": "TargetMode",
  "query": "TargetMode",
  "language_filters": [
    {
      "count": 118,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 118,
  "results": [
    {
      "repo": "https://github.com/zetahernandez/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 449,
      "location": "/admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/72840805/",
      "md5hash": "f1c5a135ebd0d8ad7837f4c1a5e6fcae",
      "lines": {
        "386": "    @Override",
        "387": "    public TargetModeType getTargetMode() {",
        "388": "        return targetMode;",
        "389": "    }",
        "391": "    @Override",
        "392": "    public void setTargetMode(TargetModeType targetMode) {",
        "393": "        String targetManagerRef = targetEntityManagers.get(targetMode.getType());",
        "394": "        EntityManager targetManager = (EntityManager) applicationContext.getBean(targetManagerRef);",
        "395": "        if (targetManager == null) {",
        "396": "            throw new RuntimeException(\"Unable to find a target entity manager registered with the key: \" + targetMode + \". Did you add an entity manager with this key to the targetEntityManagers property?\");",
        "398": "        dynamicEntityDao.setStandardEntityManager(targetManager);",
        "399": "        this.targetMode = targetMode;",
        "85": "",
        "86": "    protected TargetModeType targetMode;"
      },
      "id": 72840805,
      "filename": "PersistenceManagerImpl.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 450,
      "location": "/admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75606215/",
      "md5hash": "7c34b1edb0646a4a01b9db375c7df886",
      "lines": {
        "384": "    }",
        "386": "    @Override",
        "387": "    public void setTargetMode(TargetModeType targetMode) {",
        "388": "        String targetManagerRef = targetEntityManagers.get(targetMode.getType());",
        "389": "        EntityManager targetManager = (EntityManager) applicationContext.getBean(targetManagerRef);",
        "390": "        if (targetManager == null) {",
        "391": "            throw new RuntimeException(\"Unable to find a target entity manager registered with the key: \" + targetMode + \". Did you add an entity manager with this key to the targetEntityManagers property?\");",
        "393": "        dynamicEntityDao.setStandardEntityManager(targetManager);",
        "394": "        this.targetMode = targetMode;",
        "88": "",
        "89": "    protected TargetModeType targetMode;",
        "381": "    @Override",
        "382": "    public TargetModeType getTargetMode() {",
        "383": "        return targetMode;"
      },
      "id": 75606215,
      "filename": "PersistenceManagerImpl.java"
    },
    {
      "repo": "https://github.com/elecnix/openemm.git",
      "language": "Java",
      "linescount": 1006,
      "location": "/src/java/org/agnitas/web",
      "name": "openemm",
      "url": "https://searchcode.com/codesearch/view/103900778/",
      "md5hash": "70e080ed6c07c3ccc56528c1e388b45b",
      "lines": {
        "192": "        this.targetMode = Mailing.TARGET_MODE_OR;",
        "736": "     *",
        "738": "     */",
        "739": "    public int getTargetMode() {",
        "740": "        return this.targetMode;",
        "741": "    }",
        "737": "     * @return Value of property targetMode.",
        "744": "     * Setter for property targetMode.",
        "745": "     *",
        "743": "    /**",
        "141": "    /**",
        "142": "     * Holds value of property targetMode.",
        "143": "     */",
        "144": "    private int targetMode;",
        "191": "        this.needsTarget = false;",
        "734": "    /**",
        "735": "     * Getter for property targetMode."
      },
      "id": 103900778,
      "filename": "MailingBaseForm.java"
    },
    {
      "repo": "https://bitbucket.org/generalplus/android_packages_inputmethods_openwnn.git",
      "language": "Java",
      "linescount": 1223,
      "location": "/src/jp/co/omronsoft/openwnn/JAJP",
      "name": "android_packages_inputmethods_openwnn",
      "url": "https://searchcode.com/codesearch/view/35471717/",
      "md5hash": "6e939444d1bd62694ef0bc1e1dc3bac7",
      "lines": {
        "1189": "                }",
        "1190": "                targetMode = keymode;",
        "1201": "            for (int i = 0; i < size; i++) {",
        "1168": "    private int filterKeyMode(int keyMode) {",
        "1169": "        int targetMode = keyMode;",
        "1202": "                if (targetMode == limits[i]) {",
        "1172": "        if (!mHardKeyboardHidden) { /* for hardware keyboard */",
        "1173": "            if ((targetMode != KEYMODE_JA_FULL_HIRAGANA)",
        "1174": "                && (targetMode != KEYMODE_JA_HALF_ALPHABET)) {",
        "1175": "",
        "1178": "                if (locale.getLanguage().equals(Locale.JAPANESE.getLanguage())) {",
        "1179": "                    switch (targetMode) {",
        "1212": "                if (hasRequiredChange) {",
        "1213": "                    targetMode = mLimitedKeyMode[0];",
        "1214": "                } else {"
      },
      "id": 35471717,
      "filename": "DefaultSoftKeyboardJAJP.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_packages_inputmethods_openwnn.git",
      "language": "Java",
      "linescount": 1223,
      "location": "/src/jp/co/omronsoft/openwnn/JAJP",
      "name": "android_packages_inputmethods_openwnn",
      "url": "https://searchcode.com/codesearch/view/41545621/",
      "md5hash": "6e939444d1bd62694ef0bc1e1dc3bac7",
      "lines": {
        "1189": "                }",
        "1190": "                targetMode = keymode;",
        "1201": "            for (int i = 0; i < size; i++) {",
        "1168": "    private int filterKeyMode(int keyMode) {",
        "1169": "        int targetMode = keyMode;",
        "1202": "                if (targetMode == limits[i]) {",
        "1172": "        if (!mHardKeyboardHidden) { /* for hardware keyboard */",
        "1173": "            if ((targetMode != KEYMODE_JA_FULL_HIRAGANA)",
        "1174": "                && (targetMode != KEYMODE_JA_HALF_ALPHABET)) {",
        "1175": "",
        "1178": "                if (locale.getLanguage().equals(Locale.JAPANESE.getLanguage())) {",
        "1179": "                    switch (targetMode) {",
        "1212": "                if (hasRequiredChange) {",
        "1213": "                    targetMode = mLimitedKeyMode[0];",
        "1214": "                } else {"
      },
      "id": 41545621,
      "filename": "DefaultSoftKeyboardJAJP.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/packages_inputmethods_openwnn.git",
      "language": "Java",
      "linescount": 1392,
      "location": "/src/jp/co/omronsoft/openwnn/JAJP",
      "name": "packages_inputmethods_openwnn",
      "url": "https://searchcode.com/codesearch/view/43990142/",
      "md5hash": "d8aab460d31ba2079428a897d7ab25b3",
      "lines": {
        "1248": "            if (!mEnableHardware12Keyboard && (targetMode != KEYMODE_JA_FULL_HIRAGANA)",
        "1249": "                && (targetMode != KEYMODE_JA_HALF_ALPHABET)) {",
        "386": "        mShiftOn = KEYBOARD_SHIFT_OFF;",
        "387": "        Keyboard kbd = getModeChangeKeyboard(targetMode);",
        "388": "        mCurrentKeyMode = targetMode;",
        "389": "        mPrevInputKeyCode = 0;",
        "1287": "                if (hasRequiredChange) {",
        "392": "        ",
        "393": "        switch (targetMode) {",
        "1290": "                    targetMode = INVALID_KEYMODE;",
        "1294": "",
        "1295": "        return targetMode;",
        "1288": "                    targetMode = mLimitedKeyMode[0];",
        "1289": "                } else {",
        "1243": "    private int filterKeyMode(int keyMode) {",
        "1244": "        int targetMode = keyMode;",
        "1247": "        if (!mHardKeyboardHidden) { /* for hardware keyboard */"
      },
      "id": 43990142,
      "filename": "DefaultSoftKeyboardJAJP.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/sdk.git",
      "language": "Java",
      "linescount": 613,
      "location": "/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/launch",
      "name": "sdk",
      "url": "https://searchcode.com/codesearch/view/51106187/",
      "md5hash": "2f1bf7c1a1f5c6b995ccb6023609c677",
      "lines": {
        "192": "",
        "193": "        mAllDevicesTargetButton = new Button(targetModeGroup, SWT.RADIO);",
        "197": "        Composite deviceTypeOffsetComp = new Composite(targetModeGroup, SWT.NONE);",
        "196": "",
        "22": "import com.android.ide.eclipse.adt.internal.launch.AndroidLaunchConfiguration.TargetMode;",
        "180": "        // radio button for the target mode",
        "21": "import com.android.ide.eclipse.adt.internal.editors.manifest.ManifestInfo;",
        "182": "        targetModeGroup.setText(\"Deployment Target Selection Mode\");",
        "183": "        gd = new GridData(GridData.FILL_HORIZONTAL);",
        "184": "        targetModeGroup.setLayoutData(gd);",
        "186": "        layout.numColumns = 1;",
        "187": "        targetModeGroup.setLayout(layout);",
        "188": "        targetModeGroup.setFont(font);",
        "189": "",
        "190": "        mManualTargetButton = new Button(targetModeGroup, SWT.RADIO);",
        "181": "        Group targetModeGroup = new Group(topComp, SWT.NONE);"
      },
      "id": 51106187,
      "filename": "EmulatorConfigTab.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1489,
      "location": "/pptx/src/org/apache/poi/openxml4j/opc",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406292/",
      "md5hash": "47fc882bc196bd395e952d6ada656cd9",
      "lines": {
        "1088": "\tpublic PackageRelationship addRelationship(PackagePartName targetPartName,",
        "1089": "\t\t\tTargetMode targetMode, String relationshipType) {",
        "1090": "\t\treturn this.addRelationship(targetPartName, targetMode,",
        "1091": "\t\t\t\trelationshipType, null);",
        "1033": "\t *            Target part name.",
        "1034": "\t * @param targetMode",
        "1149": "\t\t\t\tTargetMode.EXTERNAL, relationshipType, id);",
        "1071": "\t\tPackageRelationship retRel = relationships.addRelationship(",
        "1072": "\t\t\t\ttargetPartName.getURI(), targetMode, relationshipType, relID);",
        "1148": "\t\tPackageRelationship retRel = relationships.addRelationship(targetURI,",
        "1042": "\tpublic PackageRelationship addRelationship(PackagePartName targetPartName,",
        "1043": "\t\t\tTargetMode targetMode, String relationshipType, String relID) {",
        "1081": "\t *            Target part name.",
        "1082": "\t * @param targetMode",
        "444": "\t\t// Add the relationship between the package and the thumbnail part",
        "445": "\t\tthis.addRelationship(thumbnailPartName, TargetMode.INTERNAL,"
      },
      "id": 97406292,
      "filename": "OPCPackage.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/sdk.git",
      "language": "Java",
      "linescount": 178,
      "location": "/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/launch",
      "name": "sdk",
      "url": "https://searchcode.com/codesearch/view/51106194/",
      "md5hash": "fe49416895ec609d0b47b193f039fa5c",
      "lines": {
        "161": "                    defaultMode.toString());",
        "162": "            return TargetMode.getMode(value);",
        "35": "    /** Target selection mode for the configuration. */",
        "36": "    public enum TargetMode {",
        "167": "                boolean value = config.getAttribute(LaunchConfigDelegate.ATTR_TARGET_MODE, true);",
        "168": "                return value ? TargetMode.AUTO : TargetMode.MANUAL;",
        "47": "",
        "48": "        public static TargetMode getMode(String s) {",
        "49": "            for (TargetMode m: values()) {",
        "50": "                if (m.toString().equals(s)) {",
        "55": "            throw new IllegalArgumentException(String.format(",
        "56": "                    \"Invalid representation (%s) for TargetMode\", s));",
        "154": "    /**",
        "155": "     * Retrieve the {@link TargetMode} saved in the provided launch configuration.",
        "157": "     */",
        "158": "    public static TargetMode parseTargetMode(ILaunchConfiguration config, TargetMode defaultMode) {"
      },
      "id": 51106194,
      "filename": "AndroidLaunchConfiguration.java"
    },
    {
      "repo": "https://github.com/elecnix/openemm.git",
      "language": "Java",
      "linescount": 1731,
      "location": "/src/java/org/agnitas/beans/impl",
      "name": "openemm",
      "url": "https://searchcode.com/codesearch/view/103900675/",
      "md5hash": "c9e6846fd9fe2105a642ac7cf284377a",
      "lines": {
        "160": "        this.targetMode=MailingImpl.TARGET_MODE_OR;",
        "208": "",
        "166": "        if(tExp.indexOf('&')!=-1) {",
        "167": "            this.targetMode=MailingImpl.TARGET_MODE_AND;",
        "141": "    /**",
        "142": "     * Holds value of property targetMode.",
        "143": "     */",
        "144": "    protected int targetMode;",
        "209": "        if(this.targetMode==MailingImpl.TARGET_MODE_AND) {",
        "1362": "    /**",
        "1363": "     * Getter for property targetMode.",
        "1364": "     * @return Value of property targetMode.",
        "1365": "     */",
        "1366": "    public int getTargetMode() {",
        "1367": "        return this.targetMode;",
        "159": ""
      },
      "id": 103900675,
      "filename": "MailingImpl.java"
    },
    {
      "repo": "https://bitbucket.org/bohlooli/csipsimple.git",
      "language": "Java",
      "linescount": 787,
      "location": "/CSipSimple/src/com/csipsimple/service",
      "name": "csipsimple",
      "url": "https://searchcode.com/codesearch/view/48514929/",
      "md5hash": "3393e3b0c763a1e74cdef71625fac83a",
      "lines": {
        "384": "\t\tif(service.getPrefs().useRoutingApi()) {",
        "385": "\t\t\ted.putInt(\"savedRoute\", audioManager.getRouting(targetMode));",
        "416": "\t\t\taudioManager.setRouting(targetMode, prefs.getInt(\"savedRoute\", AudioManager.ROUTE_SPEAKER), AudioManager.ROUTE_ALL);",
        "268": "\t\t\t//Set mode",
        "274": "\t\t\t",
        "269": "\t\t\tif(targetMode != AudioManager.MODE_IN_CALL && useSgsWrkAround) {",
        "144": "\tprivate int getAudioTargetMode() {",
        "145": "\t\tint targetMode = modeSipInCall;",
        "146": "\t\t",
        "275": "\t\t\taudioManager.setMode(targetMode);",
        "278": "\t\t\tif(service.getPrefs().useRoutingApi()) {",
        "279": "\t\t\t\taudioManager.setRouting(targetMode, userWantSpeaker?AudioManager.ROUTE_SPEAKER:AudioManager.ROUTE_EARPIECE, AudioManager.ROUTE_ALL);",
        "155": "\t\tif(userWantBluetooth) {",
        "156": "\t\t    targetMode = AudioManager.MODE_NORMAL;",
        "143": "\t",
        "415": "\t\tif(service.getPrefs().useRoutingApi()) {"
      },
      "id": 48514929,
      "filename": "MediaManager.java"
    },
    {
      "repo": "https://github.com/minstrelsy/xdocreport.git",
      "language": "Java",
      "linescount": 332,
      "location": "/document/fr.opensagres.xdocreport.document.docx/src/main/java/fr/opensagres/xdocreport/document/docx/preprocessor/sax/rels",
      "name": "xdocreport",
      "url": "https://searchcode.com/codesearch/view/96675743/",
      "md5hash": "5838d81c5c699829c1b117df33ca7f47",
      "lines": {
        "64": " *   <Relationship Id=\"rId6\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\" Target=\"fontTable.xml\" /> ",
        "65": " *   <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"mailto:$developers.Mail\" TargetMode=\"External\" /> ",
        "325": "            script.append( \"=\\\"\" );",
        "326": "            script.append( targetMode );",
        "321": "        if ( targetMode != null )",
        "298": "     * @param target",
        "299": "     * @param targetMode",
        "301": "    protected void generateRelationship( StringBuilder script, String relationId, String type, String target,",
        "238": "                generateRelationship( script, hyperlink.getId(), RELATIONSHIPS_HYPERLINK_NS, hyperlink.getTarget(),",
        "239": "                                      hyperlink.getTargetMode() );",
        "320": "        script.append( target );",
        "302": "                                         String targetMode )",
        "283": "        String targetMode = formatter.formatAsSimpleField( true, ITEM_INFO, \"TargetMode\" );",
        "284": "        generateRelationship( script, relationId, RELATIONSHIPS_HYPERLINK_NS, target, targetMode );",
        "285": ""
      },
      "id": 96675743,
      "filename": "DocxDocumentXMLRelsDocumentContentHandler.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 277,
      "location": "/package/qa/ofopxmlstorages",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45024032/",
      "md5hash": "a43e5b7ea2c3ae7e358e8256bcd7d706",
      "lines": {
        "66": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "67": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "68": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "69": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) },",
        "70": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) }",
        "71": "            };",
        "56": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "57": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "58": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "59": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "60": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value1\" ) }",
        "61": "            };"
      },
      "id": 45024032,
      "filename": "Test07.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 333,
      "location": "/package/qa/ofopxmlstorages",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45024034/",
      "md5hash": "f97d747faf79d02c56c28bf6dfd5473a",
      "lines": {
        "65": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "66": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "67": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "68": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) },",
        "69": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) }",
        "70": "            };",
        "55": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "56": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "57": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "58": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "59": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value1\" ) }",
        "60": "            };"
      },
      "id": 45024034,
      "filename": "Test05.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 327,
      "location": "/package/qa/ofopxmlstorages",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45024035/",
      "md5hash": "3b2d842575515e9be732cb2e66d2d4c1",
      "lines": {
        "67": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "68": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "69": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "70": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) },",
        "71": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) }",
        "72": "            };",
        "57": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "58": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "59": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "60": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "61": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value1\" ) }",
        "62": "            };"
      },
      "id": 45024035,
      "filename": "Test04.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 219,
      "location": "/package/qa/ofopxmlstorages",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45024038/",
      "md5hash": "8b02558b2e840d437419f4c76ed1a677",
      "lines": {
        "64": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "65": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "66": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown2\" ), new StringPair( \"Target\", \"URL value 2\" ) },",
        "67": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal2\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) },",
        "68": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown\" ), new StringPair( \"Target\", \"URL value\" ) }",
        "69": "            };",
        "54": "              { new StringPair( \"Target\", \"\" ), new StringPair( \"Id\", \"Num7\" ) },",
        "55": "              { new StringPair( \"Id\", \"Num2\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "56": "              { new StringPair( \"Id\", \"Num3\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "57": "              { new StringPair( \"Id\", \"Num4\" ), new StringPair( \"TargetMode\", \"Internal1\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value 1\" ) },",
        "58": "              { new StringPair( \"Id\", \"Num5\" ), new StringPair( \"TargetMode\", \"\" ), new StringPair( \"Type\", \"unknown1\" ), new StringPair( \"Target\", \"URL value1\" ) }",
        "59": "            };"
      },
      "id": 45024038,
      "filename": "Test01.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/sdk.git",
      "language": "Java",
      "linescount": 1802,
      "location": "/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/launch",
      "name": "sdk",
      "url": "https://searchcode.com/codesearch/view/51106193/",
      "md5hash": "56f7a7977ac1952cf05fe83997c48596",
      "lines": {
        "35": "import com.android.ide.eclipse.adt.internal.editors.manifest.ManifestInfo;",
        "324": "            // to allow using physical devices.",
        "325": "            config.mTargetMode = TargetMode.MANUAL;",
        "582": "        } else if ((config.mTargetMode == TargetMode.ALL_DEVICES_AND_EMULATORS",
        "583": "                || config.mTargetMode == TargetMode.ALL_DEVICES",
        "584": "                || config.mTargetMode == TargetMode.ALL_EMULATORS)",
        "585": "                && ILaunchManager.RUN_MODE.equals(mode)) {",
        "586": "            // if running on multiple devices, identify all compatible devices",
        "587": "            boolean includeDevices = config.mTargetMode != TargetMode.ALL_EMULATORS;",
        "588": "            boolean includeAvds = config.mTargetMode != TargetMode.ALL_DEVICES;",
        "589": "            Collection<IDevice> compatibleDevices = findCompatibleDevices(devices,",
        "371": "",
        "372": "        if (config.mTargetMode == TargetMode.AUTO) {",
        "36": "import com.android.ide.eclipse.adt.internal.launch.AndroidLaunchConfiguration.TargetMode;",
        "581": "            AdtPlugin.printToConsole(project, message);"
      },
      "id": 51106193,
      "filename": "AndroidLaunchController.java"
    },
    {
      "repo": "https://bitbucket.org/generalplus/android_sdk.git",
      "language": "Java",
      "linescount": 160,
      "location": "/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/launch",
      "name": "android_sdk",
      "url": "https://searchcode.com/codesearch/view/35504496/",
      "md5hash": "b3c44617649cb9dd133e86fcbd3dc05a",
      "lines": {
        "66": "     * Target selection mode.",
        "67": "     * @see TargetMode",
        "68": "     */",
        "37": "     */",
        "38": "    public enum TargetMode {",
        "110": "                    mTargetMode.getValue());",
        "45": "",
        "46": "        TargetMode(boolean value) {",
        "109": "            boolean value = config.getAttribute(LaunchConfigDelegate.ATTR_TARGET_MODE,",
        "53": "        ",
        "54": "        public static TargetMode getMode(boolean value) {",
        "55": "            for (TargetMode mode : values()) {",
        "56": "                if (mode.mValue == value) {",
        "111": "            mTargetMode = TargetMode.getMode(value);",
        "69": "    public TargetMode mTargetMode = LaunchConfigDelegate.DEFAULT_TARGET_MODE;"
      },
      "id": 35504496,
      "filename": "AndroidLaunchConfiguration.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_sdk.git",
      "language": "Java",
      "linescount": 160,
      "location": "/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/launch",
      "name": "android_sdk",
      "url": "https://searchcode.com/codesearch/view/41576908/",
      "md5hash": "b3c44617649cb9dd133e86fcbd3dc05a",
      "lines": {
        "66": "     * Target selection mode.",
        "67": "     * @see TargetMode",
        "68": "     */",
        "37": "     */",
        "38": "    public enum TargetMode {",
        "110": "                    mTargetMode.getValue());",
        "45": "",
        "46": "        TargetMode(boolean value) {",
        "109": "            boolean value = config.getAttribute(LaunchConfigDelegate.ATTR_TARGET_MODE,",
        "53": "        ",
        "54": "        public static TargetMode getMode(boolean value) {",
        "55": "            for (TargetMode mode : values()) {",
        "56": "                if (mode.mValue == value) {",
        "111": "            mTargetMode = TargetMode.getMode(value);",
        "69": "    public TargetMode mTargetMode = LaunchConfigDelegate.DEFAULT_TARGET_MODE;"
      },
      "id": 41576908,
      "filename": "AndroidLaunchConfiguration.java"
    },
    {
      "repo": "https://github.com/elecnix/openemm.git",
      "language": "Java",
      "linescount": 564,
      "location": "/src/java/org/agnitas/beans",
      "name": "openemm",
      "url": "https://searchcode.com/codesearch/view/103900640/",
      "md5hash": "6da9490c7bbc72fb01223546ad3f8e4e",
      "lines": {
        "206": "    /**",
        "207": "     * Getter for property targetMode.",
        "208": "     *",
        "209": "     * @return Value of property targetMode.",
        "210": "     */",
        "211": "    int getTargetMode();",
        "410": "    /**",
        "411": "     * Setter for property targetMode.",
        "412": "     *",
        "413": "     * @param targetMode New value of property targetMode.",
        "414": "     */",
        "415": "    void setTargetMode(int targetMode);"
      },
      "id": 103900640,
      "filename": "Mailing.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 64,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 36,
      "source": "Github",
      "id": 2
    },
    {
      "count": 16,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "Google Android",
      "id": 12
    }
  ]
}