{
  "matchterm": "DataFormat",
  "previouspage": null,
  "searchterm": "DataFormat",
  "query": "DataFormat",
  "language_filters": [
    {
      "count": 2001,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 2001,
  "results": [
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 650,
      "location": "/src/main/java/com/extentech/formats/XLS/charts",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47125049/",
      "md5hash": "d55219a8ef9a555f253e8df4c7b82003",
      "lines": {
        "569": "\t\t\t\tAttachedLabel al= (AttachedLabel) Chart.findRec(df.chartArr, AttachedLabel.class);",
        "548": "\t/**",
        "549": "\t * sets the color identified by this DataFormat in the group of records",
        "566": "\t\tfor (; i < chartArr.size(); i++) {",
        "76": "     public void initNew() {",
        "77": "         this.setOpcode(DATAFORMAT);",
        "580": "\t * get the bg color identified by this DataFormat",
        "579": "\t/**",
        "85": "     /**",
        "86": "      * Create a new dataformat",
        "567": "\t\t\tif (chartArr.get(i) instanceof DataFormat) {",
        "568": "\t\t\t\tDataFormat df= ((DataFormat) chartArr.get(i));",
        "537": "\t/**",
        "538": "\t * sets the color identified by this DataFormat in the group of records",
        "27": "/**",
        "28": " * <b>DataFormat: Series and Data Point Numbers(0x1006)</b>"
      },
      "id": 47125049,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 650,
      "location": "/src/main/java/com/extentech/formats/XLS/charts",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976673/",
      "md5hash": "d55219a8ef9a555f253e8df4c7b82003",
      "lines": {
        "569": "\t\t\t\tAttachedLabel al= (AttachedLabel) Chart.findRec(df.chartArr, AttachedLabel.class);",
        "548": "\t/**",
        "549": "\t * sets the color identified by this DataFormat in the group of records",
        "566": "\t\tfor (; i < chartArr.size(); i++) {",
        "76": "     public void initNew() {",
        "77": "         this.setOpcode(DATAFORMAT);",
        "580": "\t * get the bg color identified by this DataFormat",
        "579": "\t/**",
        "85": "     /**",
        "86": "      * Create a new dataformat",
        "567": "\t\t\tif (chartArr.get(i) instanceof DataFormat) {",
        "568": "\t\t\t\tDataFormat df= ((DataFormat) chartArr.get(i));",
        "537": "\t/**",
        "538": "\t * sets the color identified by this DataFormat in the group of records",
        "27": "/**",
        "28": " * <b>DataFormat: Series and Data Point Numbers(0x1006)</b>"
      },
      "id": 50976673,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/capooti/geoserver-exts.git",
      "language": "Java",
      "linescount": 94,
      "location": "/importer/src/main/java/org/opengeo/data/importer",
      "name": "geoserver-exts",
      "url": "https://searchcode.com/codesearch/view/72259760/",
      "md5hash": "815aadb38b0d71268779b910107e0953",
      "lines": {
        "38": "     */",
        "39": "    static Map<String,Class<? extends DataFormat>> extToFormat = ",
        "40": "        new HashMap<String, Class<? extends DataFormat>>();",
        "41": "    static {",
        "76": "     */",
        "77": "    public static DataFormat lookup(Map<String,Serializable> params) {",
        "48": "     */",
        "49": "    public static DataFormat lookup(File file) {",
        "51": "        if (ext != null && extToFormat.containsKey(ext)) {",
        "52": "            Class<? extends DataFormat> clazz = extToFormat.get(ext);",
        "30": "",
        "31": "public abstract class DataFormat implements Serializable {"
      },
      "id": 72259760,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/rbair/rbair-controls-8",
      "language": "Java",
      "linescount": 229,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "rbair-controls-8",
      "url": "https://searchcode.com/codesearch/view/103092614/",
      "md5hash": "cd47b928db97e0ab67736220416e3e4a",
      "lines": {
        "64": "     */",
        "65": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "40": " */",
        "41": "public class DataFormat {",
        "43": "    /**",
        "44": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "45": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "46": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "47": "     * (or other string based key), and we need to be able to map this back to the FX",
        "48": "     * DataFormat.",
        "49": "     */",
        "50": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "54": "     */",
        "55": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "59": "     */",
        "60": "    public static final DataFormat HTML = new DataFormat(\"text/html\");"
      },
      "id": 103092614,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 214,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60435492/",
      "md5hash": "71867751e4be3dfc312a2fbe655c4ce6",
      "lines": {
        "64": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "39": " */",
        "40": "public class DataFormat {",
        "42": "    /**",
        "43": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "44": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "45": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "46": "     * (or other string based key), and we need to be able to map this back to the FX",
        "47": "     * DataFormat.",
        "48": "     */",
        "49": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "53": "     */",
        "54": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "58": "     */",
        "59": "    public static final DataFormat HTML = new DataFormat(\"text/html\");",
        "63": "     */"
      },
      "id": 60435492,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 229,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/64650240/",
      "md5hash": "cd47b928db97e0ab67736220416e3e4a",
      "lines": {
        "64": "     */",
        "65": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "40": " */",
        "41": "public class DataFormat {",
        "43": "    /**",
        "44": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "45": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "46": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "47": "     * (or other string based key), and we need to be able to map this back to the FX",
        "48": "     * DataFormat.",
        "49": "     */",
        "50": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "54": "     */",
        "55": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "59": "     */",
        "60": "    public static final DataFormat HTML = new DataFormat(\"text/html\");"
      },
      "id": 64650240,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/lxhuang/HBVLTool.git",
      "language": "Java",
      "linescount": 691,
      "location": "/src/Data",
      "name": "HBVLTool",
      "url": "https://searchcode.com/codesearch/view/109115843/",
      "md5hash": "6e586f5c6688fb47b7be7a582cdf5dd1",
      "lines": {
        "680": "//\t\tVector<String> dimensionDesc = new Vector<String>();",
        "681": "//\t\tDataFormat.readLabelFromELAN(\"AGN02F0.xml\", dimensionDesc, labels);",
        "683": "//\t\tVector<DimensionData> dims = new Vector<DimensionData>();",
        "684": "//\t\tDataFormat.loadContinuousDimensionDataFromWavFile(\"test.wav\", dims);",
        "686": "\t\tVector<DimensionDescription> dims = new Vector<DimensionDescription>();",
        "687": "//\t\tDataFormat.loadContinuousDimensionsDescFromJSONFile(\"test.txt\", dims);",
        "688": "\t\tDataFormat.writeDimensionsDescToJSONFile(\"test.txt\", dims);",
        "689": "\t}",
        "18": "",
        "19": "public class DataFormat {",
        "20": "\tpublic DataFormat() {}",
        "21": "\t"
      },
      "id": 109115843,
      "filename": "DataFormat.java"
    },
    {
      "repo": "http://metadata-extractor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 88,
      "location": "/Source/com/drew/metadata/exif",
      "name": "metadata-extractor",
      "url": "https://searchcode.com/codesearch/view/13431820/",
      "md5hash": "477753e242ea486a2903dcb5b5d0f7ff",
      "lines": {
        "32": "{",
        "33": "    @NotNull public static final DataFormat BYTE = new DataFormat(\"BYTE\", 1);",
        "34": "    @NotNull public static final DataFormat STRING = new DataFormat(\"STRING\", 2);",
        "35": "    @NotNull public static final DataFormat USHORT = new DataFormat(\"USHORT\", 3);",
        "36": "    @NotNull public static final DataFormat ULONG = new DataFormat(\"ULONG\", 4);",
        "37": "    @NotNull public static final DataFormat URATIONAL = new DataFormat(\"URATIONAL\", 5);",
        "38": "    @NotNull public static final DataFormat SBYTE = new DataFormat(\"SBYTE\", 6);",
        "39": "    @NotNull public static final DataFormat UNDEFINED = new DataFormat(\"UNDEFINED\", 7);",
        "40": "    @NotNull public static final DataFormat SSHORT = new DataFormat(\"SSHORT\", 8);",
        "41": "    @NotNull public static final DataFormat SLONG = new DataFormat(\"SLONG\", 9);",
        "42": "    @NotNull public static final DataFormat SRATIONAL = new DataFormat(\"SRATIONAL\", 10);",
        "43": "    @NotNull public static final DataFormat SINGLE = new DataFormat(\"SINGLE\", 11);",
        "44": "    @NotNull public static final DataFormat DOUBLE = new DataFormat(\"DOUBLE\", 12);",
        "45": "",
        "49": "    @NotNull",
        "50": "    public static DataFormat fromValue(int value) throws MetadataException"
      },
      "id": 13431820,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/Octavianus/DiscoveryEnvironmentBackend.git",
      "language": "Java",
      "linescount": 145,
      "location": "/libs/de-persistence/src/main/java/org/iplantc/persistence/dto/data",
      "name": "DiscoveryEnvironmentBackend",
      "url": "https://searchcode.com/codesearch/view/93344026/",
      "md5hash": "e99e88cb384265018e0ddb9319ef8f3c",
      "lines": {
        "39": "     */",
        "40": "    public DataFormat() {",
        "49": "     */",
        "50": "    public DataFormat(String guid, String name, String label) {",
        "116": "        }",
        "21": "@NamedQueries({",
        "22": "    @NamedQuery(name = \"DataFormat.findByGuid\", query = \"from DataFormat where guid = :guid\"),",
        "23": "    @NamedQuery(name = \"DataFormat.findByName\", query = \"from DataFormat where name = :name\")})",
        "24": "@Entity",
        "25": "@Table(name = \"data_formats\")",
        "26": "public class DataFormat implements RepresentableAsJson {",
        "117": "        final DataFormat other = (DataFormat) obj;"
      },
      "id": 93344026,
      "filename": "DataFormat.java"
    },
    {
      "repo": "http://androjena.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 80,
      "location": "/arqoid/src/com/hp/hpl/jena/sparql/core",
      "name": "androjena",
      "url": "https://searchcode.com/codesearch/view/820455/",
      "md5hash": "97d808b82f608e71c3715526a1c09ae4",
      "lines": {
        "13": "",
        "14": "public class DataFormat extends Symbol",
        "15": "{",
        "16": "    public static final DataFormat langNTriples",
        "17": "                    = new DataFormat(FileUtils.langNTriple) ;",
        "18": "    ",
        "19": "    public static final DataFormat langXML",
        "20": "                    = new DataFormat(FileUtils.langXML ) ;",
        "21": "    ",
        "22": "    public static final DataFormat langXMLAbbrev",
        "23": "                    = new DataFormat(FileUtils.langXMLAbbrev) ;",
        "24": "    ",
        "25": "    public static final DataFormat langTurtle",
        "26": "                    = new DataFormat(FileUtils.langTurtle ) ;",
        "27": "    "
      },
      "id": 820455,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/tobyweston/simple-excel.git",
      "language": "Java",
      "linescount": 57,
      "location": "/src/main/java/bad/robot/excel/cell",
      "name": "simple-excel",
      "url": "https://searchcode.com/codesearch/view/67862336/",
      "md5hash": "a62bab72d8410383db84621ef018ebd0",
      "lines": {
        "32": "",
        "33": "    public static DataFormat asTwoDecimalPlacesNumber() {",
        "34": "        return dataFormat(\"#,##0.00\");",
        "35": "    }",
        "36": "",
        "37": "    public static DataFormat dataFormat(String value) {",
        "38": "        return new DataFormat(value);",
        "39": "    }",
        "40": "",
        "41": "    private DataFormat(String value) {",
        "26": "",
        "27": "public class DataFormat extends AbstractValueType<String> implements Style {",
        "28": "",
        "29": "    public static DataFormat asDayMonthYear() {",
        "30": "        return dataFormat(\"dd-MMM-yyyy\");",
        "31": "    }"
      },
      "id": 67862336,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/GenomeSpace/combined",
      "language": "Java",
      "linescount": 148,
      "location": "/converter-services-domain/src/main/java/org/genomespace/converter/domain",
      "name": "combined",
      "url": "https://searchcode.com/codesearch/view/57505802/",
      "md5hash": "d0200597b26fe6544ba27412bce2eb8d",
      "lines": {
        "32": "\tpublic DataFormat(String name, String description, String url, String extension, String internalId) {",
        "113": "\t\tDataFormat other = (DataFormat) obj;",
        "8": "",
        "9": "public class DataFormat {",
        "139": "\t\tStringBuilder builder = new StringBuilder();",
        "140": "\t\tbuilder.append(\"DataFormat [name=\");",
        "112": "\t\t\treturn false;",
        "17": "",
        "18": "\tpublic DataFormat(String name, String description, String url, String extension) {",
        "22": "\t\t} catch (MalformedURLException e) {",
        "23": "\t\t\tString message = MessageFormat.format(\"DataFormat|unable to create URL from string: {0}\", ",
        "31": "\t"
      },
      "id": 57505802,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 228,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/136761491/",
      "md5hash": "563d3dbe86ded547e698637bce4a8420",
      "lines": {
        "64": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "39": " */",
        "40": "public class DataFormat {",
        "42": "    /**",
        "43": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "44": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "45": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "46": "     * (or other string based key), and we need to be able to map this back to the FX",
        "47": "     * DataFormat.",
        "48": "     */",
        "49": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "53": "     */",
        "54": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "58": "     */",
        "59": "    public static final DataFormat HTML = new DataFormat(\"text/html\");",
        "63": "     */"
      },
      "id": 136761491,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-graphics-rt",
      "language": "Java",
      "linescount": 228,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "openjfx-8-graphics-rt",
      "url": "https://searchcode.com/codesearch/view/136764620/",
      "md5hash": "563d3dbe86ded547e698637bce4a8420",
      "lines": {
        "64": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "39": " */",
        "40": "public class DataFormat {",
        "42": "    /**",
        "43": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "44": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "45": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "46": "     * (or other string based key), and we need to be able to map this back to the FX",
        "47": "     * DataFormat.",
        "48": "     */",
        "49": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "53": "     */",
        "54": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "58": "     */",
        "59": "    public static final DataFormat HTML = new DataFormat(\"text/html\");",
        "63": "     */"
      },
      "id": 136764620,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-rt",
      "language": "Java",
      "linescount": 214,
      "location": "/javafx-ui-common/src/javafx/scene/input",
      "name": "openjfx-rt",
      "url": "https://searchcode.com/codesearch/view/132891403/",
      "md5hash": "71867751e4be3dfc312a2fbe655c4ce6",
      "lines": {
        "64": "    public static final DataFormat RTF = new DataFormat(\"text/rtf\");",
        "39": " */",
        "40": "public class DataFormat {",
        "42": "    /**",
        "43": "     * A static cache of all DataFormats created and currently in use. This is needed",
        "44": "     * by the underlying implementation, such that, given a mime type, we can determine",
        "45": "     * the associated DataFormat. The OS level is going to supply us with a mime type",
        "46": "     * (or other string based key), and we need to be able to map this back to the FX",
        "47": "     * DataFormat.",
        "48": "     */",
        "49": "    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();",
        "53": "     */",
        "54": "    public static final DataFormat PLAIN_TEXT = new DataFormat(\"text/plain\");",
        "58": "     */",
        "59": "    public static final DataFormat HTML = new DataFormat(\"text/html\");",
        "63": "     */"
      },
      "id": 132891403,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://bitbucket.org/LucaREz/alchemistwithosm",
      "language": "Java",
      "linescount": 77,
      "location": "/nextreactionmodel/src/main/java/com/drew/metadata/exif",
      "name": "alchemistwithosm",
      "url": "https://searchcode.com/codesearch/view/136271885/",
      "md5hash": "a60e32db63451623b7f97030ae0c4929",
      "lines": {
        "32": "    public static final DataFormat SLONG = new DataFormat(\"SLONG\", 9);",
        "33": "    public static final DataFormat SRATIONAL = new DataFormat(\"SRATIONAL\", 10);",
        "34": "    public static final DataFormat SINGLE = new DataFormat(\"SINGLE\", 11);",
        "35": "    public static final DataFormat DOUBLE = new DataFormat(\"DOUBLE\", 12);",
        "36": "",
        "39": "",
        "40": "    public static DataFormat fromValue(int value) throws MetadataException",
        "21": " */",
        "22": "public class DataFormat",
        "23": "{",
        "27": "    public static final DataFormat ULONG = new DataFormat(\"ULONG\", 4);",
        "28": "    public static final DataFormat URATIONAL = new DataFormat(\"URATIONAL\", 5);",
        "29": "    public static final DataFormat SBYTE = new DataFormat(\"SBYTE\", 6);",
        "30": "    public static final DataFormat UNDEFINED = new DataFormat(\"UNDEFINED\", 7);",
        "31": "    public static final DataFormat SSHORT = new DataFormat(\"SSHORT\", 8);"
      },
      "id": 136271885,
      "filename": "DataFormat.java"
    },
    {
      "repo": "http://jhmtasc.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 155,
      "location": "/hacked-cadmium/src/main/java/fr/x9c/cadmium/kernel",
      "name": "jhmtasc",
      "url": "https://searchcode.com/codesearch/view/12203774/",
      "md5hash": "09bdba5dbb02c290a79e07759cb2e206",
      "lines": {
        "128": "        Misc.isBigEndianPlatform()",
        "129": "        ? DataFormat.CODE_DOUBLE_BIG",
        "130": "        : DataFormat.CODE_DOUBLE_LITTLE;",
        "131": "",
        "139": "        Misc.isBigEndianPlatform()",
        "140": "        ? DataFormat.CODE_DOUBLE_ARRAY8_BIG",
        "141": "        : DataFormat.CODE_DOUBLE_ARRAY8_LITTLE;",
        "142": "",
        "150": "        Misc.isBigEndianPlatform()",
        "151": "        ? DataFormat.CODE_DOUBLE_ARRAY32_BIG",
        "152": "        : DataFormat.CODE_DOUBLE_ARRAY32_LITTLE;",
        "153": "",
        "154": "} // end interface 'DataFormat'",
        "27": " */",
        "28": "public interface DataFormat {"
      },
      "id": 12203774,
      "filename": "DataFormat.java"
    },
    {
      "repo": "git://github.com/bcdev/ceres.git",
      "language": "Java",
      "linescount": 189,
      "location": "/ceres-binio/src/main/java/com/bc/ceres/binio",
      "name": "ceres",
      "url": "https://searchcode.com/codesearch/view/17532126/",
      "md5hash": "aa4415aebfadf489516b415a6d06cb74",
      "lines": {
        "36": " */",
        "37": "public class DataFormat {",
        "38": "    private CompoundType type;",
        "39": "    private DataFormat basisFormat;",
        "113": "",
        "44": "",
        "45": "    public DataFormat() {",
        "48": "",
        "49": "    public DataFormat(CompoundType type) {",
        "114": "    public DataFormat getBasisFormat() {",
        "52": "",
        "53": "    public DataFormat(CompoundType type, ByteOrder byteOrder) {",
        "118": "    public void setBasisFormat(DataFormat basisFormat) {",
        "117": ""
      },
      "id": 17532126,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/jatin-28/camel.git",
      "language": "Java",
      "linescount": 83,
      "location": "/components/camel-cxf/src/main/java/org/apache/camel/component/cxf",
      "name": "camel",
      "url": "https://searchcode.com/codesearch/view/69263189/",
      "md5hash": "2a0e2bd6921e5894ed25e0c8b5a722c1",
      "lines": {
        "20": " * The data format the user expects to see at the Camel CXF components.  It can be",
        "21": " * configured as a property (DataFormat) in the Camel CXF endpoint.",
        "22": " */",
        "23": "public enum DataFormat {",
        "57": "    MESSAGE {",
        "58": "        public DataFormat dealias() {",
        "77": "    ",
        "78": "    public DataFormat dealias() {"
      },
      "id": 69263189,
      "filename": "DataFormat.java"
    },
    {
      "repo": "https://github.com/cstamas/enunciate-old.git",
      "language": "Java",
      "linescount": 46,
      "location": "/enunciate/core-annotations/src/main/java/org/codehaus/enunciate/rest/annotations",
      "name": "enunciate-old",
      "url": "https://searchcode.com/codesearch/view/106810548/",
      "md5hash": "b722ff65b98d1648aa0baac0656b7e5a",
      "lines": {
        "35": ")",
        "27": " * @author Ryan Heaton",
        "28": " * @see org.codehaus.enunciate.rest.annotations.DataFormat",
        "36": "public @interface DataFormat {"
      },
      "id": 106810548,
      "filename": "DataFormat.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 1382,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 563,
      "source": "Github",
      "id": 2
    },
    {
      "count": 50,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 4,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    }
  ]
}