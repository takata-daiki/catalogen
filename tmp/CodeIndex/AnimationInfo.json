{
  "matchterm": "AnimationInfo",
  "previouspage": null,
  "searchterm": "AnimationInfo",
  "query": "AnimationInfo",
  "language_filters": [
    {
      "count": 11,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 11,
  "results": [
    {
      "repo": "https://exult.svn.sourceforge.net/svnroot/exult",
      "language": "Java",
      "linescount": 134,
      "location": "/ExultAndroid/src/com/exult/android/shapeinf",
      "name": "exult",
      "url": "https://searchcode.com/codesearch/view/10470964/",
      "md5hash": "da9ded6c49375bc41988a57cc52cb638",
      "lines": {
        "129": "\t\t\tShapeInfo info) {",
        "130": "\t\treturn new AnimationInfo().readnew(in, version, patch, game, info);",
        "25": "\tpublic static AnimationInfo createFromTfa(int type, int nframes) {\t",
        "24": "\t\t\t\t\t\t\t\t\t// all frames if zero.",
        "9": " */",
        "10": "public class AnimationInfo extends BaseInfo {",
        "27": "\t\tswitch (type) {",
        "26": "\t\tAnimationInfo inf = new AnimationInfo();"
      },
      "id": 10470964,
      "filename": "AnimationInfo.java"
    },
    {
      "repo": "https://bitbucket.org/dwatling/rotunda.git",
      "language": "Java",
      "linescount": 18,
      "location": "/src/com/synaptik/rotunda",
      "name": "rotunda",
      "url": "https://searchcode.com/codesearch/view/44540134/",
      "md5hash": "21754d32e0a1a3ec807cdf7fbe2f870c",
      "lines": {
        "10": "\t",
        "11": "\tpublic AnimationInfo(AnimationSequence mSeq, AnimationListener mListener) {",
        "4": "",
        "5": "public class AnimationInfo {"
      },
      "id": 44540134,
      "filename": "AnimationInfo.java"
    },
    {
      "repo": "git://github.com/CyanogenMod/android_frameworks_base.git",
      "language": "Java",
      "linescount": 2453,
      "location": "/core/java/android/transition",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/116021078/",
      "md5hash": "499f0e300bf3fe14b394511b50feb74f",
      "lines": {
        "774": "                        }",
        "199": "    // Per-animator information used for later canceling when future transitions overlap",
        "200": "    private static ThreadLocal<ArrayMap<Animator, AnimationInfo>> sRunningAnimators =",
        "201": "            new ThreadLocal<ArrayMap<Animator, AnimationInfo>>();",
        "1675": "        if (!mEnded) {",
        "1676": "            ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1709": "            if (!mEnded) {",
        "1710": "                ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1680": "                for (int i = numOldAnims - 1; i >= 0; i--) {",
        "775": "                        AnimationInfo info = new AnimationInfo(view, getName(), this,",
        "1714": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "693": "        }",
        "694": "        ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1681": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "1713": "                for (int i = numOldAnims - 1; i >= 0; i--) {"
      },
      "id": 116021078,
      "filename": "Transition.java"
    },
    {
      "repo": "https://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 2442,
      "location": "/core/java/android/transition",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/140978754/",
      "md5hash": "5634e7e025bfd7a438f1b948966d5125",
      "lines": {
        "774": "                        }",
        "199": "    // Per-animator information used for later canceling when future transitions overlap",
        "200": "    private static ThreadLocal<ArrayMap<Animator, AnimationInfo>> sRunningAnimators =",
        "201": "            new ThreadLocal<ArrayMap<Animator, AnimationInfo>>();",
        "775": "                        AnimationInfo info = new AnimationInfo(view, getName(), this,",
        "1677": "        if (!mEnded) {",
        "1678": "            ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1711": "            if (!mEnded) {",
        "1712": "                ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1682": "                for (int i = numOldAnims - 1; i >= 0; i--) {",
        "1683": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "1716": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "693": "        }",
        "694": "        ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1715": "                for (int i = numOldAnims - 1; i >= 0; i--) {"
      },
      "id": 140978754,
      "filename": "Transition.java"
    },
    {
      "repo": "https://bitbucket.org/seandroid/frameworks-base.git",
      "language": "Java",
      "linescount": 2451,
      "location": "/core/java/android/transition",
      "name": "frameworks-base",
      "url": "https://searchcode.com/codesearch/view/130965052/",
      "md5hash": "fb4c7b0e54e530566ea9023adc3d3b81",
      "lines": {
        "774": "                        }",
        "199": "    // Per-animator information used for later canceling when future transitions overlap",
        "200": "    private static ThreadLocal<ArrayMap<Animator, AnimationInfo>> sRunningAnimators =",
        "201": "            new ThreadLocal<ArrayMap<Animator, AnimationInfo>>();",
        "1675": "        if (!mEnded) {",
        "1676": "            ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1709": "            if (!mEnded) {",
        "1710": "                ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1680": "                for (int i = numOldAnims - 1; i >= 0; i--) {",
        "775": "                        AnimationInfo info = new AnimationInfo(view, getName(), this,",
        "1714": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "693": "        }",
        "694": "        ArrayMap<Animator, AnimationInfo> runningAnimators = getRunningAnimators();",
        "1681": "                    AnimationInfo info = runningAnimators.valueAt(i);",
        "1713": "                for (int i = numOldAnims - 1; i >= 0; i--) {"
      },
      "id": 130965052,
      "filename": "Transition.java"
    },
    {
      "repo": "https://bitbucket.org/dwatling/rotunda.git",
      "language": "Java",
      "linescount": 145,
      "location": "/src/com/synaptik/rotunda",
      "name": "rotunda",
      "url": "https://searchcode.com/codesearch/view/44540127/",
      "md5hash": "d27a8de6b76ac2c9e3a50bd02b1c7059",
      "lines": {
        "97": "\t\tdouble result = 0.0f;",
        "34": "\tAnimationListener mListener;",
        "35": "\tMap<String,AnimationInfo> mAnims;",
        "72": "\tprivate void updateAnimations(double elapsed) {",
        "73": "\t\tIterator<AnimationInfo> iter = this.mAnims.values().iterator();",
        "74": "\t\twhile (iter.hasNext()) {",
        "75": "\t\t\tAnimationInfo anim = iter.next();",
        "108": "\t\tLog.d(getName(), \"Starting animation (total time: \" + (seq.isInfinite() ? \"infinite\" : seq.getAnimationTime()) + \")\");",
        "98": "\t\tfor (AnimationInfo anim : this.mAnims.values()) {",
        "109": "\t\tthis.mAnims.put(seq.mKey, new AnimationInfo(seq, listener));",
        "49": "\t\tthis.mAnchorY = 0.5f;",
        "50": "\t\tthis.mAnims = new HashMap<String, AnimationInfo>();"
      },
      "id": 44540127,
      "filename": "MovableActor.java"
    },
    {
      "repo": "https://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 12249,
      "location": "/core/java/com/android/internal/widget",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/140977375/",
      "md5hash": "1068bc2f8480348c7dd292cfe0bf5c01",
      "lines": {
        "3584": "                        mViewInfoStore.addToPostLayout(holder, animationInfo);",
        "3680": "    void recordAnimationInfoIfBouncedHiddenView(ViewHolder viewHolder,",
        "3495": "                    }",
        "3496": "                    final ItemHolderInfo animationInfo = mItemAnimator.recordPreLayoutInformation(",
        "3593": "                } else {",
        "3594": "                    mViewInfoStore.addToPostLayout(holder, animationInfo);",
        "3499": "                        recordAnimationInfoIfBouncedHiddenView(viewHolder, animationInfo);",
        "3500": "                    } else {",
        "3501": "                        mViewInfoStore.addToAppearedInPreLayoutHolders(viewHolder, animationInfo);",
        "3681": "            ItemHolderInfo animationInfo) {",
        "5529": "                            holder, changeFlags, holder.getUnmodifiedPayloads());",
        "5530": "                    recordAnimationInfoIfBouncedHiddenView(holder, info);",
        "3679": "     */",
        "3498": "                    if (wasHidden) {",
        "3583": "                        // we add and remove so that any post info is merged."
      },
      "id": 140977375,
      "filename": "RecyclerView.java"
    },
    {
      "repo": "https://github.com/SirApropos/Minecraft.git",
      "language": "Java",
      "linescount": 132,
      "location": "/Plugins/RingPlatform/src",
      "name": "Minecraft",
      "url": "https://searchcode.com/codesearch/view/77586878/",
      "md5hash": "170b7ae33c83b514ba1dedad927584ff",
      "lines": {
        "64": "                Animation animation = new Animation(animationInfo);",
        "65": "                for(Platform platform : platforms){",
        "62": "            ArrayList<Animation> animations = new ArrayList<Animation>();",
        "63": "            for(HashMap<String, Object> animationInfo : animationsInfo){"
      },
      "id": 77586878,
      "filename": "PlatformMonitor.java"
    },
    {
      "repo": "https://exult.svn.sourceforge.net/svnroot/exult",
      "language": "Java",
      "linescount": 426,
      "location": "/ExultAndroid/src/com/exult/android",
      "name": "exult",
      "url": "https://searchcode.com/codesearch/view/10470904/",
      "md5hash": "7f1e77377f8b217546a8fc7f84ee1027",
      "lines": {
        "67": "\t\t\tint shpframes = ShapeFiles.SHAPES_VGA.getFile().getNumFrames(last_shape);",
        "68": "\t\t\taniinf = obj.getInfo().getAnimationInfoSafe(shpframes);",
        "139": "\t\t\tcase AnimationInfo.FA_RANDOM_FRAMES:",
        "106": "\t\t\tswitch (aniinf.getType()) {",
        "107": "\t\t\tcase AnimationInfo.FA_HOURLY:",
        "109": "\t\t\t\tbreak;",
        "110": "\t\t\tcase AnimationInfo.FA_NON_LOOPING:",
        "138": "\t\t\t\t}",
        "115": "\t\t\t\tbreak;",
        "84": "",
        "53": "\tpublic static class Frame extends Animator {",
        "54": "\t\tAnimationInfo aniinf;",
        "116": "\t\t\tcase AnimationInfo.FA_TIMESYNCHED:",
        "124": "\t\t\t\t}",
        "125": "\t\t\tcase AnimationInfo.FA_LOOPING:",
        "85": "\t\t\tif (aniinf.getType() == AnimationInfo.FA_TIMESYNCHED)"
      },
      "id": 10470904,
      "filename": "Animator.java"
    },
    {
      "repo": "https://exult.svn.sourceforge.net/svnroot/exult",
      "language": "Java",
      "linescount": 877,
      "location": "/ExultAndroid/src/com/exult/android",
      "name": "exult",
      "url": "https://searchcode.com/codesearch/view/10470873/",
      "md5hash": "f2c99b0e52670df4db991a85128fab12",
      "lines": {
        "192": "\t\t\taniinf = AnimationInfo.createFromTfa(0, nframes);",
        "640": "\t\t\t\t\t\tinfo[shape].aniinf = AnimationInfo.createFromTfa(",
        "534": "\t\t\t\tnew DataUtils.FunctorMultidataReader(info, ",
        "639": "\t\t\t\t\t\t//System.out.println(\"Anim. data for shape \" + shape + \" is \" + (val&0xf));",
        "535": "\t\t\t\t\t\tnew AnimationInfo(), null, idReader, false),",
        "21": "\tprivate SFXInfo sfxinf;",
        "22": "\tprivate AnimationInfo aniinf;",
        "183": "\t}",
        "184": "\tpublic boolean hasAnimationInfo() {",
        "186": "\t}",
        "187": "\tpublic AnimationInfo getAnimationInfo() {",
        "189": "\t}",
        "190": "\tpublic AnimationInfo getAnimationInfoSafe(int nframes) {",
        "191": "\t\tif (aniinf == null)"
      },
      "id": 10470873,
      "filename": "ShapeInfo.java"
    },
    {
      "repo": "https://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 2988,
      "location": "/core/java/android/app",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/140978876/",
      "md5hash": "9ba9ebcae9a12faa7d8b825ae0eb07ad",
      "lines": {
        "2080": "    }",
        "1410": "        } else {",
        "1411": "            isEnterSet = mAnimationInfo.mAllowEnterTransitionOverlap != null;",
        "1412": "            isReturnSet = mAnimationInfo.mAllowReturnTransitionOverlap != null;",
        "1413": "        }",
        "2056": "        if (shouldChangeTransition(transition, USE_DEFAULT_TRANSITION)) {",
        "2057": "            ensureAnimationInfo().mReturnTransition = transition;",
        "394": "    AnimationInfo mAnimationInfo;",
        "2077": "        }",
        "2078": "        return mAnimationInfo.mReturnTransition == USE_DEFAULT_TRANSITION ? getEnterTransition()",
        "393": "    // without Views.",
        "2074": "    public Transition getReturnTransition() {",
        "2075": "        if (mAnimationInfo == null) {",
        "1981": "        if (callback == null) {",
        "1982": "            if (mAnimationInfo == null) {",
        "2079": "                : mAnimationInfo.mReturnTransition;"
      },
      "id": 140978876,
      "filename": "Fragment.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 5,
      "source": "Github",
      "id": 2
    },
    {
      "count": 3,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 3,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}