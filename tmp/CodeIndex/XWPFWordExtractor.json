{
  "matchterm": "org.apache.poi.xwpf.extractor.XWPFWordExtractor",
  "previouspage": null,
  "searchterm": "org.apache.poi.xwpf.extractor.XWPFWordExtractor",
  "query": "org.apache.poi.xwpf.extractor.XWPFWordExtractor",
  "language_filters": [
    {
      "count": 10,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 10,
  "results": [
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 184,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785573/",
      "md5hash": "182b92c20f0ceb47e5952f2b30e98cd2",
      "lines": {
        "32": "import org.apache.tika.sax.XHTMLContentHandler;",
        "33": "import org.apache.xmlbeans.XmlException;",
        "34": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBookmark;",
        "8": " *",
        "9": " *     http://www.apache.org/licenses/LICENSE-2.0",
        "16": " */",
        "17": "package org.apache.tika.parser.microsoft.ooxml;",
        "23": "",
        "24": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "25": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "26": "import org.apache.poi.xwpf.model.XWPFCommentsDecorator;",
        "27": "import org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;",
        "28": "import org.apache.poi.xwpf.model.XWPFHyperlinkDecorator;",
        "29": "import org.apache.poi.xwpf.model.XWPFParagraphDecorator;",
        "30": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "31": "import org.apache.poi.xwpf.usermodel.XWPFParagraph;"
      },
      "id": 111785573,
      "filename": "XWPFWordExtractorDecorator.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 322,
      "location": "/nuclos-server/src/main/java/org/nuclos/server/common/ooxml",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46076962/",
      "md5hash": "b0149ee3f1d64724e7fbee233b264acb",
      "lines": {
        "32": "",
        "33": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "34": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "35": "import org.apache.poi.xwpf.usermodel.XWPFParagraph;",
        "36": "import org.apache.poi.xwpf.usermodel.XWPFTable;",
        "37": "import org.apache.xmlbeans.XmlCursor;",
        "38": "import org.apache.xmlbeans.XmlObject;",
        "39": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;",
        "40": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPTab;",
        "41": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;",
        "42": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRow;",
        "43": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock;",
        "44": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtContentBlock;",
        "45": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtContentRun;",
        "46": "import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtPr;"
      },
      "id": 46076962,
      "filename": "WordXMLReader.java"
    },
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 103,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785577/",
      "md5hash": "c9c3f130483ace9122b93909deae1587",
      "lines": {
        "32": "import org.apache.poi.xssf.usermodel.XSSFWorkbook;",
        "33": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "34": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "8": " *",
        "9": " *     http://www.apache.org/licenses/LICENSE-2.0",
        "22": "",
        "23": "import org.apache.poi.POIXMLDocument;",
        "24": "import org.apache.poi.POIXMLTextExtractor;",
        "25": "import org.apache.poi.extractor.ExtractorFactory;",
        "26": "import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
        "27": "import org.apache.poi.openxml4j.exceptions.OpenXML4JException;",
        "28": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "29": "import org.apache.poi.xslf.XSLFSlideShow;",
        "30": "import org.apache.poi.xslf.extractor.XSLFPowerPointExtractor;",
        "31": "import org.apache.poi.xssf.extractor.XSSFExcelExtractor;"
      },
      "id": 111785577,
      "filename": "OOXMLExtractorFactory.java"
    },
    {
      "repo": "https://bitbucket.org/johnnywsd/java-extractemailfromdocdocxpdftxt.git",
      "language": "Java",
      "linescount": 31,
      "location": "/shoudaw/msword",
      "name": "java-extractemailfromdocdocxpdftxt",
      "url": "https://searchcode.com/codesearch/view/51905614/",
      "md5hash": "a233d4e072d0ea56d8a3ff54c2da64d5",
      "lines": {
        "16": "\t\t\tXWPFDocument doc = new XWPFDocument(new FileInputStream(filePath));",
        "17": "\t\t\tXWPFWordExtractor wordxExtractor = new XWPFWordExtractor(doc);",
        "18": "\t\t\tString text = wordxExtractor.getText();",
        "3": "import java.io.FileInputStream;",
        "4": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "5": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "6": "",
        "19": "//\t\t\tSystem.out.println(text);",
        "15": "\t\ttry {"
      },
      "id": 51905614,
      "filename": "MsWordDocx.java"
    },
    {
      "repo": "https://github.com/cheft/fast-reader.git",
      "language": "Java",
      "linescount": 288,
      "location": "/reader-server/src/com/topway/reader/server/lucene",
      "name": "fast-reader",
      "url": "https://searchcode.com/codesearch/view/94960725/",
      "md5hash": "8e716c0d4bbe4c605731725e169386b5",
      "lines": {
        "11": "",
        "12": "import org.apache.lucene.analysis.Analyzer;",
        "13": "import org.apache.lucene.document.Document;",
        "14": "import org.apache.lucene.document.Field;",
        "15": "import org.apache.lucene.index.IndexWriter;",
        "18": "import org.apache.pdfbox.util.PDFTextStripper;",
        "19": "import org.apache.poi.POIXMLDocument;",
        "20": "import org.apache.poi.hslf.HSLFSlideShow;",
        "21": "import org.apache.poi.hslf.model.Slide;",
        "22": "import org.apache.poi.hslf.model.TextRun;",
        "23": "import org.apache.poi.hslf.usermodel.SlideShow;",
        "24": "import org.apache.poi.hssf.extractor.ExcelExtractor;",
        "25": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "26": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "27": "import org.apache.poi.openxml4j.exceptions.OpenXML4JException;"
      },
      "id": 94960725,
      "filename": "IndexFiles.java"
    },
    {
      "repo": "git://github.com/encuestame/encuestame.git",
      "language": "Java",
      "linescount": 390,
      "location": "/encuestame-business/src/main/java/org/encuestame/business/search",
      "name": "encuestame",
      "url": "https://searchcode.com/codesearch/view/16002626/",
      "md5hash": "3fcb7726512e9bad06a6d67189e20f90",
      "lines": {
        "32": "import org.apache.poi.hssf.usermodel.HSSFRichTextString;",
        "33": "import org.apache.poi.hssf.usermodel.HSSFRow;",
        "5": " * Licensed under the Apache Software License version 2.0",
        "6": " * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0",
        "7": " * Unless required by applicable law or agreed to  in writing,  software  distributed",
        "20": "import java.util.Iterator;",
        "21": "import org.apache.commons.lang.StringUtils;",
        "22": "import org.apache.commons.logging.Log;",
        "23": "import org.apache.commons.logging.LogFactory;",
        "24": "import org.apache.lucene.document.Document;",
        "25": "import org.apache.lucene.document.Field;",
        "26": "import org.apache.lucene.index.Term;",
        "29": "import org.apache.pdfbox.util.PDFTextStripper;",
        "30": "import org.apache.poi.POIXMLException;",
        "31": "import org.apache.poi.hssf.usermodel.HSSFCell;"
      },
      "id": 16002626,
      "filename": "IndexerFile.java"
    },
    {
      "repo": "git://github.com/evllabs/JGAAP.git",
      "language": "Java",
      "linescount": 204,
      "location": "/src/com/jgaap/generics",
      "name": "JGAAP",
      "url": "https://searchcode.com/codesearch/view/16973147/",
      "md5hash": "8bd2f482161cbb20b2fe2b3f678da332",
      "lines": {
        "32": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "33": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "34": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "35": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "36": "",
        "133": "\t *            An input stream pointing to the Word document to be read.",
        "137": "\t\t\tthrows IOException {",
        "138": "\t\tPOIFSFileSystem fs = new POIFSFileSystem(inputStream);",
        "139": "\t\tHWPFDocument doc = new HWPFDocument(fs);",
        "132": "\t * @param inputStream",
        "27": "",
        "28": "import org.apache.log4j.Logger;",
        "29": "import org.apache.pdfbox.pdmodel.PDDocument;",
        "30": "import org.apache.pdfbox.util.PDFTextStripper;",
        "31": "import org.apache.poi.hwpf.HWPFDocument;"
      },
      "id": 16973147,
      "filename": "DocumentHelper.java"
    },
    {
      "repo": "git://github.com/encuestame/encuestame.git",
      "language": "Java",
      "linescount": 285,
      "location": "/encuestame-business/src/main/java/org/encuestame/business/search",
      "name": "encuestame",
      "url": "https://searchcode.com/codesearch/view/16002628/",
      "md5hash": "6a0b4f4e7d61f770522584e775f6cb8b",
      "lines": {
        "32": "import org.apache.lucene.store.LockObtainFailedException;",
        "33": "import org.apache.lucene.util.Version;",
        "34": "import org.apache.pdfbox.cos.COSDocument;",
        "35": "import org.apache.pdfbox.pdfparser.PDFParser;",
        "5": " * Licensed under the Apache Software License version 2.0",
        "6": " * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0",
        "7": " * Unless required by applicable law or agreed to  in writing,  software  distributed",
        "22": "",
        "23": "import org.apache.commons.lang.StringUtils;",
        "24": "import org.apache.commons.logging.Log;",
        "25": "import org.apache.commons.logging.LogFactory;",
        "26": "import org.apache.lucene.analysis.standard.StandardAnalyzer;",
        "27": "import org.apache.lucene.document.Document;",
        "28": "import org.apache.lucene.document.Field;",
        "31": "import org.apache.lucene.store.Directory;"
      },
      "id": 16002628,
      "filename": "SearchUtils.java"
    },
    {
      "repo": "https://bitbucket.org/ebianchi/yds",
      "language": "Java",
      "linescount": 75,
      "location": "/src/main/java/it/application/yds/fetch/streams",
      "name": "yds",
      "url": "https://searchcode.com/codesearch/view/134169113/",
      "md5hash": "d77ea05b81581823bde1e99835d52a5c",
      "lines": {
        "48": "",
        "15": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "47": "        XWPFWordExtractor extract2007;",
        "12": "import java.io.IOException;",
        "45": "        String result;",
        "46": "        WordExtractor extract;",
        "13": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "16": "import org.odftoolkit.odfdom.doc.OdfDocument;",
        "17": "",
        "51": "            if (this.getMime().equals(\"application/msword\")) {",
        "52": "                extract = new WordExtractor(docFile);",
        "14": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "54": "            } else {",
        "55": "                extract2007 = new XWPFWordExtractor(new XWPFDocument(docFile));",
        "26": "",
        "27": "    // TODO: implement OpenOffice Writer extractor"
      },
      "id": 134169113,
      "filename": "OfficeTextStream.java"
    },
    {
      "repo": "http://ontopia.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 47,
      "location": "/ontopia-classify/src/main/java/net/ontopia/topicmaps/classify",
      "name": "ontopia",
      "url": "https://searchcode.com/codesearch/view/12809869/",
      "md5hash": "50b856b5bf383b5de9fee620dfd4ba04",
      "lines": {
        "35": "      OPCPackage opc = OPCPackage.open(new ByteArrayInputStream(cc.getContent()));",
        "36": "      XWPFWordExtractor extractor = new XWPFWordExtractor(opc);",
        "37": "      String s = extractor.getText();",
        "38": "      char[] c = s.toCharArray();",
        "9": "",
        "10": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "11": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "12": ""
      },
      "id": 12809869,
      "filename": "OOXMLWordFormatModule.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 6,
      "source": "Github",
      "id": 2
    },
    {
      "count": 3,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1,
      "source": "Google Code",
      "id": 1
    }
  ]
}