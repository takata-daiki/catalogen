{
  "matchterm": "PropertyIDMap",
  "previouspage": null,
  "searchterm": "PropertyIDMap",
  "query": "PropertyIDMap",
  "language_filters": [
    {
      "count": 8,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 8,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 423,
      "location": "/components/forks/poi/src/loci/poi/hpsf/wellknown",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642704/",
      "md5hash": "452bc69096bec86ad7ad577ab0d1569f",
      "lines": {
        "288": "    public PropertyIDMap(final int initialCapacity, final float loadFactor)",
        "308": "     * <p>Puts a ID string for an ID into the {@link",
        "309": "     * PropertyIDMap}.</p>",
        "295": "    /**",
        "296": "     * <p>Creates a {@link PropertyIDMap} backed by another map.</p>",
        "299": "     */",
        "300": "    public PropertyIDMap(final Map map)",
        "269": "     */",
        "270": "    private static PropertyIDMap summaryInformationProperties;",
        "276": "     */",
        "277": "    private static PropertyIDMap documentSummaryInformationProperties;",
        "281": "    /**",
        "282": "     * <p>Creates a {@link PropertyIDMap}.</p>",
        "59": " * @version $Id: PropertyIDMap.java 489730 2006-12-22 19:18:16Z bayard $",
        "58": " * href=\"mailto:klute@rainer-klute.de\">&lt;klute@rainer-klute.de&gt;</a>",
        "287": "     */"
      },
      "id": 15642704,
      "filename": "PropertyIDMap.java"
    },
    {
      "repo": "https://github.com/mpilone/timeline-vaadin.git",
      "language": "Java",
      "linescount": 337,
      "location": "/timeline/src/main/java/org/mpilone/vaadin/timeline",
      "name": "timeline-vaadin",
      "url": "https://searchcode.com/codesearch/view/95348244/",
      "md5hash": "946121b5fa857800de6336a90e7b70a0",
      "lines": {
        "256": "    // Group ID",
        "257": "    propId = propertyIdMap.get(GROUPID_PROPERTY);",
        "187": "    propId = propertyIdMap.get(ENDDATE_PROPERTY);",
        "39": "",
        "40": "  private final Map<String, Object> propertyIdMap;",
        "184": "    Object propId = propertyIdMap.get(STARTDATE_PROPERTY);",
        "186": "",
        "183": "",
        "56": "",
        "57": "    propertyIdMap = new HashMap<>(6);",
        "58": "    propertyIdMap.put(CONTENT_PROPERTY, CONTENT_PROPERTY);",
        "59": "    propertyIdMap.put(STARTDATE_PROPERTY, STARTDATE_PROPERTY);",
        "60": "    propertyIdMap.put(ENDDATE_PROPERTY, ENDDATE_PROPERTY);",
        "61": "    propertyIdMap.put(STYLENAME_PROPERTY, STYLENAME_PROPERTY);",
        "62": "    propertyIdMap.put(GROUPID_PROPERTY, GROUPID_PROPERTY);"
      },
      "id": 95348244,
      "filename": "ContainerItemProvider.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 775,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642697/",
      "md5hash": "d8c82ce5c61b6ac1b12176e9a4e59cf9",
      "lines": {
        "130": "    {",
        "131": "        return (String) getProperty(PropertyIDMap.PID_SUBJECT);",
        "166": "    {",
        "167": "        return (String) getProperty(PropertyIDMap.PID_AUTHOR);",
        "202": "    {",
        "203": "        return (String) getProperty(PropertyIDMap.PID_KEYWORDS);",
        "44": "",
        "45": "import loci.poi.hpsf.wellknown.PropertyIDMap;",
        "143": "        final MutableSection s = (MutableSection) getFirstSection();",
        "144": "        s.setProperty(PropertyIDMap.PID_SUBJECT, subject);",
        "179": "        final MutableSection s = (MutableSection) getFirstSection();",
        "180": "        s.setProperty(PropertyIDMap.PID_AUTHOR, author);",
        "154": "        final MutableSection s = (MutableSection) getFirstSection();",
        "155": "        s.removeProperty(PropertyIDMap.PID_SUBJECT);",
        "190": "        final MutableSection s = (MutableSection) getFirstSection();",
        "191": "        s.removeProperty(PropertyIDMap.PID_AUTHOR);"
      },
      "id": 15642697,
      "filename": "SummaryInformation.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 701,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642675/",
      "md5hash": "c2188c129ae22690bf1bc62c31e01c84",
      "lines": {
        "198": "    {",
        "176": "        final MutableSection s = (MutableSection) getFirstSection();",
        "132": "    {",
        "165": "    {",
        "166": "        return getPropertyIntValue(PropertyIDMap.PID_BYTECOUNT);",
        "199": "        return getPropertyIntValue(PropertyIDMap.PID_LINECOUNT);",
        "45": "",
        "46": "import loci.poi.hpsf.wellknown.PropertyIDMap;",
        "143": "        final MutableSection s = (MutableSection) getFirstSection();",
        "144": "        s.setProperty(PropertyIDMap.PID_PRESFORMAT, presentationFormat);",
        "177": "        s.setProperty(PropertyIDMap.PID_BYTECOUNT, byteCount);",
        "185": "        final MutableSection s = (MutableSection) getFirstSection();",
        "152": "        final MutableSection s = (MutableSection) getFirstSection();",
        "153": "        s.removeProperty(PropertyIDMap.PID_PRESFORMAT);",
        "186": "        s.removeProperty(PropertyIDMap.PID_BYTECOUNT);",
        "133": "        return (String) getProperty(PropertyIDMap.PID_PRESFORMAT);"
      },
      "id": 15642675,
      "filename": "DocumentSummaryInformation.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 226,
      "location": "/components/forks/poi/src/loci/poi/hpsf/wellknown",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642703/",
      "md5hash": "aa39a1433d12eb3a208f90d921ad9d92",
      "lines": {
        "163": "    /**",
        "164": "     * <p>Returns the {@link PropertyIDMap} for a given section format",
        "169": "     */",
        "170": "    public PropertyIDMap get(final byte[] sectionFormatID)",
        "171": "    {",
        "172": "        return (PropertyIDMap) super.get(new String(sectionFormatID));",
        "45": "/**",
        "46": " * <p>Maps section format IDs to {@link PropertyIDMap}s. It is",
        "177": "    /**",
        "178": "     * <p>Returns the {@link PropertyIDMap} for a given section format",
        "51": " * <p>If you have a section format ID you can use it as a key to query",
        "52": " * this map.  If you get a {@link PropertyIDMap} returned your section",
        "53": " * is well-known and you can query the {@link PropertyIDMap} for PID",
        "148": "    {",
        "149": "        final PropertyIDMap m = getInstance().get(sectionFormatID);"
      },
      "id": 15642703,
      "filename": "SectionIDMap.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 740,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642671/",
      "md5hash": "4af2341597b1380f5573c853dfcdca4d",
      "lines": {
        "672": "                (Integer) getProperty(PropertyIDMap.PID_CODEPAGE);",
        "673": "            if (codepage == null)",
        "674": "                setProperty(PropertyIDMap.PID_CODEPAGE, Variant.VT_I2,",
        "679": "             * However, it does not mean to remove property 1 (codepage). */",
        "680": "            removeProperty(PropertyIDMap.PID_DICTIONARY);",
        "431": "        int codepage = -1;",
        "432": "        if (getProperty(PropertyIDMap.PID_DICTIONARY) != null)",
        "433": "        {",
        "434": "            final Object p1 = getProperty(PropertyIDMap.PID_CODEPAGE);",
        "54": "",
        "55": "import loci.poi.hpsf.wellknown.PropertyIDMap;",
        "665": "             * don't have a type. */",
        "666": "            setProperty(PropertyIDMap.PID_DICTIONARY, -1, dictionary);",
        "445": "                 * add the codepage property and set it to Unicode. */",
        "446": "                setProperty(PropertyIDMap.PID_CODEPAGE, Variant.VT_I2,",
        "671": "            final Integer codepage ="
      },
      "id": 15642671,
      "filename": "MutableSection.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 693,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642682/",
      "md5hash": "ff8411e428f7ed19092d0d8bd80636ae",
      "lines": {
        "49": "",
        "50": "import loci.poi.hpsf.wellknown.PropertyIDMap;",
        "685": "            (Integer) getProperty(PropertyIDMap.PID_CODEPAGE);",
        "289": "            /* Read the codepage if the property ID is 1. */",
        "684": "        final Integer codepage =",
        "316": "                    ple.length, codepage);",
        "290": "            if (ple.id == PropertyIDMap.PID_CODEPAGE)",
        "317": "            if (p.getID() == PropertyIDMap.PID_CODEPAGE)"
      },
      "id": 15642682,
      "filename": "Section.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 392,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642679/",
      "md5hash": "f1e598413903d1dc0b1adc5794c23463",
      "lines": {
        "48": "import loci.poi.hpsf.wellknown.PropertyIDMap;",
        "360": "            if (cp.getID() == PropertyIDMap.PID_CODEPAGE)",
        "327": "        final MutableProperty p = new MutableProperty();",
        "328": "        p.setID(PropertyIDMap.PID_CODEPAGE);",
        "359": "            final CustomProperty cp = (CustomProperty) i.next();",
        "47": ""
      },
      "id": 15642679,
      "filename": "CustomProperties.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 8,
      "source": "Github",
      "id": 2
    }
  ]
}