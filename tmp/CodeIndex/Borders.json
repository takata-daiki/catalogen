{
  "matchterm": "Borders",
  "previouspage": null,
  "searchterm": "Borders",
  "query": "Borders",
  "language_filters": [
    {
      "count": 4520,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 4520,
  "results": [
    {
      "repo": "https://bitbucket.org/drothmaler/controlsfx",
      "language": "Java",
      "linescount": 827,
      "location": "/controlsfx/src/main/java/org/controlsfx/tools",
      "name": "ControlsFX",
      "url": "https://searchcode.com/codesearch/view/91869377/",
      "md5hash": "a3b96803124d8203484b8db93c82ffb5",
      "lines": {
        "64": " * around. ",
        "70": " * <br>",
        "71": " * <center><img src=\"borders-lineBorder.png\" /></center>",
        "42": "import javafx.scene.layout.BackgroundFill;",
        "43": "import javafx.scene.layout.BorderStroke;",
        "44": "import javafx.scene.layout.BorderStrokeStyle;",
        "45": "import javafx.scene.layout.BorderWidths;",
        "56": " * less options as a lot of what the Swing BorderFactory offers resulted in ",
        "57": " * ugly borders!).",
        "58": " * ",
        "59": " * <p>The Borders class provides a fluent API for specifying the properties of",
        "60": " * each border. It is possible to create multiple borders around a Node simply",
        "61": " * by continuing to call additional methods before you call the final ",
        "62": " * {@link Borders#build()} method. To use the Borders class, you simply call",
        "63": " * {@link Borders#wrap(Node)}, passing in the Node you wish to wrap the border(s)"
      },
      "id": 91869377,
      "filename": "Borders.java"
    },
    {
      "repo": "http://thesandbox.googlecode.com/svn/",
      "language": "Java",
      "linescount": 311,
      "location": "/libs/jgoodies/forms/1.2.1/src/core/com/jgoodies/forms/factories",
      "name": "thesandbox",
      "url": "https://searchcode.com/codesearch/view/11536994/",
      "md5hash": "ab0505963ae8a523a0a38db09c07826a",
      "lines": {
        "66": "",
        "67": "    // Constant Borders *****************************************************",
        "48": " * <pre>",
        "49": " * Borders.DLU2_BORDER",
        "50": " * Borders.createEmptyBorder(Sizes.DLUY4, Sizes.DLUX2, Sizes.DLUY4, Sizes.DLUX2);",
        "51": " * Borders.createEmptyBorder(\"4dlu, 2dlu, 4dlu, 2dlu\");",
        "52": " * </pre>",
        "59": " */",
        "60": "public final class Borders {",
        "61": "",
        "62": "    private Borders() {"
      },
      "id": 11536994,
      "filename": "Borders.java"
    },
    {
      "repo": "https://github.com/djaddison/nodebox.git",
      "language": "Java",
      "linescount": 65,
      "location": "/src/main/java/nodebox/ui",
      "name": "nodebox",
      "url": "https://searchcode.com/codesearch/view/72824231/",
      "md5hash": "01c48b961d5cb5e4dfcec0448df20ae3",
      "lines": {
        "8": "    private Borders() {}",
        "5": "",
        "6": "public class Borders {",
        "7": "    "
      },
      "id": 72824231,
      "filename": "Borders.java"
    },
    {
      "repo": "https://code.google.com/p/doubleko/",
      "language": "Java",
      "linescount": 38,
      "location": "/java/tij/gui",
      "name": "doubleko",
      "url": "https://searchcode.com/codesearch/view/13981334/",
      "md5hash": "69b202dfb7c2832edc969316a862f494",
      "lines": {
        "19": "  public Borders() {",
        "1": "//: gui/Borders.java",
        "2": "// Different Swing borders.",
        "3": "import javax.swing.*;",
        "34": "  public static void main(String[] args) {",
        "7": "",
        "8": "public class Borders extends JFrame {",
        "18": "  }",
        "35": "    run(new Borders(), 500, 300);"
      },
      "id": 13981334,
      "filename": "Borders.java"
    },
    {
      "repo": "https://bitbucket.org/seydar/eecs376",
      "language": "Java",
      "linescount": 298,
      "location": "/src/com/jgoodies/forms/factories",
      "name": "eecs376",
      "url": "https://searchcode.com/codesearch/view/64196553/",
      "md5hash": "4a8941cd22647490ecbf7759bffcbd5d",
      "lines": {
        "48": " * Borders.createEmptyBorder(Sizes.DLUY4, Sizes.DLUX2, Sizes.DLUY4, Sizes.DLUX2);",
        "49": " * Borders.createEmptyBorder(\"4dlu, 2dlu, 4dlu, 2dlu\");",
        "50": " * </pre>",
        "57": " */",
        "58": "public final class Borders {",
        "60": "",
        "61": "    // Constant Borders *****************************************************",
        "46": " * <pre>",
        "47": " * Borders.DLU2_BORDER"
      },
      "id": 64196553,
      "filename": "Borders.java"
    },
    {
      "repo": "http://research-code-base-animesh.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 42,
      "location": "/code_comm",
      "name": "research-code-base-animesh",
      "url": "https://searchcode.com/codesearch/view/13397300/",
      "md5hash": "eca27d8f87f762ebb6e0ba899cbc6396",
      "lines": {
        "1": "//: c14:Borders.java",
        "2": "// Different Swing borders.",
        "3": "// <applet code=Borders width=500 height=300></applet>",
        "4": "// From 'Thinking in Java, 3rd ed.' (c) Bruce Eckel 2002",
        "39": "  public static void main(String[] args) {",
        "40": "    Console.run(new Borders(), 500, 300);",
        "11": "",
        "12": "public class Borders extends JApplet {"
      },
      "id": 13397300,
      "filename": "Borders.java"
    },
    {
      "repo": "https://bitbucket.org/wrapman/frostwire.desktop.translations.pirate",
      "language": "Java",
      "linescount": 305,
      "location": "/lib/jars-src/forms-1.1.0/src/core/com/jgoodies/forms/factories",
      "name": "frostwire.desktop.translations.pirate",
      "url": "https://searchcode.com/codesearch/view/125740795/",
      "md5hash": "8b8781353216e71094fb94e02c69c341",
      "lines": {
        "67": "    ",
        "68": "    // Constant Borders *****************************************************",
        "49": " * <pre>",
        "50": " * Borders.DLU2_BORDER",
        "51": " * Borders.createEmptyBorder(Sizes.DLUY4, Sizes.DLUX2, Sizes.DLUY4, Sizes.DLUX2);",
        "52": " * Borders.createEmptyBorder(\"4dlu, 2dlu, 4dlu, 2dlu\");",
        "53": " * </pre>",
        "60": " */",
        "61": "public final class Borders {",
        "62": "",
        "63": "    private Borders() {"
      },
      "id": 125740795,
      "filename": "Borders.java"
    },
    {
      "repo": "https://github.com/bpmc/errai.git",
      "language": "Java",
      "linescount": 64,
      "location": "/errai-widgets/src/main/java/org/jboss/errai/widgets/client/effects",
      "name": "errai",
      "url": "https://searchcode.com/codesearch/view/113233060/",
      "md5hash": "13e7654ee8ad8a2caec1e64ee2b313b7",
      "lines": {
        "32": "    $wnd.RUZEE.ShadedBorder.create({corner:radius,",
        "33": "        edges:@org.jboss.errai.widgets.client.effects.Borders::convertWhere(I)(edges)}).render(elem);",
        "47": "      var result = \"\";",
        "48": "      if (where & @org.jboss.errai.widgets.client.effects.Borders::LEFT) {",
        "50": "      }",
        "51": "      if (where & @org.jboss.errai.widgets.client.effects.Borders::TOP) {",
        "20": "",
        "21": "public class Borders {",
        "54": "      if (where & @org.jboss.errai.widgets.client.effects.Borders::RIGHT) {",
        "56": "      }",
        "57": "      if (where & @org.jboss.errai.widgets.client.effects.Borders::BOTTOM) {",
        "53": "      }"
      },
      "id": 113233060,
      "filename": "Borders.java"
    },
    {
      "repo": "git://github.com/twall/jna.git",
      "language": "Java",
      "linescount": 21,
      "location": "/contrib/msoffice/src/com/sun/jna/platform/win32/COM/util/office/excel",
      "name": "jna",
      "url": "https://searchcode.com/codesearch/view/116042138/",
      "md5hash": "0b15dcad83d61671cea43ba27a646538",
      "lines": {
        "8": "public interface Borders {",
        "7": "@ComInterface"
      },
      "id": 116042138,
      "filename": "Borders.java"
    },
    {
      "repo": "https://bitbucket.org/ixtab/ktcollectionsmgr.git",
      "language": "Java",
      "linescount": 15,
      "location": "/src/com/mobileread/ixtab/collman/ui",
      "name": "ktcollectionsmgr",
      "url": "https://searchcode.com/codesearch/view/37270845/",
      "md5hash": "995ebb2210f710e7c90e272a5f8394e2",
      "lines": {
        "8": "public class Borders {",
        "7": ""
      },
      "id": 37270845,
      "filename": "Borders.java"
    },
    {
      "repo": "https://github.com/Wyth/platform_packages_apps_Gallery2.git",
      "language": "Java",
      "linescount": 1032,
      "location": "/src/com/android/gallery3d/filtershow",
      "name": "platform_packages_apps_Gallery2",
      "url": "https://searchcode.com/codesearch/view/71966142/",
      "md5hash": "51e832c779d6e52525db1cc6f0605199",
      "lines": {
        "192": "        LinearLayout listFilters = (LinearLayout) findViewById(R.id.listFilters);",
        "129": "    protected static final boolean ANIMATE_PANELS = true;",
        "130": "    private static int mImageBorderSize = 4; // in percent",
        "243": "        mImageBorders.setMaster(mImageShow);",
        "197": "        mImageCurves = (ImageCurves) findViewById(R.id.imageCurves);",
        "198": "        mImageBorders = (ImageBorder) findViewById(R.id.imageBorder);",
        "193": "        LinearLayout listBorders = (LinearLayout) findViewById(R.id.listBorders);",
        "714": "",
        "715": "    private void fillListBorders(LinearLayout listBorders) {",
        "716": "        // TODO: use listview",
        "269": "        mPanelController.addPanel(mFxButton, mListFx, 0);",
        "270": "        mPanelController.addPanel(mBorderButton, mListBorders, 1);",
        "242": "        mImageBorders.setImageLoader(mImageLoader);",
        "115": "    private View mListFx = null;",
        "116": "    private View mListBorders = null;",
        "244": "        mImageStraighten.setImageLoader(mImageLoader);"
      },
      "id": 71966142,
      "filename": "FilterShowActivity.java"
    },
    {
      "repo": "https://github.com/Astamir/Topology.git",
      "language": "Java",
      "linescount": 249,
      "location": "/src/ru/etu/astamir/compression",
      "name": "Topology",
      "url": "https://searchcode.com/codesearch/view/76074228/",
      "md5hash": "2ba76916529bec0107c1afca40822716",
      "lines": {
        "64": "                    final Border metalBorder = borders.get(LayerFactory.createLayerForMaterialType(part.getMaterial())).get(direction);                    ",
        "192": "            layerBorders.put(direction.getOppositeDirection(), border);",
        "34": "",
        "35": "    public Map<TopologyLayer, Map<Direction, Border>> borders = Maps.newHashMap();",
        "132": "                        border = borders.get(LayerFactory.createLayerForMaterialType(elem.getMaterial())).get(direction);",
        "197": "        Border border = new Border(direction.getOrthogonalDirection().toOrientation());",
        "198": "        Border metallBorder = borders.get(LayerFactory.createLayerForMaterialType(Material.METALL)).get(direction);",
        "193": "        }",
        "169": "                    Gate gate = (Gate) element;",
        "170": "                    Border border = borders.get(LayerFactory.createLayerForMaterialType(Material.POLISILICON)).get(direction);",
        "199": "        border.overlay(metallBorder.getParts(), direction); // TODO \u043a\u043e\u0441\u0442\u044b\u043b\u044c",
        "191": "            Map<Direction, Border> layerBorders = borders.get(layer);",
        "131": "                        TopologyElement elem = (TopologyElement) contactable;",
        "187": "        scheme.moveBound(direction.getOppositeDirection(), direction, Double.MAX_VALUE);",
        "188": "        for (TopologyLayer layer : borders.keySet()) {",
        "63": "                    Bus.BusPart part = (Bus.BusPart) element;"
      },
      "id": 76074228,
      "filename": "TopologyCompressor.java"
    },
    {
      "repo": "https://github.com/eemi2010/ext4j.git",
      "language": "Java",
      "linescount": 2720,
      "location": "/gwt4ext/src/com/ait/ext4j/client/core",
      "name": "ext4j",
      "url": "https://searchcode.com/codesearch/view/72944598/",
      "md5hash": "fa4c1953d626a05dc7199107ffb6c364",
      "lines": {
        "1312": "     * width adjusted by padding or borders when needed to simulate offsetWidth",
        "1360": "     * @param contentHeight",
        "1092": "    /**",
        "1093": "     * Shows a ripple of exploding, attenuating borders to draw attention to an",
        "1361": "     *            true to get the height minus borders and padding",
        "1068": "    /**",
        "1069": "     * Shows a ripple of exploding, attenuating borders to draw attention to an",
        "1104": "    /**",
        "1105": "     * Shows a ripple of exploding, attenuating borders to draw attention to an",
        "1298": "     * Returns either the offsetHeight or the height of this element based on",
        "1299": "     * CSS height adjusted by padding or borders when needed to simulate",
        "1556": "     *            true to get the width minus borders and padding",
        "1334": "    /**",
        "1335": "     * Returns the sum width of the padding and borders for the passed side.",
        "1555": "     * @param contentWidth",
        "1311": "     * Returns either the offsetWidth or the width of this element based on CSS"
      },
      "id": 72944598,
      "filename": "ExtElement.java"
    },
    {
      "repo": "https://github.com/asfink/pingball-phase1.git",
      "language": "Java",
      "linescount": 275,
      "location": "/src/pingball",
      "name": "pingball-phase1",
      "url": "https://searchcode.com/codesearch/view/88096700/",
      "md5hash": "19a0c1d845f52c7526bb1f3c95645551",
      "lines": {
        "155": "    public void changeWall(int wallNumber, String name) {",
        "22": "    private char[][] boardRep = new char[22][22];",
        "156": "        borders[wallNumber].open = !borders[wallNumber].open;",
        "215": "",
        "216": "                for (Wall wall : borders) {",
        "53": "        // top wall",
        "54": "        borders[0] = new Wall(0);",
        "23": "    private Wall[] borders = new Wall[4];",
        "56": "        // right wall",
        "57": "        borders[1] = new Wall(1);",
        "59": "        // bottom wall",
        "60": "        borders[2] = new Wall(2);",
        "62": "        // left wall",
        "63": "        borders[3] = new Wall(3);"
      },
      "id": 88096700,
      "filename": "Board.java"
    },
    {
      "repo": "https://github.com/dontpanic42/Diss-O-Tron-Tables.git",
      "language": "Java",
      "linescount": 258,
      "location": "/src",
      "name": "Diss-O-Tron-Tables",
      "url": "https://searchcode.com/codesearch/view/88580600/",
      "md5hash": "f61ad06a6410b192e50f32e31fd3e2a5",
      "lines": {
        "256": "    }",
        "98": "        Tbl table = doc.factory.createTbl();",
        "99": "        addBorders(table);",
        "239": "",
        "240": "    private void addBorders(Tbl table) {",
        "247": "",
        "248": "        TblBorders borders = new TblBorders();",
        "249": "        borders.setBottom(border);",
        "250": "        borders.setLeft(border);",
        "251": "        borders.setRight(border);",
        "252": "        borders.setTop(border);",
        "253": "        borders.setInsideH(border);",
        "254": "        borders.setInsideV(border);",
        "255": "        table.getTblPr().setTblBorders(borders);"
      },
      "id": 88580600,
      "filename": "TableDocumentTable.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 2005,
      "location": "/src-plugins/imagescience/imagescience/image",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853342/",
      "md5hash": "8b00bd8836d4ec943091c09817ab642a",
      "lines": {
        "128": "\t\t",
        "129": "\t\t@param borders specifies the border size in each dimension of the new image.",
        "132": "\t*/",
        "133": "\tpublic ColorImage(final Image image, final Borders borders) {",
        "136": "\t\t\tnew Dimensions(",
        "137": "\t\t\t\timage.dimensions().x + 2*borders.x,",
        "138": "\t\t\t\timage.dimensions().y + 2*borders.y,",
        "139": "\t\t\t\timage.dimensions().z + 2*borders.z,",
        "140": "\t\t\t\timage.dimensions().t + 2*borders.t,",
        "141": "\t\t\t\timage.dimensions().c + 2*borders.c",
        "142": "\t\t\t)",
        "155": "\t\timage.axes = axes = Axes.X;",
        "156": "\t\tc.x = borders.x;",
        "157": "\t\tfor (ic.c=0, c.c=borders.c; ic.c<idims.c; ++ic.c, ++c.c)",
        "158": "\t\t\tfor (ic.t=0, c.t=borders.t; ic.t<idims.t; ++ic.t, ++c.t)"
      },
      "id": 113853342,
      "filename": "ColorImage.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 1836,
      "location": "/src-plugins/imagescience/imagescience/image",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853343/",
      "md5hash": "cde056ac45ae8d2856680c45eca3e314",
      "lines": {
        "96": "\t\t",
        "97": "\t\t@param borders specifies the border size in each dimension of the new image.",
        "100": "\t*/",
        "101": "\tpublic ByteImage(final Image image, final Borders borders) {",
        "134": "\t\t",
        "135": "\t\treturn new ByteImage(this,borders);",
        "104": "\t\t\tnew Dimensions(",
        "105": "\t\t\t\timage.dimensions().x + 2*borders.x,",
        "106": "\t\t\t\timage.dimensions().y + 2*borders.y,",
        "107": "\t\t\t\timage.dimensions().z + 2*borders.z,",
        "108": "\t\t\t\timage.dimensions().t + 2*borders.t,",
        "132": "\t",
        "92": "\t",
        "93": "\t/** Copy constructor that allows adding borders. Creates a new image whose size in each dimension is equal to that of the given image plus twice the given border size in that dimension.",
        "133": "\tpublic Image border(final Borders borders) {"
      },
      "id": 113853343,
      "filename": "ByteImage.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 1226,
      "location": "/src-plugins/imagescience/imagescience/transform",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853346/",
      "md5hash": "a1f5ad263bdab4b63d74d73a1dd1687e",
      "lines": {
        "256": "\t\t\t\t\t\t\t\t\tprefilter.bspline3(ain,borders.x);",
        "259": "\t\t\t\t\t\t\t\t\tfor (int x=0; x<newdims.x; ++x) {",
        "4": "import imagescience.image.Axes;",
        "5": "import imagescience.image.Borders;",
        "279": "\t\t\t\t\t\t\t\t\timage.get(cin,ain);",
        "303": "\t\t\t\t\t\t\t\t\timage.get(cin,ain);",
        "304": "\t\t\t\t\t\t\t\t\tprefilter.bspline5(ain,borders.x);",
        "280": "\t\t\t\t\t\t\t\t\tprefilter.omoms3(ain,borders.x);",
        "308": "\t\t\t\t\t\t\t\t\tfor (int x=0; x<newdims.x; ++x) {",
        "309": "\t\t\t\t\t\t\t\t\t\tfinal int lpos = borders.x + pos[x];",
        "182": "\t\t\tinitialize(xscheme,newdims.x,xfactor,xshift);",
        "183": "\t\t\tfinal double[] ain = new double[indims.x + 2*borders.x];",
        "184": "\t\t\tfinal double[] anew = new double[newdims.x];",
        "260": "\t\t\t\t\t\t\t\t\t\tfinal int lpos = borders.x + pos[x];",
        "283": "\t\t\t\t\t\t\t\t\tfor (int x=0; x<newdims.x; ++x) {",
        "284": "\t\t\t\t\t\t\t\t\t\tfinal int lpos = borders.x + pos[x];",
        "255": "\t\t\t\t\t\t\t\t\timage.get(cin,ain);"
      },
      "id": 113853346,
      "filename": "Scale.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 1599,
      "location": "/src-plugins/imagescience/imagescience/transform",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853347/",
      "md5hash": "93efad06b11cca921400ca2516ec8c04",
      "lines": {
        "161": "\t\t\t\tmessenger.log(\"Creating bordered copy of input\");",
        "162": "\t\t\t\tfinal Image bordered = image.border(borders);",
        "3": "import imagescience.image.Axes;",
        "4": "import imagescience.image.Borders;",
        "421": "\t\t\t\t\t\t\t\tcin.x = borders.x + ix;",
        "422": "\t\t\t\t\t\t\t\tcin.y = borders.y + iy;",
        "423": "\t\t\t\t\t\t\t\tfinal double in00 = image.get(cin); ++cin.x;",
        "168": "\t\t\t\tmessenger.log(\"Creating bordered copy of input\");",
        "393": "\t\tif (antialias) image.set(borders,background);",
        "298": "\t\t\tborders = new Borders(bsize,bsize,0);",
        "395": "\t\t",
        "392": "\t\tprogressor.steps(newdims.c*newdims.t*newdims.z*newdims.y);",
        "297": "\t\t\txytrans = true;",
        "420": "\t\t\t\t\t\t\t\tfinal double ymdiff = 1 - ydiff;",
        "169": "\t\t\t\tfinal Image bordered = image.border(borders);",
        "394": "\t\telse image.mirror(borders);"
      },
      "id": 113853347,
      "filename": "Affine.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 475,
      "location": "/src-plugins/imagescience/imagescience/transform",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853351/",
      "md5hash": "6d0369af73d4d107ca552097f5fc2840",
      "lines": {
        "32": "\t\t@param border the size of the borders at the beginning and end of the array. The borders are ignored in the prefiltering.",
        "65": "\t\t// Prefilter in the x-dimension if requested:",
        "66": "\t\tif (axes.x && (dims.x - 2*borders.x > 1)) {",
        "3": "import imagescience.image.Axes;",
        "4": "import imagescience.image.Borders;",
        "74": "\t\t\t\t\t\t\tprefimg.get(coords,array);",
        "75": "\t\t\t\t\t\t\tcausalanticausal(array,borders.x,BSPLINE3POLE1);",
        "76": "\t\t\t\t\t\t\tscale(array,borders.x,BSPLINE3SCALE);",
        "51": "\t\t",
        "52": "\t\t@param borders the size of the borders at the beginning and end of the image in each dimension. These borders are ignored in the prefiltering.",
        "57": "\t*/",
        "58": "\tpublic Image bspline3(final Image image, final Axes axes, final Borders borders) {",
        "63": "\t\tfinal Image prefimg = (image instanceof FloatImage) ? image : new FloatImage(image);",
        "60": "\t\tfinal Dimensions dims = image.dimensions();",
        "61": "\t\tfinal Coordinates min = new Coordinates(borders.x,borders.y,borders.z,borders.t,borders.c);",
        "62": "\t\tfinal Coordinates max = new Coordinates(dims.x-borders.x-1,dims.y-borders.y-1,dims.z-borders.z-1,dims.t-borders.t-1,dims.c-borders.c-1);",
        "31": "\t\t"
      },
      "id": 113853351,
      "filename": "Prefilter.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2459,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1284,
      "source": "Github",
      "id": 2
    },
    {
      "count": 482,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 244,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 36,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 9,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 3,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 2,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 1,
      "source": "Unknown",
      "id": 0
    }
  ]
}