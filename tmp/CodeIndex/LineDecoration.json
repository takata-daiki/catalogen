{
  "matchterm": "LineDecoration",
  "previouspage": null,
  "searchterm": "LineDecoration",
  "query": "LineDecoration",
  "language_filters": [
    {
      "count": 106,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 106,
  "results": [
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 51,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992436/",
      "md5hash": "f5e08a08f41c4329d2fc186ba796c6d0",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java  2.1  2007-05-20",
        "23": " * Decorate the start or end Point2D.Double of a line or poly line figure.",
        "24": " * LineDecoration is the base class for the different line decorations.",
        "30": " */",
        "31": "public interface LineDecoration"
      },
      "id": 52992436,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 62,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw/decoration",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884406/",
      "md5hash": "acba5c0a078c11fb1e21f2680fd11752",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "35": " * Component: {@link org.jhotdraw.draw.BezierFigure};",
        "36": " * Decorator: {@link org.jhotdraw.draw.decoration.LineDecoration}.",
        "39": " * @author Werner Randelshofer",
        "40": " * @version $Id: LineDecoration.java 718 2010-11-21 17:49:53Z rawcoder $",
        "41": " */",
        "42": "public interface LineDecoration"
      },
      "id": 2884406,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 39,
      "location": "/test/subjects/jhotdraw_target/src/org/jhotdraw/figures",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136064438/",
      "md5hash": "d3c17e9424124cb98c9bc014e2fa726e",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "19": " * Decorate the start or end point of a line or poly line figure.",
        "20": " * LineDecoration is the base class for the different line decorations.",
        "35": "\t * @return the display box of a LineDecoration.",
        "25": " */",
        "26": "public interface LineDecoration",
        "34": "\t/**"
      },
      "id": 136064438,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 39,
      "location": "/test/subjects/jhotdraw_source/src/org/jhotdraw/figures",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136064794/",
      "md5hash": "d3c17e9424124cb98c9bc014e2fa726e",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "19": " * Decorate the start or end point of a line or poly line figure.",
        "20": " * LineDecoration is the base class for the different line decorations.",
        "35": "\t * @return the display box of a LineDecoration.",
        "25": " */",
        "26": "public interface LineDecoration",
        "34": "\t/**"
      },
      "id": 136064794,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 39,
      "location": "/test/subjects/JHD176source/src/CH/ifa/draw/figures",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136065778/",
      "md5hash": "65d0baef198f830ae9f65434a84ae021",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "19": " * Decorate the start or end point of a line or poly line figure.",
        "20": " * LineDecoration is the base class for the different line decorations.",
        "35": "\t * @return the display box of a LineDecoration.",
        "25": " */",
        "26": "public interface LineDecoration",
        "34": "\t/**"
      },
      "id": 136065778,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 39,
      "location": "/test/subjects/JHD176target/src/CH/ifa/draw/figures",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066270/",
      "md5hash": "65d0baef198f830ae9f65434a84ae021",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "19": " * Decorate the start or end point of a line or poly line figure.",
        "20": " * LineDecoration is the base class for the different line decorations.",
        "35": "\t * @return the display box of a LineDecoration.",
        "25": " */",
        "26": "public interface LineDecoration",
        "34": "\t/**"
      },
      "id": 136066270,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 65,
      "location": "/test/subjects/JHD596source/src/org/jhotdraw/draw/decoration",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066659/",
      "md5hash": "74ea9507bb6ac135a67b4d359a2f5e86",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "38": " * Component: {@link org.jhotdraw.draw.BezierFigure};",
        "39": " * Decorator: {@link org.jhotdraw.draw.decoration.LineDecoration}.",
        "42": " * @author Werner Randelshofer",
        "43": " * @version $Id: LineDecoration.java -1   $",
        "44": " */",
        "45": "public interface LineDecoration"
      },
      "id": 136066659,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 65,
      "location": "/test/subjects/JHD596target/src/org/jhotdraw/draw/decoration",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136067635/",
      "md5hash": "74ea9507bb6ac135a67b4d359a2f5e86",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java",
        "38": " * Component: {@link org.jhotdraw.draw.BezierFigure};",
        "39": " * Decorator: {@link org.jhotdraw.draw.decoration.LineDecoration}.",
        "42": " * @author Werner Randelshofer",
        "43": " * @version $Id: LineDecoration.java -1   $",
        "44": " */",
        "45": "public interface LineDecoration"
      },
      "id": 136067635,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/chris_chamberlain/moin-1.9-daccord-fork",
      "language": "Java",
      "linescount": 26,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/figures",
      "name": "moin-1.9-daccord-fork",
      "url": "https://searchcode.com/codesearch/view/125372704/",
      "md5hash": "757d1fb285622c47c97ae07daf7daad8",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java 5.1",
        "17": " */",
        "18": "public interface LineDecoration",
        "14": " * Decorate the start or end point of a line or poly line figure.",
        "15": " * LineDecoration is the base class for the different line decorations."
      },
      "id": 125372704,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/matthijs/moin-1.9",
      "language": "Java",
      "linescount": 26,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/figures",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/132502930/",
      "md5hash": "757d1fb285622c47c97ae07daf7daad8",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java 5.1",
        "17": " */",
        "18": "public interface LineDecoration",
        "14": " * Decorate the start or end point of a line or poly line figure.",
        "15": " * LineDecoration is the base class for the different line decorations."
      },
      "id": 132502930,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/oangeor/moin-1.9",
      "language": "Java",
      "linescount": 26,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/figures",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/134222128/",
      "md5hash": "757d1fb285622c47c97ae07daf7daad8",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java 5.1",
        "17": " */",
        "18": "public interface LineDecoration",
        "14": " * Decorate the start or end point of a line or poly line figure.",
        "15": " * LineDecoration is the base class for the different line decorations."
      },
      "id": 134222128,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/mixedpower/moin-1.9",
      "language": "Java",
      "linescount": 26,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/figures",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/135121281/",
      "md5hash": "757d1fb285622c47c97ae07daf7daad8",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java 5.1",
        "17": " */",
        "18": "public interface LineDecoration",
        "14": " * Decorate the start or end point of a line or poly line figure.",
        "15": " * LineDecoration is the base class for the different line decorations."
      },
      "id": 135121281,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 51,
      "location": "/test/subjects/JHD458target/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136063507/",
      "md5hash": "f5e08a08f41c4329d2fc186ba796c6d0",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java  2.1  2007-05-20",
        "23": " * Decorate the start or end Point2D.Double of a line or poly line figure.",
        "24": " * LineDecoration is the base class for the different line decorations.",
        "30": " */",
        "31": "public interface LineDecoration"
      },
      "id": 136063507,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 50,
      "location": "/test/subjects/JHD324source/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136065070/",
      "md5hash": "61f97aa60ce1c021a783625e478f6dd0",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java  2.0  2006-01-14",
        "23": " * Decorate the start or end Point2D.Double of a line or poly line figure.",
        "24": " * LineDecoration is the base class for the different line decorations.",
        "29": " */",
        "30": "public interface LineDecoration"
      },
      "id": 136065070,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 51,
      "location": "/test/subjects/JHD458source/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136068464/",
      "md5hash": "f5e08a08f41c4329d2fc186ba796c6d0",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java  2.1  2007-05-20",
        "23": " * Decorate the start or end Point2D.Double of a line or poly line figure.",
        "24": " * LineDecoration is the base class for the different line decorations.",
        "30": " */",
        "31": "public interface LineDecoration"
      },
      "id": 136068464,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 50,
      "location": "/test/subjects/JHD324target/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136069276/",
      "md5hash": "61f97aa60ce1c021a783625e478f6dd0",
      "lines": {
        "1": "/*",
        "2": " * @(#)LineDecoration.java  2.0  2006-01-14",
        "23": " * Decorate the start or end Point2D.Double of a line or poly line figure.",
        "24": " * LineDecoration is the base class for the different line decorations.",
        "29": " */",
        "30": "public interface LineDecoration"
      },
      "id": 136069276,
      "filename": "LineDecoration.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 972,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406763/",
      "md5hash": "90e9bcad3d44264dac9d11db9a001e3f",
      "lines": {
        "715": "     */",
        "790": "    public LineDecoration getLineTailDecoration() {",
        "795": "        return end == null ? LineDecoration.NONE : LineDecoration.values()[end.intValue() - 1];",
        "780": "    public void setLineTailDecoration(LineDecoration style) {",
        "779": "     */",
        "716": "    public void setLineHeadDecoration(LineDecoration style) {",
        "791": "        CTLineProperties ln = getSpPr().getLn();",
        "792": "        if (ln == null || !ln.isSetTailEnd()) return LineDecoration.NONE;",
        "725": "",
        "726": "    public LineDecoration getLineHeadDecoration() {",
        "727": "        CTLineProperties ln = getSpPr().getLn();",
        "728": "        if (ln == null || !ln.isSetHeadEnd()) return LineDecoration.NONE;",
        "730": "        STLineEndType.Enum end = ln.getHeadEnd().getType();",
        "731": "        return end == null ? LineDecoration.NONE : LineDecoration.values()[end.intValue() - 1];",
        "794": "        STLineEndType.Enum end = ln.getTailEnd().getType();",
        "789": ""
      },
      "id": 97406763,
      "filename": "XSLFSimpleShape.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 128,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992498/",
      "md5hash": "272f35639e7ef1c30087a4a092cc38f5",
      "lines": {
        "68": "    \tfor (LineDecoration decoration : decorations) {",
        "1": "/*",
        "2": " * @(#)CompositeLineDecoration.java  1.0  2007-11-11",
        "35": "public class CompositeLineDecoration implements LineDecoration, DOMStorable {",
        "36": "\tprivate List<LineDecoration> decorations = new ArrayList<LineDecoration>();",
        "37": "\t",
        "40": "     */",
        "41": "    public CompositeLineDecoration() {",
        "34": " */",
        "46": "     */",
        "47": "    public CompositeLineDecoration(LineDecoration decoration1, LineDecoration decoration2) {",
        "67": "    public void draw(Graphics2D g, Figure f, Point2D.Double p1, Point2D.Double p2) {",
        "78": "    \t",
        "56": "     */",
        "57": "    public void addDecoration(LineDecoration decoration) {",
        "79": "    \tfor (LineDecoration decoration : decorations) {"
      },
      "id": 52992498,
      "filename": "CompositeLineDecoration.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 133,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw/decoration",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884403/",
      "md5hash": "9e71e0b583b85c711cde61b8d92d0c3e",
      "lines": {
        "68": "    public void draw(Graphics2D g, Figure f, Point2D.Double p1, Point2D.Double p2) {",
        "1": "/*",
        "2": " * @(#)CompositeLineDecoration.java",
        "35": "public class CompositeLineDecoration implements LineDecoration, DOMStorable {",
        "36": "\tprivate List<LineDecoration> decorations = new ArrayList<LineDecoration>();",
        "37": "\t",
        "40": "     */",
        "41": "    public CompositeLineDecoration() {",
        "34": " */",
        "46": "     */",
        "47": "    public CompositeLineDecoration(LineDecoration decoration1, LineDecoration decoration2) {",
        "57": "    public void addDecoration(LineDecoration decoration) {",
        "56": "     */",
        "25": "/**",
        "26": " * A {@link LineDecoration} which can compose multiple individual line",
        "69": "    \tfor (LineDecoration decoration : decorations) {"
      },
      "id": 2884403,
      "filename": "CompositeLineDecoration.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 611,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884343/",
      "md5hash": "4817255eb82ee2051ae923e8d42525f8",
      "lines": {
        "272": "    public static final AttributeKey<LineDecoration> START_DECORATION = new AttributeKey<LineDecoration>(\"startDecoration\", LineDecoration.class, null, true, labels);",
        "273": "    /**",
        "14": "import org.jhotdraw.draw.decoration.LineDecoration;",
        "13": "import edu.umd.cs.findbugs.annotations.Nullable;",
        "270": "    public final static AttributeKey<Liner> BEZIER_PATH_LAYOUTER = new AttributeKey<Liner>(\"bezierPathLayouter\", Liner.class, null, true, labels);",
        "271": "    public static final AttributeKey<LineDecoration> END_DECORATION = new AttributeKey<LineDecoration>(\"endDecoration\", LineDecoration.class, null, true, labels);"
      },
      "id": 2884343,
      "filename": "AttributeKeys.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 94,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 9,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 3,
      "source": "Github",
      "id": 2
    }
  ]
}