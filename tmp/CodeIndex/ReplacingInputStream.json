{
  "matchterm": "ReplacingInputStream",
  "previouspage": null,
  "searchterm": "ReplacingInputStream",
  "query": "ReplacingInputStream",
  "language_filters": [
    {
      "count": 4,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 4,
  "results": [
    {
      "repo": "https://github.com/hamishmorgan/ERL.git",
      "language": "Java",
      "linescount": 141,
      "location": "/src/main/java/uk/ac/susx/mlcl/erl/tac/io",
      "name": "ERL",
      "url": "https://searchcode.com/codesearch/view/74460058/",
      "md5hash": "63c176ec6bcecb3151016c8486995c01",
      "lines": {
        "19": " */",
        "20": "public class ReplacingInputStream extends FilterInputStream {",
        "121": "",
        "122": "        ReplacingInputStream that = (ReplacingInputStream) o;",
        "28": "",
        "29": "    public ReplacingInputStream(InputStream delegate, @Nonnull byte[] search, @Nonnull byte[] replacement) {"
      },
      "id": 74460058,
      "filename": "ReplacingInputStream.java"
    },
    {
      "repo": "https://github.com/hamishmorgan/ERL.git",
      "language": "Java",
      "linescount": 251,
      "location": "/src/test/java/uk/ac/susx/mlcl/erl/tac/io",
      "name": "ERL",
      "url": "https://searchcode.com/codesearch/view/74458402/",
      "md5hash": "811622f34e8718485f0e35ad9f83abe8",
      "lines": {
        "27": "public class TestReplacingInputStream extends AbstractTest {",
        "100": "            final InputStream is = getResource(resourceName).openStream();",
        "101": "            final InputStream ris = new ReplacingInputStream(is, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "170": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "171": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "204": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "241": "            };",
        "242": "            final InputStream ris = new ReplacingInputStream(delegate, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "187": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "203": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "55": "            final InputStream is = getResource(resourceName).openStream();",
        "56": "            final InputStream ris = new ReplacingInputStream(is, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "26": "@RunWith(Enclosed.class)",
        "155": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "188": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "154": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));"
      },
      "id": 74458402,
      "filename": "TestReplacingInputStream.java"
    },
    {
      "repo": "https://github.com/hamishmorgan/ERL.git",
      "language": "Java",
      "linescount": 248,
      "location": "/src/test/java/uk/ac/susx/mlcl/erl/tac/io",
      "name": "ERL",
      "url": "https://searchcode.com/codesearch/view/74458485/",
      "md5hash": "a47566a09fa09f8d06d99734041a8741",
      "lines": {
        "97": "            final InputStream is = getResource(resourceName).openStream();",
        "98": "            final InputStream ris = new ReplacingInputStream(is, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "167": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "168": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "201": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "55": "            final InputStream is = getResource(resourceName).openStream();",
        "238": "            };",
        "239": "            final InputStream ris = new ReplacingInputStream(delegate, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "152": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "151": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "56": "            final InputStream ris = new ReplacingInputStream(is, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "185": "            final InputStream ris = new ReplacingInputStream(bis, find.getBytes(\"UTF-8\"), replace.getBytes(\"UTF-8\"));",
        "184": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));",
        "200": "            final ByteArrayInputStream bis = new ByteArrayInputStream(input.getBytes(\"UTF-8\"));"
      },
      "id": 74458485,
      "filename": "TestFindReplaceInputStream.java"
    },
    {
      "repo": "https://github.com/hamishmorgan/ERL.git",
      "language": "Java",
      "linescount": 196,
      "location": "/src/main/java/uk/ac/susx/mlcl/erl/tac/io",
      "name": "ERL",
      "url": "https://searchcode.com/codesearch/view/74460252/",
      "md5hash": "33663ac92ce67d78a86677f946b6a50d",
      "lines": {
        "51": "                // replace uncode 0xffff (non-character) with question marks.",
        "52": "                in = new ReplacingInputStream(in, \"\\uffff\".getBytes(charset), \"\\uFFFD\".getBytes(charset));",
        "53": "",
        "54": "//                in =  new ReplacingInputStream(in, \"& \".getBytes(\"UTF-8\"), \"&amp; \".getBytes(\"UTF-8\"));",
        "55": "//                in =  new ReplacingInputStream(in, \" < \".getBytes(\"UTF-8\"), \" &lt; \".getBytes(\"UTF-8\"));",
        "56": "//                in =  new ReplacingInputStream(in, \" > \".getBytes(\"UTF-8\"), \" &gt; \".getBytes(\"UTF-8\"));",
        "57": "//                in =  new ReplacingInputStream(in, \"&&\".getBytes(\"UTF-8\"), \"&amp;&amp;\".getBytes(\"UTF-8\"));",
        "58": "//                in =  new ReplacingInputStream(in, \">>\".getBytes(\"UTF-8\"), \"&gt;&gt;\".getBytes(\"UTF-8\"));",
        "59": "//                in =  new ReplacingInputStream(in, \"\\n&\\n\".getBytes(\"UTF-8\"), \"\\n&amp;\\n\".getBytes(\"UTF-8\"));",
        "60": "                return in;"
      },
      "id": 74460252,
      "filename": "Tac2013WebIO.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 4,
      "source": "Github",
      "id": 2
    }
  ]
}