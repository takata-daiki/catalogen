{
  "matchterm": "GUID",
  "previouspage": null,
  "searchterm": "GUID",
  "query": "GUID",
  "language_filters": [
    {
      "count": 5107,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 5107,
  "results": [
    {
      "repo": "https://bitbucket.org/romoore/gnrs.git",
      "language": "Java",
      "linescount": 152,
      "location": "/jserver/src/main/java/edu/rutgers/winlab/mfirst",
      "name": "gnrs",
      "url": "https://searchcode.com/codesearch/view/38200756/",
      "md5hash": "54d71b1b92b3c0675e0ed2799cbd57d5",
      "lines": {
        "33": " * <p>",
        "34": " * A Globally-Unique IDentifier (GUID) is one of the primary data structures in",
        "36": " * other concepts in the Mobility First (MF) Future Internet Architecture (FIA)",
        "37": " * project. In the context of GNRS, it may not represent an actual GUID, but",
        "38": " * instead a cryptographic hash value of a GUID. The reason for this distinction",
        "39": " * is that a \"proper\" GUID value may be significantly longer and include",
        "40": " * public/private components.",
        "44": " */",
        "45": "public class GUID {",
        "47": "  /**",
        "48": "   * Number of bytes in a GUID value.",
        "49": "   */",
        "50": "  public static final int SIZE_OF_GUID = 20;",
        "52": "  /**",
        "53": "   * Binary representation of the GUID."
      },
      "id": 38200756,
      "filename": "GUID.java"
    },
    {
      "repo": "https://github.com/zootella/learning.git",
      "language": "Java",
      "linescount": 864,
      "location": "/core/com/limegroup/gnutella",
      "name": "learning",
      "url": "https://searchcode.com/codesearch/view/103622492/",
      "md5hash": "0b851d3f9d24c2fb33d983a4976b4a4d",
      "lines": {
        "11": "/**",
        "12": " * A GUID is a globally unique identifier.",
        "13": " * Separate computers can create lists of GUIDs and combine them later without worrying about both having made the same one.",
        "14": " * ",
        "15": " * LimeWire makes GUIDs by filling byte arrays with data from a java.util.Random object.",
        "16": " * This is not a cryptographically-sound method of creating GUIDs, but works fine for Gnutella.",
        "17": " * ",
        "18": " * LimeWire hides additional data in the GUIDs it makes.",
        "19": " * The tag(a, b) method takes two 2-byte values, and computes a third.",
        "20": " * A LimeWire GUID contains a tag generated from two other locations in the same GUID.",
        "21": " * This way, we can get a GUID and look for the tag.",
        "22": " * If it's there, we know it's a LimeWire GUID.",
        "23": " * ",
        "24": " * By default, a LimeWire GUID has the tag at 9, generated from the pairs at 4 and 6.",
        "26": " * ",
        "27": " * LimeWire can also store an IP address and port number in a GUID."
      },
      "id": 103622492,
      "filename": "GUID.java"
    },
    {
      "repo": "https://github.com/zootella/learning-bittorrent.git",
      "language": "Java",
      "linescount": 485,
      "location": "/core/com/limegroup/gnutella",
      "name": "learning-bittorrent",
      "url": "https://searchcode.com/codesearch/view/103628325/",
      "md5hash": "e2e6ec2accccd5fcffd882d3bb28836f",
      "lines": {
        "32": " * In addition, LimeWire GUIDs may be marked as follows:",
        "59": " * manner.  You need to have some indication external to the guid (i.e. for",
        "10": " *",
        "11": " * Let the bytes of a GUID G be labelled G[0]..G[15].  All bytes are unsigned.",
        "13": " * short formed by concatenating bytes A and B, with B being the most",
        "14": " * significant byte.  LimeWire GUID's have the following properties:",
        "49": " * Note that this still leaves 10-12 bytes for randomness.  That's plenty of",
        "50": " * distinct GUID's.  And there's only a 1 in 65000 chance of mistakenly",
        "52": " *",
        "53": " * Furthermore, LimeWire GUIDs may be 'marked' by containing address info.  In",
        "57": " * </ol>",
        "58": " * Note that there is no way to tell from a guid if it has been marked in this",
        "27": " *",
        "28": " * As of 9/2004, LimeWire GUIDs used to be marked as such:",
        "29": " * <li>G[8]==0xFF.  This serves to identify \"new GUIDs\", e.g. from BearShare.",
        "30": " * This marking was deprecated.",
        "31": " *"
      },
      "id": 103628325,
      "filename": "GUID.java"
    },
    {
      "repo": "https://github.com/kharabeesh/gdkdemo.git",
      "language": "Java",
      "linescount": 243,
      "location": "/apidemo/sensordemo/environmentalsensordemo/src/main/java/com/gdkdemo/sensor/environmental/cp/core",
      "name": "gdkdemo",
      "url": "https://searchcode.com/codesearch/view/93609635/",
      "md5hash": "155395f3b4c1e31504bf517d2bb22bda",
      "lines": {
        "5": "",
        "6": "// GUID object.",
        "7": "// 8-4-4-4-12",
        "8": "public final class GUID",
        "9": "{",
        "10": "    public final static GUID NULL = new GUID(\"00000000-0000-0000-0000-000000000000\");",
        "11": "    public final static GUID ONE = new GUID(\"00000000-0000-0000-0000-000000000001\");",
        "12": "",
        "13": "    // Note that it is an implementation detail that we currently rely on UUID.",
        "14": "    private String guid;  // String representation of an UUID object, for now.",
        "15": "",
        "16": "    public GUID()",
        "18": "        // type 4 UUID, for now.",
        "19": "        guid = UUID.randomUUID().toString();",
        "20": "    }"
      },
      "id": 93609635,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 128,
      "location": "/ojc-core/component-common/axiondb/external/src/com/sun/syndication/feed/rss",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260778/",
      "md5hash": "97b5f7e2e89aa71e3d2fdbe091137b58",
      "lines": {
        "97": "    /**",
        "98": "     * Sets the guid perma link.",
        "99": "     * <p>",
        "100": "     * @param permaLink the guid perma link to set, <b>null</b> if none.",
        "38": "     */",
        "39": "    public Guid() {",
        "87": "    /**",
        "108": "     * Returns the guid value.",
        "109": "     * <p>",
        "24": " * Bean for item GUIDs of RSS feeds.",
        "107": "    /**",
        "23": "/**",
        "88": "     * Returns the guid perma link.",
        "89": "     * <p>",
        "90": "     * @return the guid perma link, <b>null</b> if none.",
        "28": " */",
        "29": "public class Guid implements Cloneable,Serializable {"
      },
      "id": 43260778,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 128,
      "location": "/ojc-core/component-common/axiondb/external/src/com/sun/syndication/feed/rss",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201306/",
      "md5hash": "97b5f7e2e89aa71e3d2fdbe091137b58",
      "lines": {
        "97": "    /**",
        "98": "     * Sets the guid perma link.",
        "99": "     * <p>",
        "100": "     * @param permaLink the guid perma link to set, <b>null</b> if none.",
        "38": "     */",
        "39": "    public Guid() {",
        "87": "    /**",
        "108": "     * Returns the guid value.",
        "109": "     * <p>",
        "24": " * Bean for item GUIDs of RSS feeds.",
        "107": "    /**",
        "23": "/**",
        "88": "     * Returns the guid perma link.",
        "89": "     * <p>",
        "90": "     * @return the guid perma link, <b>null</b> if none.",
        "28": " */",
        "29": "public class Guid implements Cloneable,Serializable {"
      },
      "id": 49201306,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/odata4jexp/odata4j",
      "language": "Java",
      "linescount": 67,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j",
      "url": "https://searchcode.com/codesearch/view/102517408/",
      "md5hash": "6cf7901be04d56d845be423cbb667c08",
      "lines": {
        "6": "/**",
        "7": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "8": " * <p>Guids are equal if their string representations are equal.</p>",
        "9": " */",
        "10": "public class Guid {",
        "11": "",
        "12": "  private static final Pattern GUID_FORMAT = Pattern.compile(\"^(urn\\\\:uuid\\\\:)?\\\\p{XDigit}{8}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{12}$\");",
        "14": "",
        "15": "  private Guid(String value) {",
        "19": "  /**",
        "20": "   * Return a Guid for a given string.",
        "21": "   *",
        "22": "   * @param value  the guid's string representation",
        "23": "   * @return a new Guid",
        "24": "   */"
      },
      "id": 102517408,
      "filename": "Guid.java"
    },
    {
      "repo": "https://github.com/unsound/hfsexplorer.git",
      "language": "Java",
      "linescount": 130,
      "location": "/src/java/org/catacombae/storage/ps/gpt/types",
      "name": "hfsexplorer",
      "url": "https://searchcode.com/codesearch/view/100194383/",
      "md5hash": "87570de6550ea12f8ca6886e24f8b687",
      "lines": {
        "97": "    public String toString() {",
        "98": "        return GPTEntry.getGUIDAsString(getBytes());",
        "35": "",
        "36": "    public GUID(byte[] data, int offset) {",
        "38": "            throw new IllegalArgumentException(\"Not enough bytes for a \" +",
        "39": "                    \"GUID (need 16, got \" + (data.length - offset) + \").\");",
        "72": "",
        "73": "    protected void copyFields(GUID source) {",
        "43": "",
        "44": "    public GUID(GUID source) {",
        "47": "",
        "48": "    public GUID(byte[] data) {",
        "51": "",
        "52": "    protected GUID() {",
        "58": "",
        "59": "    private void copyFieldsInternal(GUID source) {"
      },
      "id": 100194383,
      "filename": "GUID.java"
    },
    {
      "repo": "https://github.com/sahpat229/Jukebox-Server.git",
      "language": "Java",
      "linescount": 37,
      "location": "/Jukebox Server/src/edu/rutgers/winlab/jmfapi",
      "name": "Jukebox-Server",
      "url": "https://searchcode.com/codesearch/view/99580804/",
      "md5hash": "47bca4ca30e021d912a22d84dd197885",
      "lines": {
        "2": " *",
        "3": " * File: GUID.java",
        "5": " *",
        "6": " * Description: GUID class, Representation of a GUID",
        "10": "",
        "11": "public class GUID {",
        "12": "",
        "13": "\tprivate int mGuidVal;",
        "14": "",
        "15": "\tpublic GUID(){",
        "16": "\t\tmGuidVal = 0;",
        "17": "\t}",
        "18": "",
        "19": "\tpublic GUID(int val){",
        "20": "\t\tmGuidVal = val;"
      },
      "id": 99580804,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/wrapman/frostwire.desktop.translations.pirate",
      "language": "Java",
      "linescount": 529,
      "location": "/core/com/limegroup/gnutella",
      "name": "frostwire.desktop.translations.pirate",
      "url": "https://searchcode.com/codesearch/view/125736812/",
      "md5hash": "b1b113ad08003bd02f8a31e4768bfa39",
      "lines": {
        "32": " * <li>G[8]==0xFF.  This serves to identify \"new GUIDs\", e.g. from BearShare.",
        "33": " * This marking was deprecated.",
        "34": " *",
        "35": " * In addition, LimeWire GUIDs may be marked as follows:",
        "62": " * manner.  You need to have some indication external to the guid (i.e. for",
        "13": " *",
        "14": " * Let the bytes of a GUID G be labelled G[0]..G[15].  All bytes are unsigned.",
        "16": " * short formed by concatenating bytes A and B, with B being the most",
        "17": " * significant byte.  LimeWire GUID's have the following properties:",
        "52": " * Note that this still leaves 10-12 bytes for randomness.  That's plenty of",
        "53": " * distinct GUID's.  And there's only a 1 in 65000 chance of mistakenly",
        "55": " *",
        "56": " * Furthermore, LimeWire GUIDs may be 'marked' by containing address info.  In",
        "60": " * </ol>",
        "61": " * Note that there is no way to tell from a guid if it has been marked in this",
        "30": " *",
        "31": " * As of 9/2004, LimeWire GUIDs used to be marked as such:"
      },
      "id": 125736812,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/wrapman/frostwire.desktop.translations.pirate",
      "language": "Java",
      "linescount": 363,
      "location": "/lib/jars-src/jaudiotagger/org/jaudiotagger/audio/asf/data",
      "name": "frostwire.desktop.translations.pirate",
      "url": "https://searchcode.com/codesearch/view/125746366/",
      "md5hash": "ce9284421d90e7df7ebab4e0a98d909d",
      "lines": {
        "34": "    /**",
        "35": "     * This constant defines the GUID for stream chunks describing audio",
        "37": "     */",
        "38": "    public final static GUID GUID_AUDIO_ERROR_CONCEALEMENT_ABSENT = new GUID(",
        "43": "    /**",
        "44": "     * This constant defines the GUID for stream chunks describing audio",
        "47": "     */",
        "48": "    public final static GUID GUID_AUDIO_ERROR_CONCEALEMENT_INTERLEAVED = new GUID(",
        "53": "    /**",
        "54": "     * This constant stores the GUID indicating that stream type is audio.",
        "55": "     */",
        "25": "/**",
        "26": " * This class is used for representation of GUIDs and as a reference list of all",
        "27": " * Known GUIDs. <br>",
        "28": " *",
        "30": " */",
        "31": "public class GUID"
      },
      "id": 125746366,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 246,
      "location": "/metaobj/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/utils/id/guid",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129853935/",
      "md5hash": "55b0ff7cf161b942a9c0d2e312ae439f",
      "lines": {
        "32": "   private static final short GUID_LEN = HEX_RADIX;",
        "1": "/**********************************************************************************",
        "2": " * $URL: https://source.sakaiproject.org/svn/metaobj/tags/sakai-2.9.3/metaobj-impl/api-impl/src/java/org/sakaiproject/metaobj/utils/id/guid/Guid.java $",
        "3": " * $Id: Guid.java 59676 2009-04-03 23:18:23Z arwhyte@umich.edu $",
        "4": " ***********************************************************************************",
        "38": "   /**",
        "33": "   private byte guid[] = new byte[GUID_LEN];",
        "40": "    * and when setGuid() is called.  Used to optimize toString performance.",
        "39": "    * holds the string representation of this GUID, and is computed during construction,",
        "34": "",
        "21": "",
        "22": "package org.sakaiproject.metaobj.utils.id.guid;",
        "24": "",
        "25": "public class Guid implements java.io.Serializable {",
        "29": "   /**",
        "30": "    * length of a GUID, in bytes (16)",
        "31": "    */"
      },
      "id": 129853935,
      "filename": "Guid.java"
    },
    {
      "repo": "https://github.com/pekim/ealing.git",
      "language": "Java",
      "linescount": 63,
      "location": "/native/src/main/java/uk/co/pekim/ealing/jna/win32",
      "name": "ealing",
      "url": "https://searchcode.com/codesearch/view/104551935/",
      "md5hash": "4e909c7a9465c06c0ea5e9319bfbc2a5",
      "lines": {
        "35": "    /**",
        "36": "     * Format the GUID according to Microsofts preferred format of",
        "38": "     * ",
        "6": "",
        "7": "public class GUID extends Structure {",
        "39": "     * @return the formatted GUID.",
        "12": "",
        "29": "",
        "30": "    public GUID() {",
        "13": "    public GUID(long data1, int data2, int data3, int data4_0, int data4_1, int data4_2, int data4_3, int data4_4, int data4_5,"
      },
      "id": 104551935,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/meverett/mywire",
      "language": "Java",
      "linescount": 571,
      "location": "/components/io/src/main/java/org/limewire/io",
      "name": "mywire",
      "url": "https://searchcode.com/codesearch/view/119550574/",
      "md5hash": "46f9cbd757de82eba14de479f0b1a621",
      "lines": {
        "32": " * <li>G[8]==0xFF.  This serves to identify \"new GUIDs\", e.g. from BearShare.",
        "33": " * This marking was deprecated.",
        "34": " *",
        "35": " * In addition, LimeWire GUIDs may be marked as follows:",
        "62": " * manner.  You need to have some indication external to the guid (i.e. for",
        "13": " *",
        "14": " * Let the bytes of a GUID G be labelled G[0]..G[15].  All bytes are unsigned.",
        "16": " * short formed by concatenating bytes A and B, with B being the most",
        "17": " * significant byte.  LimeWire GUID's have the following properties:",
        "52": " * Note that this still leaves 10-12 bytes for randomness.  That's plenty of",
        "53": " * distinct GUID's.  And there's only a 1 in 65000 chance of mistakenly",
        "55": " *",
        "56": " * Furthermore, LimeWire GUIDs may be 'marked' by containing address info.  In",
        "60": " * </ol>",
        "61": " * Note that there is no way to tell from a guid if it has been marked in this",
        "30": " *",
        "31": " * As of 9/2004, LimeWire GUIDs used to be marked as such:"
      },
      "id": 119550574,
      "filename": "GUID.java"
    },
    {
      "repo": "https://bitbucket.org/RolfAden/odata4j",
      "language": "Java",
      "linescount": 62,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j",
      "url": "https://searchcode.com/codesearch/view/125355529/",
      "md5hash": "bba171fde8c5c671c6f64d7ea29581c2",
      "lines": {
        "5": "/**",
        "6": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "7": " * <p>Guids are equal if their string representations are equal.</p>",
        "8": " */",
        "9": "public class Guid {",
        "12": "",
        "13": "  private Guid(String value) {",
        "17": "  /**",
        "18": "   * Return a Guid for a given string.",
        "19": "   *",
        "20": "   * @param value  the guid's string representation",
        "21": "   * @return a new Guid",
        "22": "   */",
        "23": "  public static Guid fromString(String value) {",
        "24": "    return new Guid(value);"
      },
      "id": 125355529,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/mcars/mcars-odata4j",
      "language": "Java",
      "linescount": 62,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "mcars-odata4j",
      "url": "https://searchcode.com/codesearch/view/125413503/",
      "md5hash": "bba171fde8c5c671c6f64d7ea29581c2",
      "lines": {
        "5": "/**",
        "6": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "7": " * <p>Guids are equal if their string representations are equal.</p>",
        "8": " */",
        "9": "public class Guid {",
        "12": "",
        "13": "  private Guid(String value) {",
        "17": "  /**",
        "18": "   * Return a Guid for a given string.",
        "19": "   *",
        "20": "   * @param value  the guid's string representation",
        "21": "   * @return a new Guid",
        "22": "   */",
        "23": "  public static Guid fromString(String value) {",
        "24": "    return new Guid(value);"
      },
      "id": 125413503,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/sklevenz/odata4j",
      "language": "Java",
      "linescount": 67,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j",
      "url": "https://searchcode.com/codesearch/view/130888634/",
      "md5hash": "6cf7901be04d56d845be423cbb667c08",
      "lines": {
        "6": "/**",
        "7": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "8": " * <p>Guids are equal if their string representations are equal.</p>",
        "9": " */",
        "10": "public class Guid {",
        "11": "",
        "12": "  private static final Pattern GUID_FORMAT = Pattern.compile(\"^(urn\\\\:uuid\\\\:)?\\\\p{XDigit}{8}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{12}$\");",
        "14": "",
        "15": "  private Guid(String value) {",
        "19": "  /**",
        "20": "   * Return a Guid for a given string.",
        "21": "   *",
        "22": "   * @param value  the guid's string representation",
        "23": "   * @return a new Guid",
        "24": "   */"
      },
      "id": 130888634,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/kadit/odata4j",
      "language": "Java",
      "linescount": 67,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j",
      "url": "https://searchcode.com/codesearch/view/131141086/",
      "md5hash": "2683c1bb4a59ac1827a05d2f8876a26a",
      "lines": {
        "6": "/**",
        "7": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "8": " * <p>Guids are equal if their string representations are equal.</p>",
        "9": " */",
        "10": "public class Guid {",
        "11": "",
        "12": "  private static final Pattern GUID_FORMAT = Pattern.compile(\"^\\\\p{XDigit}{8}-\\\\p{XDigit}{4}-\\\\p{XDigit}{4}-\\\\p{XDigit}{4}-\\\\p{XDigit}{12}$\");",
        "14": "",
        "15": "  private Guid(String value) {",
        "19": "  /**",
        "20": "   * Return a Guid for a given string.",
        "21": "   *",
        "22": "   * @param value  the guid's string representation",
        "23": "   * @return a new Guid",
        "24": "   */"
      },
      "id": 131141086,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/svetsch/odata4j-actions",
      "language": "Java",
      "linescount": 67,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j-actions",
      "url": "https://searchcode.com/codesearch/view/133810268/",
      "md5hash": "6cf7901be04d56d845be423cbb667c08",
      "lines": {
        "6": "/**",
        "7": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "8": " * <p>Guids are equal if their string representations are equal.</p>",
        "9": " */",
        "10": "public class Guid {",
        "11": "",
        "12": "  private static final Pattern GUID_FORMAT = Pattern.compile(\"^(urn\\\\:uuid\\\\:)?\\\\p{XDigit}{8}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{12}$\");",
        "14": "",
        "15": "  private Guid(String value) {",
        "19": "  /**",
        "20": "   * Return a Guid for a given string.",
        "21": "   *",
        "22": "   * @param value  the guid's string representation",
        "23": "   * @return a new Guid",
        "24": "   */"
      },
      "id": 133810268,
      "filename": "Guid.java"
    },
    {
      "repo": "https://bitbucket.org/hsingh/odata4j",
      "language": "Java",
      "linescount": 67,
      "location": "/odata4j-core/src/main/java/org/odata4j/core",
      "name": "odata4j",
      "url": "https://searchcode.com/codesearch/view/135303397/",
      "md5hash": "6cf7901be04d56d845be423cbb667c08",
      "lines": {
        "6": "/**",
        "7": " * A custom Guid class is necessary to interop with .net Guid strings incompatible with {@link UUID}.",
        "8": " * <p>Guids are equal if their string representations are equal.</p>",
        "9": " */",
        "10": "public class Guid {",
        "11": "",
        "12": "  private static final Pattern GUID_FORMAT = Pattern.compile(\"^(urn\\\\:uuid\\\\:)?\\\\p{XDigit}{8}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{4}-?\\\\p{XDigit}{12}$\");",
        "14": "",
        "15": "  private Guid(String value) {",
        "19": "  /**",
        "20": "   * Return a Guid for a given string.",
        "21": "   *",
        "22": "   * @param value  the guid's string representation",
        "23": "   * @return a new Guid",
        "24": "   */"
      },
      "id": 135303397,
      "filename": "Guid.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2418,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1884,
      "source": "Github",
      "id": 2
    },
    {
      "count": 646,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 133,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 19,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 6,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 1,
      "source": "Sourceforge",
      "id": 4
    }
  ]
}