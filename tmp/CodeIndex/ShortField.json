{
  "matchterm": "ShortField",
  "previouspage": null,
  "searchterm": "ShortField",
  "query": "ShortField",
  "language_filters": [
    {
      "count": 366,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 366,
  "results": [
    {
      "repo": "https://bitbucket.org/xiaoqiangnk/hotspot-mips",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "hotspot-mips",
      "url": "https://searchcode.com/codesearch/view/118290478/",
      "md5hash": "cad7edd54cf88449a6ee5e59c8512c13",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ShortField(sun.jvm.hotspot.types.JShortField vmField, long startOffset) {",
        "38": "",
        "39": "  public ShortField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a short field simply provides access to the value.",
        "30": "public class ShortField extends Field {",
        "31": "  public ShortField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 118290478,
      "filename": "ShortField.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 240,
      "location": "/components/forks/poi/src/loci/poi/util",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642644/",
      "md5hash": "53e59945e2d0f46088c2278e02df418b",
      "lines": {
        "128": "    public ShortField(final int offset, final short value, final byte [] data)",
        "69": "",
        "70": "    public ShortField(final int offset)",
        "135": "    /**",
        "136": "     * get the ShortField's current value",
        "108": "",
        "109": "    public ShortField(final int offset, final byte [] data)",
        "157": "    /**",
        "146": "    /**",
        "147": "     * set the ShortField's current value",
        "158": "     * set the ShortField's current value and write it to a byte array",
        "54": "",
        "55": "public class ShortField",
        "61": "    /**",
        "62": "     * construct the ShortField with its offset into its containing",
        "127": ""
      },
      "id": 15642644,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 22,
      "location": "/libjava/testsuite/libjava.cni",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37936255/",
      "md5hash": "49720fc0c8dd994ae6dd8ceb249fb6d5",
      "lines": {
        "1": "class shortfieldbase",
        "2": "{",
        "5": "",
        "6": "public class shortfield extends shortfieldbase",
        "14": "  {",
        "15": "    shortfield f = new shortfield();"
      },
      "id": 37936255,
      "filename": "shortfield.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 22,
      "location": "/libjava/testsuite/libjava.cni",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46801884/",
      "md5hash": "49720fc0c8dd994ae6dd8ceb249fb6d5",
      "lines": {
        "1": "class shortfieldbase",
        "2": "{",
        "5": "",
        "6": "public class shortfield extends shortfieldbase",
        "14": "  {",
        "15": "    shortfield f = new shortfield();"
      },
      "id": 46801884,
      "filename": "shortfield.java"
    },
    {
      "repo": "https://bitbucket.org/luchsh/openjdk8-hotspot",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "openjdk8-hotspot",
      "url": "https://searchcode.com/codesearch/view/125202985/",
      "md5hash": "a1ba861e85d301df9e797fc41579060b",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ShortField(sun.jvm.hotspot.types.JShortField vmField, long startOffset) {",
        "38": "",
        "39": "  public ShortField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a short field simply provides access to the value.",
        "30": "public class ShortField extends Field {",
        "31": "  public ShortField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 125202985,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/hamishm/haiku-jdk-hotspot",
      "language": "Java",
      "linescount": 48,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "haiku-jdk-hotspot",
      "url": "https://searchcode.com/codesearch/view/127217448/",
      "md5hash": "a1ba861e85d301df9e797fc41579060b",
      "lines": {
        "32": "    super(id, offset, isVMField);",
        "34": "",
        "35": "  public ShortField(sun.jvm.hotspot.types.JShortField vmField, long startOffset) {",
        "38": "",
        "39": "  public ShortField(InstanceKlass holder, int fieldArrayIndex) {",
        "29": "// The class for a short field simply provides access to the value.",
        "30": "public class ShortField extends Field {",
        "31": "  public ShortField(FieldIdentifier id, long offset, boolean isVMField) {"
      },
      "id": 127217448,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/jaroslav/hotspot",
      "language": "Java",
      "linescount": 50,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/oops",
      "name": "hotspot",
      "url": "https://searchcode.com/codesearch/view/133432874/",
      "md5hash": "222697f13398f76ac93002240f608e7d",
      "lines": {
        "32": "  public ShortField(FieldIdentifier id, long offset, boolean isVMField) {",
        "33": "    super(id, offset, isVMField);",
        "35": "",
        "36": "  public ShortField(sun.jvm.hotspot.types.JShortField vmField, long startOffset) {",
        "39": "",
        "40": "  public ShortField(InstanceKlass holder, int fieldArrayIndex) {",
        "30": "// The class for a short field simply provides access to the value.",
        "31": "public class ShortField extends Field {"
      },
      "id": 133432874,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 22,
      "location": "/libjava/testsuite/libjava.cni",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127601955/",
      "md5hash": "49720fc0c8dd994ae6dd8ceb249fb6d5",
      "lines": {
        "1": "class shortfieldbase",
        "2": "{",
        "5": "",
        "6": "public class shortfield extends shortfieldbase",
        "14": "  {",
        "15": "    shortfield f = new shortfield();"
      },
      "id": 127601955,
      "filename": "shortfield.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 22,
      "location": "/libjava/testsuite/libjava.cni",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130235873/",
      "md5hash": "49720fc0c8dd994ae6dd8ceb249fb6d5",
      "lines": {
        "1": "class shortfieldbase",
        "2": "{",
        "5": "",
        "6": "public class shortfield extends shortfieldbase",
        "14": "  {",
        "15": "    shortfield f = new shortfield();"
      },
      "id": 130235873,
      "filename": "shortfield.java"
    },
    {
      "repo": "https://github.com/laco0416/AndroidBinding.git",
      "language": "Java",
      "linescount": 25,
      "location": "/Core/AndroidBinding/src/gueei/binding/cursor",
      "name": "AndroidBinding",
      "url": "https://searchcode.com/codesearch/view/69898499/",
      "md5hash": "bb82abf40e9c728b3f420a9f155fe234",
      "lines": {
        "4": "",
        "5": "public class ShortField extends CursorField<Short> {",
        "6": "",
        "7": "\tpublic ShortField(int columnIndex) {",
        "10": "\t",
        "11": "\tpublic ShortField(String columnName) {"
      },
      "id": 69898499,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/touwolf/bridje",
      "language": "Java",
      "linescount": 45,
      "location": "/apis/bridje-dm/src/main/java/com/touwolf/bridje/dm",
      "name": "bridje",
      "url": "https://searchcode.com/codesearch/view/92135637/",
      "md5hash": "61a0d8e3e511781427aa7f83017a8fa1",
      "lines": {
        "12": "@XmlAccessorType(XmlAccessType.FIELD)",
        "13": "public class ShortField extends AbstractNumericField"
      },
      "id": 92135637,
      "filename": "ShortField.java"
    },
    {
      "repo": "git://github.com/apache/lucene-solr.git",
      "language": "Java",
      "linescount": 102,
      "location": "/solr/core/src/java/org/apache/solr/schema",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/3019289/",
      "md5hash": "74a3d3ecdaf4897e62a26df3623993c8",
      "lines": {
        "19": "import org.apache.lucene.queries.function.ValueSource;",
        "49": " **/",
        "50": "public class ShortField extends PrimitiveFieldType {",
        "67": "    field.checkFieldCacheSource(qparser);",
        "20": "import org.apache.lucene.queries.function.valuesource.ShortFieldSource;",
        "68": "    return new ShortFieldSource(field.name);"
      },
      "id": 3019289,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://bitbucket.org/azinman/konbit",
      "language": "Java",
      "linescount": 88,
      "location": "/solr/src/java/org/apache/solr/schema",
      "name": "konbit",
      "url": "https://searchcode.com/codesearch/view/54928222/",
      "md5hash": "1e259f0b55ea247bb51742b627c5bc73",
      "lines": {
        "48": "",
        "49": "    return new ShortFieldSource(field.name);",
        "34": " **/",
        "35": "public class ShortField extends FieldType {",
        "24": "import org.apache.solr.search.function.ValueSource;",
        "25": "import org.apache.solr.search.function.ShortFieldSource;"
      },
      "id": 54928222,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://github.com/safrain/oPool.git",
      "language": "Java",
      "linescount": 16,
      "location": "/PulsarCraft/src/main/java/safrain/nodelet/structure/fieldsetter",
      "name": "oPool",
      "url": "https://searchcode.com/codesearch/view/67140374/",
      "md5hash": "22b1c397896e77b556c91a845a002704",
      "lines": {
        "2": "",
        "3": "public class ShortField extends AbstractValueField {"
      },
      "id": 67140374,
      "filename": "ShortField.java"
    },
    {
      "repo": "https://github.com/DerTeufel/android_libcore.git",
      "language": "Java",
      "linescount": 2158,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/82997100/",
      "md5hash": "e7795f1e2ae30f2e2f8ee4ae78b7c03f",
      "lines": {
        "517": "",
        "518": "            fieldName = \"shortField\";",
        "519": "            shortField = fieldClass.getDeclaredField(fieldName);",
        "520": "",
        "1294": "        try {",
        "175": "        try {",
        "176": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "152": "    static class A {",
        "1331": "        try {",
        "1332": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "182": "            assertTrue(\"Inherited Field returned false\", f.equals(x.getClass()",
        "183": "                    .getDeclaredField(\"shortField\")));",
        "184": "            assertTrue(\"Identical Field from different class returned true\", !f",
        "153": "        protected short shortField = Short.MAX_VALUE;",
        "1295": "            f = x.getClass().getDeclaredField(\"shortField\");"
      },
      "id": 82997100,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://github.com/ClarenceAu/kryo.git",
      "language": "Java",
      "linescount": 742,
      "location": "/test/com/esotericsoftware/kryo",
      "name": "kryo",
      "url": "https://searchcode.com/codesearch/view/71550005/",
      "md5hash": "b3ac1fcd54511479ae8d65e446b9e8a7",
      "lines": {
        "416": "\t\t\t\tif (other.ShortField != null) return false;",
        "417": "\t\t\t} else if (!ShortField.equals(other.ShortField)) return false;",
        "418": "\t\t\tif (StringField == null) {",
        "35": "\t\ttest.CharacterField = 'X';",
        "36": "\t\ttest.ShortField = -12345;",
        "101": "\t\ttest.charField = 1234;",
        "102": "\t\ttest.shortField = 12345;",
        "109": "\t\ttest.CharacterField = 123;",
        "110": "\t\ttest.ShortField = -12345;",
        "367": "\t\tpublic char charField;",
        "368": "\t\tpublic short shortField;",
        "440": "\t\t\tif (longField != other.longField) return false;",
        "441": "\t\t\tif (shortField != other.shortField) return false;",
        "376": "\t\tpublic Character CharacterField;",
        "377": "\t\tpublic Short ShortField;",
        "415": "\t\t\tif (ShortField == null) {"
      },
      "id": 71550005,
      "filename": "FieldSerializerTest.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 259,
      "location": "/tests/gdx-tests/src/com/badlogic/gdx/tests",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/116100416/",
      "md5hash": "a37db3fd2a69d0b0e64311dca0b4ac00",
      "lines": {
        "208": "\t\t\tif (stringField == null) {",
        "34": "\t\ttest.CharacterField = 'X';",
        "35": "\t\ttest.ShortField = -12345;",
        "164": "\t\tpublic Character CharacterField;",
        "165": "\t\tpublic Short ShortField;",
        "204": "\t\t\t} else if (!LongField.equals(other.LongField)) return false;",
        "205": "\t\t\tif (ShortField == null) {",
        "206": "\t\t\t\tif (other.ShortField != null) return false;",
        "207": "\t\t\t} else if (!ShortField.equals(other.ShortField)) return false;",
        "27": "\t\ttest.shortField = 12345;",
        "241": "\t\t\tif (longField != other.longField) return false;",
        "242": "\t\t\tif (shortField != other.shortField) return false;",
        "26": "\t\ttest.charField = 'Z';",
        "155": "\t\tpublic char charField;",
        "156": "\t\tpublic short shortField;"
      },
      "id": 116100416,
      "filename": "JsonTest.java"
    },
    {
      "repo": "https://github.com/LiviaH/lombok.git",
      "language": "Java",
      "linescount": 168,
      "location": "/parent/test/src/test/resources/transform/after-ecj",
      "name": "lombok",
      "url": "https://searchcode.com/codesearch/view/74562463/",
      "md5hash": "b2eee868d3048e4af35f36cb0fc54874",
      "lines": {
        "3": "  private final @lombok.Getter(lazy = true) java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Byte>> byteField = new java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Byte>>();",
        "4": "  private final @lombok.Getter(lazy = true) java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Short>> shortField = new java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicReference<java.lang.Short>>();",
        "47": "  }",
        "48": "  public @java.lang.SuppressWarnings(\"all\") short getShortField() {",
        "49": "    java.util.concurrent.atomic.AtomicReference<java.lang.Short> value = this.shortField.get();",
        "50": "    if ((value == null))",
        "51": "        {",
        "52": "          synchronized (this.shortField)",
        "53": "            {",
        "54": "              value = this.shortField.get();",
        "58": "                    value = new java.util.concurrent.atomic.AtomicReference<java.lang.Short>(actualValue);",
        "59": "                    this.shortField.set(value);"
      },
      "id": 74562463,
      "filename": "GetterLazyNative.java"
    },
    {
      "repo": "https://bitbucket.org/generalplus/android_libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/35460570/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "164": "        try {",
        "165": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "172": "                    .getDeclaredField(\"shortField\")));",
        "171": "            assertTrue(\"Inherited Field returned false\", f.equals(x.getClass()",
        "396": "",
        "173": "            assertTrue(\"Identical Field from different class returned true\", !f",
        "398": "            shortField = fieldClass.getDeclaredField(fieldName);",
        "397": "            fieldName = \"shortField\";",
        "147": "    static class A {",
        "148": "        protected short shortField = Short.MAX_VALUE;",
        "1173": "        try {",
        "1174": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "399": ""
      },
      "id": 35460570,
      "filename": "FieldTest.java"
    },
    {
      "repo": "https://bitbucket.org/tamacjp/android_libcore.git",
      "language": "Java",
      "linescount": 1869,
      "location": "/luni/src/test/java/tests/api/java/lang/reflect",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/37324009/",
      "md5hash": "dd2a8fbb7165f8651eb267439cd16617",
      "lines": {
        "513": "        char newTypes[] = new char[] { 'B', 'S', 'C', 'I', 'J', 'F', 'D', 'L' };",
        "514": "        Field newFields[] = { byteField, shortField, charField, intField,",
        "164": "        try {",
        "165": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "172": "                    .getDeclaredField(\"shortField\")));",
        "171": "            assertTrue(\"Inherited Field returned false\", f.equals(x.getClass()",
        "396": "",
        "173": "            assertTrue(\"Identical Field from different class returned true\", !f",
        "398": "            shortField = fieldClass.getDeclaredField(fieldName);",
        "397": "            fieldName = \"shortField\";",
        "147": "    static class A {",
        "148": "        protected short shortField = Short.MAX_VALUE;",
        "1173": "        try {",
        "1174": "            f = x.getClass().getDeclaredField(\"shortField\");",
        "399": ""
      },
      "id": 37324009,
      "filename": "FieldTest.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 187,
      "source": "Github",
      "id": 2
    },
    {
      "count": 166,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 13,
      "source": "Google Code",
      "id": 1
    }
  ]
}