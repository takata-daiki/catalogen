{
  "matchterm": "IPMT",
  "previouspage": null,
  "searchterm": "IPMT",
  "query": "IPMT",
  "language_filters": [
    {
      "count": 17,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 17,
  "results": [
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 2500,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456310/",
      "md5hash": "67a51ed00e7b0438ab0a0fa75f26792c",
      "lines": {
        "800": "        + \"interest rate.\")",
        "801": "    public static double iPmt(",
        "807": "    {",
        "808": "        return iPmt(rate, per, nPer, PV, fv, false);",
        "783": "",
        "784": "    @FunctionName(\"IPmt\")",
        "785": "    @Signature(\"IPmt(rate, per, nper, pv[, fv[, type]])\")",
        "786": "    @Description(",
        "789": "        + \"interest rate.\")",
        "790": "    public static double iPmt(double rate, double per, double nPer, double PV) {",
        "791": "        return iPmt(rate, per, nPer, PV, 0);",
        "792": "    }",
        "794": "",
        "795": "    @FunctionName(\"IPmt\")",
        "796": "    @Signature(\"IPmt(rate, per, nper, pv[, fv[, type]])\")",
        "797": "    @Description("
      },
      "id": 69456310,
      "filename": "Vba.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1397,
      "location": "/testsrc/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69449093/",
      "md5hash": "39d6493c70f41f9341c601162a933250",
      "lines": {
        "899": "",
        "900": "        // verify that pmt, ipmt, and ppmt add up",
        "901": "        double pmt = Vba.pmt(0.10, 30, 100000, 0, false);",
        "902": "        double ipmt = Vba.iPmt(0.10, 15, 30, 100000, 0, false);",
        "903": "        double ppmt = Vba.pPmt(0.10, 15, 30, 100000, 0, false);",
        "904": "        assertTrue(Math.abs(pmt - (ipmt + ppmt)) < 0.0000001);",
        "883": "",
        "884": "    public void testIPmt() {",
        "885": "        assertEquals(-10000.0, Vba.iPmt(0.10, 1, 30, 100000, 0, false));",
        "886": "        assertEquals(",
        "887": "            -2185.473324557822, Vba.iPmt(0.10, 15, 30, 100000, 0, false));",
        "888": "        assertEquals(",
        "889": "            -60.79248252633988, Vba.iPmt(0.10, 30, 30, 100000, 0, false));"
      },
      "id": 69449093,
      "filename": "VbaTest.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1397,
      "location": "/testsrc/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100409289/",
      "md5hash": "f6546f8bce8c16a0de1f0521b83a6154",
      "lines": {
        "899": "",
        "900": "        // verify that pmt, ipmt, and ppmt add up",
        "901": "        double pmt = Vba.pmt(0.10, 30, 100000, 0, false);",
        "902": "        double ipmt = Vba.iPmt(0.10, 15, 30, 100000, 0, false);",
        "903": "        double ppmt = Vba.pPmt(0.10, 15, 30, 100000, 0, false);",
        "904": "        assertTrue(Math.abs(pmt - (ipmt + ppmt)) < 0.0000001);",
        "883": "",
        "884": "    public void testIPmt() {",
        "885": "        assertEquals(-10000.0, Vba.iPmt(0.10, 1, 30, 100000, 0, false));",
        "886": "        assertEquals(",
        "887": "            -2185.473324557822, Vba.iPmt(0.10, 15, 30, 100000, 0, false));",
        "888": "        assertEquals(",
        "889": "            -60.79248252633988, Vba.iPmt(0.10, 30, 30, 100000, 0, false));"
      },
      "id": 100409289,
      "filename": "VbaTest.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 127,
      "location": "/org.boris.expr/java/test/org/boris/expr",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398266/",
      "md5hash": "cb4732cc95f7dc6e1eec169221790ab0",
      "lines": {
        "55": "",
        "56": "    public void testIPMT() throws Exception {",
        "57": "        IPMT i = new IPMT();",
        "58": "        fail(\"IPMT not implemented\");",
        "59": "    }",
        "14": "import org.boris.expr.function.excel.FV;",
        "15": "import org.boris.expr.function.excel.IPMT;"
      },
      "id": 105398266,
      "filename": "ExcelFinancialFunctionsTest.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1430,
      "location": "/zssapp/src/org/zkoss/zss/app/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969892/",
      "md5hash": "a07bf1b4287ec51f4c6c5c920d857dd5",
      "lines": {
        "112": "\t\t\t\t\t\"CUMIPMT\",",
        "113": "\t\t\t\t\t\"CUMIPMT(rate, nper, pv, start_period, end_period, type)\",",
        "114": "\t\t\t\t\t\"Returns the cumulative interest paid between two periods.\",",
        "183": "\t\tfinanceAry.add(new FormulaMetaInfo(FINANCIAL,",
        "184": "\t\t\t\t\t\"IPMT\",",
        "185": "\t\t\t\t\t\"IPMT(rate, per, nper, pv, fv, type)\",",
        "186": "\t\t\t\t\t\"Returns the interest payment for a given period for an investment, based on periodic, constant payments and a constant interest rate.\",",
        "111": "\t\tfinanceAry.add(new FormulaMetaInfo(FINANCIAL,"
      },
      "id": 3969892,
      "filename": "Formulas.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260581/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "465": "",
        "466": "  public static final Function IPMT =",
        "467": "    new Function(0xa7, \"ipmt\", 0xff);",
        "468": "  public static final Function PPMT ="
      },
      "id": 43260581,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124968/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "773": "\t\t\t{\"FV\", String.valueOf(xlfFv), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "774": "\t\t\t{\"IPMT\", String.valueOf(xlfIpmt), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "775": "\t\t\t{\"CUMIPMT\", String.valueOf(xlfCumIPmt), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "776": "\t\t\t{\"CUMPRINC\", String.valueOf(xlfCumPrinc), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "412": "\tpublic static final int xlfCoupDays= 371;",
        "1258": "\t\t\tcase xlfCoupDaysNC: return \"COUPDAYSNC(\";",
        "1259": "\t\t\tcase xlfCumIPmt: return \"CUMIPMT(\";",
        "1071": "\t\t\tcase xlfFiles: return \"FILES(\";",
        "1072": "\t\t\tcase xlfIpmt: return \"IPMT(\";",
        "413": "\tpublic static final int xlfCumIPmt= 372;",
        "220": "\tpublic static final int xlfFiles    = 166;",
        "221": "\tpublic static final int xlfIpmt     = 167;"
      },
      "id": 47124968,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 3453,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124971/",
      "md5hash": "3c788f981451f0037f54e553a922448f",
      "lines": {
        "1572": "\t\tif (DEBUG)",
        "932": "\t\tif (DEBUG)",
        "933": "\t\t\tdebugOperands(operands, \"CUMIPMT\");",
        "1545": "",
        "973": "\t\t\tLogger.logInfo(\"Result from calcCumIPmt= \" + result);",
        "972": "\t\tif (DEBUG)",
        "909": "\t/**",
        "942": "",
        "943": "\t\t// CumIPMT= pmt*period - FV for start-1 - pmt - FV for end period and",
        "912": "\t * require Rate is the interest rate. Nper is the total number of payment",
        "910": "\t * CUMIPMT Returns the cumulative interest paid between two periods",
        "920": "\t */",
        "921": "\tprotected static Ptg calcCumIPmt(Ptg[] operands) {",
        "911": "\t * CUMIPMT(rate,nper,pv,start_period,end_period,type) All parameters are",
        "1546": "\t\t// IPMT= pmt- (fv(b) - fv(a) i.e. = payement less the principal balance",
        "1573": "\t\t\tLogger.logInfo(\"Result from calcIPMT= \" + result);"
      },
      "id": 47124971,
      "filename": "FinancialCalculator.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201109/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "465": "",
        "466": "  public static final Function IPMT =",
        "467": "    new Function(0xa7, \"ipmt\", 0xff);",
        "468": "  public static final Function PPMT ="
      },
      "id": 49201109,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976592/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "773": "\t\t\t{\"FV\", String.valueOf(xlfFv), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "774": "\t\t\t{\"IPMT\", String.valueOf(xlfIpmt), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "775": "\t\t\t{\"CUMIPMT\", String.valueOf(xlfCumIPmt), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "776": "\t\t\t{\"CUMPRINC\", String.valueOf(xlfCumPrinc), String.valueOf(FTYPE_PTGFUNCVAR_ADDIN)},",
        "412": "\tpublic static final int xlfCoupDays= 371;",
        "1258": "\t\t\tcase xlfCoupDaysNC: return \"COUPDAYSNC(\";",
        "1259": "\t\t\tcase xlfCumIPmt: return \"CUMIPMT(\";",
        "1071": "\t\t\tcase xlfFiles: return \"FILES(\";",
        "1072": "\t\t\tcase xlfIpmt: return \"IPMT(\";",
        "413": "\tpublic static final int xlfCumIPmt= 372;",
        "220": "\tpublic static final int xlfFiles    = 166;",
        "221": "\tpublic static final int xlfIpmt     = 167;"
      },
      "id": 50976592,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 3453,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976595/",
      "md5hash": "3c788f981451f0037f54e553a922448f",
      "lines": {
        "1572": "\t\tif (DEBUG)",
        "932": "\t\tif (DEBUG)",
        "933": "\t\t\tdebugOperands(operands, \"CUMIPMT\");",
        "1545": "",
        "973": "\t\t\tLogger.logInfo(\"Result from calcCumIPmt= \" + result);",
        "972": "\t\tif (DEBUG)",
        "909": "\t/**",
        "942": "",
        "943": "\t\t// CumIPMT= pmt*period - FV for start-1 - pmt - FV for end period and",
        "912": "\t * require Rate is the interest rate. Nper is the total number of payment",
        "910": "\t * CUMIPMT Returns the cumulative interest paid between two periods",
        "920": "\t */",
        "921": "\tprotected static Ptg calcCumIPmt(Ptg[] operands) {",
        "911": "\t * CUMIPMT(rate,nper,pv,start_period,end_period,type) All parameters are",
        "1546": "\t\t// IPMT= pmt- (fv(b) - fv(a) i.e. = payement less the principal balance",
        "1573": "\t\t\tLogger.logInfo(\"Result from calcIPMT= \" + result);"
      },
      "id": 50976595,
      "filename": "FinancialCalculator.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456290/",
      "md5hash": "d000de4330f4246f9ea598129c490c5c",
      "lines": {
        "234": "",
        "235": "    // Todo: CumIPmt Returns the cumulative interest paid on a loan between",
        "549": "",
        "550": "    // Todo: Ipmt Returns the interest payment for a given period for an"
      },
      "id": 69456290,
      "filename": "Excel.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100412065/",
      "md5hash": "97269efda67b1f67b152b3400030b364",
      "lines": {
        "234": "",
        "235": "    // Todo: CumIPmt Returns the cumulative interest paid on a loan between",
        "549": "",
        "550": "    // Todo: Ipmt Returns the interest payment for a given period for an"
      },
      "id": 100412065,
      "filename": "Excel.java"
    },
    {
      "repo": "http://pentahoanalysistool.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 233,
      "location": "/pat/src/main/java/org/pentaho/pat/client/ui/widgets",
      "name": "pentahoanalysistool",
      "url": "https://searchcode.com/codesearch/view/2003837/",
      "md5hash": "27343e1cfc8a4083999aad5efe67523f",
      "lines": {
        "56": "            \"(FormatPercent)|(Generate)|(Head)|(Hex)|(Hierarchize)|(Hierarchy)|(Hour)|(IIf)|(IPmt)|(IRR)|(IS)|(EMPTY)|\" //$NON-NLS-1$",
        "55": "            +"
      },
      "id": 2003837,
      "filename": "MDXRichTextArea.java"
    },
    {
      "repo": "http://unlpbot.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 152,
      "location": "/sharking/src/examples/mobile",
      "name": "unlpbot",
      "url": "https://searchcode.com/codesearch/view/13123137/",
      "md5hash": "11d6749f06474aaebc685adc86cc80ea",
      "lines": {
        "38": "- (move <destination>)  to move the Agent to another container. Example (move Front-End) or",
        "39": "(move (:location (:name Container-1) (:transport-protocol JADE-IPMT) (:transport-address IOR:0000...) ))"
      },
      "id": 13123137,
      "filename": "ServeIncomingMessagesBehaviour.java"
    },
    {
      "repo": "https://bitbucket.org/nevo/jade.git",
      "language": "Java",
      "linescount": 148,
      "location": "/src/examples/mobile",
      "name": "jade",
      "url": "https://searchcode.com/codesearch/view/36711928/",
      "md5hash": "9a23a095b1616306ad2edf39d526575b",
      "lines": {
        "40": "(move (:location (:name Container-1) (:transport-protocol JADE-IPMT) (:transport-address IOR:0000...) ))",
        "39": "- (move <destination>)  to move the Agent to another container. Example (move Front-End) or"
      },
      "id": 36711928,
      "filename": "ServeIncomingMessagesBehaviour.java"
    },
    {
      "repo": "https://bitbucket.org/novelli/unlpbot",
      "language": "Java",
      "linescount": 152,
      "location": "/trunk/sharking/src/examples/mobile",
      "name": "unlpbot",
      "url": "https://searchcode.com/codesearch/view/126154976/",
      "md5hash": "11d6749f06474aaebc685adc86cc80ea",
      "lines": {
        "38": "- (move <destination>)  to move the Agent to another container. Example (move Front-End) or",
        "39": "(move (:location (:name Container-1) (:transport-protocol JADE-IPMT) (:transport-address IOR:0000...) ))"
      },
      "id": 126154976,
      "filename": "ServeIncomingMessagesBehaviour.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 8,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 6,
      "source": "Github",
      "id": 2
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    }
  ]
}