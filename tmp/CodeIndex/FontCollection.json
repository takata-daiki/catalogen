{
  "matchterm": "FontCollection",
  "previouspage": null,
  "searchterm": "FontCollection",
  "query": "FontCollection",
  "language_filters": [
    {
      "count": 85,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 85,
  "results": [
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 288,
      "location": "/src/main/java/org/docx4j/dml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17641987/",
      "md5hash": "cef66693e32828db7403af3c2ac2d692",
      "lines": {
        "33": "/**",
        "34": " * <p>Java class for CT_FontCollection complex type.",
        "177": "     */",
        "38": " * <pre>",
        "65": "@XmlAccessorType(XmlAccessType.FIELD)",
        "72": "})",
        "73": "public class FontCollection {",
        "39": " * &lt;complexType name=\"CT_FontCollection\">",
        "66": "@XmlType(name = \"CT_FontCollection\", propOrder = {",
        "174": "     * {@link FontCollection.Font }",
        "173": "     * Objects of the following type(s) are allowed in the list",
        "80": "    protected TextFont cs;",
        "81": "    protected List<FontCollection.Font> font;",
        "178": "    public List<FontCollection.Font> getFont() {",
        "179": "        if (font == null) {"
      },
      "id": 17641987,
      "filename": "FontCollection.java"
    },
    {
      "repo": "https://bitbucket.org/aramk/mechanix.git",
      "language": "Java",
      "linescount": 26,
      "location": "/src/au/edu/unimelb/csse/smd/mechanix/client/text",
      "name": "mechanix",
      "url": "https://searchcode.com/codesearch/view/36442301/",
      "md5hash": "d47dfee19814f01978c55345e2fb9fa8",
      "lines": {
        "2": "",
        "3": "public class FontCollection {",
        "6": "",
        "7": "\tprivate FontCollection() {"
      },
      "id": 36442301,
      "filename": "FontCollection.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 40,
      "location": "/src/java/org/apache/fop/fonts",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128944773/",
      "md5hash": "2552db6fe484fd6f8317c32c385cbf56",
      "lines": {
        "17": "",
        "18": "/* $Id: FontCollection.java 721430 2008-11-28 11:13:12Z acumiskey $ */",
        "26": "public interface FontCollection {",
        "25": " */"
      },
      "id": 128944773,
      "filename": "FontCollection.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/patch-for-sqs-translator",
      "language": "Java",
      "linescount": 40,
      "location": "/src/java/org/apache/fop/fonts",
      "name": "patch-for-sqs-translator",
      "url": "https://searchcode.com/codesearch/view/128947878/",
      "md5hash": "2552db6fe484fd6f8317c32c385cbf56",
      "lines": {
        "17": "",
        "18": "/* $Id: FontCollection.java 721430 2008-11-28 11:13:12Z acumiskey $ */",
        "26": "public interface FontCollection {",
        "25": " */"
      },
      "id": 128947878,
      "filename": "FontCollection.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 46,
      "location": "/src/main/java/org/docx4j/fonts/fop/fonts",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17643009/",
      "md5hash": "53887141209a0194e19fce8e48774ef9",
      "lines": {
        "24": "/* $Id: FontCollection.java 721430 2008-11-28 11:13:12Z acumiskey $ */",
        "32": "public interface FontCollection {",
        "31": " */",
        "23": ""
      },
      "id": 17643009,
      "filename": "FontCollection.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 973,
      "location": "/Eclipse SWT/win32/org/eclipse/swt/graphics",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823351/",
      "md5hash": "8de4e1ca7e2d4a2c8f7fb05ac01c2513",
      "lines": {
        "64": "\tint /*long*/ fontCollection;",
        "192": "\t\t\tif (loadedFonts != null) {",
        "194": "\t\t\t\tif (fontCollection == 0) SWT.error(SWT.ERROR_NO_HANDLES);",
        "195": "\t\t\t\tfor (int i = 0; i < loadedFonts.length; i++) {",
        "837": "\t\t\t\tpath.getChars(0, length, buffer, 0);",
        "832": "\t\t\t\t\tfontCollection = Gdip.PrivateFontCollection_new();",
        "193": "\t\t\t\tfontCollection = Gdip.PrivateFontCollection_new();",
        "200": "\t\t\t\t\tpath.getChars(0, length, buffer, 0);",
        "201": "\t\t\t\t\tGdip.PrivateFontCollection_AddFontFile(fontCollection, buffer);",
        "834": "\t\t\t\t}",
        "942": "\t\t\tGdip.PrivateFontCollection_delete(fontCollection);",
        "941": "\t\tif (fontCollection != 0) {",
        "838": "\t\t\t\tGdip.PrivateFontCollection_AddFontFile(fontCollection, buffer);",
        "943": "\t\t}",
        "63": "\tint /*long*/ [] gdipToken;",
        "833": "\t\t\t\t\tif (fontCollection == 0) SWT.error(SWT.ERROR_NO_HANDLES);",
        "831": "\t\t\t\tif (fontCollection == 0) {"
      },
      "id": 109823351,
      "filename": "Device.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 103,
      "location": "/fop/src/main/java/org/apache/fop/render/bitmap",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96992320/",
      "md5hash": "13a51ff03fed02618ae9f5cf576897e2",
      "lines": {
        "96": "        final Java2DFontMetrics java2DFontMetrics = new Java2DFontMetrics();",
        "33": "import org.apache.fop.render.intermediate.IFDocumentHandler;",
        "34": "import org.apache.fop.render.java2d.Base14FontCollection;",
        "35": "import org.apache.fop.render.java2d.ConfiguredFontCollection;",
        "36": "import org.apache.fop.render.java2d.InstalledFontCollection;",
        "37": "import org.apache.fop.render.java2d.Java2DFontMetrics;",
        "100": "        return fontCollection;",
        "97": "        final List<FontCollection> fontCollection = new ArrayList<FontCollection>();",
        "98": "        fontCollection.add(new Base14FontCollection(java2DFontMetrics));",
        "99": "        fontCollection.add(new InstalledFontCollection(java2DFontMetrics));",
        "88": "    @Override",
        "89": "    protected FontCollection createCollectionFromFontList(InternalResourceResolver resourceResolver,",
        "90": "            List<EmbedFontInfo> fontList) {",
        "29": "import org.apache.fop.fonts.EmbedFontInfo;",
        "30": "import org.apache.fop.fonts.FontCollection;"
      },
      "id": 96992320,
      "filename": "BitmapRendererConfigurator.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 576,
      "location": "/test/subjects/JHD458target/src/org/jhotdraw/gui/fontchooser",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136063764/",
      "md5hash": "16ae12344d0388f9efed35ae9d719761",
      "lines": {
        "469": "                new FontCollectionNode(labels.getString(\"FontCollection.symbols\"), collectFamiliesNamed(families,",
        "355": "        root.add(",
        "356": "                new FontCollectionNode(labels.getString(\"FontCollection.monospaced\"), collectFamiliesNamed(families,",
        "202": "        root.add(",
        "203": "                new FontCollectionNode(labels.getString(\"FontCollection.sansSerif\"), collectFamiliesNamed(families,",
        "492": "        // (except the collection AllFonts).",
        "493": "        FontCollectionNode others = new FontCollectionNode(labels.getString(\"FontCollection.other\"));",
        "95": "                new FontCollectionNode(labels.getString(\"FontCollection.web\"), collectFamiliesNamed(families,",
        "468": "        root.add(",
        "94": "        root.add(",
        "90": "",
        "91": "        root.add(new FontCollectionNode(labels.getString(\"FontCollection.allFonts\"), (ArrayList<FontFamilyNode>) families.clone()));",
        "540": "",
        "541": "        if (result && (node instanceof FontCollectionNode)) {",
        "286": "        root.add(",
        "287": "                new FontCollectionNode(labels.getString(\"FontCollection.script\"), collectFamiliesNamed(families,"
      },
      "id": 136063764,
      "filename": "DefaultFontChooserModel.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 575,
      "location": "/test/subjects/JHD596source/src/org/jhotdraw/gui/fontchooser",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066884/",
      "md5hash": "c4475a0afe38774a207148bdd4b31272",
      "lines": {
        "354": "        root.add(",
        "355": "                new FontCollectionNode(labels.getString(\"FontCollection.monospaced\"), collectFamiliesNamed(families,",
        "201": "        root.add(",
        "202": "                new FontCollectionNode(labels.getString(\"FontCollection.sansSerif\"), collectFamiliesNamed(families,",
        "491": "        // (except the collection AllFonts).",
        "492": "        FontCollectionNode others = new FontCollectionNode(labels.getString(\"FontCollection.other\"));",
        "285": "        root.add(",
        "467": "        root.add(",
        "468": "                new FontCollectionNode(labels.getString(\"FontCollection.symbols\"), collectFamiliesNamed(families,",
        "94": "                new FontCollectionNode(labels.getString(\"FontCollection.web\"), collectFamiliesNamed(families,",
        "89": "",
        "90": "        root.add(new FontCollectionNode(labels.getString(\"FontCollection.allFonts\"), (ArrayList<FontFamilyNode>) families.clone()));",
        "539": "",
        "540": "        if (result && (node instanceof FontCollectionNode)) {",
        "93": "        root.add(",
        "286": "                new FontCollectionNode(labels.getString(\"FontCollection.script\"), collectFamiliesNamed(families,"
      },
      "id": 136066884,
      "filename": "DefaultFontChooserModel.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 575,
      "location": "/test/subjects/JHD596target/src/org/jhotdraw/gui/fontchooser",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136067860/",
      "md5hash": "c4475a0afe38774a207148bdd4b31272",
      "lines": {
        "354": "        root.add(",
        "355": "                new FontCollectionNode(labels.getString(\"FontCollection.monospaced\"), collectFamiliesNamed(families,",
        "201": "        root.add(",
        "202": "                new FontCollectionNode(labels.getString(\"FontCollection.sansSerif\"), collectFamiliesNamed(families,",
        "491": "        // (except the collection AllFonts).",
        "492": "        FontCollectionNode others = new FontCollectionNode(labels.getString(\"FontCollection.other\"));",
        "285": "        root.add(",
        "467": "        root.add(",
        "468": "                new FontCollectionNode(labels.getString(\"FontCollection.symbols\"), collectFamiliesNamed(families,",
        "94": "                new FontCollectionNode(labels.getString(\"FontCollection.web\"), collectFamiliesNamed(families,",
        "89": "",
        "90": "        root.add(new FontCollectionNode(labels.getString(\"FontCollection.allFonts\"), (ArrayList<FontFamilyNode>) families.clone()));",
        "539": "",
        "540": "        if (result && (node instanceof FontCollectionNode)) {",
        "93": "        root.add(",
        "286": "                new FontCollectionNode(labels.getString(\"FontCollection.script\"), collectFamiliesNamed(families,"
      },
      "id": 136067860,
      "filename": "DefaultFontChooserModel.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 576,
      "location": "/test/subjects/JHD458source/src/org/jhotdraw/gui/fontchooser",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136068721/",
      "md5hash": "16ae12344d0388f9efed35ae9d719761",
      "lines": {
        "469": "                new FontCollectionNode(labels.getString(\"FontCollection.symbols\"), collectFamiliesNamed(families,",
        "355": "        root.add(",
        "356": "                new FontCollectionNode(labels.getString(\"FontCollection.monospaced\"), collectFamiliesNamed(families,",
        "202": "        root.add(",
        "203": "                new FontCollectionNode(labels.getString(\"FontCollection.sansSerif\"), collectFamiliesNamed(families,",
        "492": "        // (except the collection AllFonts).",
        "493": "        FontCollectionNode others = new FontCollectionNode(labels.getString(\"FontCollection.other\"));",
        "95": "                new FontCollectionNode(labels.getString(\"FontCollection.web\"), collectFamiliesNamed(families,",
        "468": "        root.add(",
        "94": "        root.add(",
        "90": "",
        "91": "        root.add(new FontCollectionNode(labels.getString(\"FontCollection.allFonts\"), (ArrayList<FontFamilyNode>) families.clone()));",
        "540": "",
        "541": "        if (result && (node instanceof FontCollectionNode)) {",
        "286": "        root.add(",
        "287": "                new FontCollectionNode(labels.getString(\"FontCollection.script\"), collectFamiliesNamed(families,"
      },
      "id": 136068721,
      "filename": "DefaultFontChooserModel.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 1204,
      "location": "/Eclipse SWT PI/win32/org/eclipse/swt/internal/gdip",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109828548/",
      "md5hash": "ddd6706023c13abeaec3164ff90a4ad6",
      "lines": {
        "256": " */",
        "225": "/** @method flags=new */",
        "226": "public static final native int /*long*/ PrivateFontCollection_new();",
        "227": "/** @method flags=delete */",
        "228": "public static final native void PrivateFontCollection_delete(int /*long*/ collection);",
        "293": " * @param fontCollection cast=(const FontCollection *)",
        "230": " * @method flags=cpp",
        "231": " * @param collection cast=(PrivateFontCollection *)",
        "233": " */",
        "234": "public static final native int PrivateFontCollection_AddFontFile(int /*long*/ collection, char[] filename);",
        "295": "public static final native int /*long*/ FontFamily_new(char[] name, int /*long*/ fontCollection);",
        "257": "public static final native int /*long*/ Font_new(char[] familyName, float emSize, int style, int unit, int /*long*/ fontCollection);",
        "294": " */",
        "292": " * @param name cast=(const WCHAR *)",
        "254": " * @param unit cast=(Unit)",
        "255": " * @param fontCollection cast=(const FontCollection *)"
      },
      "id": 109828548,
      "filename": "Gdip.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 180,
      "location": "/fop/src/main/java/org/apache/fop/render",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96990534/",
      "md5hash": "2ea5804e3adff9090f47ab8884e16380",
      "lines": {
        "128": "        fontManager.setup(fontInfo, fontCollections.toArray(new FontCollection[fontCollections.size()]));",
        "129": "    }",
        "130": "",
        "131": "    protected abstract List<FontCollection> getDefaultFontCollection();",
        "161": "        return new CustomFontCollection(resolver, fontList,",
        "160": "            List<EmbedFontInfo> fontList) {",
        "140": "     */",
        "141": "    protected FontCollection getCustomFontCollection(InternalResourceResolver resolver, String mimeType)",
        "174": "            protected List<FontCollection> getDefaultFontCollection() {",
        "173": "            @Override",
        "126": "        List<FontCollection> fontCollections = getDefaultFontCollection();",
        "127": "        fontCollections.add(getCustomFontCollection(fontManager.getResourceResolver(), mimeType));",
        "125": "        FontManager fontManager = userAgent.getFontManager();",
        "30": "import org.apache.fop.fonts.EmbedFontInfo;",
        "31": "import org.apache.fop.fonts.FontCollection;"
      },
      "id": 96990534,
      "filename": "PrintRendererConfigurator.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 599,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/gui/fontchooser",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884188/",
      "md5hash": "2e9ef27ccff497194c6034f5f6a0c8d9",
      "lines": {
        "514": "        for (int i = 1, n = root.getChildCount(); i < n; i++) {",
        "291": "        root.add(",
        "292": "                new FontCollectionNode(labels.getString(\"FontCollection.script\"), collectFamiliesNamed(families,",
        "202": "        root.add(",
        "203": "                new FontCollectionNode(labels.getString(\"FontCollection.sansSerif\"), collectFamiliesNamed(families,",
        "396": "                new FontCollectionNode(labels.getString(\"FontCollection.decorative\"), collectFamiliesNamed(families,",
        "557": "",
        "558": "        if (result && (node instanceof FontCollectionNode)) {",
        "559": "            result &= ((FontCollectionNode) node).isEditable();",
        "560": "        }",
        "515": "            FontCollectionNode fcn = (FontCollectionNode) root.getChildAt(i);",
        "86": "",
        "87": "        root.add(new FontCollectionNode(labels.getString(\"FontCollection.allFonts\"), (ArrayList<FontFamilyNode>) families.clone()));",
        "90": "        root.add(",
        "91": "                new FontCollectionNode(labels.getString(\"FontCollection.web\"), collectFamiliesNamed(families,",
        "395": "        root.add("
      },
      "id": 2884188,
      "filename": "DefaultFontChooserModel.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 287,
      "location": "/src/main/java/org/docx4j/dml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642115/",
      "md5hash": "07331dde9ce39da3887dd5736239f62e",
      "lines": {
        "160": "     *         &lt;element name=\"majorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "161": "     *         &lt;element name=\"minorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "162": "     *         &lt;element name=\"extLst\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_OfficeArtExtensionList\" minOccurs=\"0\"/>",
        "195": "         */",
        "196": "        public FontCollection getMajorFont() {",
        "193": "         *     {@link FontCollection }",
        "192": "         *     possible object is",
        "46": " *                 &lt;sequence>",
        "47": " *                   &lt;element name=\"majorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "48": " *                   &lt;element name=\"minorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "49": " *                   &lt;element name=\"extLst\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_OfficeArtExtensionList\" minOccurs=\"0\"/>",
        "180": "        @XmlElement(required = true)",
        "181": "        protected FontCollection majorFont;",
        "182": "        @XmlElement(required = true)",
        "183": "        protected FontCollection minorFont;",
        "159": "     *       &lt;sequence>"
      },
      "id": 17642115,
      "filename": "CTBaseStylesOverride.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 317,
      "location": "/src/main/java/org/docx4j/dml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642191/",
      "md5hash": "5a47b80d63876833cfa44c6656480499",
      "lines": {
        "192": "     *         &lt;element name=\"extLst\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_OfficeArtExtensionList\" minOccurs=\"0\"/>",
        "258": "         *     allowed object is",
        "259": "         *     {@link FontCollection }",
        "261": "         */",
        "262": "        public void setMinorFont(FontCollection value) {",
        "46": " *                 &lt;sequence>",
        "47": " *                   &lt;element name=\"majorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "48": " *                   &lt;element name=\"minorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "49": " *                   &lt;element name=\"extLst\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_OfficeArtExtensionList\" minOccurs=\"0\"/>",
        "210": "        @XmlElement(required = true)",
        "211": "        protected FontCollection majorFont;",
        "212": "        @XmlElement(required = true)",
        "189": "     *       &lt;sequence>",
        "190": "     *         &lt;element name=\"majorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>",
        "191": "     *         &lt;element name=\"minorFont\" type=\"{http://schemas.openxmlformats.org/drawingml/2006/main}CT_FontCollection\"/>"
      },
      "id": 17642191,
      "filename": "BaseStyles.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 49,
      "location": "/fop/src/main/java/org/apache/fop/render",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96990583/",
      "md5hash": "2cf52826e58df780c2faeb0dc71adfa6",
      "lines": {
        "40": "",
        "41": "    protected List<FontCollection> getDefaultFontCollection() {",
        "42": "        FontManager fontManager = userAgent.getFontManager();",
        "43": "        List<FontCollection> fontCollection = new ArrayList<FontCollection>();",
        "44": "        fontCollection.add(new Base14FontCollection(fontManager.isBase14KerningEnabled()));",
        "45": "        return fontCollection;",
        "46": "    }",
        "25": "import org.apache.fop.apps.FOUserAgent;",
        "26": "import org.apache.fop.fonts.FontCollection;",
        "27": "import org.apache.fop.fonts.FontManager;",
        "28": "import org.apache.fop.fonts.base14.Base14FontCollection;"
      },
      "id": 96990583,
      "filename": "DefaultRendererConfigurator.java"
    },
    {
      "repo": "https://github.com/minstrelsy/xdocreport.git",
      "language": "Java",
      "linescount": 211,
      "location": "/thirdparties-extension/org.apache.poi.xwpf.converter.core/src/main/java/org/apache/poi/xwpf/converter/core/styles/run",
      "name": "xdocreport",
      "url": "https://searchcode.com/codesearch/view/96672974/",
      "md5hash": "dd9097845135f862b090b491ca14e7ed",
      "lines": {
        "112": "",
        "113": "    private CTFontCollection getFontCollection( ThemeDocument themeDocument, Enum asciiTheme )",
        "85": "                    {",
        "86": "                        CTFontCollection fontCollection = getFontCollection( themeDocument, asciiTheme );",
        "87": "                        if ( fontCollection != null && fontCollection.getLatin() != null )",
        "88": "                        {",
        "89": "                            return fontCollection.getLatin().getTypeface();",
        "29": "import org.apache.poi.xwpf.converter.core.styles.XWPFStylesDocument;",
        "30": "import org.openxmlformats.schemas.drawingml.x2006.main.CTFontCollection;"
      },
      "id": 96672974,
      "filename": "RunFontFamilyValueProvider.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1082,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394959/",
      "md5hash": "5d80afff23c354813b0c27bde8e947ac",
      "lines": {
        "901": "\t\tPPFont font = null;",
        "902": "\t\tFontCollection fonts = getDocumentRecord().getEnvironment().getFontCollection();",
        "526": "\t */",
        "527": "\tprotected FontCollection getFontCollection() {",
        "80": "\tprivate FontCollection _fonts;",
        "882": "\tpublic int addFont(PPFont font) {",
        "883": "\t\tFontCollection fonts = getDocumentRecord().getEnvironment().getFontCollection();",
        "921": "\tpublic int getNumberOfFonts() {",
        "922": "\t\treturn getDocumentRecord().getEnvironment().getFontCollection().getNumberOfFonts();",
        "79": "\tprivate Notes[] _notes;",
        "220": "\t\t\t\t\t_documentRecord = (Document) _mostRecentCoreRecords[i];",
        "221": "\t\t\t\t\t_fonts = _documentRecord.getEnvironment().getFontCollection();"
      },
      "id": 97394959,
      "filename": "SlideShow.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 4978,
      "location": "/Eclipse SWT/win32/org/eclipse/swt/graphics",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823332/",
      "md5hash": "0a2b34e469fd27f1281b88134eb79871",
      "lines": {
        "580": "\t\t\tfamily = Gdip.FontFamily_new(buffer, fontCollection);",
        "306": "\t\t\tint /*long*/[] hFont = new int /*long*/[1];",
        "547": "}",
        "548": "static int /*long*/ createGdipFont(int /*long*/ hDC, int /*long*/ hFont, int /*long*/ graphics, int /*long*/ fontCollection, int /*long*/ [] outFamily, int /*long*/[] outFont) {",
        "581": "\t\t\tif (!Gdip.FontFamily_IsAvailable(family)) {",
        "307": "\t\t\tint /*long*/ gdipFont = createGdipFont(handle, font.handle, gdipGraphics, device.fontCollection, null, hFont);",
        "579": "\t\tif (fontCollection != 0) {",
        "578": "\t\tname.getChars(0, name.length(), buffer, 0);"
      },
      "id": 109823332,
      "filename": "GC.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 51,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 32,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2,
      "source": "Google Code",
      "id": 1
    }
  ]
}