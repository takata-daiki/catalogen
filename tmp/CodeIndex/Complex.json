{
  "matchterm": "Complex",
  "previouspage": null,
  "searchterm": "Complex",
  "query": "Complex",
  "language_filters": [
    {
      "count": 42961,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 42955,
  "results": [
    {
      "repo": "https://github.com/bioclipse/org.openscience.cdk.git",
      "language": "Java",
      "linescount": 142,
      "location": "/plugins/org.openscience.cdk.qm/src/org/openscience/cdk/math",
      "name": "org.openscience.cdk",
      "url": "https://searchcode.com/codesearch/view/111484500/",
      "md5hash": "2c896e146367cc43f7093fafc7b1758a",
      "lines": {
        "32": " */ ",
        "1": "/* Complex.java",
        "2": " * ",
        "33": "public class Complex",
        "40": "  /**",
        "41": "   * Creates a complex number",
        "45": "   */",
        "46": "  public Complex(double real, double imag)",
        "61": "  /**",
        "52": "  /**",
        "53": "   * Creates a copy of a complex object",
        "54": "   */",
        "55": "  public Complex(Complex c)",
        "28": "/**",
        "29": " * This class handles complex values.",
        "62": "   * Sets the real part of this complex value"
      },
      "id": 111484500,
      "filename": "Complex.java"
    },
    {
      "repo": "http://j-sim.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 187,
      "location": "/stable/src/drcl/util/scalar",
      "name": "j-sim",
      "url": "https://searchcode.com/codesearch/view/13451145/",
      "md5hash": "8f40afb5598a42a37346bd4128975ac5",
      "lines": {
        "32": "  * This class implements complex numbers. It provides basic operations",
        "1": "// @(#)Complex.java   7/2003",
        "2": "// Copyright (c) 1998-2003, Distributed Real-time Computing Lab (DRCL) ",
        "37": "",
        "38": "public class Complex {",
        "42": "  /**",
        "43": "    * Constructs a Complex 0.",
        "44": "    */",
        "45": "    public Complex(){",
        "49": "  /** ",
        "50": "    * Constructs a Complex re + i * im.",
        "51": "    */",
        "52": "    public Complex(double re, double im){",
        "58": "    */",
        "59": "    public Complex(Complex z){",
        "31": " /**"
      },
      "id": 13451145,
      "filename": "Complex.java"
    },
    {
      "repo": "http://jjil.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 283,
      "location": "/jjil/src/jjil/core",
      "name": "jjil",
      "url": "https://searchcode.com/codesearch/view/3466598/",
      "md5hash": "60bed1c153cfb21ee1fa895c04c88c57",
      "lines": {
        "32": " * A simple implementation of complex numbers for use in FFT, etc.",
        "1": "/*",
        "2": " * Complex.java",
        "3": " *   Implementation of complex numbers, for use in FFT etc.",
        "4": " *   This uses integers to store the real and imaginary components.",
        "51": "     */",
        "42": "     */",
        "43": "    public Complex() {",
        "34": " */",
        "49": "     * Copy constructor.",
        "50": "     * @param cx the complex number to copy.",
        "35": "public class Complex {",
        "52": "    public Complex(Complex cx) {",
        "57": "    /**",
        "58": "     * Creates a new instance of Complex from real and imaginary arguments.",
        "31": "/**"
      },
      "id": 3466598,
      "filename": "Complex.java"
    },
    {
      "repo": "https://code.google.com/p/abcl-dynamic-install/",
      "language": "Java",
      "linescount": 356,
      "location": "/src/org/armedbear/lisp",
      "name": "abcl-dynamic-install",
      "url": "https://searchcode.com/codesearch/view/12140246/",
      "md5hash": "ab8b6f8e9d98a028bf08f14bb4efea55",
      "lines": {
        "128": "      return true;",
        "1": "/*",
        "2": " * Complex.java",
        "131": "        Complex c = (Complex) obj;",
        "37": "",
        "38": "public final class Complex extends LispObject",
        "129": "    if (obj instanceof Complex)",
        "42": "",
        "43": "  private Complex(LispObject realpart, LispObject imagpart)",
        "130": "      {",
        "147": "      return true;",
        "148": "    if (obj instanceof Complex)",
        "149": "      {",
        "150": "        Complex c = (Complex) obj;",
        "155": "      {",
        "156": "        // obj is a number, but not complex."
      },
      "id": 12140246,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/houhlin/viper4android_fx.git",
      "language": "Java",
      "linescount": 54,
      "location": "/android_4.x/src/com/vipercn/viper4android/preference",
      "name": "viper4android_fx",
      "url": "https://searchcode.com/codesearch/view/75994914/",
      "md5hash": "def45ae1da991e9902bf4437e65bf472",
      "lines": {
        "33": "",
        "34": "\tprotected Complex mul(Complex other)",
        "3": "",
        "4": "class Complex",
        "7": "",
        "8": "\tprotected Complex(double re, double im)",
        "35": "\t{",
        "23": "",
        "24": "\tprotected Complex con()",
        "25": "\t{",
        "26": "\t\treturn new Complex(re, -im);",
        "28": "",
        "29": "\tprotected Complex add(Complex other)",
        "30": "\t{",
        "31": "\t\treturn new Complex(re + other.re, im + other.im);"
      },
      "id": 75994914,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/houhlin/viper4android_fx.git",
      "language": "Java",
      "linescount": 68,
      "location": "/android_2.3/src/com/vipercn/viper4android/preference",
      "name": "viper4android_fx",
      "url": "https://searchcode.com/codesearch/view/75995133/",
      "md5hash": "111832dfbf9de91226ade2c47cd988f3",
      "lines": {
        "4": "",
        "5": "class Complex",
        "38": "\t{",
        "39": "\t\treturn new Complex(re, -im);",
        "8": "",
        "9": "\tprotected Complex()",
        "42": "\tprotected Complex add(Complex other)",
        "43": "\t{",
        "44": "\t\treturn new Complex(re + other.re, im + other.im);",
        "14": "",
        "15": "\tprotected Complex(float re, float im)",
        "48": "\t{",
        "46": "",
        "41": "",
        "36": "",
        "47": "\tprotected Complex mul(Complex other)",
        "37": "\tprotected Complex con()"
      },
      "id": 75995133,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/houhlin/viper4android_xhifi.git",
      "language": "Java",
      "linescount": 54,
      "location": "/android_4.x/src/com/vipercn/viper4android/xhifi/preference",
      "name": "viper4android_xhifi",
      "url": "https://searchcode.com/codesearch/view/75996785/",
      "md5hash": "3ba705fe44f6acf857392bda6e9c9df8",
      "lines": {
        "33": "",
        "34": "\tprotected Complex mul(Complex other)",
        "3": "",
        "4": "class Complex",
        "7": "",
        "8": "\tprotected Complex(double re, double im)",
        "35": "\t{",
        "23": "",
        "24": "\tprotected Complex con()",
        "25": "\t{",
        "26": "\t\treturn new Complex(re, -im);",
        "28": "",
        "29": "\tprotected Complex add(Complex other)",
        "30": "\t{",
        "31": "\t\treturn new Complex(re + other.re, im + other.im);"
      },
      "id": 75996785,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/houhlin/viper4android_xhifi.git",
      "language": "Java",
      "linescount": 68,
      "location": "/android_2.3/src/com/vipercn/viper4android/xhifi/preference",
      "name": "viper4android_xhifi",
      "url": "https://searchcode.com/codesearch/view/75996970/",
      "md5hash": "7240d9d411322b96976f7b4dea2a76fb",
      "lines": {
        "4": "",
        "5": "class Complex",
        "38": "\t{",
        "39": "\t\treturn new Complex(re, -im);",
        "8": "",
        "9": "\tprotected Complex()",
        "42": "\tprotected Complex add(Complex other)",
        "43": "\t{",
        "44": "\t\treturn new Complex(re + other.re, im + other.im);",
        "14": "",
        "15": "\tprotected Complex(float re, float im)",
        "48": "\t{",
        "46": "",
        "41": "",
        "36": "",
        "47": "\tprotected Complex mul(Complex other)",
        "37": "\tprotected Complex con()"
      },
      "id": 75996970,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/mymindleaks/Mint.git",
      "language": "Java",
      "linescount": 2053,
      "location": "/src/main/java/org/mint/complex",
      "name": "Mint",
      "url": "https://searchcode.com/codesearch/view/106911961/",
      "md5hash": "4ead0e5d1859f5e28c927547d512304e",
      "lines": {
        "1": "package org.mint.complex;",
        "2": "",
        "68": "\t */",
        "69": "\tpublic static final Complex i = new Complex(0.0, 1.0);",
        "42": "",
        "43": "public class Complex implements Cloneable, Serializable {",
        "12": " *          <p>",
        "13": " *          A Java class for performing complex number arithmetic to",
        "80": "\t/**",
        "81": "\t * Constructs a <tt>Complex</tt> representing the number zero.",
        "85": "",
        "86": "\tpublic Complex() {",
        "87": "\t\tthis(0.0, 0.0);",
        "88": "\t}//end Complex()",
        "90": "\t/**",
        "91": "\t * Constructs a <tt>Complex</tt> representing a real number."
      },
      "id": 106911961,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 832,
      "location": "/src-plugins/jep/org/nfunk/jep/type",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113851684/",
      "md5hash": "2c88076f06d8c688efcb7a7f1159e49c",
      "lines": {
        "51": "\t */",
        "36": "",
        "37": "public class Complex",
        "141": "\t/**",
        "14": "/**",
        "15": " * Represents a complex number with double precision real and imaginary",
        "16": " * components. Includes complex arithmetic functions.<p>",
        "17": " * The two main sources of reference used for creating this class were:<br>",
        "19": " *    (ISBN 0-521-43108-5) http://www.nr.com and <br>",
        "20": " * - The org.netlib.math.complex package (http://www.netlib.org) which was ",
        "142": "\t * Compares this object with the Complex number given as parameter",
        "24": " * equations given in the source of the netlib package. The functions were",
        "25": " * validated by comparing results with the netlib complex class.<p>",
        "26": " * It is important to note that the netlib complex package is more",
        "27": " * extensive and efficient (e.g. Garbage collector friendly) than this",
        "52": "\tpublic Complex() {"
      },
      "id": 113851684,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/olabini/ioke.git",
      "language": "Java",
      "linescount": 252,
      "location": "/src/ikj/main/gnu/math",
      "name": "ioke",
      "url": "https://searchcode.com/codesearch/view/108084586/",
      "md5hash": "37893ec5ad91f28a7a762a6894b7a193",
      "lines": {
        "5": "",
        "6": "public abstract class Complex extends Quantity",
        "7": "{",
        "8": "  public Complex number() { return this; }",
        "15": "",
        "16": "  private static CComplex imOne;",
        "17": "  private static CComplex imMinusOne;",
        "18": "",
        "19": "  public static CComplex imOne()",
        "21": "    if (imOne == null)",
        "22": "      imOne = new CComplex (IntNum.zero(), IntNum.one());",
        "25": "",
        "26": "  public static CComplex imMinusOne()",
        "28": "    if (imMinusOne == null)",
        "29": "      imMinusOne = new CComplex (IntNum.zero(), IntNum.minusOne());"
      },
      "id": 108084586,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/jabley/seph.git",
      "language": "Java",
      "linescount": 248,
      "location": "/src/main/gnu/math",
      "name": "seph",
      "url": "https://searchcode.com/codesearch/view/113791705/",
      "md5hash": "1a9dd2badc65783bdbcd6b634d04632d",
      "lines": {
        "5": "",
        "6": "public abstract class Complex extends Quantity",
        "7": "{",
        "8": "  public Complex number() { return this; }",
        "15": "",
        "16": "  private static CComplex imOne;",
        "17": "  private static CComplex imMinusOne;",
        "18": "",
        "19": "  public static CComplex imOne()",
        "21": "    if (imOne == null)",
        "22": "      imOne = new CComplex (IntNum.zero(), IntNum.one());",
        "25": "",
        "26": "  public static CComplex imMinusOne()",
        "28": "    if (imMinusOne == null)",
        "29": "      imMinusOne = new CComplex (IntNum.zero(), IntNum.minusOne());"
      },
      "id": 113791705,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/danielrendall/JavaMathLib.git",
      "language": "Java",
      "linescount": 134,
      "location": "/code/modules/src/main/java/uk/co/danielrendall/mathlib/geom2d",
      "name": "JavaMathLib",
      "url": "https://searchcode.com/codesearch/view/113139132/",
      "md5hash": "2318924961959ca5f53eb17885e555a6",
      "lines": {
        "37": "",
        "38": "    public Complex(double x, double y) {",
        "44": "",
        "45": "    public static Complex unit() {",
        "48": "",
        "49": "    public static Complex unit(double arg) {",
        "52": "",
        "53": "    public static Complex modArg(double mod, double arg) {",
        "54": "        return new Complex (mod * Math.cos(arg), mod * Math.sin(arg));",
        "55": "    }",
        "56": "",
        "57": "    public final Complex neg() {",
        "26": " */",
        "27": "public final class Complex implements XY {",
        "58": "        return new Complex(0.0d - x, 0.0d - y);"
      },
      "id": 113139132,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/crystalmountain04/AcSE.git",
      "language": "Java",
      "linescount": 654,
      "location": "/twoPart/util",
      "name": "AcSE",
      "url": "https://searchcode.com/codesearch/view/105196930/",
      "md5hash": "e1d1f7dc173d31835349ee909b0438bf",
      "lines": {
        "32": "\tpublic static final Complex I = new Complex(0.0d, 1.0d);",
        "33": "",
        "3": "/*",
        "4": "Program: Java-Complex-Number Class (JCN)",
        "39": "\t */",
        "40": "\tpublic Complex()\t// Leerer Konstruktor, initialisiert  alle Werte mit 0",
        "128": "\t\treturn new Complex(this.real + comp.getReal(), this.imag + comp.getImag());",
        "127": "\t{",
        "135": "\t */",
        "136": "\tpublic Complex sub(Complex comp)",
        "27": " */",
        "28": "public class Complex",
        "29": "{",
        "30": "\tpublic static final Complex ZERO = new Complex();",
        "31": "\tpublic static final Complex ONE = new Complex(1.0d, 0.0d);"
      },
      "id": 105196930,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/alin1337/java-speech-api.git",
      "language": "Java",
      "linescount": 121,
      "location": "/src/com/darkprograms/speech/util",
      "name": "java-speech-api",
      "url": "https://searchcode.com/codesearch/view/94334425/",
      "md5hash": "7c7f3ee75e4cc5c58d776a800b845426",
      "lines": {
        "4": "/*************************************************************************",
        "5": " *  Compilation:  javac Complex.java",
        "6": " *  Execution:    java Complex",
        "7": " *",
        "8": " *  Data type for complex numbers.",
        "10": " *  The data type is \"immutable\" so once you create and initialize",
        "11": " *  a Complex object, you cannot change it. The \"final\" keyword",
        "15": " *",
        "16": " *  Class based off of Princeton University's Complex.java class",
        "19": "",
        "20": "public class Complex {",
        "24": "    // create a new object with the given real and imaginary parts",
        "25": "    public Complex(double real, double imag) {",
        "29": "",
        "30": "    // return a string representation of the invoking Complex object"
      },
      "id": 94334425,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/sweetybanana/algorithms-course-coursera.git",
      "language": "Java",
      "linescount": 154,
      "location": "/coursera_libs/src/algo",
      "name": "algorithms-course-coursera",
      "url": "https://searchcode.com/codesearch/view/94436980/",
      "md5hash": "67d145b83acc7d26b2ce9de0c1007460",
      "lines": {
        "1": "/*************************************************************************",
        "2": " *  Compilation:  javac Complex.java",
        "3": " *  Execution:    java Complex",
        "4": " *",
        "5": " *  Data type for complex numbers.",
        "7": " *  The data type is \"immutable\" so once you create and initialize",
        "8": " *  a Complex object, you cannot change it. The \"final\" keyword",
        "39": "",
        "12": " *",
        "13": " *  % java Complex",
        "34": "    // create a new object with the given real and imaginary parts",
        "40": "    // return a string representation of the invoking Complex object",
        "35": "    public Complex(double real, double imag) {",
        "29": "",
        "30": "public class Complex {"
      },
      "id": 94436980,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/zhoumo01/lire.git",
      "language": "Java",
      "linescount": 185,
      "location": "/src/main/java/net/semanticmetadata/lire/imageanalysis/mser/fourier/utils",
      "name": "lire",
      "url": "https://searchcode.com/codesearch/view/94638041/",
      "md5hash": "891f4a17888c487f9eededcd82d2ec9a",
      "lines": {
        "83": "    // return a new Complex object whose value is (this - b)",
        "41": "",
        "42": "public class Complex {",
        "75": "    // return a new Complex object whose value is (this + b)",
        "76": "    public Complex plus(Complex b) {",
        "77": "        Complex a = this;             // invoking object",
        "46": "    // create a new object with the given real and imaginary parts",
        "47": "    public Complex(double real, double imag) {",
        "80": "        return new Complex(real, imag);",
        "82": "",
        "51": "",
        "52": "    // return a string representation of the invoking Complex object",
        "78": "        double real = a.re + b.re;",
        "84": "    public Complex minus(Complex b) {",
        "79": "        double imag = a.im + b.im;",
        "74": ""
      },
      "id": 94638041,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/Takeno/sdr-project.git",
      "language": "Java",
      "linescount": 166,
      "location": "/src/it/uniroma3/signals/domain",
      "name": "sdr-project",
      "url": "https://searchcode.com/codesearch/view/95106775/",
      "md5hash": "2d8eb0c1235c0ed5ae11ff05ba58c727",
      "lines": {
        "48": "\t\tComplex result = new Complex(",
        "2": "",
        "3": "public class Complex {",
        "6": "\t",
        "38": "\t",
        "7": "\tpublic Complex() {",
        "40": "\t\treturn new Complex(this.reale, - this.immaginaria);",
        "41": "\t}",
        "42": "\t",
        "39": "\tpublic Complex coniugato(){",
        "12": "\tpublic Complex(double reale) {",
        "46": "\t",
        "43": "\tpublic Complex moduloQuadro() {",
        "16": "\t",
        "17": "\tpublic Complex(double reale, double immaginaria) {",
        "11": "\t",
        "47": "\tpublic Complex somma(Complex b){"
      },
      "id": 95106775,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/davidhuizhou/Corejava.git",
      "language": "Java",
      "linescount": 158,
      "location": "/src/main/java/com/dzhou/corejava/algs4",
      "name": "Corejava",
      "url": "https://searchcode.com/codesearch/view/96206321/",
      "md5hash": "6d11ba7a943fafd8315ce686d721b6ca",
      "lines": {
        "33": "",
        "34": "public class Complex {",
        "43": "",
        "5": "/*************************************************************************",
        "6": " *  Compilation:  javac com.dzhou.corejava.algs4.Complex.java",
        "7": " *  Execution:    java com.dzhou.corejava.algs4.Complex",
        "8": " *",
        "9": " *  Data type for complex numbers.",
        "11": " *  The data type is \"immutable\" so once you create and initialize",
        "12": " *  a com.dzhou.corejava.algs4.Complex object, you cannot change it. The \"final\" keyword",
        "44": "    // return a string representation of the invoking com.dzhou.corejava.algs4.Complex object",
        "16": " *",
        "17": " *  % java com.dzhou.corejava.algs4.Complex",
        "39": "    public Complex(double real, double imag) {",
        "38": "    // create a new object with the given real and imaginary parts"
      },
      "id": 96206321,
      "filename": "Complex.java"
    },
    {
      "repo": "https://github.com/infiniteoo/audiorecognizer.git",
      "language": "Java",
      "linescount": 159,
      "location": "/src/model",
      "name": "audiorecognizer",
      "url": "https://searchcode.com/codesearch/view/98646879/",
      "md5hash": "effd1c3e472f1665fccf6417da8ca83f",
      "lines": {
        "51": "\tpublic Complex plus(Complex b) {",
        "3": "/*************************************************************************",
        "4": " * Compilation: javac Complex.java Execution: java Complex",
        "5": " * ",
        "6": " * Data type for complex numbers.",
        "7": " * ",
        "8": " * The data type is \"immutable\" so once you create and initialize a Complex",
        "12": " * ",
        "13": " * % java Complex a = 5.0 + 6.0i b = -3.0 + 4.0i Re(a) = 5.0 Im(a) = 6.0 b + a =",
        "49": "",
        "50": "\t// return a new Complex object whose value is (this + b)",
        "19": "",
        "20": "public class Complex {",
        "24": "\t// create a new object with the given real and imaginary parts",
        "25": "\tpublic Complex(double real, double imag) {",
        "29": "",
        "30": "\t// return a string representation of the invoking Complex object"
      },
      "id": 98646879,
      "filename": "Complex.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 20727,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 16422,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4374,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 974,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 192,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 181,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 69,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 16,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 6,
      "source": "Gitorious",
      "id": 10
    }
  ]
}