{
  "matchterm": "Hyphenation",
  "previouspage": null,
  "searchterm": "Hyphenation",
  "query": "Hyphenation",
  "language_filters": [
    {
      "count": 352,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 352,
  "results": [
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 117,
      "location": "/1.x/nfop/layout/hyphenation",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117211465/",
      "md5hash": "50163207c45ddd8716b0de4974c46acc",
      "lines": {
        "1": "/*",
        "2": " * $Id: Hyphenation.java,v 1.3 2005/03/09 14:54:08 alan13 Exp $",
        "99": "     * @return the hyphenation points",
        "100": "     */",
        "98": "    /**",
        "70": "     */",
        "71": "    Hyphenation(String word, int[] points) {",
        "77": "    /**",
        "78": "     * @return the number of hyphenation points in the word",
        "50": " */ ",
        "51": "package org.apache.fop.layout.hyphenation;",
        "57": " */",
        "58": "public class Hyphenation {",
        "101": "    public int[] getHyphenationPoints() {",
        "62": "    /**",
        "63": "     * number of hyphenation points in word"
      },
      "id": 117211465,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 90,
      "location": "/fop/src/main/java/org/apache/fop/hyphenation",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96988878/",
      "md5hash": "6fa7bd2eb95bc102c8ac93fbef25b574",
      "lines": {
        "32": "    /**",
        "33": "     * number of hyphenation points in word",
        "70": "    /**",
        "71": "     * @return the hyphenation points",
        "40": "     */",
        "41": "    Hyphenation(String word, int[] points) {",
        "47": "    /**",
        "48": "     * @return the number of hyphenation points in the word",
        "17": "",
        "18": "/* $Id: Hyphenation.java 1297284 2012-03-05 23:29:29Z gadams $ */",
        "19": "",
        "20": "package org.apache.fop.hyphenation;",
        "73": "    public int[] getHyphenationPoints() {",
        "72": "     */",
        "26": " */",
        "27": "public class Hyphenation {"
      },
      "id": 96988878,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "http://fb2pdf.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 84,
      "location": "/src/java/src/com/itextpdf/text/pdf/hyphenation",
      "name": "fb2pdf",
      "url": "https://searchcode.com/codesearch/view/2126926/",
      "md5hash": "6018386ea13f3416956c301ca15f757e",
      "lines": {
        "65": "    /**",
        "66": "     * @return the hyphenation points",
        "67": "     */",
        "68": "    public int[] getHyphenationPoints() {",
        "37": "     */",
        "38": "    Hyphenation(String word, int[] points) {",
        "44": "    /**",
        "45": "     * @return the number of hyphenation points in the word",
        "16": "",
        "17": "package com.itextpdf.text.pdf.hyphenation;",
        "23": " */",
        "24": "public class Hyphenation {",
        "29": "    /**",
        "30": "     * number of hyphenation points in word"
      },
      "id": 2126926,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://github.com/faquino/iText-4.2.0.git",
      "language": "Java",
      "linescount": 90,
      "location": "/www/examples/com/lowagie/examples/objects/chunk",
      "name": "iText-4.2.0",
      "url": "https://searchcode.com/codesearch/view/70290861/",
      "md5hash": "8078c44d7d54306d0560fad933cd1f6a",
      "lines": {
        "1": "/*",
        "2": " * $Id: Hyphenation.java 3373 2008-05-12 16:21:24Z xlv $",
        "75": "\t\t\tck = new Chunk(text);",
        "36": "\t/**",
        "37": "\t * Using auto-hyphenation.",
        "70": "\t\t\tck.setHyphenation(auto);",
        "33": "",
        "76": "\t\t\tauto = new HyphenationAuto(\"en\", \"US\", 2, 2);",
        "43": "",
        "44": "\t\tSystem.out.println(\"Hyphenation\");",
        "34": "public class Hyphenation {",
        "78": "\t\t\tp = new Paragraph(ck);",
        "77": "\t\t\tck.setHyphenation(auto);",
        "71": "\t\t\tParagraph p = new Paragraph(ck);",
        "69": "\t\t\tHyphenationAuto auto = new HyphenationAuto(\"en\", \"GB\", 2, 2);"
      },
      "id": 70290861,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "git://github.com/apache/lucene-solr.git",
      "language": "Java",
      "linescount": 50,
      "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/3020264/",
      "md5hash": "9c2ab210d5dd86a791c2114911578db7",
      "lines": {
        "32": "  Hyphenation(int[] points) {",
        "36": "  /**",
        "37": "   * @return the number of hyphenation points in the word",
        "43": "  /**",
        "44": "   * @return the hyphenation points",
        "45": "   */",
        "46": "  public int[] getHyphenationPoints() {",
        "17": "",
        "18": "package org.apache.lucene.analysis.compound.hyphenation;",
        "24": " */",
        "25": "public class Hyphenation {",
        "31": "   */"
      },
      "id": 3020264,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 90,
      "location": "/src/java/org/apache/fop/hyphenation",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128945630/",
      "md5hash": "6fa7bd2eb95bc102c8ac93fbef25b574",
      "lines": {
        "32": "    /**",
        "33": "     * number of hyphenation points in word",
        "70": "    /**",
        "71": "     * @return the hyphenation points",
        "40": "     */",
        "41": "    Hyphenation(String word, int[] points) {",
        "47": "    /**",
        "48": "     * @return the number of hyphenation points in the word",
        "17": "",
        "18": "/* $Id: Hyphenation.java 1297284 2012-03-05 23:29:29Z gadams $ */",
        "19": "",
        "20": "package org.apache.fop.hyphenation;",
        "73": "    public int[] getHyphenationPoints() {",
        "72": "     */",
        "26": " */",
        "27": "public class Hyphenation {"
      },
      "id": 128945630,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/patch-for-sqs-translator",
      "language": "Java",
      "linescount": 90,
      "location": "/src/java/org/apache/fop/hyphenation",
      "name": "patch-for-sqs-translator",
      "url": "https://searchcode.com/codesearch/view/128948735/",
      "md5hash": "6fa7bd2eb95bc102c8ac93fbef25b574",
      "lines": {
        "32": "    /**",
        "33": "     * number of hyphenation points in word",
        "70": "    /**",
        "71": "     * @return the hyphenation points",
        "40": "     */",
        "41": "    Hyphenation(String word, int[] points) {",
        "47": "    /**",
        "48": "     * @return the number of hyphenation points in the word",
        "17": "",
        "18": "/* $Id: Hyphenation.java 1297284 2012-03-05 23:29:29Z gadams $ */",
        "19": "",
        "20": "package org.apache.fop.hyphenation;",
        "73": "    public int[] getHyphenationPoints() {",
        "72": "     */",
        "26": " */",
        "27": "public class Hyphenation {"
      },
      "id": 128948735,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://bitbucket.org/tjklemz/itextmod",
      "language": "Java",
      "linescount": 84,
      "location": "/src/com/itextpdf/text/pdf/hyphenation",
      "name": "itextmod",
      "url": "https://searchcode.com/codesearch/view/125285683/",
      "md5hash": "6018386ea13f3416956c301ca15f757e",
      "lines": {
        "65": "    /**",
        "66": "     * @return the hyphenation points",
        "67": "     */",
        "68": "    public int[] getHyphenationPoints() {",
        "37": "     */",
        "38": "    Hyphenation(String word, int[] points) {",
        "44": "    /**",
        "45": "     * @return the number of hyphenation points in the word",
        "16": "",
        "17": "package com.itextpdf.text.pdf.hyphenation;",
        "23": " */",
        "24": "public class Hyphenation {",
        "29": "    /**",
        "30": "     * number of hyphenation points in word"
      },
      "id": 125285683,
      "filename": "Hyphenation.java"
    },
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 547,
      "location": "/1.x/nfop/layout/hyphenation",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117211460/",
      "md5hash": "70523e07459e0ad1164d7f3b782a4318",
      "lines": {
        "288": "    public Hyphenation hyphenate(String word, int remainCharCount,",
        "1": "/*",
        "2": " * $Id: HyphenationTree.java,v 1.3 2005/03/09 14:54:08 alan13 Exp $",
        "136": "    /**",
        "137": "     * Read hyphenation patterns from an XML file.",
        "138": "     */",
        "139": "    public void loadPatterns(String filename) throws HyphenationException {",
        "278": "    /**",
        "279": "     * Hyphenate word and return a Hyphenation object.",
        "281": "     * @param remainCharCount Minimum number of characters allowed",
        "282": "     * before the hyphenation point.",
        "283": "     * @param pushCharCount Minimum number of characters allowed after",
        "284": "     * the hyphenation point.",
        "285": "     * @return a {@link Hyphenation Hyphenation} object representing",
        "286": "     * the hyphenated word or null if word is not hyphenated.",
        "287": "     */"
      },
      "id": 117211460,
      "filename": "HyphenationTree.java"
    },
    {
      "repo": "https://github.com/mdodsworth/lucene-solr.git",
      "language": "Java",
      "linescount": 472,
      "location": "/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/110751717/",
      "md5hash": "dbf051a1284a612fe4cc1469744a2956",
      "lines": {
        "33": " */",
        "34": "public class HyphenationTree extends TernaryTree implements PatternConsumer {",
        "271": "  /**",
        "272": "   * Hyphenate word and return a Hyphenation object.",
        "17": "",
        "18": "package org.apache.lucene.analysis.compound.hyphenation;",
        "275": "   * @param remainCharCount Minimum number of characters allowed before the",
        "276": "   *        hyphenation point.",
        "277": "   * @param pushCharCount Minimum number of characters allowed after the",
        "278": "   *        hyphenation point.",
        "279": "   * @return a {@link Hyphenation Hyphenation} object representing the",
        "280": "   *         hyphenated word or null if word is not hyphenated.",
        "281": "   */",
        "282": "  public Hyphenation hyphenate(String word, int remainCharCount,",
        "28": "/**",
        "29": " * This tree structure stores the hyphenation patterns in an efficient way for"
      },
      "id": 110751717,
      "filename": "HyphenationTree.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 457,
      "location": "/targets/itext/1.4.8/com/lowagie/text/pdf/hyphenation",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313944/",
      "md5hash": "0770f251961e7c47471e73d508e3a269",
      "lines": {
        "257": "    /**",
        "258": "     * Hyphenate word and return a Hyphenation object.",
        "260": "     * @param remainCharCount Minimum number of characters allowed",
        "261": "     * before the hyphenation point.",
        "262": "     * @param pushCharCount Minimum number of characters allowed after",
        "263": "     * the hyphenation point.",
        "264": "     * @return a {@link Hyphenation Hyphenation} object representing",
        "265": "     * the hyphenated word or null if word is not hyphenated.",
        "266": "     */",
        "267": "    public Hyphenation hyphenate(String word, int remainCharCount,",
        "16": "",
        "17": "/* $Id: HyphenationTree.java,v 1.42 2006/09/14 23:39:20 xlv Exp $ */",
        "18": " ",
        "19": "package com.lowagie.text.pdf.hyphenation;",
        "26": "/**",
        "27": " * This tree structure stores the hyphenation patterns in an efficient"
      },
      "id": 120313944,
      "filename": "HyphenationTree.java"
    },
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 1550,
      "location": "/1.x/nfop/layout",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117211365/",
      "md5hash": "fa30e72803a579287bf7830b2c86801f",
      "lines": {
        "1152": "        /**",
        "1153": "         * remaining part string of hyphenation",
        "1171": "",
        "1182": "        } else {",
        "1181": "            wordToHyphenate = getHyphenationWord(characters, wordStart + 1);",
        "1074": "    /**",
        "1075": "     * sets hyphenation related traits: language, country, hyphenate, hyphenation-character",
        "1172": "        // width of hyphenation character",
        "1173": "        int hyphCharWidth = currentFontState",
        "1174": "            .getCharWidth(this.hyphProps.hyphenationChar);",
        "1183": "            wordToHyphenate = getHyphenationWord(characters, wordStart);",
        "1180": "            // extracts whole word from string",
        "93": "",
        "94": "    /* hyphenation */",
        "95": "    private HyphenationProps hyphProps;"
      },
      "id": 117211365,
      "filename": "LineArea.java"
    },
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 298,
      "location": "/1.x/nfop/layout/hyphenation",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117211445/",
      "md5hash": "be7bd8f1474d92f5725bfcbb6c60480e",
      "lines": {
        "67": "    private HyphenationTree hyphenTree = null;",
        "131": "",
        "132": "    public static HyphenationTree getFopHyphenationTree(String key) {",
        "133": "        HyphenationTree hTree = null;",
        "134": "        ObjectInputStream ois = null;",
        "73": "                      int rightMin) {",
        "74": "        hyphenTree = getHyphenationTree(lang, country);",
        "66": "",
        "142": "                        MessageHandler.errorln(\"Couldn't find hyphenation pattern  \"",
        "141": "                    if (is != null) {",
        "50": " */ ",
        "51": "package org.apache.fop.layout.hyphenation;",
        "149": "                            MessageHandler.errorln(\"Couldn't find precompiled \"",
        "150": "                                                   + \"fop hyphenation pattern \"",
        "58": "/**",
        "59": " * This class is the main entry point to the hyphenation package."
      },
      "id": 117211445,
      "filename": "Hyphenator.java"
    },
    {
      "repo": "https://github.com/mdodsworth/lucene-solr.git",
      "language": "Java",
      "linescount": 217,
      "location": "/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/110751690/",
      "md5hash": "f02813e2f70f20987edbc13940a73750",
      "lines": {
        "32": " * \"Donaudampfschiff\" becomes Donau, dampf, schiff so that you can find",
        "33": " * \"Donaudampfschiff\" even when you only enter \"schiff\". It uses a hyphenation",
        "35": " */",
        "36": "public class HyphenationCompoundWordTokenFilter extends",
        "37": "    CompoundWordTokenFilterBase {",
        "38": "  private HyphenationTree hyphenator;",
        "40": "  /**",
        "41": "   * Creates a new {@link HyphenationCompoundWordTokenFilter} instance.",
        "45": "   * @param hyphenator",
        "46": "   *          the hyphenation pattern tree to use for hyphenation",
        "49": "   */",
        "50": "  public HyphenationCompoundWordTokenFilter(TokenStream input,",
        "51": "                                            HyphenationTree hyphenator, CharArraySet dictionary) {",
        "20": "import org.apache.lucene.analysis.TokenStream;",
        "21": "import org.apache.lucene.analysis.compound.hyphenation.Hyphenation;",
        "22": "import org.apache.lucene.analysis.compound.hyphenation.HyphenationTree;",
        "23": "import org.apache.lucene.analysis.util.CharArraySet;"
      },
      "id": 110751690,
      "filename": "HyphenationCompoundWordTokenFilter.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 318,
      "location": "/fop/src/main/java/org/apache/fop/hyphenation",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96988829/",
      "md5hash": "75f33001c6d5ca69f1f07f52e0ab02c5",
      "lines": {
        "66": "    /**",
        "67": "     * Returns a hyphenation tree for a given language and country,",
        "68": "     * with fallback from (lang,country) to (lang).",
        "37": "/**",
        "38": " * <p>This class is the main entry point to the hyphenation package.",
        "47": "",
        "48": "    private static HyphenationTreeCache hTreeCache = null;",
        "19": "",
        "20": "package org.apache.fop.hyphenation;",
        "57": "",
        "58": "    /** @return the default (static) hyphenation tree cache */",
        "59": "    public static synchronized HyphenationTreeCache getHyphenationTreeCache() {",
        "60": "        if (hTreeCache == null) {",
        "61": "            hTreeCache = new HyphenationTreeCache();",
        "69": "     * The hyphenation trees are cached."
      },
      "id": 96988829,
      "filename": "Hyphenator.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 748,
      "location": "/fop/src/main/java/org/apache/fop/hyphenation",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96988851/",
      "md5hash": "cb2f3047ed87f2cb7d399a054f3f2ed4",
      "lines": {
        "129": "    /**",
        "130": "     * Read hyphenation patterns from an XML file.",
        "131": "     * @param filename the filename",
        "132": "     * @throws HyphenationException In case the parsing fails",
        "133": "     */",
        "134": "    public void loadPatterns(String filename) throws HyphenationException {",
        "39": "/**",
        "40": " * <p>This tree structure stores the hyphenation patterns in an efficient",
        "139": "        } catch (MalformedURLException e) {",
        "140": "            throw new HyphenationException(\"Error converting the File '\" + f + \"' to a URL: \"",
        "145": "    /**",
        "146": "     * Read hyphenation patterns from an XML file.",
        "147": "     * @param source the InputSource for the file",
        "148": "     * @throws HyphenationException In case the parsing fails",
        "149": "     */",
        "150": "    public void loadPatterns(InputSource source) throws HyphenationException {"
      },
      "id": 96988851,
      "filename": "HyphenationTree.java"
    },
    {
      "repo": "https://github.com/mdodsworth/lucene-solr.git",
      "language": "Java",
      "linescount": 218,
      "location": "/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/110751703/",
      "md5hash": "fff34113f33564b1e2596b5a508617b3",
      "lines": {
        "33": " *",
        "34": " * @deprecated Use {@link HyphenationCompoundWordTokenFilter}.",
        "36": "@Deprecated",
        "37": "public class Lucene43HyphenationCompoundWordTokenFilter extends",
        "38": "    Lucene43CompoundWordTokenFilterBase {",
        "39": "  private HyphenationTree hyphenator;",
        "41": "  /**",
        "42": "   * Creates a new {@link Lucene43HyphenationCompoundWordTokenFilter} instance.",
        "46": "   * @param hyphenator",
        "47": "   *          the hyphenation pattern tree to use for hyphenation",
        "50": "   */",
        "51": "  public Lucene43HyphenationCompoundWordTokenFilter(TokenStream input,",
        "52": "                                                    HyphenationTree hyphenator, CharArraySet dictionary) {",
        "24": "import org.apache.lucene.analysis.TokenStream;",
        "25": "import org.apache.lucene.analysis.compound.hyphenation.Hyphenation;",
        "26": "import org.apache.lucene.analysis.compound.hyphenation.HyphenationTree;",
        "27": "import org.apache.lucene.analysis.util.CharArraySet;"
      },
      "id": 110751703,
      "filename": "Lucene43HyphenationCompoundWordTokenFilter.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 126,
      "location": "/targets/itext/1.4.8/com/lowagie/text/pdf",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313704/",
      "md5hash": "f702b940e43cbbd4e31693328df22843",
      "lines": {
        "67": "    ",
        "68": "    /** Creates a new hyphenation instance usable in <CODE>Chunk</CODE>.",
        "101": "        if (hyphenation == null) {",
        "102": "            return \"\";",
        "103": "        }",
        "104": "        int len = hyphenation.length();",
        "73": "     */    ",
        "74": "    public HyphenationAuto(String lang, String country, int leftMin, int rightMin) {",
        "99": "            return \"\";",
        "49": "",
        "50": "import com.lowagie.text.pdf.hyphenation.Hyphenation;",
        "51": "import com.lowagie.text.pdf.hyphenation.Hyphenator;",
        "52": "",
        "100": "        Hyphenation hyphenation = hyphenator.hyphenate(word);",
        "58": " */",
        "59": "public class HyphenationAuto implements HyphenationEvent {"
      },
      "id": 120313704,
      "filename": "HyphenationAuto.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 1668,
      "location": "/fop/src/main/java/org/apache/fop/layoutmgr/inline",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96996527/",
      "md5hash": "75214c138a50422de265ddaf1eb9a275",
      "lines": {
        "175": "    private boolean hyphenationPerformed;",
        "591": "        hyphenationLadderCount = fobj.getHyphenationLadderCount();",
        "39": "import org.apache.fop.fo.flow.Block;",
        "40": "import org.apache.fop.fo.properties.CommonHyphenation;",
        "172": "     * When layout must be re-started due to a change of IPD, there is no need",
        "44": "import org.apache.fop.fonts.FontTriplet;",
        "45": "import org.apache.fop.hyphenation.Hyphenation;",
        "46": "import org.apache.fop.hyphenation.Hyphenator;",
        "47": "import org.apache.fop.layoutmgr.Adjustment;",
        "173": "     * to perform hyphenation on the remaining Knuth sequence once again.",
        "174": "     */",
        "152": "    private Length lastLineEndIndent;",
        "153": "    private CommonHyphenation hyphenationProperties;",
        "154": "    private Numeric hyphenationLadderCount;",
        "155": "    private int wrapOption = EN_WRAP;",
        "590": "        hyphenationProperties = fobj.getCommonHyphenation();",
        "589": "        lastLineEndIndent = fobj.getLastLineEndIndent();"
      },
      "id": 96996527,
      "filename": "LineLayoutManager.java"
    },
    {
      "repo": "git://github.com/apache/lucene-solr.git",
      "language": "Java",
      "linescount": 195,
      "location": "/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound",
      "name": "lucene-solr",
      "url": "https://searchcode.com/codesearch/view/116084770/",
      "md5hash": "39f7b5f7ec1974783c3da42fc056bc7c",
      "lines": {
        "128": " *   <td>HyphenationCompoundWordTokenFilter</td>",
        "65": " * <ul>",
        "66": " *  <li><i>HyphenationCompoundWordTokenFilter</i>: it uses a",
        "67": " *  hyphenation grammar based approach to find potential word parts of a",
        "68": " *  given word.</li>",
        "140": " *   public void testHyphenationCompoundWordsDE() throws Exception {",
        "74": " * <h3>Compound word token filters</h3>",
        "75": " * <h4>HyphenationCompoundWordTokenFilter</h4>",
        "76": " * The {@link",
        "77": " * org.apache.lucene.analysis.compound.HyphenationCompoundWordTokenFilter",
        "78": " * HyphenationCompoundWordTokenFilter} uses hyphenation grammars to find",
        "145": " * ",
        "146": " *     HyphenationTree hyphenator = HyphenationCompoundWordTokenFilter",
        "139": " * <pre class=\"prettyprint\">",
        "127": " *  <tr>"
      },
      "id": 116084770,
      "filename": "package-info.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 145,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 134,
      "source": "Github",
      "id": 2
    },
    {
      "count": 47,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 24,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 2,
      "source": "Unknown",
      "id": 0
    }
  ]
}