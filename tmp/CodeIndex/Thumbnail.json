{
  "matchterm": "Thumbnail",
  "previouspage": null,
  "searchterm": "Thumbnail",
  "query": "Thumbnail",
  "language_filters": [
    {
      "count": 5212,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 5212,
  "results": [
    {
      "repo": "https://code.google.com/p/ingatan/",
      "language": "Java",
      "linescount": 274,
      "location": "/src/org/ingatan/component/image",
      "name": "ingatan",
      "url": "https://searchcode.com/codesearch/view/141685/",
      "md5hash": "345add3c1dd997e281eabeb1490f3367",
      "lines": {
        "1": "/*",
        "2": " * Thumbnail.java",
        "42": "/**",
        "43": " * Displays an <code>ImageIcon</code> in the style of a thumbnail.",
        "47": " */",
        "48": "public class Thumbnail extends JPanel {",
        "50": "    /**",
        "51": "     * The thumbnail to paint.",
        "52": "     */",
        "53": "    Image thumbnail;",
        "54": "    /**",
        "55": "     * The size of the thumbnail.",
        "58": "    /**",
        "59": "     * Colour of the border of the thumbnail",
        "62": "    /**",
        "63": "     * Colour of the background of the thumbnail."
      },
      "id": 141685,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 99,
      "location": "/dspace-api/src/main/java/org/dspace/content",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109454808/",
      "md5hash": "c09e8b563324382b8c5138ea84f14b29",
      "lines": {
        "1": "/*",
        "2": " * Thumbnail.java",
        "38": "/**",
        "39": " * Wrapper class for bitstreams with Thumbnails associated with them for",
        "44": " */",
        "45": "public class Thumbnail",
        "46": "{",
        "47": "\t/** the bitstream that is actually the thumbnail */",
        "49": "\t",
        "50": "\t/** the original bitstream for which this is the thumbnail */",
        "53": "\t/**",
        "54": "\t * Construct a new thumbnail using the two bitstreams",
        "55": "\t * ",
        "56": "\t * @param thumb\t\tthe thumbnail bitstream\t",
        "58": "\t */",
        "59": "\tpublic Thumbnail(Bitstream thumb, Bitstream original)"
      },
      "id": 109454808,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/generalplus/android_packages_apps_camera.git",
      "language": "Java",
      "linescount": 312,
      "location": "/src/com/android/camera",
      "name": "android_packages_apps_camera",
      "url": "https://searchcode.com/codesearch/view/35464941/",
      "md5hash": "70655e8abe63f7f73570bba0d81bbd5c",
      "lines": {
        "161": "        Media lastMedia;",
        "162": "        // If there is only image or video, get its thumbnail. If both exist,",
        "43": "",
        "44": "public class Thumbnail {",
        "45": "    private static final String TAG = \"Thumbnail\";",
        "149": "        }",
        "150": "        Thumbnail thumbnail = createThumbnail(uri, bitmap, 0);",
        "151": "        if (thumbnail != null) thumbnail.setFromFile(true);",
        "152": "        return thumbnail;",
        "153": "    }",
        "154": "",
        "155": "    public static Thumbnail getLastThumbnail(ContentResolver resolver) {",
        "156": "        Media image = getLastImageThumbnail(resolver);",
        "157": "        Media video = getLastVideoThumbnail(resolver);",
        "158": "        if (image == null && video == null) return null;"
      },
      "id": 35464941,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_packages_apps_camera.git",
      "language": "Java",
      "linescount": 319,
      "location": "/src/com/android/camera",
      "name": "android_packages_apps_camera",
      "url": "https://searchcode.com/codesearch/view/41537165/",
      "md5hash": "2c5dbc67b27fd19a4565cd8934ea0fd8",
      "lines": {
        "160": "    public static final int THUMBNAIL_NOT_FOUND = 0;",
        "161": "    public static final int THUMBNAIL_FOUND = 1;",
        "162": "    // The media is deleted while we are getting its thumbnail from media provider.",
        "163": "    public static final int THUMBNAIL_DELETED = 2;",
        "43": "",
        "44": "public class Thumbnail {",
        "45": "    private static final String TAG = \"Thumbnail\";",
        "46": "",
        "51": "    private Bitmap mBitmap;",
        "52": "    // whether this thumbnail is read from file",
        "154": "        }",
        "155": "        Thumbnail thumbnail = createThumbnail(uri, bitmap, 0);",
        "156": "        if (thumbnail != null) thumbnail.setFromFile(true);",
        "157": "        return thumbnail;",
        "158": "    }",
        "159": ""
      },
      "id": 41537165,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_packages_apps_legacycamera.git",
      "language": "Java",
      "linescount": 312,
      "location": "/src/com/android/camera",
      "name": "android_packages_apps_legacycamera",
      "url": "https://searchcode.com/codesearch/view/41541231/",
      "md5hash": "70655e8abe63f7f73570bba0d81bbd5c",
      "lines": {
        "161": "        Media lastMedia;",
        "162": "        // If there is only image or video, get its thumbnail. If both exist,",
        "43": "",
        "44": "public class Thumbnail {",
        "45": "    private static final String TAG = \"Thumbnail\";",
        "149": "        }",
        "150": "        Thumbnail thumbnail = createThumbnail(uri, bitmap, 0);",
        "151": "        if (thumbnail != null) thumbnail.setFromFile(true);",
        "152": "        return thumbnail;",
        "153": "    }",
        "154": "",
        "155": "    public static Thumbnail getLastThumbnail(ContentResolver resolver) {",
        "156": "        Media image = getLastImageThumbnail(resolver);",
        "157": "        Media video = getLastVideoThumbnail(resolver);",
        "158": "        if (image == null && video == null) return null;"
      },
      "id": 41541231,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 307,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642668/",
      "md5hash": "5b9bf5f3c0bb928eb4cce48ad38f0745",
      "lines": {
        "161": "     * <p>Default Constructor. If you use it then one you'll have to add",
        "162": "     * the thumbnail <code>byte[]</code> from {@link",
        "163": "     * SummaryInformation#getThumbnail()} to do any useful",
        "164": "     * manipulations, otherwise you'll get a",
        "177": "     *",
        "178": "     * @param thumbnailData The thumbnail data",
        "174": "    /**",
        "175": "     * <p>Creates a <code>Thumbnail</code> instance and initializes",
        "48": " * @author Drew Varner (Drew.Varner inOrAround sc.edu)",
        "49": " * @see SummaryInformation#getThumbnail()",
        "50": " * @version $Id: Thumbnail.java 489730 2006-12-22 19:18:16Z bayard $",
        "152": "    /**",
        "153": "     * <p>A <code>byte[]</code> to hold a thumbnail image in ({@link",
        "155": "     */",
        "156": "    private byte[] thumbnailData = null;"
      },
      "id": 15642668,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "git://github.com/CyanogenMod/android_packages_apps_Camera.git",
      "language": "Java",
      "linescount": 312,
      "location": "/src/com/android/camera",
      "name": "android_packages_apps_Camera",
      "url": "https://searchcode.com/codesearch/view/10425148/",
      "md5hash": "8663e1807cf8e76805195477be548478",
      "lines": {
        "161": "        Media lastMedia;",
        "162": "        // If there is only image or video, get its thumbnail. If both exist,",
        "43": "",
        "44": "public class Thumbnail {",
        "45": "    private static final String TAG = \"Thumbnail\";",
        "149": "        }",
        "150": "        Thumbnail thumbnail = createThumbnail(uri, bitmap, 0);",
        "151": "        if (thumbnail != null) thumbnail.setFromFile(true);",
        "152": "        return thumbnail;",
        "153": "    }",
        "154": "",
        "155": "    public static Thumbnail getLastThumbnail(ContentResolver resolver, String bucketId) {",
        "156": "        Media image = getLastImageThumbnail(resolver, bucketId);",
        "157": "        Media video = getLastVideoThumbnail(resolver, bucketId);",
        "158": "        if (image == null && video == null) return null;"
      },
      "id": 10425148,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "http://am2011grupoa.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 130,
      "location": "/P2Photo/src/main/java/edu/upf/grupoa/P2Photo/Media/impl",
      "name": "am2011grupoa",
      "url": "https://searchcode.com/codesearch/view/12452284/",
      "md5hash": "c242bd8b489c4c8a83249e174fd40fe2",
      "lines": {
        "2": "",
        "3": "import edu.upf.grupoa.P2Photo.Media.ThumbnailInterface;",
        "14": " */",
        "15": "public class Thumbnail implements ThumbnailInterface, Serializable {",
        "16": "    /*",
        "17": "     * Esta clase representa el thumbnail de una imagen, utilizaremos",
        "19": "     */",
        "20": "    private static String DEFAULT_THUMBNAIL = \"defaultthumbnail.png\";",
        "21": "    private final static Log log = LogFactory.getLog(Thumbnail.class);",
        "22": "",
        "23": "    private ImageIcon thumbnail;",
        "24": "",
        "25": "    public Thumbnail(){",
        "26": "        this.thumbnail = new ImageIcon(DEFAULT_THUMBNAIL);",
        "27": "        switch (this.thumbnail.getImageLoadStatus()){"
      },
      "id": 12452284,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "http://gdata-java-client.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 135,
      "location": "/java/src/com/google/api/gbase/client",
      "name": "gdata-java-client",
      "url": "https://searchcode.com/codesearch/view/228323/",
      "md5hash": "c8ddf7f884713d9045bbcb45ba091391",
      "lines": {
        "33": "  ",
        "34": "  /** Thumbnail height, expressed in pixels. Null if not set. */",
        "37": "  /** ",
        "38": "   * Returns the Url pointing to the thumbnail image.",
        "44": "  /**",
        "45": "   * Sets the Url that should point to the thumbnail image.",
        "19": "/**",
        "20": " * Class representing parsed information for one thumbnail: the size (in pixels)",
        "54": "   * ",
        "55": "   * @return the width of the thumbnail, expressed in pixels",
        "56": "   * @throws IllegalStateException if the thumbnail size information is not set",
        "25": " */",
        "26": "public final class Thumbnail {",
        "27": "  ",
        "28": "  /** Url pointing to the thumbnail. */",
        "30": "",
        "31": "  /** Thumbnail width, expressed in pixels. Null if not set. */"
      },
      "id": 228323,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/jyukopla/gwt-bootstrap.git",
      "language": "Java",
      "linescount": 64,
      "location": "/src/main/java/com/github/gwtbootstrap/client/ui",
      "name": "gwt-bootstrap",
      "url": "https://searchcode.com/codesearch/view/47019558/",
      "md5hash": "342ddb4dc75db703db0750d85d7666f9",
      "lines": {
        "10": "/**",
        "11": " * The Thumbnail container",
        "14": " * @author ohashi keisuke",
        "15": " * @see Thumbnails",
        "16": " * @see ThumbnailLink",
        "17": " * @see <a href=\"http://getbootstrap.com/2.3.2/components.html#thumbnails\">Twitter Bootstrap Documentation</a>",
        "18": " */",
        "19": "public class Thumbnail extends ListItem implements HasSize {",
        "20": "",
        "21": "    DivWidget thumbnail = new DivWidget();",
        "25": "     */",
        "26": "    public Thumbnail() {",
        "27": "        super();",
        "28": "        thumbnail.setStyleName(Constants.THUMBNAIL);",
        "29": "        super.add(thumbnail);"
      },
      "id": 47019558,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/iraknes/inf-3791-project-2-authentication.git",
      "language": "Java",
      "linescount": 48,
      "location": "/build/generated/jax-wsCache/CalendarQuery_Service/org/hl7/v3",
      "name": "inf-3791-project-2-authentication",
      "url": "https://searchcode.com/codesearch/view/40145589/",
      "md5hash": "a5083068515331308b4e24d4d2c77b2c",
      "lines": {
        "43": "    extends ED",
        "40": "@XmlAccessorType(XmlAccessType.FIELD)",
        "41": "@XmlType(name = \"thumbnail\")",
        "10": " * ",
        "11": " *                      A thumbnail is an abbreviated rendition of the full",
        "12": " *                      data. A thumbnail requires significantly fewer",
        "13": " *                      resources than the full data, while still maintaining",
        "14": " *                      some distinctive similarity with the full data. A",
        "15": " *                      thumbnail is typically used with by-reference",
        "20": " * ",
        "21": " * <p>Java class for thumbnail complex type.",
        "25": " * <pre>",
        "26": " * &lt;complexType name=\"thumbnail\">",
        "42": "public class Thumbnail",
        "30": " *         &lt;element name=\"reference\" type=\"{urn:hl7-org:v3}TEL\" minOccurs=\"0\"/>",
        "31": " *         &lt;element name=\"thumbnail\" type=\"{urn:hl7-org:v3}thumbnail\" maxOccurs=\"0\" minOccurs=\"0\"/>"
      },
      "id": 40145589,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "http://dspace-semantic-search.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 73,
      "location": "/dspace-api/src/main/java/org/dspace/content",
      "name": "dspace-semantic-search",
      "url": "https://searchcode.com/codesearch/view/11613340/",
      "md5hash": "84b10c7ec2857b0b8a5fa06b27129ffb",
      "lines": {
        "32": "\t */",
        "33": "\tpublic Thumbnail(Bitstream thumb, Bitstream original)",
        "12": "/**",
        "13": " * Wrapper class for bitstreams with Thumbnails associated with them for",
        "18": " */",
        "19": "public class Thumbnail",
        "20": "{",
        "21": "\t/** the bitstream that is actually the thumbnail */",
        "23": "\t",
        "24": "\t/** the original bitstream for which this is the thumbnail */",
        "27": "\t/**",
        "28": "\t * Construct a new thumbnail using the two bitstreams",
        "29": "\t * ",
        "30": "\t * @param thumb\t\tthe thumbnail bitstream\t"
      },
      "id": 11613340,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "http://am2011grupoa.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 29,
      "location": "/Deliverable1/src/main/java/edu/upf/grupoa/Deliverable1/Media/impl",
      "name": "am2011grupoa",
      "url": "https://searchcode.com/codesearch/view/12452197/",
      "md5hash": "b6a36f05c14f6d69bdcd0cd5ff3142ce",
      "lines": {
        "2": "",
        "3": "import edu.upf.grupoa.Deliverable1.Media.ThumbnailInterface;",
        "10": " */",
        "11": "public class Thumbnail implements ThumbnailInterface, Serializable{",
        "12": "    /*",
        "13": "     * Esta clase representa el thumbnail de una imagen, utilizaremos",
        "15": "     */",
        "16": "    private RenderedImage thumbnail;",
        "18": "    @Override",
        "19": "    public void setThumbnail(RenderedImage thumbnail) {",
        "20": "        this.thumbnail = thumbnail;",
        "21": "    }",
        "23": "    @Override",
        "24": "    public RenderedImage getThumbnail(){",
        "25": "        return this.thumbnail;"
      },
      "id": 12452197,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/ajurzyk/mpdgui",
      "language": "Java",
      "linescount": 57,
      "location": "/src/main/java/org/ajurzyk/mpdplayer/gui/thumbs",
      "name": "mpdgui",
      "url": "https://searchcode.com/codesearch/view/54786420/",
      "md5hash": "e50eea36d086325dfb16d543214ed567",
      "lines": {
        "32": "  /**",
        "33": "   * Get artist connected to this thumbnail.",
        "34": "   * @return artist connected to this thumbnail",
        "35": "   */",
        "38": "  /**",
        "39": "   * Get thumbnail name.",
        "40": "   * @return thumbnail name",
        "41": "   */",
        "42": "  public abstract String getThumbnailName();",
        "44": "  /**",
        "45": "   * Get list of MPDSong connected with this thumbnail.",
        "46": "   * @return list of MPDSong connected with this thumbnail",
        "47": "   */",
        "50": "  /**",
        "51": "   * Get prefered file name for this thumbnail.",
        "52": "   * @return file name for this thumbnail"
      },
      "id": 54786420,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://github.com/cyberfox/jbidwatcher.git",
      "language": "Java",
      "linescount": 67,
      "location": "/src/com/jbidwatcher/auction",
      "name": "jbidwatcher",
      "url": "https://searchcode.com/codesearch/view/64677479/",
      "md5hash": "0b8cd35edc6aa77d0fb70586567359e9",
      "lines": {
        "41": "      if (!conversionAttempted.exists()) {",
        "42": "        String maxWidthString = JConfig.queryConfiguration(\"thumbnail.maxWidth\", \"512\");",
        "43": "        String prefWidthString = JConfig.queryConfiguration(\"thumbnail.prefWidth\", \"256\");",
        "44": "        String maxHeightString = JConfig.queryConfiguration(\"thumbnail.maxHeight\", \"512\");",
        "45": "        String prefHeightString = JConfig.queryConfiguration(\"thumbnail.prefWidth\", \"256\");",
        "46": "        int maxWidth = Integer.parseInt(maxWidthString);",
        "15": " *",
        "16": " * Utility class to handle the thumbnail files, finding them, saving",
        "18": " */",
        "19": "public class Thumbnail {",
        "53": "          try {",
        "54": "            //  Create a mark file that notes that the thumbnail was"
      },
      "id": 64677479,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://github.com/prashant31191/Camera_7025.git",
      "language": "Java",
      "linescount": 304,
      "location": "/src/com/android/camera",
      "name": "Camera_7025",
      "url": "https://searchcode.com/codesearch/view/100185788/",
      "md5hash": "cb7eb1f03daeefb13afcbdec1bbafd0c",
      "lines": {
        "150": "        if (image == null && video == null) return null;",
        "43": "",
        "44": "public class Thumbnail {",
        "45": "    private static final String TAG = \"Thumbnail\";",
        "142": "        Thumbnail thumbnail = createThumbnail(uri, bitmap, 0);",
        "143": "        if (thumbnail != null) thumbnail.setFromFile(true);",
        "144": "        return thumbnail;",
        "145": "    }",
        "146": "",
        "147": "    public static Thumbnail getLastThumbnail(ContentResolver resolver) {",
        "148": "        Media image = getLastImageThumbnail(resolver);",
        "149": "        Media video = getLastVideoThumbnail(resolver);",
        "141": "        }",
        "153": "        Media lastMedia;",
        "154": "        // If there is only image or video, get its thumbnail. If both exist,",
        "155": "        // get the thumbnail of the one that is newer.",
        "156": "        if (image != null && (video == null || image.dateTaken >= video.dateTaken)) {"
      },
      "id": 100185788,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://bitbucket.org/javirosa/greenwifiucb",
      "language": "Java",
      "linescount": 135,
      "location": "/CCBridge/gdata/java/src/com/google/api/gbase/client",
      "name": "greenwifiucb",
      "url": "https://searchcode.com/codesearch/view/125256484/",
      "md5hash": "c8ddf7f884713d9045bbcb45ba091391",
      "lines": {
        "33": "  ",
        "34": "  /** Thumbnail height, expressed in pixels. Null if not set. */",
        "37": "  /** ",
        "38": "   * Returns the Url pointing to the thumbnail image.",
        "44": "  /**",
        "45": "   * Sets the Url that should point to the thumbnail image.",
        "19": "/**",
        "20": " * Class representing parsed information for one thumbnail: the size (in pixels)",
        "54": "   * ",
        "55": "   * @return the width of the thumbnail, expressed in pixels",
        "56": "   * @throws IllegalStateException if the thumbnail size information is not set",
        "25": " */",
        "26": "public final class Thumbnail {",
        "27": "  ",
        "28": "  /** Url pointing to the thumbnail. */",
        "30": "",
        "31": "  /** Thumbnail width, expressed in pixels. Null if not set. */"
      },
      "id": 125256484,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://github.com/zouzhihui/androidTools.git",
      "language": "Java",
      "linescount": 303,
      "location": "/android\u5de5\u5177\u7c7b",
      "name": "androidTools",
      "url": "https://searchcode.com/codesearch/view/100208900/",
      "md5hash": "8b39d2dd756b301ea204b121a5f5ea9d",
      "lines": {
        "32": "     * @param bitmap",
        "33": "     * @return Thumbnail object",
        "34": "     */",
        "35": "    public static Thumbnail create(Bitmap bitmap)",
        "36": "    {",
        "37": "        return new Thumbnail(bitmap);",
        "166": "     */",
        "167": "    public Thumbnail centerCrop(int width, int height, int backgroundColor)",
        "257": "    private Thumbnail fixDirection(int direction)",
        "256": "     */",
        "16": " */",
        "17": "public class Thumbnail",
        "23": "        ",
        "24": "    public Thumbnail(Bitmap bitmap)",
        "153": "     */",
        "154": "    public Thumbnail centerCrop(int width, int height)"
      },
      "id": 100208900,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://github.com/vara/navigps.git",
      "language": "Java",
      "linescount": 530,
      "location": "/src/main/java/app/navigps/gui/svgComponents/Thumbnail",
      "name": "navigps",
      "url": "https://searchcode.com/codesearch/view/139643452/",
      "md5hash": "a2743747bb411db828431d5b674bfa98",
      "lines": {
        "64": " * @author <a href=\"mailto:war29@wp.pl\">\"modyfi\" Grzegorz Warywoda 2009-02-15 13:27",
        "65": " * @version $Id: Thumbnail.java 592619 2007-11-07 05:47:24Z cam $",
        "66": " */",
        "67": "public class Thumbnail extends AlphaJPanel {",
        "102": "        this.svgCanvas = svgCanvas;",
        "97": "     */",
        "103": "        svgCanvas.addGVTTreeRendererListener(new ThumbnailGVTListener());",
        "75": "     */",
        "76": "    protected JGVTComponent svgThumbnailCanvas;",
        "98": "    public Thumbnail(Canvas svgCanvas) {",
        "104": "        svgCanvas.addSVGDocumentLoaderListener(new ThumbnailDocumentListener());",
        "18": " */",
        "19": "package app.navigps.gui.svgComponents.Thumbnail;",
        "59": "/**",
        "60": " * This class represents a alpha panel that displays a Thumbnail of the current SVG"
      },
      "id": 139643452,
      "filename": "Thumbnail.java"
    },
    {
      "repo": "https://hg01.codeplex.com/bbing",
      "language": "Java",
      "linescount": 66,
      "location": "/BBOS/src/bing/common",
      "name": "bbing",
      "url": "https://searchcode.com/codesearch/view/475361/",
      "md5hash": "70ba9b7f8ccb7e13e29b8757d03e5962",
      "lines": {
        "16": " */",
        "17": "public class Thumbnail extends BingResult",
        "18": "{",
        "19": "\tpublic Thumbnail()",
        "23": "\t",
        "24": "\tpublic Thumbnail(Hashtable dict)",
        "14": "/**",
        "15": " * Thumbnail for a static image."
      },
      "id": 475361,
      "filename": "Thumbnail.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2377,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 2130,
      "source": "Github",
      "id": 2
    },
    {
      "count": 651,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 21,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 15,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 11,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 4,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 3,
      "source": "Unknown",
      "id": 0
    }
  ]
}