{
  "matchterm": "AreaReference",
  "previouspage": null,
  "searchterm": "AreaReference",
  "query": "AreaReference",
  "language_filters": [
    {
      "count": 41,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 41,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 104,
      "location": "/components/forks/poi/src/loci/poi/hssf/util",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642344/",
      "md5hash": "df7c34ab8d197419fee14cb8d3f94623",
      "lines": {
        "51": "    public AreaReference(String reference) {",
        "42": "",
        "43": "public class AreaReference {",
        "50": "     */"
      },
      "id": 15642344,
      "filename": "AreaReference.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 40,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854588/",
      "md5hash": "75768c57522bf31c2237a3e2bdf34def",
      "lines": {
        "33": "        String formula = name.getRefersToFormula();",
        "2": "",
        "3": "import org.apache.poi.hssf.util.AreaReference;",
        "36": "        CellReference lastCellReference = areaReference.getLastCell();",
        "37": "        return new Range(workbook.getSheet(sheetName), firstCellReference.getCol(), firstCellReference.getRow(), lastCellReference.getCol(), lastCellReference.getRow());",
        "35": "        CellReference firstCellReference = areaReference.getFirstCell();",
        "34": "        AreaReference areaReference = new AreaReference(formula);"
      },
      "id": 72854588,
      "filename": "NamedRangeXSSFImpl.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 46,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/hssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854613/",
      "md5hash": "6d7896824d188b80c277a454ec717d48",
      "lines": {
        "43": "        return new Range(workbook.getSheet(sheetName), firstCellReference.getCol(), firstCellReference.getRow(), lastCellReference.getCol(), lastCellReference.getRow());",
        "41": "        CellReference firstCellReference = areaReference.getFirstCell();",
        "40": "        AreaReference areaReference = new AreaReference(formula);",
        "9": "import org.apache.poi.hssf.usermodel.HSSFName;",
        "10": "import org.apache.poi.hssf.util.AreaReference;",
        "39": "        String formula = name.getRefersToFormula();",
        "42": "        CellReference lastCellReference = areaReference.getLastCell();"
      },
      "id": 72854613,
      "filename": "NamedRangeHSSFImpl.java"
    },
    {
      "repo": "https://github.com/myGrid/simple-spreadsheet-extractor.git",
      "language": "Java",
      "linescount": 387,
      "location": "/src/main/java/org/sysmodb/xml",
      "name": "simple-spreadsheet-extractor",
      "url": "https://searchcode.com/codesearch/view/110498474/",
      "md5hash": "0fed632f7793d1d3fbb576bed59a234a",
      "lines": {
        "16": "import org.apache.poi.hssf.util.AreaReference;",
        "290": "\t\t\t\t\tString formula = name.getRefersToFormula();",
        "291": "\t\t\t\t\tAreaReference areaReference = new AreaReference(formula);",
        "292": "\t\t\t\t\tCellReference firstCellReference = areaReference",
        "293": "\t\t\t\t\t\t\t.getFirstCell();",
        "294": "\t\t\t\t\tCellReference lastCellReference = areaReference",
        "15": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;"
      },
      "id": 110498474,
      "filename": "XMLGeneration.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 1375,
      "location": "/src/main/java/org/comsoft/juniprint/utils",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212069/",
      "md5hash": "c11a8c0e57714af4cf1eeffb5ef652f0",
      "lines": {
        "160": "\t\t\t\t\tAreaReference areaRef = new AreaReference(name.getReference());",
        "320": "",
        "230": "\tpublic static Boolean hasFormula(HSSFSheet sh, int topLeftRow, int topLeftCol, int botRightRow, int botRightCol){",
        "231": "\t\treturn hasFormula(sh, new AreaReference(new CellReference(topLeftRow,  topLeftCol), ",
        "42": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "43": "import org.apache.poi.ss.util.AreaReference;",
        "321": "\tpublic static void clear(HSSFSheet sh, AreaReference aRef){",
        "559": "\t\tfill(sh, new AreaReference(new CellReference(row,  0), ",
        "563": "\tpublic static void fillPathRow(HSSFSheet sh, int row, int leftCol, int rightCol, Object valueFill, byte lookIn){",
        "564": "\t\tfill(sh, new AreaReference(new CellReference(row,  leftCol), ",
        "558": "\tpublic static void fillRow(HSSFSheet sh, int row, Object valueFill, byte lookIn){",
        "313": "\tpublic static void clear(HSSFSheet sh, String strRef){",
        "314": "\t\tclear(sh, new AreaReference(strRef));",
        "317": "\tpublic static void clear(HSSFSheet sh, CellReference cellRef){",
        "318": "\t\tclear(sh, new AreaReference(cellRef, cellRef));",
        "159": "\t\t\t\t\tHSSFName name =  mapShNames.get(key);"
      },
      "id": 60212069,
      "filename": "ExcelUtils.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 2096,
      "location": "/src/main/java/org/comsoft/juniprint",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212057/",
      "md5hash": "e9487002cf69dbd9246766c01c968b73",
      "lines": {
        "1632": "\t\tif (nameDataBeg != null){",
        "1633": "\t\t\tAreaReference areaDataBeg = new AreaReference(nameDataBeg.getRefersToFormula());",
        "555": "\t\tif(ExcelUtils.getCell(sheet, wRow, 0).getCellType() == HSSFCell.CELL_TYPE_BLANK){",
        "964": "\t\t\tAreaReference areaRef = new AreaReference(keyPageSeries[k] +\"\"+(wRow+1) + \":\" + keyPageSeries[k]+\"\"+(rowNameDataRangeE+1));",
        "1989": "\t\t\t\tAreaReference cellAHRef = new AreaReference(cellAH);",
        "199": "\tprivate String unC;",
        "200": "\tprivate List<AreaReference> hideOneRow, hideFewRow;",
        "556": "\t\t\tAreaReference areaReferance = new AreaReference(\"A\"+(wRow+1)+\":A\"+(ExcelUtils.getReferanceNameRange(nameDataRangeE).getFirstCell().getRow()));",
        "1354": "\t\t\t\tfor(AreaReference area:hideFewRow){",
        "43": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "1324": "\t\t\t\t\tCellRangeAddress crB = new CellRangeAddress(j, i, 0, ExcelUtils.xlMaxNumCol-1);  ",
        "1325": "\t\t\t\t\tfor(AreaReference area:hideOneRow){",
        "44": "import org.apache.poi.ss.util.AreaReference;",
        "963": "\t\t\tExcelUtils.fill(sh, keyPageSeries[k]+\"\"+(wRow+1), 1, ExcelUtils.xlValues);",
        "1353": "\t\t\t\tboolean wRHidden = false;",
        "1988": "\t\t\t\t//if (cellAH.equals(\"B4\")) continue;"
      },
      "id": 60212057,
      "filename": "JUniPrint.java"
    },
    {
      "repo": "https://bitbucket.org/yaytay/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 256,
      "location": "/SpudSoft BIRT Excel Emitters Tests/src/uk/co/spudsoft/birt/emitters/excel/tests",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/122565050/",
      "md5hash": "f8faede403b1109c7b4fd3eb5a5a1f8b",
      "lines": {
        "32": "import org.apache.poi.ss.util.AreaReference;",
        "52": "        } else {",
        "53": "        \tassertTrue( AreaReference.isContiguous( namedRange.getRefersToFormula() ) );",
        "45": "        ",
        "46": "        AreaReference ref = new AreaReference( namedRange.getRefersToFormula() );",
        "31": "import org.apache.poi.ss.usermodel.Workbook;"
      },
      "id": 122565050,
      "filename": "HyperlinksTest.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 581,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260417/",
      "md5hash": "b56c24394a47007cf530c57d9629f9b9",
      "lines": {
        "288": "            data[pos] != cellReference &&",
        "289": "            data[pos] != areaReference)",
        "326": "              data[pos] != cellReference &&",
        "241": "      }",
        "327": "              data[pos] != areaReference)",
        "434": "            data[pos] != cellReference &&",
        "242": "      else if (data[pos] == areaReference)",
        "398": "      else if (data[pos] == areaReference)",
        "397": "      }",
        "464": "              data[pos] != areaReference)",
        "81": "  private static final int cellReference = 0x3a;",
        "82": "  private static final int areaReference = 0x3b;",
        "435": "            data[pos] != areaReference)",
        "463": "              data[pos] != cellReference &&"
      },
      "id": 43260417,
      "filename": "NameRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 581,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200945/",
      "md5hash": "b56c24394a47007cf530c57d9629f9b9",
      "lines": {
        "288": "            data[pos] != cellReference &&",
        "289": "            data[pos] != areaReference)",
        "326": "              data[pos] != cellReference &&",
        "241": "      }",
        "327": "              data[pos] != areaReference)",
        "434": "            data[pos] != cellReference &&",
        "242": "      else if (data[pos] == areaReference)",
        "398": "      else if (data[pos] == areaReference)",
        "397": "      }",
        "464": "              data[pos] != areaReference)",
        "81": "  private static final int cellReference = 0x3a;",
        "82": "  private static final int areaReference = 0x3b;",
        "435": "            data[pos] != areaReference)",
        "463": "              data[pos] != cellReference &&"
      },
      "id": 49200945,
      "filename": "NameRecord.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 225,
      "location": "/zss/src/org/zkoss/zss/model",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970670/",
      "md5hash": "59cc2f899776553a59596c50151b3bd5",
      "lines": {
        "64": "\t",
        "65": "\tprivate static AreaReference getAreaReference(Worksheet sheet, String reference) {",
        "83": "\t\t\t\t\t\tref = new AreaReference(c1, c2);",
        "147": "\t * @param sheet the {@link Worksheet} the Range will refer to.",
        "144": "\t/** Returns the associated {@link Range} of the specified {@link Worksheet} and AreaReference. note that if AreaReference ",
        "75": "",
        "76": "\t\tAreaReference ref = null;",
        "82": "\t\t\t\t\tif (c2.getCol() <= maxcol && c2.getRow() <= maxrow) {",
        "143": "\t",
        "48": "\tpublic static Range range(Worksheet sheet, String reference) {",
        "49": "\t\tAreaReference ref = getAreaReference(sheet, reference);",
        "18": "import org.zkoss.poi.ss.usermodel.Workbook;",
        "19": "import org.zkoss.poi.ss.util.AreaReference;",
        "148": "\t * @param ref the AreaReference the Range will refer to.",
        "85": "\t\t\t\t} else {",
        "86": "\t\t\t\t\tref = new AreaReference(c1, c2);"
      },
      "id": 3970670,
      "filename": "Ranges.java"
    },
    {
      "repo": "https://bitbucket.org/manticoretrader/etltools",
      "language": "Java",
      "linescount": 91,
      "location": "/src/com/manticore/report",
      "name": "etltools",
      "url": "https://searchcode.com/codesearch/view/121321561/",
      "md5hash": "7b68c9964bb208d63c4c92c259779657",
      "lines": {
        "32": "import org.apache.poi.ss.usermodel.WorkbookFactory;",
        "33": "import org.apache.poi.ss.util.AreaReference;",
        "77": "        // retrieve the cell at the named range and test its contents",
        "78": "        AreaReference aref = new AreaReference(aNamedCell.getRefersToFormula());"
      },
      "id": 121321561,
      "filename": "FormulaTest.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 656,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260322/",
      "md5hash": "f59e17e90ea58a9c5f0205081e466c17",
      "lines": {
        "384": "    if (ranges.length > 1)",
        "402": "      // Range format - area",
        "403": "      data[pos] = areaReference;",
        "149": "  private static final int cellReference = 0x3a;",
        "150": "  private static final int areaReference = 0x3b;",
        "392": "      {",
        "393": "        data[pos++] = areaReference;",
        "381": "    // If there are multiple ranges for the name, we must specify a ",
        "382": "    // subExpression type rather than areaReference and then put out ",
        "383": "    // multiple areaReference entries with an end byte."
      },
      "id": 43260322,
      "filename": "NameRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 656,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200850/",
      "md5hash": "f59e17e90ea58a9c5f0205081e466c17",
      "lines": {
        "384": "    if (ranges.length > 1)",
        "402": "      // Range format - area",
        "403": "      data[pos] = areaReference;",
        "149": "  private static final int cellReference = 0x3a;",
        "150": "  private static final int areaReference = 0x3b;",
        "392": "      {",
        "393": "        data[pos++] = areaReference;",
        "381": "    // If there are multiple ranges for the name, we must specify a ",
        "382": "    // subExpression type rather than areaReference and then put out ",
        "383": "    // multiple areaReference entries with an end byte."
      },
      "id": 49200850,
      "filename": "NameRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 581,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/read/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374448/",
      "md5hash": "b56c24394a47007cf530c57d9629f9b9",
      "lines": {
        "288": "            data[pos] != cellReference &&",
        "289": "            data[pos] != areaReference)",
        "326": "              data[pos] != cellReference &&",
        "241": "      }",
        "327": "              data[pos] != areaReference)",
        "434": "            data[pos] != cellReference &&",
        "242": "      else if (data[pos] == areaReference)",
        "398": "      else if (data[pos] == areaReference)",
        "397": "      }",
        "464": "              data[pos] != areaReference)",
        "81": "  private static final int cellReference = 0x3a;",
        "82": "  private static final int areaReference = 0x3b;",
        "435": "            data[pos] != areaReference)",
        "463": "              data[pos] != cellReference &&"
      },
      "id": 11374448,
      "filename": "NameRecord.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 209,
      "location": "/src/test/java/org/comsoft/juniprint",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212055/",
      "md5hash": "73848b8a809e5fbb6daabef0c1ce2599",
      "lines": {
        "100": "",
        "101": "\t\t\t\tAreaReference areaDataBeg = new AreaReference(nameDataBeg.getRefersToFormula());",
        "42": "",
        "43": "\t\t\t\tAreaReference areaDataBeg = new AreaReference(nameDataBeg.getRefersToFormula());",
        "12": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "13": "import org.apache.poi.hssf.util.AreaReference;"
      },
      "id": 60212055,
      "filename": "JUniPrintTest.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint-reports-engine",
      "language": "Java",
      "linescount": 219,
      "location": "/src/main/java/org/comsoft/reporting/engine",
      "name": "juniprint-reports-engine",
      "url": "https://searchcode.com/codesearch/view/60336976/",
      "md5hash": "98873ba74938bc6cc5d14d4be5beed31",
      "lines": {
        "96": "\t\t\t\t\t\tAreaReference paramCellAreaRef = new AreaReference(paramCellName.getRefersToFormula());",
        "36": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "37": "import org.apache.poi.hssf.util.AreaReference;",
        "109": "",
        "110": "\t\t\t\tAreaReference areaDataBeg = new AreaReference(nameDataBeg.getRefersToFormula());",
        "95": "\t\t\t\t\t\tHSSFSheet paramCellSheet = wb.getSheet(paramCellName.getSheetName());"
      },
      "id": 60336976,
      "filename": "JUniPrintReportsEngine.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 207,
      "location": "/nuclos-server/src/main/java/org/nuclos/server/common/ooxml",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46076963/",
      "md5hash": "c0bffaa85f1edfa557338d7341487bcf",
      "lines": {
        "160": "\tprivate Object[][] getAreaValueArray(AreaReference ar) {",
        "33": "import org.apache.poi.ss.usermodel.WorkbookFactory;",
        "34": "import org.apache.poi.ss.util.AreaReference;",
        "109": "\t\t} else {",
        "110": "\t\t\tAreaReference ar = new AreaReference(cellName);",
        "159": ""
      },
      "id": 46076963,
      "filename": "ExcelReader.java"
    },
    {
      "repo": "http://red-piranha.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 141,
      "location": "/src/net/firstpartners/spreadsheet",
      "name": "red-piranha",
      "url": "https://searchcode.com/codesearch/view/8520531/",
      "md5hash": "10555513650001cb95bfba63e5f95e55",
      "lines": {
        "48": "\t\t\t// retrieve the cell at the named range and test its contents",
        "49": "\t\t\tAreaReference aref = new AreaReference(aNamedRage.getReference());",
        "103": "\t\t\t// retrieve the cell at the named range and test its contents",
        "104": "\t\t\tAreaReference aref = new AreaReference(aNamedCell.getReference());",
        "11": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "12": "import org.apache.poi.hssf.util.AreaReference;"
      },
      "id": 8520531,
      "filename": "RangeConvertor.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 48,
      "location": "/src/main/java/org/comsoft/juniprint/utils",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212071/",
      "md5hash": "cea9caed12ad369ecca3a72a5c700b52",
      "lines": {
        "32": "\tpublic ExcelBuffer(HSSFSheet srcSheet, AreaReference areaRef, Map<String, ExcelCell> listCell) {",
        "37": "\t}",
        "38": "\tpublic AreaReference getAreaRef() {",
        "24": "import org.apache.poi.hssf.usermodel.HSSFSheet;",
        "25": "import org.apache.poi.ss.util.AreaReference;",
        "28": "public class ExcelBuffer {",
        "29": "\tprivate AreaReference areaRef;",
        "31": "\tprivate HSSFSheet srcSheet;"
      },
      "id": 60212071,
      "filename": "ExcelBuffer.java"
    },
    {
      "repo": "https://bitbucket.org/xunchangguo/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 251,
      "location": "/SpudSoft BIRT Excel Emitters Tests/src/uk/co/spudsoft/birt/emitters/excel/tests",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/64531339/",
      "md5hash": "9076b1c73b397f3f80c3b198e5dfd353",
      "lines": {
        "52": "        ",
        "53": "        AreaReference ref = new AreaReference( namedRange.getRefersToFormula() );",
        "38": "import org.apache.poi.ss.usermodel.Workbook;",
        "39": "import org.apache.poi.ss.util.AreaReference;",
        "59": "        } else {",
        "60": "        \tassertTrue( AreaReference.isContiguous( namedRange.getRefersToFormula() ) );"
      },
      "id": 64531339,
      "filename": "HyperlinksTest.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 15,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 14,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 12,
      "source": "Github",
      "id": 2
    }
  ]
}