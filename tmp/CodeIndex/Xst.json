{
  "matchterm": "Xst",
  "previouspage": null,
  "searchterm": "Xst",
  "query": "Xst",
  "language_filters": [
    {
      "count": 29,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 29,
  "results": [
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 150,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384126/",
      "md5hash": "1c9ab6a0acff3b14af8410d387d1cc1b",
      "lines": {
        "33": " */",
        "34": "public class Xst",
        "69": "",
        "70": "    public Xst( String str )",
        "47": "",
        "48": "    public Xst()",
        "146": "    {",
        "147": "        return new String( \"Xst [\" + _cch + \"; \" + _rgtchar + \"]\" );",
        "84": "            return false;",
        "53": "",
        "54": "    public Xst( byte[] data, int startOffset )",
        "25": "/**",
        "26": " * The Xst structure is a string. The string is prepended by its length and is",
        "85": "        Xst other = (Xst) obj;"
      },
      "id": 97384126,
      "filename": "Xst.java"
    },
    {
      "repo": "https://bitbucket.org/dyp/geotools.git",
      "language": "Java",
      "linescount": 569,
      "location": "/spike/jan/gsoc-transformations/src/main/java/org/geotools/referencing/operation/transform",
      "name": "geotools",
      "url": "https://searchcode.com/codesearch/view/47131294/",
      "md5hash": "aa2dc80d21403b1ecf685757b87ca98d",
      "lines": {
        "257": "     * when shifts are smaller than grid cells.",
        "258": "     * @param xStart",
        "259": "     * @param xStep",
        "260": "     * @param xNumCells",
        "294": "     //   if (inverse == null) {",
        "295": "            inverse = calculateInverse(((WarpGrid) getWarp()).getXStart(),",
        "296": "                    ((WarpGrid) getWarp()).getXStep(), ((WarpGrid) getWarp()).getXNumCells(),",
        "266": "     */",
        "267": "    private WarpGridTransform2D calculateInverse(int xStart, int xStep, int xNumCells, int yStart,",
        "274": "            for (int j = 0; j <= xNumCells; j++) {",
        "275": "                inversePos[(i * ((1 + xNumCells) * 2)) + (2 * j)] = (2 * ((j * xStep) + xStart))",
        "150": "            int c = 0;",
        "151": "            p[c++] = new Parameter(Provider.X_START, ((WarpGrid) getWarp()).getXStart()); //new Integer(((WarpGrid)super.getWarp()).getXStart()));",
        "152": "            p[c++] = new Parameter(Provider.X_STEP, ((WarpGrid) getWarp()).getXStep());",
        "153": "            p[c++] = new Parameter(Provider.X_NUMCELLS, ((WarpGrid) getWarp()).getXNumCells());",
        "283": "    \t}",
        "284": "        WarpGridTransform2D wgt = new WarpGridTransform2D(xStart, xStep, xNumCells, yStart, yStep,"
      },
      "id": 47131294,
      "filename": "WarpGridTransform2D.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 270,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384065/",
      "md5hash": "9b1ed77d0b27e7f155e2a74d1d59ba8c",
      "lines": {
        "187": "        offset += _xst.getSize();",
        "188": "",
        "46": "    /**",
        "47": "     * An Xst that specifies the number text that begins each paragraph in this",
        "49": "     * from the other paragraphs in the list. Any element in the rgtchar field",
        "50": "     * of this Xst can be a placeholder. Each placeholder is an unsigned 2-byte",
        "148": "    {",
        "149": "        return _xst.getAsJavaString();",
        "189": "        /*",
        "186": "        _xst = new Xst( data, offset );",
        "185": "",
        "154": "        return LVLF.getSize() + _lvlf.getCbGrpprlChpx()",
        "155": "                + _lvlf.getCbGrpprlPapx() + _xst.getSize();",
        "28": " * a list. When a paragraph is formatted as part of this level, each placeholder",
        "29": " * in xst is replaced with the inherited level number of the most recent or",
        "190": "         * \"If this level uses bullets (see lvlf.nfc), the cch field of this Xst"
      },
      "id": 97384065,
      "filename": "ListLevel.java"
    },
    {
      "repo": "https://bitbucket.org/adoptopenjdk/jdk8-jaxws",
      "language": "Java",
      "linescount": 95,
      "location": "/src/share/jaxws_classes/com/sun/xml/internal/bind/v2/model/impl",
      "name": "jdk8-jaxws",
      "url": "https://searchcode.com/codesearch/view/137357427/",
      "md5hash": "4e6d5fb6d733309dc6a6f0cf2c0b506f",
      "lines": {
        "64": "                values[0] = xst;",
        "49": "",
        "50": "        XmlSchemaType xst = primarySource.readAnnotation(XmlSchemaType.class);",
        "51": "        if(xst!=null) {",
        "52": "            return new QName(xst.namespace(),xst.name());",
        "53": "        }",
        "55": "        // check the defaulted annotation",
        "56": "        XmlSchemaTypes xsts = reader.getPackageAnnotation(XmlSchemaTypes.class,enclosingClass,src);",
        "57": "        XmlSchemaType[] values = null;",
        "58": "        if(xsts!=null)",
        "59": "            values = xsts.value();",
        "60": "        else {",
        "61": "            xst = reader.getPackageAnnotation(XmlSchemaType.class,enclosingClass,src);",
        "62": "            if(xst!=null) {",
        "63": "                values = new XmlSchemaType[1];"
      },
      "id": 137357427,
      "filename": "Util.java"
    },
    {
      "repo": "https://github.com/javagems/jaxb-impl.git",
      "language": "Java",
      "linescount": 106,
      "location": "/src/com/sun/xml/bind/v2/model/impl",
      "name": "jaxb-impl",
      "url": "https://searchcode.com/codesearch/view/106226835/",
      "md5hash": "fb8661077579e98d7a087868b8235f63",
      "lines": {
        "64": "        }",
        "66": "        // check the defaulted annotation",
        "67": "        XmlSchemaTypes xsts = reader.getPackageAnnotation(XmlSchemaTypes.class,enclosingClass,src);",
        "68": "        XmlSchemaType[] values = null;",
        "69": "        if(xsts!=null)",
        "70": "            values = xsts.value();",
        "71": "        else {",
        "72": "            xst = reader.getPackageAnnotation(XmlSchemaType.class,enclosingClass,src);",
        "73": "            if(xst!=null) {",
        "74": "                values = new XmlSchemaType[1];",
        "75": "                values[0] = xst;",
        "60": "",
        "61": "        XmlSchemaType xst = primarySource.readAnnotation(XmlSchemaType.class);",
        "62": "        if(xst!=null) {",
        "63": "            return new QName(xst.namespace(),xst.name());"
      },
      "id": 106226835,
      "filename": "Util.java"
    },
    {
      "repo": "https://bitbucket.org/tomers77/ontobuilderdev",
      "language": "Java",
      "linescount": 616,
      "location": "/ontobuilder.io/src/ac/technion/iem/ontobuilder/io/imports",
      "name": "ontobuilderdev",
      "url": "https://searchcode.com/codesearch/view/121187180/",
      "md5hash": "a2cc47d0e9f8f7a0e316df3b224f05d6",
      "lines": {
        "40": "import com.sun.xml.xsom.XSSimpleType;",
        "41": "import com.sun.xml.xsom.XSTerm;",
        "42": "import com.sun.xml.xsom.XSType;",
        "43": "import com.sun.xml.xsom.impl.ComplexTypeImpl;",
        "364": "\tprivate OntologyClass createOntologyClass(Ontology xsdOntology,",
        "429": "\t\t\t\tXSModelGroup g =  xst.asModelGroup();",
        "430": "\t\t\t\tfor (XSParticle p : g.getChildren())",
        "365": "\t\t\tXSType newType) {",
        "304": "\t\t\tXSType baseType = newType.getBaseType();",
        "303": "\t\t\tArrayList<OntologyClass> superClasses;",
        "563": "\t\t{",
        "564": "\t\t\tXSTerm xst = ct.getContentType().asParticle().getTerm();",
        "565": "\t\t\tXSModelGroup g =  xst.asModelGroup();",
        "566": "\t\t\tfor (XSParticle p : g.getChildren())",
        "428": "\t\t\t\tXSTerm xst = ct.getContentType().asParticle().getTerm();"
      },
      "id": 121187180,
      "filename": "XSDImporterUsingXSOM.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 94,
      "location": "/MRI-J/jaxws/src/share/classes/com/sun/xml/internal/bind/v2/model/impl",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17100190/",
      "md5hash": "4bc08e1d43f857efaf69bbc6339cb8c5",
      "lines": {
        "48": "",
        "49": "        XmlSchemaType xst = primarySource.readAnnotation(XmlSchemaType.class);",
        "50": "        if(xst!=null) {",
        "51": "            return new QName(xst.namespace(),xst.name());",
        "52": "        }",
        "54": "        // check the defaulted annotation",
        "55": "        XmlSchemaTypes xsts = reader.getPackageAnnotation(XmlSchemaTypes.class,enclosingClass,src);",
        "56": "        XmlSchemaType[] values = null;",
        "57": "        if(xsts!=null)",
        "58": "            values = xsts.value();",
        "59": "        else {",
        "60": "            xst = reader.getPackageAnnotation(XmlSchemaType.class,enclosingClass,src);",
        "61": "            if(xst!=null) {",
        "62": "                values = new XmlSchemaType[1];",
        "63": "                values[0] = xst;"
      },
      "id": 17100190,
      "filename": "Util.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 586,
      "location": "/BungeniEditor/tags/0.9.958/BungeniEditorClient/src/org/bungeni/editor/panels/loadable",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2657750/",
      "md5hash": "fe0ba4a849be9df27afc7fcc0db54729",
      "lines": {
        "3": "",
        "388": "                XStream xst = new XStream();",
        "389": "                xst.alias(\"structuralError\", StructuralError.class);",
        "390": "                listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "391": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "424": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "420": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "387": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "422": "                xst.alias(\"structuralError\", StructuralError.class);",
        "4": "import com.thoughtworks.xstream.XStream;",
        "423": "                ArrayList<StructuralError> listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "421": "                XStream xst = new XStream();"
      },
      "id": 2657750,
      "filename": "validateAndCheckPanel2.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 539,
      "location": "/BungeniEditor/tags/ooo_3.2.1_compatible/BungeniEditorClient/src/org/bungeni/editor/panels/loadable",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2658278/",
      "md5hash": "1c86562bdd7b464f7684dc82f21aa58e",
      "lines": {
        "3": "",
        "4": "import com.thoughtworks.xstream.XStream;",
        "374": "                ArrayList<StructuralError> listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "371": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "338": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "339": "                XStream xst = new XStream();",
        "340": "                xst.alias(\"structuralError\", StructuralError.class);",
        "341": "                listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "342": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "375": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "372": "                XStream xst = new XStream();",
        "373": "                xst.alias(\"structuralError\", StructuralError.class);"
      },
      "id": 2658278,
      "filename": "validateAndCheckPanel2.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 537,
      "location": "/BungeniEditor/branches/sk/BungeniEditorClient/src/org/bungeni/editor/panels/loadable",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2658984/",
      "md5hash": "64561254d10cbf1eed94172067940a52",
      "lines": {
        "3": "",
        "4": "import com.thoughtworks.xstream.XStream;",
        "374": "                ArrayList<StructuralError> listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "371": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "338": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "339": "                XStream xst = new XStream();",
        "340": "                xst.alias(\"structuralError\", StructuralError.class);",
        "341": "                listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "342": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "375": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "372": "                XStream xst = new XStream();",
        "373": "                xst.alias(\"structuralError\", StructuralError.class);"
      },
      "id": 2658984,
      "filename": "validateAndCheckPanel2.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 540,
      "location": "/BungeniEditor/trunk/BungeniEditorClient/src/org/bungeni/editor/panels/loadable",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2661132/",
      "md5hash": "9742246afdfe58c7ad5184b66229afec",
      "lines": {
        "3": "",
        "4": "import com.thoughtworks.xstream.XStream;",
        "374": "                xst.alias(\"structuralError\", StructuralError.class);",
        "375": "                ArrayList<StructuralError> listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "339": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "340": "                XStream xst = new XStream();",
        "341": "                xst.alias(\"structuralError\", StructuralError.class);",
        "342": "                listErrors  = (ArrayList<StructuralError>) xst.fromXML(is);",
        "343": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "376": "                System.out.println(\"output error list size =  \"+ listErrors.size());",
        "372": "                InputStream is = new ByteArrayInputStream(srw.toString().getBytes());",
        "373": "                XStream xst = new XStream();"
      },
      "id": 2661132,
      "filename": "validateAndCheckPanel2.java"
    },
    {
      "repo": "https://github.com/marekpribyl/cxf.git",
      "language": "Java",
      "linescount": 135,
      "location": "/rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5",
      "name": "cxf",
      "url": "https://searchcode.com/codesearch/view/93168708/",
      "md5hash": "7005881cb68c08dabdc1a42d1a95f073",
      "lines": {
        "120": "        public void writeSchema(XmlSchema root) {",
        "121": "            XmlSchemaSimpleType xst = new XmlSchemaSimpleType(root, true);",
        "122": "            xst.setName(\"class\");",
        "123": "            ",
        "125": "            content.setBaseTypeName(Constants.XSD_STRING);",
        "126": "            xst.setContent(content);"
      },
      "id": 93168708,
      "filename": "ClassTest.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 86,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384156/",
      "md5hash": "ddda03b1851449a808fd05b3da1e5d84",
      "lines": {
        "32": "    public Xstz()",
        "33": "    {",
        "34": "        _xst = new Xst();",
        "36": "",
        "37": "    public Xstz( byte[] data, int startOffset )",
        "45": "",
        "46": "        _xst = new Xst( data, offset );",
        "47": "        offset += _xst.getSize();",
        "24": "@Internal",
        "25": "public class Xstz",
        "26": "{",
        "27": "    private static final POILogger log = POILogFactory.getLogger( Xstz.class );",
        "29": "    private final short _chTerm = 0;",
        "30": "    private Xst _xst;",
        "31": ""
      },
      "id": 97384156,
      "filename": "Xstz.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 173,
      "location": "/plugins/BungeniOdfStructuralRules/src/org/bungeni/plugins/structuralvalidator",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2656197/",
      "md5hash": "d47b3b941abced9fbc2c51ddb8eecf2c",
      "lines": {
        "130": "                //then we extract the string representation of the errors and return them to the caller client",
        "131": "                XStream xst = new XStream();",
        "132": "                StringWriter swLogFile = new StringWriter();",
        "5": "import com.thoughtworks.xstream.XStream;",
        "134": "                xst.toXML(errors, swLogFile);",
        "135": "                sBuilder.append(swLogFile.toString());",
        "4": "",
        "133": "                xst.alias(\"structuralError\", StructuralError.class);"
      },
      "id": 2656197,
      "filename": "BungeniStructuralValidator.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 234,
      "location": "/plugins/BungeniOdfStructuralRules/src/org/bungeni/editor/rulesimpl",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2656218/",
      "md5hash": "2e27be4131e46dd2dd2e5b28668ace3f",
      "lines": {
        "128": "        } catch (XStreamException ex) {",
        "4": "",
        "5": "import com.thoughtworks.xstream.XStream;",
        "6": "import com.thoughtworks.xstream.XStreamException;",
        "7": "",
        "119": "            // write the object to xml",
        "120": "            XStream    xst       = new XStream();",
        "121": "            xst.alias(\"structuralError\", StructuralError.class);",
        "122": "            FileWriter fwLogFile = new FileWriter(fLogFile);",
        "123": "",
        "124": "            xst.toXML(sel, fwLogFile);",
        "127": "            log.error(\"writeErrorsToLog :\" + ex.getMessage());"
      },
      "id": 2656218,
      "filename": "StructuralErrorSerialize.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 274,
      "location": "/BungeniEditor/tags/0.9.958/BungeniEditorClient/src/org/bungeni/editor/panels/loadable/structuralerror",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2657763/",
      "md5hash": "cf7da68e70b77da3dfd5b3cf8fcfcdc6",
      "lines": {
        "128": "            StructuralErrorHelper.structuralErrorAlias(xst);",
        "129": "            StructuralErrorLog errorLog = (StructuralErrorLog) xst.fromXML(freader);",
        "2": "",
        "3": "import com.thoughtworks.xstream.XStream;",
        "130": "            if (structuralErrorPanel == null) {",
        "126": "            FileReader freader = new FileReader(elfFile.logFile);",
        "127": "            XStream xst = new XStream();"
      },
      "id": 2657763,
      "filename": "panelStructuralErrorBrowser.java"
    },
    {
      "repo": "http://bungeni-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 242,
      "location": "/BungeniEditor/tags/0.9.958/BungeniEditorClient/src/org/bungeni/editor/panels/loadable/structuralerror",
      "name": "bungeni-editor",
      "url": "https://searchcode.com/codesearch/view/2657769/",
      "md5hash": "f11628c13499e9e085dac273ae9953e5",
      "lines": {
        "128": "            XStream    xst       = new XStream();",
        "129": "            xst.alias(\"structuralError\", StructuralError.class);",
        "130": "            FileWriter fwLogFile = new FileWriter(fLogFile);",
        "131": "",
        "4": "",
        "5": "import com.thoughtworks.xstream.XStream;",
        "6": "import com.thoughtworks.xstream.XStreamException;",
        "7": "",
        "136": "        } catch (XStreamException ex) {",
        "135": "            log.error(\"writeErrorsToLog :\" + ex.getMessage());",
        "132": "            xst.toXML(sel, fwLogFile);",
        "127": "            // write the object to xml"
      },
      "id": 2657769,
      "filename": "StructuralErrorSerialize.java"
    },
    {
      "repo": "https://bitbucket.org/riyafukui/webgoat.git",
      "language": "Java",
      "linescount": 257,
      "location": "/src/main/java/org/owasp/webgoat/lessons",
      "name": "webgoat",
      "url": "https://searchcode.com/codesearch/view/47542520/",
      "md5hash": "6f456648e9b6a31d70f4eb99b433b3b1",
      "lines": {
        "227": "\t\thints",
        "228": "\t\t\t\t.add(\"Try a cross site trace (XST) Command:<br>\"",
        "253": "\t{",
        "254": "\t\treturn (\"Cross Site Tracing (XST) Attacks\");"
      },
      "id": 47542520,
      "filename": "TraceXSS.java"
    },
    {
      "repo": "https://github.com/goedson/Osmand.git",
      "language": "Java",
      "linescount": 326,
      "location": "/DataExtractionOSM/src/net/osmand/swing",
      "name": "Osmand",
      "url": "https://searchcode.com/codesearch/view/66530160/",
      "md5hash": "7258b0bf0c82b62d62488a68686385f6",
      "lines": {
        "227": "\t\t\tres.add(w);",
        "228": "\t\t\tint xst = road.getPoint31XTile(segment.getSegmentStart());",
        "230": "\t\t\tw.addNode(new Node(MapUtils.get31LatitudeY(yst), ",
        "231": "\t\t\t\t\tMapUtils.get31LongitudeX(xst), -1));"
      },
      "id": 66530160,
      "filename": "MapClusterLayer.java"
    },
    {
      "repo": "https://bitbucket.org/watashi/algosolution.git",
      "language": "Java",
      "linescount": 437,
      "location": "/topcoder/marathon/130501.MM80",
      "name": "algosolution",
      "url": "https://searchcode.com/codesearch/view/124075165/",
      "md5hash": "94bf00d28cb52900f8bbb401ebecbc24",
      "lines": {
        "112": "",
        "113": "                        g.drawLine(xSt, ySt, xFn, yFn);",
        "108": "                        int ySt = 30 + ray.get(i).r * cellSize + cellSize / 2 + cellSize;",
        "109": "                        int xSt = 30 + ray.get(i).c * cellSize + cellSize / 2 + cellSize;"
      },
      "id": 124075165,
      "filename": "FragileMirrorsVis.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 13,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 6,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}