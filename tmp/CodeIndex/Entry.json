{
  "matchterm": "Entry",
  "previouspage": null,
  "searchterm": "Entry",
  "query": "Entry",
  "language_filters": [
    {
      "count": 195453,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 195450,
  "results": [
    {
      "repo": "https://github.com/sanger-pathogens/Artemis.git",
      "language": "Java",
      "linescount": 1257,
      "location": "/uk/ac/sanger/artemis",
      "name": "Artemis",
      "url": "https://searchcode.com/codesearch/view/105727404/",
      "md5hash": "1f19e81f13715f1f758aea979aa69daa",
      "lines": {
        "32": "import uk.ac.sanger.artemis.io.EmblStreamFeature;",
        "1": "/* Entry.java",
        "2": " *",
        "35": "import uk.ac.sanger.artemis.io.GFFDocumentEntry;",
        "36": "import uk.ac.sanger.artemis.io.GFFStreamFeature;",
        "37": "import uk.ac.sanger.artemis.io.IndexedGFFDocumentEntry;",
        "33": "import uk.ac.sanger.artemis.io.DocumentEntry;",
        "44": "import uk.ac.sanger.artemis.io.QualifierVector;",
        "34": "import uk.ac.sanger.artemis.io.EmblDocumentEntry;",
        "46": "import uk.ac.sanger.artemis.io.EntryInformation;",
        "45": "import uk.ac.sanger.artemis.io.DocumentEntryFactory;",
        "22": " *",
        "23": " * $Header: //tmp/pathsoft/artemis/uk/ac/sanger/artemis/Entry.java,v 1.11 2008-06-20 10:00:25 tjc Exp $",
        "30": "import uk.ac.sanger.artemis.util.*;",
        "31": "import uk.ac.sanger.artemis.io.DatabaseDocumentEntry;"
      },
      "id": 105727404,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/akaack/ttvp-aufgabe2-ws1415.git",
      "language": "Java",
      "linescount": 99,
      "location": "/src/de/uniba/wiai/lspi/chord/com",
      "name": "TTVP-Aufgabe2-WS1415",
      "url": "https://searchcode.com/codesearch/view/92002781/",
      "md5hash": "326cca0f3010a9d02fac0fccec941aac",
      "lines": {
        "96": "\t\treturn (entry.id.equals(this.id) && entry.value.equals(this.value));",
        "97": "\t}",
        "2": " *                                                                         *",
        "3": " *                                Entry.java                               *",
        "38": " */",
        "39": "public final class Entry implements Serializable {",
        "60": "\tpublic Entry(ID id1, Serializable value1) {",
        "45": "\t/**",
        "46": "\t * The id of this entry. ",
        "59": "\t */",
        "91": "\tpublic boolean equals(Object o) {",
        "92": "\t\tif (!(o instanceof Entry)) {",
        "94": "\t\t}",
        "95": "\t\tEntry entry = (Entry) o;"
      },
      "id": 92002781,
      "filename": "Entry.java"
    },
    {
      "repo": "https://github.com/gdroc/Artemis.git",
      "language": "Java",
      "linescount": 1274,
      "location": "/uk/ac/sanger/artemis",
      "name": "Artemis",
      "url": "https://searchcode.com/codesearch/view/66765120/",
      "md5hash": "e43d7084e0364af4a0736aae6fd1063b",
      "lines": {
        "32": "import uk.ac.sanger.artemis.io.EmblStreamFeature;",
        "1": "/* Entry.java",
        "2": " *",
        "35": "import uk.ac.sanger.artemis.io.GFFDocumentEntry;",
        "36": "import uk.ac.sanger.artemis.io.PartialSequence;",
        "33": "import uk.ac.sanger.artemis.io.DocumentEntry;",
        "42": "import uk.ac.sanger.artemis.io.QualifierVector;",
        "43": "import uk.ac.sanger.artemis.io.DocumentEntryFactory;",
        "44": "import uk.ac.sanger.artemis.io.EntryInformation;",
        "34": "import uk.ac.sanger.artemis.io.EmblDocumentEntry;",
        "45": "import uk.ac.sanger.artemis.io.EntryInformationException;",
        "22": " *",
        "23": " * $Header: //tmp/pathsoft/artemis/uk/ac/sanger/artemis/Entry.java,v 1.11 2008-06-20 10:00:25 tjc Exp $",
        "30": "import uk.ac.sanger.artemis.util.*;",
        "31": "import uk.ac.sanger.artemis.io.DatabaseDocumentEntry;"
      },
      "id": 66765120,
      "filename": "Entry.java"
    },
    {
      "repo": "https://github.com/gdroc/Artemis.git",
      "language": "Java",
      "linescount": 223,
      "location": "/uk/ac/sanger/artemis/io",
      "name": "Artemis",
      "url": "https://searchcode.com/codesearch/view/66767156/",
      "md5hash": "39b42a128525045687a373135791a026",
      "lines": {
        "1": "/* Entry.java",
        "2": " *",
        "36": " *  @author Kim Rutherford",
        "37": " *  @version $Id: Entry.java,v 1.2 2008-06-11 15:12:20 tjc Exp $",
        "33": "/**",
        "40": "",
        "41": "public interface Entry ",
        "43": "  /**",
        "44": "   *  Write this entry to the file/database/whatever it came from.  If this",
        "34": " *  Objects of this class represent one EMBL entry.",
        "49": "  /**",
        "50": "   *  Returns true if and only if there have been some changes to this Entry",
        "22": " *",
        "23": " * $Header: //tmp/pathsoft/artemis/uk/ac/sanger/artemis/io/Entry.java,v 1.2 2008-06-11 15:12:20 tjc Exp $",
        "56": "   *  Returns true if and only if this entry is read only.",
        "55": "  /**"
      },
      "id": 66767156,
      "filename": "Entry.java"
    },
    {
      "repo": "https://github.com/jortizcs/sfs_applications.git",
      "language": "Java",
      "linescount": 164,
      "location": "/energylens/sfs_transactions/lib/simple/org/simpleframework/util/lease",
      "name": "sfs_applications",
      "url": "https://searchcode.com/codesearch/view/67863856/",
      "md5hash": "c22bf3f1737743982d9a9239e8e053cf",
      "lines": {
        "128": "      return compareTo(entry);",
        "1": "/*",
        "34": " */",
        "35": "class Entry<T> implements Contract<T> {",
        "37": "   /**",
        "38": "    * This is the time that this entry expires in nanoseconds.",
        "136": "    * ",
        "137": "    * @param entry this is the entry to be compared with this",
        "140": "    */   ",
        "2": " * Entry.java May 2004",
        "142": "      long diff = time - entry.time;",
        "141": "   private int compareTo(Entry entry) {",
        "26": "/**",
        "27": " * A <code>Entry</code> is used to represent the contract a lease",
        "143": "      ",
        "127": "      }"
      },
      "id": 67863856,
      "filename": "Entry.java"
    },
    {
      "repo": "http://atomojo.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 84,
      "location": "/clientlib/src/org/atomojo/app/client",
      "name": "atomojo",
      "url": "https://searchcode.com/codesearch/view/13490725/",
      "md5hash": "077411033a507ac8345ad25a109e2698",
      "lines": {
        "1": "/*",
        "2": " * Entry.java",
        "44": "   }",
        "45": "   /** Creates a new instance of Entry */",
        "46": "   public Entry(Document doc)",
        "47": "   {",
        "50": "   ",
        "51": "   /** Creates a new instance of Entry */",
        "52": "   public Entry()",
        "53": "   {",
        "22": " */",
        "23": "public class Entry extends CategorizedXMLEntity",
        "56": "         doc = InfosetFactory.getDefaultInfoset().createItemConstructor().createDocument();",
        "57": "         doc.createDocumentElement(XML.ENTRY_NAME);",
        "59": "         // THis should only happen if the infoset is misconfigured",
        "60": "         throw new RuntimeException(\"Cannot create entry document.\",ex);"
      },
      "id": 13490725,
      "filename": "Entry.java"
    },
    {
      "repo": "https://code.google.com/p/jspf/",
      "language": "Java",
      "linescount": 111,
      "location": "/modules/core/src/net/xeoh/plugins/diagnosis/local/impl/serialization/java",
      "name": "jspf",
      "url": "https://searchcode.com/codesearch/view/7533608/",
      "md5hash": "42cfe1770b39b53d760ad0830ed8854c",
      "lines": {
        "1": "/*",
        "2": " * Entry.java",
        "35": "/**",
        "36": " * Reflects an entry on a given channel.",
        "39": " */",
        "40": "public class Entry implements Serializable {",
        "46": "",
        "47": "    /** Specifies when this entry was observed */",
        "49": "",
        "50": "    /** Thread ID for which this entry was observed */",
        "55": "",
        "56": "    /** Channel this entry was observed on */"
      },
      "id": 7533608,
      "filename": "Entry.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 61,
      "location": "/gcc-4.2.1/libjava/classpath/tools/gnu/classpath/tools/jar",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12732816/",
      "md5hash": "ac1e59fc379cd7c5192e6026703d4f15",
      "lines": {
        "48": "",
        "1": "/* Entry.java - represent a single file to write to a jar",
        "2": " Copyright (C) 2006 Free Software Foundation, Inc.",
        "54": "",
        "49": "  public Entry(File file, String name)",
        "55": "  public Entry(File file)",
        "42": "",
        "43": "public class Entry"
      },
      "id": 12732816,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec",
      "language": "Java",
      "linescount": 317,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/core",
      "name": "tec",
      "url": "https://searchcode.com/codesearch/view/125752757/",
      "md5hash": "c9289656c2c9ec3bc086b707c62e6988",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2007",
        "35": "class Entry {",
        "37": "   /**",
        "38": "    * Provides the default name for entry XML elements of the map.",
        "39": "    */",
        "138": "   /**",
        "139": "    * This is used to get the key converter for the entry. This knows",
        "34": " */",
        "142": "    * the root composite map converter to concern itself with only the",
        "143": "    * details of the surrounding entry object. ",
        "24": "/**",
        "25": " * The <code>Entry</code> object is used to provide configuration for",
        "29": " * objects can be written as composite or primitive values. Primitive",
        "30": " * key values can be written as attributes of the resulting entry"
      },
      "id": 125752757,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tecandorid",
      "language": "Java",
      "linescount": 317,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/core",
      "name": "tecandorid",
      "url": "https://searchcode.com/codesearch/view/129085183/",
      "md5hash": "c9289656c2c9ec3bc086b707c62e6988",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2007",
        "35": "class Entry {",
        "37": "   /**",
        "38": "    * Provides the default name for entry XML elements of the map.",
        "39": "    */",
        "138": "   /**",
        "139": "    * This is used to get the key converter for the entry. This knows",
        "34": " */",
        "142": "    * the root composite map converter to concern itself with only the",
        "143": "    * details of the surrounding entry object. ",
        "24": "/**",
        "25": " * The <code>Entry</code> object is used to provide configuration for",
        "29": " * objects can be written as composite or primitive values. Primitive",
        "30": " * key values can be written as attributes of the resulting entry"
      },
      "id": 129085183,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec_jgroups",
      "language": "Java",
      "linescount": 317,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/core",
      "name": "tec_jgroups",
      "url": "https://searchcode.com/codesearch/view/136470306/",
      "md5hash": "c9289656c2c9ec3bc086b707c62e6988",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2007",
        "35": "class Entry {",
        "37": "   /**",
        "38": "    * Provides the default name for entry XML elements of the map.",
        "39": "    */",
        "138": "   /**",
        "139": "    * This is used to get the key converter for the entry. This knows",
        "34": " */",
        "142": "    * the root composite map converter to concern itself with only the",
        "143": "    * details of the surrounding entry object. ",
        "24": "/**",
        "25": " * The <code>Entry</code> object is used to provide configuration for",
        "29": " * objects can be written as composite or primitive values. Primitive",
        "30": " * key values can be written as attributes of the resulting entry"
      },
      "id": 136470306,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 181,
      "location": "/libjava/classpath/gnu/javax/crypto/keyring",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127593973/",
      "md5hash": "8f178935b211b944d95c091234c1d7c5",
      "lines": {
        "1": "/* Entry.java --",
        "2": "   Copyright (C) 2003, 2006, 2010 Free Software Foundation, Inc.",
        "67": "  protected int type;",
        "68": "  /** This entry's property set. */",
        "69": "  protected Properties properties;",
        "70": "  /** This entry's payload. */",
        "65": "      \"BinaryData\" };",
        "73": "  /**",
        "74": "   * Creates a new Entry.",
        "75": "   *",
        "66": "  /** This entry's type identifier. */",
        "48": "/**",
        "49": " * An immutable class representing a single entry in a keyring.",
        "50": " */",
        "51": "public abstract class Entry",
        "53": "  private static final Logger log = Configuration.DEBUG ?",
        "54": "                        Logger.getLogger(Entry.class.getName()) : null;"
      },
      "id": 127593973,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 181,
      "location": "/libjava/classpath/gnu/javax/crypto/keyring",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130222949/",
      "md5hash": "8f178935b211b944d95c091234c1d7c5",
      "lines": {
        "1": "/* Entry.java --",
        "2": "   Copyright (C) 2003, 2006, 2010 Free Software Foundation, Inc.",
        "67": "  protected int type;",
        "68": "  /** This entry's property set. */",
        "69": "  protected Properties properties;",
        "70": "  /** This entry's payload. */",
        "65": "      \"BinaryData\" };",
        "73": "  /**",
        "74": "   * Creates a new Entry.",
        "75": "   *",
        "66": "  /** This entry's type identifier. */",
        "48": "/**",
        "49": " * An immutable class representing a single entry in a keyring.",
        "50": " */",
        "51": "public abstract class Entry",
        "53": "  private static final Logger log = Configuration.DEBUG ?",
        "54": "                        Logger.getLogger(Entry.class.getName()) : null;"
      },
      "id": 130222949,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec",
      "language": "Java",
      "linescount": 46,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/util",
      "name": "tec",
      "url": "https://searchcode.com/codesearch/view/125752613/",
      "md5hash": "7999c318d34604eaaacbcbfd97468c67",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2006",
        "36": "   /**",
        "37": "    * Represents the name of the entry instance used for mappings.",
        "33": " */ ",
        "41": "    * ",
        "42": "    * @return this returns the name of the entry that is used ",
        "34": "public interface Entry {",
        "21": "/**",
        "22": " * The <code>Entry</code> object represents entries to the dictionary",
        "23": " * object. Every entry must have a name attribute, which is used to",
        "24": " * establish mappings within the <code>Dictionary</code> object. Each",
        "25": " * entry entered into the dictionary can be retrieved using its name. ",
        "26": " * <p>",
        "27": " * The entry can be serialzed with the dictionary to an XML document.",
        "28": " * Items stored within the dictionary need to extend this entry"
      },
      "id": 125752613,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tecandorid",
      "language": "Java",
      "linescount": 46,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/util",
      "name": "tecandorid",
      "url": "https://searchcode.com/codesearch/view/129085039/",
      "md5hash": "7999c318d34604eaaacbcbfd97468c67",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2006",
        "36": "   /**",
        "37": "    * Represents the name of the entry instance used for mappings.",
        "33": " */ ",
        "41": "    * ",
        "42": "    * @return this returns the name of the entry that is used ",
        "34": "public interface Entry {",
        "21": "/**",
        "22": " * The <code>Entry</code> object represents entries to the dictionary",
        "23": " * object. Every entry must have a name attribute, which is used to",
        "24": " * establish mappings within the <code>Dictionary</code> object. Each",
        "25": " * entry entered into the dictionary can be retrieved using its name. ",
        "26": " * <p>",
        "27": " * The entry can be serialzed with the dictionary to an XML document.",
        "28": " * Items stored within the dictionary need to extend this entry"
      },
      "id": 129085039,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec_jgroups",
      "language": "Java",
      "linescount": 46,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/util",
      "name": "tec_jgroups",
      "url": "https://searchcode.com/codesearch/view/136470225/",
      "md5hash": "7999c318d34604eaaacbcbfd97468c67",
      "lines": {
        "1": "/*",
        "2": " * Entry.java July 2006",
        "36": "   /**",
        "37": "    * Represents the name of the entry instance used for mappings.",
        "33": " */ ",
        "41": "    * ",
        "42": "    * @return this returns the name of the entry that is used ",
        "34": "public interface Entry {",
        "21": "/**",
        "22": " * The <code>Entry</code> object represents entries to the dictionary",
        "23": " * object. Every entry must have a name attribute, which is used to",
        "24": " * establish mappings within the <code>Dictionary</code> object. Each",
        "25": " * entry entered into the dictionary can be retrieved using its name. ",
        "26": " * <p>",
        "27": " * The entry can be serialzed with the dictionary to an XML document.",
        "28": " * Items stored within the dictionary need to extend this entry"
      },
      "id": 136470225,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 71,
      "location": "/libjava/classpath/tools/gnu/classpath/tools/jar",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127595714/",
      "md5hash": "db4e6a775f7ab0b30c19e8959748df59",
      "lines": {
        "48": "",
        "1": "/* Entry.java - represent a single file to write to a jar",
        "2": " Copyright (C) 2006, 2007 Free Software Foundation, Inc.",
        "65": "  public Entry(File file)",
        "49": "  public Entry(File file, String name)",
        "64": "",
        "42": "",
        "43": "public class Entry"
      },
      "id": 127595714,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 71,
      "location": "/libjava/classpath/tools/gnu/classpath/tools/jar",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223966/",
      "md5hash": "db4e6a775f7ab0b30c19e8959748df59",
      "lines": {
        "48": "",
        "1": "/* Entry.java - represent a single file to write to a jar",
        "2": " Copyright (C) 2006, 2007 Free Software Foundation, Inc.",
        "65": "  public Entry(File file)",
        "49": "  public Entry(File file, String name)",
        "64": "",
        "42": "",
        "43": "public class Entry"
      },
      "id": 130223966,
      "filename": "Entry.java"
    },
    {
      "repo": "https://github.com/Laurian/powermagpie.git",
      "language": "Java",
      "linescount": 30,
      "location": "/WebApp/src/main/java/uk/ac/open/powermagpie/cache",
      "name": "powermagpie",
      "url": "https://searchcode.com/codesearch/view/141063102/",
      "md5hash": "1f24f3717a704315a89524a798e553d7",
      "lines": {
        "16": "public class Entry implements Serializable {",
        "1": "/*",
        "2": " * Entry.java",
        "20": "    ",
        "21": "    public Entry () {}",
        "22": "    ",
        "23": "    public Entry(Object key, Object value) {",
        "15": " */"
      },
      "id": 141063102,
      "filename": "Entry.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 181,
      "location": "/libjava/classpath/gnu/javax/crypto/keyring",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37949492/",
      "md5hash": "8f178935b211b944d95c091234c1d7c5",
      "lines": {
        "1": "/* Entry.java --",
        "2": "   Copyright (C) 2003, 2006, 2010 Free Software Foundation, Inc.",
        "67": "  protected int type;",
        "68": "  /** This entry's property set. */",
        "69": "  protected Properties properties;",
        "70": "  /** This entry's payload. */",
        "65": "      \"BinaryData\" };",
        "73": "  /**",
        "74": "   * Creates a new Entry.",
        "75": "   *",
        "66": "  /** This entry's type identifier. */",
        "48": "/**",
        "49": " * An immutable class representing a single entry in a keyring.",
        "50": " */",
        "51": "public abstract class Entry",
        "53": "  private static final Logger log = Configuration.DEBUG ?",
        "54": "                        Logger.getLogger(Entry.class.getName()) : null;"
      },
      "id": 37949492,
      "filename": "Entry.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 93385,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 79895,
      "source": "Github",
      "id": 2
    },
    {
      "count": 17363,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2227,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1098,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 548,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 344,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 311,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 282,
      "source": "Google Android",
      "id": 12
    }
  ]
}