{
  "matchterm": "Attachment",
  "previouspage": null,
  "searchterm": "Attachment",
  "query": "Attachment",
  "language_filters": [
    {
      "count": 14776,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 14776,
  "results": [
    {
      "repo": "http://widgetfx.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 327,
      "location": "/widgets/RallyWS/src/rallyws/api",
      "name": "widgetfx",
      "url": "https://searchcode.com/codesearch/view/1944908/",
      "md5hash": "e347cf77d5a96b24368705874dab68e9",
      "lines": {
        "64": "     * Gets the content value for this Attachment.",
        "1": "/**",
        "2": " * Attachment.java",
        "67": "     */",
        "36": "           rallyws.api.Workspace workspace,",
        "37": "           rallyws.api.AttachmentContent content,",
        "68": "    public rallyws.api.AttachmentContent getContent() {",
        "9": "",
        "10": "public class Attachment  extends rallyws.api.WorkspaceDomainObject  implements java.io.Serializable {",
        "11": "    private rallyws.api.AttachmentContent content;",
        "12": "",
        "22": "",
        "23": "    public Attachment() {",
        "25": "",
        "26": "    public Attachment(",
        "63": "    /**"
      },
      "id": 1944908,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/idega/is.idega.idegaweb.egov.cases.focal.git",
      "language": "Java",
      "linescount": 196,
      "location": "/src/java/is/idega/idegaweb/egov/cases/focal/business/server/focalMockupService",
      "name": "is.idega.idegaweb.egov.cases.focal",
      "url": "https://searchcode.com/codesearch/view/105018427/",
      "md5hash": "460881572b1792543c00992133eb18bb",
      "lines": {
        "1": "/**",
        "2": " * Attachment.java",
        "40": "    /**",
        "9": "",
        "10": "public class Attachment  implements java.io.Serializable {",
        "139": "    private static org.apache.axis.description.TypeDesc typeDesc =",
        "140": "        new org.apache.axis.description.TypeDesc(Attachment.class, true);",
        "142": "    static {",
        "143": "        typeDesc.setXmlType(new javax.xml.namespace.QName(\"urn:is.idega.idegaweb.egov.cases.focal\", \"Attachment\"));",
        "16": "",
        "17": "    public Attachment() {",
        "19": "",
        "20": "    public Attachment(",
        "41": "     * Sets the FName value for this Attachment.",
        "30": "    /**",
        "31": "     * Gets the FName value for this Attachment."
      },
      "id": 105018427,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/idega/is.idega.idegaweb.egov.cases.focal.git",
      "language": "Java",
      "linescount": 196,
      "location": "/src/java/is/idega/idegaweb/egov/cases/focal/business/server/focalService",
      "name": "is.idega.idegaweb.egov.cases.focal",
      "url": "https://searchcode.com/codesearch/view/105018584/",
      "md5hash": "4371882708b46d49ac56c88569b51da8",
      "lines": {
        "1": "/**",
        "2": " * ATTACHMENT.java",
        "40": "    /**",
        "9": "",
        "10": "public class ATTACHMENT  implements java.io.Serializable {",
        "139": "    private static org.apache.axis.description.TypeDesc typeDesc =",
        "140": "        new org.apache.axis.description.TypeDesc(ATTACHMENT.class, true);",
        "142": "    static {",
        "143": "        typeDesc.setXmlType(new javax.xml.namespace.QName(\"urn:DefaultNamespace\", \"ATTACHMENT\"));",
        "16": "",
        "17": "    public ATTACHMENT() {",
        "19": "",
        "20": "    public ATTACHMENT(",
        "41": "     * Sets the FILENAME value for this ATTACHMENT.",
        "30": "    /**",
        "31": "     * Gets the FILENAME value for this ATTACHMENT."
      },
      "id": 105018584,
      "filename": "ATTACHMENT.java"
    },
    {
      "repo": "https://github.com/CSTARS/uicds.git",
      "language": "Java",
      "linescount": 356,
      "location": "/axis2-generated/src/_0/_1/structure/message",
      "name": "uicds",
      "url": "https://searchcode.com/codesearch/view/70289409/",
      "md5hash": "b42d1dd353c232902442d2480ae678c5",
      "lines": {
        "32": "                        ",
        "33": "                                    protected _0._1.structure.message.AttachmentType localAttachment ;",
        "2": "/**",
        "3": " * Attachment.java",
        "37": "                           * Auto generated getter method",
        "38": "                           * @return _0._1.structure.message.AttachmentType",
        "39": "                           */",
        "13": "            /**",
        "14": "            *  Attachment bean class",
        "17": "        ",
        "18": "        public  class Attachment",
        "22": "                \"ulex:message:structure:1.0\",",
        "23": "                \"Attachment\",",
        "28": "                        /**",
        "29": "                        * field for Attachment"
      },
      "id": 70289409,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/naver/yobi.git",
      "language": "Java",
      "linescount": 514,
      "location": "/app/models",
      "name": "yobi",
      "url": "https://searchcode.com/codesearch/view/75057762/",
      "md5hash": "559a92acf9c34411ab623ed0a8e30d8b",
      "lines": {
        "64": "    public static final Finder<Long, Attachment> find = new Finder<>(Long.class, Attachment.class);",
        "128": "     * @param container",
        "38": "",
        "39": "import controllers.AttachmentApp;",
        "129": "     * @return attachments of the container",
        "85": "    /**",
        "86": "     * Finds an attachment which matches the given one.",
        "87": "     *",
        "88": "     * Finds an attachment that matches {@link Attachment#name},",
        "89": "     * {@link Attachment#hash}, {@link Attachment#containerType} and",
        "90": "     * {@link Attachment#containerId} with the given one.",
        "91": "     *",
        "61": "@Entity",
        "62": "public class Attachment extends Model implements ResourceConvertible {",
        "63": "    private static final long serialVersionUID = 7856282252495067924L;"
      },
      "id": 75057762,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/adryamov/Android-VKontakte-SDK.git",
      "language": "Java",
      "linescount": 76,
      "location": "/AndroidVkSdk/src/com/perm/kate/api",
      "name": "Android-VKontakte-SDK",
      "url": "https://searchcode.com/codesearch/view/75055877/",
      "md5hash": "98b6f148348cd4887998f7346a8fb8df",
      "lines": {
        "32": "                    continue;",
        "33": "                JSONObject json_attachment=(JSONObject)att;",
        "34": "                Attachment attachment=new Attachment();",
        "35": "                attachment.type=json_attachment.getString(\"type\");",
        "36": "                if(attachment.type.equals(\"photo\") || attachment.type.equals(\"posted_photo\")){",
        "37": "                    JSONObject x=json_attachment.optJSONObject(\"photo\");",
        "8": "",
        "9": "public class Attachment implements Serializable {",
        "24": "",
        "25": "    public static ArrayList<Attachment> parseAttachments(JSONArray attachments, long from_id, long copy_owner_id, JSONObject geo_json) throws JSONException {",
        "26": "        ArrayList<Attachment> attachments_arr=new ArrayList<Attachment>();",
        "27": "        if(attachments!=null){",
        "28": "            int size=attachments.length();",
        "29": "            for(int j=0;j<size;++j){",
        "30": "                Object att=attachments.get(j);"
      },
      "id": 75055877,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://code.google.com/p/wave-protocol/",
      "language": "Java",
      "linescount": 195,
      "location": "/src/com/google/wave/api",
      "name": "wave-protocol",
      "url": "https://searchcode.com/codesearch/view/7114033/",
      "md5hash": "afd8fe7d0c2231a340026a79fd4e8f7e",
      "lines": {
        "32": "  public static final String DATA = \"data\";",
        "33": "  public static final String ATTACHMENT_URL = \"attachmentUrl\";",
        "34": "",
        "35": "  private static final Logger LOG = Logger.getLogger(Attachment.class.getName());",
        "36": "  ",
        "37": "  /** Attachment data. */",
        "40": "  /**",
        "41": "   * Constructs an attachment with a given set of properties and data.",
        "42": "   * ",
        "25": "/**",
        "26": " * Represents a wave attachment within a Wave.",
        "27": " */",
        "28": "public class Attachment extends Element {",
        "29": "  public static final String ATTACHMENT_ID = \"attachmentId\";",
        "30": "  public static final String CAPTION = \"caption\";"
      },
      "id": 7114033,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/FrancisVarga/gwt-couchdb.git",
      "language": "Java",
      "linescount": 93,
      "location": "/couchdb/src/com/os/couchdb/client/document",
      "name": "gwt-couchdb",
      "url": "https://searchcode.com/codesearch/view/77598783/",
      "md5hash": "b0700779bb04919a34133cb6c148c910",
      "lines": {
        "8": "/**",
        "9": " * Represents a couchdb document attachment. The attachment mechanism mirrors",
        "10": " * the functionality present in couchdb itself. You will only be able to",
        "11": " * indirectly use the data property contained in {@link Attachment} to create",
        "12": " * attachments inlined with the document. When you query a document with",
        "13": " * attachments, the attachments will have a <code>null</code> data property and",
        "14": " * the stub property will be set to <code>true</code>.",
        "19": " */",
        "20": "public class Attachment extends BaseModel {",
        "21": "\tpublic Attachment() {",
        "22": "\t\tsuper();",
        "24": "\t",
        "25": "\tpublic Attachment(JSOModel pModel) {",
        "28": "",
        "29": "\tpublic Attachment(String pContentType, byte[] pData) {"
      },
      "id": 77598783,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/codeandart/plaintext-wave.git",
      "language": "Java",
      "linescount": 195,
      "location": "/src/com/google/wave/api",
      "name": "plaintext-wave",
      "url": "https://searchcode.com/codesearch/view/43194583/",
      "md5hash": "afd8fe7d0c2231a340026a79fd4e8f7e",
      "lines": {
        "32": "  public static final String DATA = \"data\";",
        "33": "  public static final String ATTACHMENT_URL = \"attachmentUrl\";",
        "34": "",
        "35": "  private static final Logger LOG = Logger.getLogger(Attachment.class.getName());",
        "36": "  ",
        "37": "  /** Attachment data. */",
        "40": "  /**",
        "41": "   * Constructs an attachment with a given set of properties and data.",
        "42": "   * ",
        "25": "/**",
        "26": " * Represents a wave attachment within a Wave.",
        "27": " */",
        "28": "public class Attachment extends Element {",
        "29": "  public static final String ATTACHMENT_ID = \"attachmentId\";",
        "30": "  public static final String CAPTION = \"caption\";"
      },
      "id": 43194583,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/FrancisVarga/gwt-couchdb.git",
      "language": "Java",
      "linescount": 81,
      "location": "/couchdb-js/src/com/os/couchdbjs/client/model",
      "name": "gwt-couchdb",
      "url": "https://searchcode.com/codesearch/view/77597524/",
      "md5hash": "53c6642b2cecf7d37d543874ccd09c51",
      "lines": {
        "3": "/**",
        "4": " * Represents a couchdb document attachment. The attachment mechanism mirrors",
        "5": " * the functionality present in couchdb itself. You will only be able to",
        "6": " * indirectly use the data property contained in {@link Attachment} to create",
        "7": " * attachments inlined with the document. When you query a document with",
        "8": " * attachments, the attachments will have a <code>null</code> data property and",
        "9": " * the stub property will be set to <code>true</code>.",
        "14": " */",
        "15": "public class Attachment extends BaseModel {",
        "16": "\tpublic Attachment() {",
        "17": "\t\tsuper();",
        "19": "\t",
        "20": "\tpublic Attachment(JSOModel pModel) {",
        "23": "",
        "24": "\tpublic Attachment(String pContentType, byte[] pData) {"
      },
      "id": 77597524,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/idempiere/idempiere/",
      "language": "Java",
      "linescount": 670,
      "location": "/org.adempiere.ui.swing/src/org/compiere/apps",
      "name": "idempiere",
      "url": "https://searchcode.com/codesearch/view/3304801/",
      "md5hash": "56072feb2353e701b56e05ef8c31c147",
      "lines": {
        "41": "import org.adempiere.plaf.AdempierePLAF;",
        "42": "import org.compiere.model.MAttachment;",
        "43": "import org.compiere.model.MAttachmentEntry;",
        "44": "import org.compiere.swing.CButton;",
        "77": "\t *  @param AD_Attachment_ID attachment",
        "76": "\t *  @param WindowNo window no",
        "81": "\t */",
        "82": "\tpublic Attachment(Frame frame, int WindowNo, int AD_Attachment_ID,",
        "53": "/**",
        "54": " *  Attachment Viewer",
        "73": "\t *\tConstructor.",
        "56": " * \t@author \tJorg Janke",
        "57": " * \t@version \t$Id: Attachment.java,v 1.4 2006/08/10 01:00:27 jjanke Exp $",
        "58": " */",
        "59": "public final class Attachment extends CDialog",
        "74": "\t *\tloads Attachment, if ID <> 0"
      },
      "id": 3304801,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/tspc/adempiere361/",
      "language": "Java",
      "linescount": 641,
      "location": "/client/src/org/compiere/apps",
      "name": "adempiere361",
      "url": "https://searchcode.com/codesearch/view/8372991/",
      "md5hash": "36c17cc5fffe8cf1381dfa4d4b634a7d",
      "lines": {
        "67": "\t *\tConstructor.",
        "68": "\t *\tloads Attachment, if ID <> 0",
        "70": "\t *  @param WindowNo window no",
        "71": "\t *  @param AD_Attachment_ID attachment",
        "40": "import org.adempiere.plaf.AdempierePLAF;",
        "41": "import org.compiere.model.MAttachment;",
        "42": "import org.compiere.model.MAttachmentEntry;",
        "43": "import org.compiere.swing.CButton;",
        "76": "\tpublic Attachment(Frame frame, int WindowNo, int AD_Attachment_ID,",
        "75": "\t */",
        "52": "/**",
        "53": " *  Attachment Viewer",
        "55": " * \t@author \tJorg Janke",
        "56": " * \t@version \t$Id: Attachment.java,v 1.4 2006/08/10 01:00:27 jjanke Exp $",
        "57": " */",
        "58": "public final class Attachment extends CDialog"
      },
      "id": 8372991,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/ruX/android-vk-sdk.git",
      "language": "Java",
      "linescount": 98,
      "location": "/AndroidVkSdk/src/com/perm/kate/api",
      "name": "android-vk-sdk",
      "url": "https://searchcode.com/codesearch/view/35754374/",
      "md5hash": "a1446f3253ac149bf354061ac53764ab",
      "lines": {
        "32": "            for(int j=0;j<size;++j){",
        "33": "                Object att=attachments.get(j);",
        "35": "                    continue;",
        "36": "                JSONObject json_attachment=(JSONObject)att;",
        "37": "                Attachment attachment=new Attachment();",
        "38": "                attachment.type=json_attachment.getString(\"type\");",
        "39": "                if(attachment.type.equals(\"photo\") || attachment.type.equals(\"posted_photo\")){",
        "8": "",
        "9": "public class Attachment implements Serializable {",
        "40": "                    JSONObject x=json_attachment.optJSONObject(\"photo\");",
        "27": "",
        "28": "    public static ArrayList<Attachment> parseAttachments(JSONArray attachments, long from_id, long copy_owner_id, JSONObject geo_json) throws JSONException {",
        "29": "        ArrayList<Attachment> attachments_arr=new ArrayList<Attachment>();",
        "30": "        if(attachments!=null){",
        "31": "            int size=attachments.length();"
      },
      "id": 35754374,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/neurojon/zotero-mobile-for-android.git",
      "language": "Java",
      "linescount": 259,
      "location": "/app/src/com/gimranov/zandy/app/data",
      "name": "zotero-mobile-for-android",
      "url": "https://searchcode.com/codesearch/view/44249110/",
      "md5hash": "6359672238d7b3dbb62f3af596e29ed8",
      "lines": {
        "64": "\t\tif (queue == null) queue = new ArrayList<Attachment>();",
        "36": "\t/**",
        "37": "\t * Zotero's JSON format for attachment / child information",
        "38": "\t * ",
        "39": "\t * linkMode:\tO = file attachment, in ZFS?",
        "40": "\t * \t\t\t\t1 = link attachment?",
        "41": "\t */",
        "43": "\t",
        "44": "\tprivate static final String TAG = \"com.gimranov.zandy.app.data.Attachment\";",
        "14": "",
        "15": "public class Attachment {",
        "26": "\t/**",
        "27": "\t * Queue of attachments that need to be synced, because they're dirty",
        "28": "\t */",
        "29": "\tpublic static ArrayList<Attachment> queue;",
        "62": "",
        "63": "\tpublic Attachment () {"
      },
      "id": 44249110,
      "filename": "Attachment.java"
    },
    {
      "repo": "http://jcouchdb.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 126,
      "location": "/src/org/jcouchdb/document",
      "name": "jcouchdb",
      "url": "https://searchcode.com/codesearch/view/4877345/",
      "md5hash": "f07cf26580d9a6a8ac34cb6a193452b8",
      "lines": {
        "37": "    /**",
        "6": "/**",
        "7": " * Represents a couchdb document attachment.",
        "8": " * The attachment mechanism mirrors the functionality present in couchdb itself.",
        "9": " * You will only be able to indirectly use the data property contained in {@link Attachment} to create",
        "10": " * attachments inlined with the document. When you query a document with attachments, the attachments will",
        "11": " * have a <code>null</code> data property and the stub property will be set to <code>true</code>.",
        "47": "    /**",
        "48": "     * Sets the media type for this attachment.",
        "17": " */",
        "18": "public class Attachment",
        "24": "    ",
        "25": "    public Attachment()",
        "38": "     * Returns the media type of this attachment.",
        "29": "",
        "30": "    public Attachment(String contentType, byte[] data)"
      },
      "id": 4877345,
      "filename": "Attachment.java"
    },
    {
      "repo": "git://github.com/docusign/DocuSign-eSignature-SDK-2010.git",
      "language": "Java",
      "linescount": 217,
      "location": "/Java/EnvelopesStatus/src/net/docusign/www/API/_3_0",
      "name": "DocuSign-eSignature-SDK-2010",
      "url": "https://searchcode.com/codesearch/view/15002022/",
      "md5hash": "8c46af1e4a5d793e658fb857ad40d849",
      "lines": {
        "64": "    /**",
        "33": "",
        "34": "    public Attachment(",
        "65": "     * Gets the label value for this Attachment.",
        "55": "     * Sets the data value for this Attachment.",
        "44": "    /**",
        "45": "     * Gets the data value for this Attachment.",
        "15": "/**",
        "16": " * Attachment.java",
        "158": "        new org.apache.axis.description.TypeDesc(Attachment.class, true);",
        "54": "    /**",
        "23": "",
        "24": "public class Attachment  implements java.io.Serializable {",
        "157": "    private static org.apache.axis.description.TypeDesc typeDesc =",
        "30": "",
        "31": "    public Attachment() {"
      },
      "id": 15002022,
      "filename": "Attachment.java"
    },
    {
      "repo": "git://github.com/astubbs/spring-modules.git",
      "language": "Java",
      "linescount": 90,
      "location": "/projects/spring-modules-template/src/main/java/org/springmodules/email",
      "name": "spring-modules",
      "url": "https://searchcode.com/codesearch/view/17320456/",
      "md5hash": "6289af5e78223d75291290675f9235ef",
      "lines": {
        "33": "    /**",
        "34": "     * Constructs a new attachment with no name and resource.",
        "35": "     */",
        "36": "    public Attachment() {",
        "40": "    /**",
        "41": "     * Constructs a new attachment with a given name and a given resource.",
        "42": "     *",
        "43": "     * @param name The name of the attachment.",
        "44": "     * @param resource The resource that represents the attachment.",
        "21": "/**",
        "22": " * Represents an attachment for an email. This attachment holds a name (which serves as the file name for normal",
        "23": " * attachments and id for inline attachments) and a resource.",
        "24": " *",
        "26": " */",
        "27": "public class Attachment {"
      },
      "id": 17320456,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://github.com/pulasthi/xwiki-platform.git",
      "language": "Java",
      "linescount": 216,
      "location": "/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/api",
      "name": "xwiki-platform",
      "url": "https://searchcode.com/codesearch/view/113983762/",
      "md5hash": "6ebd98f7f5774a23dad976d9765ab365",
      "lines": {
        "32": "import com.xpn.xwiki.doc.XWikiAttachment;",
        "33": "",
        "34": "public class Attachment extends Api",
        "37": "",
        "38": "    private XWikiAttachment attachment;",
        "39": "",
        "40": "    public Attachment(Document doc, XWikiAttachment attachment, XWikiContext context)",
        "43": "        this.doc = doc;",
        "44": "        this.attachment = attachment;",
        "72": "     * @return the Attachment size",
        "55": "    /**",
        "56": "     * @return the document Id of the attachment",
        "71": "    /**",
        "59": "    {",
        "60": "        return this.attachment.getId();",
        "31": "import com.xpn.xwiki.XWikiException;"
      },
      "id": 113983762,
      "filename": "Attachment.java"
    },
    {
      "repo": "git://github.com/k9mail/k-9.git",
      "language": "Java",
      "linescount": 151,
      "location": "/k9mail/src/main/java/com/fsck/k9/activity/misc",
      "name": "k-9",
      "url": "https://searchcode.com/codesearch/view/116008420/",
      "md5hash": "b1d332cba4151352bbe1bfc21ce3c02e",
      "lines": {
        "45": "     * The size of the attachment.",
        "37": "    /**",
        "38": "     * The (file)name of the attachment.",
        "7": "/**",
        "8": " * Container class for information about an attachment.",
        "9": " *",
        "10": " * This is used by {@link com.fsck.k9.activity.MessageCompose} to fetch and manage attachments.",
        "11": " */",
        "12": "public class Attachment implements Parcelable {",
        "13": "    /**",
        "14": "     * The URI pointing to the source of the attachment.",
        "44": "    /**",
        "51": "    /**",
        "52": "     * The name of the temporary file containing the local copy of the attachment.",
        "30": "    /**",
        "31": "     * The content type of the attachment."
      },
      "id": 116008420,
      "filename": "Attachment.java"
    },
    {
      "repo": "https://bitbucket.org/codeandart/plaintext-wave.git",
      "language": "Java",
      "linescount": 139,
      "location": "/src/org/waveprotocol/wave/media/model",
      "name": "plaintext-wave",
      "url": "https://searchcode.com/codesearch/view/43193115/",
      "md5hash": "acfec2d38c59cf9551bc90c5f3402d23",
      "lines": {
        "51": "  String getAttachmentId();",
        "62": "   * Gets the user id of the user who created the attachment.",
        "18": "/**",
        "61": "  /**",
        "49": "",
        "50": "  /** Returns the attachmentId, which should never be null. */",
        "19": " * An attachment. This interface is used both by the client (web-app) and on the server-side.",
        "20": " */",
        "21": "public interface Attachment {",
        "54": "   * Gets the user-provided filename of the attachment. This may have been",
        "57": "   * @return the attachment filename or null if the filename is not known",
        "56": "   *",
        "52": "",
        "29": "",
        "30": "  /** Metadata for an image, whether the original attachment or a thumbnail. */",
        "53": "  /**"
      },
      "id": 43193115,
      "filename": "Attachment.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 7487,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 6082,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1062,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 63,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 36,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 30,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 11,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 3,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 2,
      "source": "Gitorious",
      "id": 10
    }
  ]
}