{
  "matchterm": "DrawBackground",
  "previouspage": null,
  "searchterm": "DrawBackground",
  "query": "DrawBackground",
  "language_filters": [
    {
      "count": 1069,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1069,
  "results": [
    {
      "repo": "https://github.com/zedutchgandalf/Vault-Original.git",
      "language": "Java",
      "linescount": 530,
      "location": "/src/be/zedutchgandalf/ld48",
      "name": "Vault-Original",
      "url": "https://searchcode.com/codesearch/view/75625699/",
      "md5hash": "dba440c5a6b07c713faf990ce76b97a9",
      "lines": {
        "258": "\t\t\t\t\tif (mCounter++ % 100 > 50)",
        "259": "\t\t\t\t\t\tscreen.drawBackground(menu1);",
        "260": "\t\t\t\t\telse",
        "261": "\t\t\t\t\t\tscreen.drawBackground(menu2);",
        "213": "\t\t\t\t\tif (Level.current != null) {",
        "214": "\t\t\t\t\t\tscreen.drawBackground(bg);",
        "216": "\t\t\t\t\t\t\tcase 1:",
        "217": "\t\t\t\t\t\t\t\tscreen.drawBackground(tut1);",
        "219": "\t\t\t\t\t\t\tcase 2:",
        "220": "\t\t\t\t\t\t\t\tscreen.drawBackground(tut2);",
        "222": "\t\t\t\t\t\t\tcase 3:",
        "223": "\t\t\t\t\t\t\t\tscreen.drawBackground(tut3);"
      },
      "id": 75625699,
      "filename": "Main.java"
    },
    {
      "repo": "https://github.com/djokovicg/Binaural-Beats.git",
      "language": "Java",
      "linescount": 126,
      "location": "/src/com/jjoe64/graphview",
      "name": "Binaural-Beats",
      "url": "https://searchcode.com/codesearch/view/75659739/",
      "md5hash": "6e12adf238f8c4278881a4c27e423c17",
      "lines": {
        "32": "\t\tdouble lastEndX = 0;",
        "33": "\t\tif (drawBackground) {",
        "113": "\t * @param drawBackground true for a light blue background under the graph line",
        "112": "\t/**",
        "107": "",
        "108": "\tpublic boolean getDrawBackground() {",
        "109": "\t\treturn drawBackground;",
        "110": "\t}",
        "16": "\tprivate final Paint paintBackground;",
        "17": "\tprivate boolean drawBackground;",
        "114": "\t */",
        "115": "\tpublic void setDrawBackground(boolean drawBackground) {",
        "116": "\t\tthis.drawBackground = drawBackground;",
        "117": "\t}",
        "121": "\t */",
        "122": "\tpublic void setDrawBackgroundLimit(float pos) {"
      },
      "id": 75659739,
      "filename": "LineGraphView.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 6493,
      "location": "/platform/platform-impl/src/com/intellij/openapi/editor/impl",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39395937/",
      "md5hash": "1750d255fe2f9b477a56d559a13f7e30",
      "lines": {
        "2177": "            }",
        "2178": "            position.x = drawBackground(g, backColor, collapsedFolderAt.getPlaceholderText(), position, fontType, defaultBackground, clip);",
        "2307": "    if (startToUse < end) {",
        "2308": "      position.x = drawBackground(g, backColor, text.subSequence(startToUse, end), position, fontType, defaultBackground, clip);",
        "2470": "",
        "2471": "    drawBackground(g, getColorsScheme().getColor(EditorColors.SELECTION_BACKGROUND_COLOR), width, position, defaultBackground, clip);",
        "2473": "",
        "2474": "  private int drawBackground(@NotNull Graphics g,",
        "2347": "    if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) {",
        "2348": "      drawBackground(g, backColor, width, position, defaultBackground, clip);",
        "2073": "      position.x = drawBackground(g, myPrefixAttributes.getBackgroundColor(), new String(myPrefixText), position, myPrefixAttributes.getFontType(),",
        "2072": "    if (clipStartVisualPos.line == 0 && myPrefixText != null) {",
        "2329": "    if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) {",
        "2330": "      drawBackground(g, backColor, afterSoftWrapWidth, position, defaultBackground, clip);",
        "2334": "      Color caretRowColor = getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR);",
        "2335": "      drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip);"
      },
      "id": 39395937,
      "filename": "EditorImpl.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 7810,
      "location": "/Eclipse SWT/win32/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823183/",
      "md5hash": "50f52be02f16fcf8cc8c40d52cd1eb75",
      "lines": {
        "555": "\t\t\t\t} else {",
        "515": "\t\t\t\t\t} else {",
        "516": "\t\t\t\t\t\tdrawItem = drawText = drawBackground = true;",
        "552": "\t\t\t\t\t\tOS.SetBkColor (hDC, getBackgroundPixel ());",
        "553": "\t\t\t\t\t\tdrawForeground = drawBackground = true;",
        "523": "\t\t\t\t}",
        "524": "\t\t\t\tif (selected && !ignoreDrawSelection && !ignoreDrawBackground) {",
        "525": "\t\t\t\t\tif (!explorerTheme) fillBackground (hDC, OS.GetBkColor (hDC), rect);",
        "526": "\t\t\t\t\tdrawBackground = false;",
        "561": "\t\t\t\t}",
        "562": "\t\t\t\tif (drawBackground) {",
        "643": "\t\t\t\t\t\t} else {",
        "644": "\t\t\t\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = true;",
        "539": "\t\t\t\tselectionForeground = -1;",
        "540": "\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = false;",
        "556": "\t\t\t\t\tdrawForeground = drawBackground = true;"
      },
      "id": 109823183,
      "filename": "Tree.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 7103,
      "location": "/java/java-tests/testData/psi/formatter/java/performance",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/116154137/",
      "md5hash": "68ca8a0d2235212662c17994129d295e",
      "lines": {
        "2816": "    drawBackground(g, getColorsScheme().getColor(EditorColors.SELECTION_BACKGROUND_COLOR), width, position, defaultBackground, clip);",
        "2433": "      Color backColor = myPrefixAttributes.getBackgroundColor();",
        "2434": "      position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position,",
        "2689": "    if (startToUse < end) {",
        "2729": "    if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) {",
        "2730": "      drawBackground(g, backColor, width, position, defaultBackground, clip);",
        "2690": "      position.x = drawBackground(g, backColor, text, startToUse, end, position, fontType, defaultBackground, clip);",
        "2734": "      Color caretRowColor = mySettings.isCaretRowShown()? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null;",
        "2735": "      drawBackground(g, caretRowColor, width, position, defaultBackground, clip);",
        "2612": "    CharSequence chars = collapsedFolderAt.getPlaceholderText();",
        "2613": "    position.x = drawBackground(g, backColor, chars, 0, chars.length(), position, fontType, defaultBackground, clip);",
        "2711": "    if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) {",
        "2712": "      drawBackground(g, backColor, afterSoftWrapWidth, position, defaultBackground, clip);",
        "2716": "      Color caretRowColor = mySettings.isCaretRowShown()? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null;",
        "2717": "      drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip);",
        "2815": ""
      },
      "id": 116154137,
      "filename": "bigFile.java"
    },
    {
      "repo": "https://github.com/CramerGG/ResizableClient.git",
      "language": "Java",
      "linescount": 14251,
      "location": "/src",
      "name": "ResizableClient",
      "url": "https://searchcode.com/codesearch/view/97428808/",
      "md5hash": "c84f324eb1577dbe3c4ea323038d9df6",
      "lines": {
        "3072": "\t\t\t\t\tint j4 = (class46.anInt761 * 4 - background.anInt1453) / 2;",
        "449": "\t\t\t\t\t\t\tif(byte0 == 1) {",
        "450": "\t\t\t\t\t\t\t\tmodIcons[0].drawBackground(xPos + 1, yPos - 12+y);",
        "452": "\t\t\t\t\t\t\t} else if(byte0 == 2) {",
        "453": "\t\t\t\t\t\t\t\tmodIcons[1].drawBackground(xPos + 1, yPos - 12+y);",
        "545": "\t\t\t\t\t\t\t\t\tj2 += clanNameWidth;",
        "552": "\t\t\t\t\t\t\t\t\tmodIcons[1].drawBackground(j2 - 18, yPos - 12+y);",
        "551": "\t\t\t\t\t\t\t\t\tj2 += clanNameWidth;",
        "546": "\t\t\t\t\t\t\t\t\tmodIcons[0].drawBackground(j2 - 18, yPos - 12+y);",
        "558": "\t\t\t\t\t\t\t\t\tmodIcons[1].drawBackground(j2 - 18, yPos - 12+y);",
        "557": "\t\t\t\t\t\t\t\t\tj2 += clanNameWidth;",
        "3073": "\t\t\t\t\tbackground.drawBackground(48 + l * 4 + i4, 48 + (104 - i - class46.anInt761) * 4 + j4);",
        "6596": "\t\t\t\t\t{",
        "2972": "\t\t\t\t\tint j6 = (class46_2.anInt761 * 4 - background_2.anInt1453) / 2;",
        "2973": "\t\t\t\t\tbackground_2.drawBackground(48 + l * 4 + i6, 48 + (104 - i - class46_2.anInt761) * 4 + j6);",
        "6597": "\t\t\t\t\t\tmodIcons[0].drawBackground(k1, l - 12);"
      },
      "id": 97428808,
      "filename": "client.java"
    },
    {
      "repo": "https://github.com/kanaksony/SmoothProgressBar.git",
      "language": "Java",
      "linescount": 761,
      "location": "/library/src/main/java/fr/castorflex/android/smoothprogressbar",
      "name": "SmoothProgressBar",
      "url": "https://searchcode.com/codesearch/view/97435774/",
      "md5hash": "013f656d340d6e6790c06ccb6f8de6bb",
      "lines": {
        "384": "        drawBackground(canvas, 0, fBackgroundRect.width());",
        "386": "      } else {",
        "387": "        drawBackground(canvas, 0, fBackgroundRect.width());",
        "415": "        drawBackground(canvas, 0, firstX);",
        "422": "        if (mReversed) {",
        "423": "          drawBackground(canvas, lastX, canvas.getWidth() / 2);",
        "424": "          canvas.scale(-1, 1);",
        "404": "        if (mReversed) {",
        "405": "          drawBackground(canvas, 0, firstX);",
        "406": "          canvas.scale(-1, 1);",
        "407": "          drawBackground(canvas, 0, firstX);",
        "408": "        } else {",
        "409": "          drawBackground(canvas, canvas.getWidth() / 2 - firstX, canvas.getWidth() / 2);",
        "410": "          canvas.scale(-1, 1);",
        "411": "          drawBackground(canvas, canvas.getWidth() / 2 - firstX, canvas.getWidth() / 2);",
        "414": "      } else {",
        "383": "        canvas.scale(-1, 1);"
      },
      "id": 97435774,
      "filename": "SmoothProgressDrawable.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 2960,
      "location": "/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109822495/",
      "md5hash": "c167bbd166cbddc17c861cf59bd59cf2",
      "lines": {
        "1761": "\tboolean isFocusItem = parent.focusItem == this && parent.isFocusControl ();",
        "1762": "\tboolean drawBackground = true;",
        "1814": "\t/* draw the cell's set background if appropriate */",
        "1766": "\tif (parent.hooks (SWT.EraseItem)) {",
        "1767": "\t\tdrawBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);",
        "1804": "\t\tif (!event.doit) {",
        "1805": "\t\t\tdrawBackground = drawForeground = drawSelection = drawFocus = false;",
        "1806": "\t\t} else {",
        "1807": "\t\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;",
        "1781": "\t\tevent.detail = SWT.FOREGROUND;",
        "1782": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "1815": "\tif (drawBackground) {",
        "1752": "\tif (column == null) {",
        "1753": "\t\tparent.drawBackground (gc, 0, y, clientArea.width, itemHeight);",
        "1756": "\t\tif (parent.linesVisible) fillWidth--;",
        "1757": "\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);"
      },
      "id": 109822495,
      "filename": "TreeItem.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 2033,
      "location": "/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109822508/",
      "md5hash": "a7e3f15ae4037f7d56464fb82dd24d42",
      "lines": {
        "1152": "\t\tif (parent.linesVisible) fillWidth--;",
        "1153": "\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);",
        "1157": "\tboolean isFocusItem = parent.focusItem == this && parent.isFocusControl ();",
        "1158": "\tboolean drawBackground = true;",
        "1162": "\tif (parent.hooks (SWT.EraseItem)) {",
        "1163": "\t\tdrawBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);",
        "1198": "\t\tif (!event.doit) {",
        "1199": "\t\t\tdrawBackground = drawForeground = drawSelection = drawFocus = false;",
        "1200": "\t\t} else {",
        "1201": "\t\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;",
        "1209": "\tif (drawBackground) {",
        "1208": "\t/* draw the cell's set background if appropriate */",
        "1177": "\t\tevent.detail = SWT.FOREGROUND;",
        "1178": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "1148": "\tif (column == null) {",
        "1149": "\t\tparent.drawBackground (gc, 0, y, clientArea.width, itemHeight);"
      },
      "id": 109822508,
      "filename": "TableItem.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 6968,
      "location": "/Eclipse SWT/win32/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823264/",
      "md5hash": "7d0688d7955a419390aedb31efee8a3c",
      "lines": {
        "3361": "\t} else {",
        "3362": "\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = true;",
        "643": "\t\t\tif (OS.IsWindowEnabled (handle) || findImageControl () != null) {",
        "644": "\t\t\t\tdrawBackground (hDC, rect);",
        "3766": "\tif (drawSelected) event.detail |= SWT.SELECTED;",
        "3725": "\t\t\tif (clrTextBk == -1) clrTextBk = item.background;",
        "3342": "\tif (drawSelected) event.detail |= SWT.SELECTED;",
        "3343": "\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "3381": "\tif (ignoreDrawForeground && ignoreDrawHot && !drawDrophilited) {",
        "3382": "\t\tif (!ignoreDrawBackground && drawBackground) {",
        "3767": "\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "5828": "\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);",
        "3356": "\t\tignoreDrawForeground = (event.detail & SWT.FOREGROUND) == 0;",
        "3357": "\t\tignoreDrawBackground = (event.detail & SWT.BACKGROUND) == 0;",
        "3726": "\t\t\tdrawBackground = clrTextBk != -1;",
        "5829": "\t\t\t\t\t\tdrawBackground (hDC, rect);"
      },
      "id": 109823264,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 4032,
      "location": "/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109829538/",
      "md5hash": "48ae21455b4439b82f7f3e7adecdbd9e",
      "lines": {
        "672": "\tdrawBackground(gc, shape, x, y, width, height, defaultBackground, image, colors, percents, vertical);",
        "673": "}",
        "674": "void drawBackground(GC gc, int[] shape, int x, int y, int width, int height, Color defaultBackground, Image image, Color[] colors, int[] percents, boolean vertical) {",
        "1125": "\tboolean bkSelected = single && selectedIndex != -1;",
        "1126": "\tdrawBackground(gc, shape, bkSelected);",
        "1055": "\t\t\tdrawBackground(gc, shape, false);",
        "796": "\t\t\t\tdrawBackground(gc, shape, true);",
        "1053": "\t\t\tdrawBackground(gc, shape, true);",
        "657": "}",
        "658": "void drawBackground(GC gc, int[] shape, boolean selected) {",
        "795": "\t\t\tif (selectedIndex != -1 && selectionGradientColors != null && selectionGradientColors.length > 1 && !selectionGradientVertical) {",
        "1052": "\t\tif (selectedIndex != -1 && selectionGradientColors != null && selectionGradientColors.length > 1 && !selectionGradientVertical) {",
        "797": "\t\t\t} else if (selectedIndex == -1 && gradientColors != null && gradientColors.length > 1 && !gradientVertical) {",
        "1054": "\t\t} else if (selectedIndex == -1 && gradientColors != null && gradientColors.length > 1 && !gradientVertical) {",
        "671": "\tint y = onBottom ? size.y - borderBottom - height : borderTop;"
      },
      "id": 109829538,
      "filename": "CTabFolder.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 2966,
      "location": "/Eclipse SWT/cocoa/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109822911/",
      "md5hash": "8dd86d1f9b9bd75767c8d05fe6ddaa12",
      "lines": {
        "1158": "\t\tif (drawForeground) event.detail |= SWT.FOREGROUND;",
        "1041": "\tif (drawBackground && !drawSelection) {",
        "1159": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "940": "\tif (background == null) background = item.background;",
        "941": "\tboolean drawBackground = background != null;",
        "1040": "",
        "1009": "\t\tevent.detail = SWT.FOREGROUND;",
        "1010": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "1017": "\t\tif (!event.doit) {",
        "1018": "\t\t\tdrawForeground = drawBackground = drawSelection = false; ",
        "1019": "\t\t} else {",
        "1020": "\t\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;"
      },
      "id": 109822911,
      "filename": "Tree.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 3153,
      "location": "/Eclipse SWT/cocoa/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823009/",
      "md5hash": "bce16046bc6287723bd9e92b296e4fe1",
      "lines": {
        "992": "",
        "961": "\t\tevent.detail = SWT.FOREGROUND;",
        "962": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "1094": "\t\tif (drawForeground) event.detail |= SWT.FOREGROUND;",
        "993": "\tif (drawBackground && !drawSelection) {",
        "969": "\t\tif (!event.doit) {",
        "970": "\t\t\tdrawForeground = drawBackground = drawSelection = false; ",
        "971": "\t\t} else {",
        "972": "\t\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;",
        "1095": "\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;",
        "892": "\tif (background == null) background = item.background;",
        "893": "\tboolean drawBackground = background != null;"
      },
      "id": 109823009,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/lucamtudor/graphview-for-sound-meter.git",
      "language": "Java",
      "linescount": 112,
      "location": "/src/com/jjoe64/graphview",
      "name": "graphview-for-sound-meter",
      "url": "https://searchcode.com/codesearch/view/36267782/",
      "md5hash": "6d11848547b4f3319ea3455bbb202c82",
      "lines": {
        "32": "\t\tdouble lastEndX = 0;",
        "33": "\t\tif (drawBackground) {",
        "100": "",
        "101": "\tpublic boolean getDrawBackground() {",
        "102": "\t\treturn drawBackground;",
        "103": "\t}",
        "105": "\t/**",
        "106": "\t * @param drawBackground true for a light blue background under the graph line",
        "107": "\t */",
        "108": "\tpublic void setDrawBackground(boolean drawBackground) {",
        "109": "\t\tthis.drawBackground = drawBackground;",
        "110": "\t}",
        "17": "\tprivate final Paint paintBackground;",
        "18": "\tprivate boolean drawBackground;"
      },
      "id": 36267782,
      "filename": "LineGraphView.java"
    },
    {
      "repo": "https://bitbucket.org/fredgrott/gwsamulet.git",
      "language": "Java",
      "linescount": 104,
      "location": "/src/com/jjoe64/graphview",
      "name": "gwsamulet",
      "url": "https://searchcode.com/codesearch/view/39719211/",
      "md5hash": "7e6e255687753983b716bbf538e5c862",
      "lines": {
        "32": "\t\tif (drawBackground) {",
        "97": "\t/**",
        "98": "\t * @param drawBackground true for a light blue background under the graph line",
        "99": "\t */",
        "100": "\tpublic void setDrawBackground(boolean drawBackground) {",
        "101": "\t\tthis.drawBackground = drawBackground;",
        "102": "\t}",
        "16": "\tprivate final Paint paintBackground;",
        "17": "\tprivate boolean drawBackground;",
        "31": "\t\tdouble lastEndX = 0;",
        "92": "",
        "93": "\tpublic boolean getDrawBackground() {",
        "94": "\t\treturn drawBackground;",
        "95": "\t}"
      },
      "id": 39719211,
      "filename": "LineGraphView.java"
    },
    {
      "repo": "https://bitbucket.org/fredgrott/gwsdroidfeel.git",
      "language": "Java",
      "linescount": 104,
      "location": "/src/com/jjoe64/graphview",
      "name": "gwsdroidfeel",
      "url": "https://searchcode.com/codesearch/view/40028049/",
      "md5hash": "7e6e255687753983b716bbf538e5c862",
      "lines": {
        "32": "\t\tif (drawBackground) {",
        "97": "\t/**",
        "98": "\t * @param drawBackground true for a light blue background under the graph line",
        "99": "\t */",
        "100": "\tpublic void setDrawBackground(boolean drawBackground) {",
        "101": "\t\tthis.drawBackground = drawBackground;",
        "102": "\t}",
        "16": "\tprivate final Paint paintBackground;",
        "17": "\tprivate boolean drawBackground;",
        "31": "\t\tdouble lastEndX = 0;",
        "92": "",
        "93": "\tpublic boolean getDrawBackground() {",
        "94": "\t\treturn drawBackground;",
        "95": "\t}"
      },
      "id": 40028049,
      "filename": "LineGraphView.java"
    },
    {
      "repo": "https://bitbucket.org/hoovercj/graphview.git",
      "language": "Java",
      "linescount": 109,
      "location": "/src/com/jjoe64/graphview",
      "name": "graphview",
      "url": "https://searchcode.com/codesearch/view/47040440/",
      "md5hash": "590711bc27f0e556328533945b437c8c",
      "lines": {
        "107": "\t}",
        "33": "\t\tdouble lastEndX = 0;",
        "98": "\tpublic boolean getDrawBackground() {",
        "99": "\t\treturn drawBackground;",
        "100": "\t}",
        "102": "\t/**",
        "97": "",
        "104": "\t */",
        "105": "\tpublic void setDrawBackground(boolean drawBackground) {",
        "106": "\t\tthis.drawBackground = drawBackground;",
        "103": "\t * @param drawBackground true for a light blue background under the graph line",
        "34": "\t\tif (drawBackground) {",
        "18": "\tprivate final Paint paintBackground;",
        "19": "\tprivate boolean drawBackground;"
      },
      "id": 47040440,
      "filename": "LineGraphView.java"
    },
    {
      "repo": "https://github.com/skovatch/org.eclipse.swt.git",
      "language": "Java",
      "linescount": 1761,
      "location": "/Eclipse SWT/win32/org/eclipse/swt/widgets",
      "name": "org.eclipse.swt",
      "url": "https://searchcode.com/codesearch/view/109823198/",
      "md5hash": "6bb234a2df05d12f9aafce697255a25b",
      "lines": {
        "1482": "\t\t\tdrawBackground (wParam, rect);",
        "1314": "\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);",
        "1315": "\t\t\t\t\tdrawBackground (phdc [0], rect);",
        "1481": "\t\tif ((style & (SWT.NO_BACKGROUND | SWT.TRANSPARENT)) == 0) {",
        "1450": "\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);",
        "1451": "\t\t\tdrawBackground (hDC, rect);",
        "1390": "\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);",
        "1405": "\t\t\t\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.NO_BACKGROUND | SWT.TRANSPARENT)) == 0) {",
        "1391": "\t\t\t\t\t\tdrawBackground (gc.handle, rect);",
        "1419": "\t\t\t\t\t\tdrawBackground (gc.handle, rect);",
        "1418": "\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);",
        "1406": "\t\t\t\t\t\t\tdrawBackground (gc.handle, rect);"
      },
      "id": 109823198,
      "filename": "Composite.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 1589,
      "location": "/src-plugins/Series_Labeler",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853548/",
      "md5hash": "adf963c7243d7339b4edef724d98bf8b",
      "lines": {
        "1568": "\t\t\tadd(drawBackground);",
        "1555": "",
        "1556": "\t\t\tfinal Checkbox drawBackground = new Checkbox(\"Background\");",
        "1557": "\t\t\tdrawBackground.setBounds(260, 0, 120, 25);",
        "1558": "\t\t\tdrawBackground.setState(background);",
        "1559": "\t\t\tdrawBackground.addItemListener(new ItemListener() {",
        "1560": "\t\t\t\tpublic void itemStateChanged(ItemEvent e) {",
        "1561": "\t\t\t\t\tbackgroundEnabled = drawBackground.getState();",
        "1567": "\t\t\tadd(fontColourButton);"
      },
      "id": 113853548,
      "filename": "Series_Labeler.java"
    },
    {
      "repo": "https://github.com/fenildf/Anki-Android.git",
      "language": "Java",
      "linescount": 897,
      "location": "/src/org/achartengine/chart",
      "name": "Anki-Android",
      "url": "https://searchcode.com/codesearch/view/92986152/",
      "md5hash": "75feab0e31588e865b854c15b9d00673",
      "lines": {
        "295": "    // draw stuff over the margins such as data doesn't render on these areas",
        "296": "    drawBackground(mRenderer, canvas, x, bottom, width, height - bottom, paint, true,",
        "297": "        mRenderer.getMarginsColor());",
        "298": "    drawBackground(mRenderer, canvas, x, y, width, margins[0], paint, true,",
        "300": "    if (or == Orientation.HORIZONTAL) {",
        "301": "      drawBackground(mRenderer, canvas, x, y, left - x, height - y, paint, true,",
        "302": "          mRenderer.getMarginsColor());",
        "303": "      drawBackground(mRenderer, canvas, right, y, margins[3], height - y, paint, true,",
        "305": "    } else if (or == Orientation.VERTICAL) {",
        "306": "      drawBackground(mRenderer, canvas, right, y, width - right, height - y, paint, true,",
        "307": "          mRenderer.getMarginsColor());",
        "308": "      drawBackground(mRenderer, canvas, x, y, left - x, height - y, paint, true,",
        "126": "    mScreenR.set(left, top, right, bottom);",
        "127": "    drawBackground(mRenderer, canvas, x, y, width, height, paint, false, DefaultRenderer.NO_COLOR);"
      },
      "id": 92986152,
      "filename": "XYChart.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 486,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 373,
      "source": "Github",
      "id": 2
    },
    {
      "count": 203,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 3,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 2,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 1,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "Sourceforge",
      "id": 4
    }
  ]
}