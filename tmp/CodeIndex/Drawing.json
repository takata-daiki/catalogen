{
  "matchterm": "Drawing",
  "previouspage": null,
  "searchterm": "Drawing",
  "query": "Drawing",
  "language_filters": [
    {
      "count": 17604,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 17604,
  "results": [
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 351,
      "location": "/src/org/jhotdraw/draw",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992476/",
      "md5hash": "306750f02986841737dca75a2876cb00",
      "lines": {
        "32": " * <br>",
        "1": "/*",
        "2": " * @(#)Drawing.java  3.0  2007-07-17",
        "35": " * <p>",
        "36": " * The drawing object is used by figure handles and editing tools",
        "37": " * to fire undoable edit events. This way, undoable edit listeners only need to ",
        "38": " * register on a drawing in order to receive all undoable edit",
        "33": " * A drawing notifies listeners when a figure is added or removed,",
        "40": " * <p>",
        "41": " * A drawing can have a number of input formats and output formats,",
        "42": " * allowing to load and save the drawing, and to copy and paste figures",
        "39": " * events related to a drawing.",
        "34": " * and when its drawing area needs to be repainted.",
        "29": "/**",
        "30": " * A drawing holds figures. It can draw its figures, and it can find",
        "31": " * them on its drawing area."
      },
      "id": 52992476,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 390,
      "location": "/test/subjects/JHD458target/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136063599/",
      "md5hash": "4083b3b41f218c093cf39a6b86633a10",
      "lines": {
        "32": " * <br>",
        "1": "/*",
        "2": " * @(#)Drawing.java  3.0  2007-07-17",
        "35": " * <p>",
        "36": " * The drawing object is used by figure handles and editing tools",
        "37": " * to fire undoable edit events. This way, undoable edit listeners only need to ",
        "38": " * register on a drawing in order to receive all undoable edit",
        "33": " * A drawing notifies listeners when a figure is added or removed,",
        "40": " * <p>",
        "41": " * A drawing can have a number of input formats and output formats,",
        "42": " * allowing to load and save the drawing, and to copy and paste figures",
        "39": " * events related to a drawing.",
        "34": " * and when its drawing area needs to be repainted.",
        "29": "/**",
        "30": " * A drawing holds figures. It can draw its figures, and it can find",
        "31": " * them on its drawing area."
      },
      "id": 136063599,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 345,
      "location": "/test/subjects/JHD596source/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066627/",
      "md5hash": "72287cfb4749fe3c33ed5c6307b1925b",
      "lines": {
        "32": " * <p>",
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "35": " * <ul>",
        "36": " * <li>A drawing notifies a figure and its {@code CompositeFigureListener}'s when",
        "33": " * {@code Drawing} is essentially a {@link CompositeFigure} with a number of",
        "41": " * ",
        "42": " * <li>A drawing can find contained figures given a point or a rectangular",
        "43": " * region.",
        "44": " * Specialized implementations of the {@code Drawing} interface can use",
        "46": " * ",
        "47": " * <li>The drawing object is used by {@code Figure}, {@code Tool} and",
        "48": " * {@code Handle} as a mediator for undoable edit events. This way, undoable",
        "28": "/**",
        "29": " * A <em>drawing</em> is a container for {@link Figure}s. A drawing can hold",
        "30": " * multiple figures, but a figure can only be in one drawing at a time.",
        "31": " * A drawing can be in one or multiple {@link DrawingView}s."
      },
      "id": 136066627,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 345,
      "location": "/test/subjects/JHD596target/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136067603/",
      "md5hash": "72287cfb4749fe3c33ed5c6307b1925b",
      "lines": {
        "32": " * <p>",
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "35": " * <ul>",
        "36": " * <li>A drawing notifies a figure and its {@code CompositeFigureListener}'s when",
        "33": " * {@code Drawing} is essentially a {@link CompositeFigure} with a number of",
        "41": " * ",
        "42": " * <li>A drawing can find contained figures given a point or a rectangular",
        "43": " * region.",
        "44": " * Specialized implementations of the {@code Drawing} interface can use",
        "46": " * ",
        "47": " * <li>The drawing object is used by {@code Figure}, {@code Tool} and",
        "48": " * {@code Handle} as a mediator for undoable edit events. This way, undoable",
        "28": "/**",
        "29": " * A <em>drawing</em> is a container for {@link Figure}s. A drawing can hold",
        "30": " * multiple figures, but a figure can only be in one drawing at a time.",
        "31": " * A drawing can be in one or multiple {@link DrawingView}s."
      },
      "id": 136067603,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 390,
      "location": "/test/subjects/JHD458source/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136068556/",
      "md5hash": "4083b3b41f218c093cf39a6b86633a10",
      "lines": {
        "32": " * <br>",
        "1": "/*",
        "2": " * @(#)Drawing.java  3.0  2007-07-17",
        "35": " * <p>",
        "36": " * The drawing object is used by figure handles and editing tools",
        "37": " * to fire undoable edit events. This way, undoable edit listeners only need to ",
        "38": " * register on a drawing in order to receive all undoable edit",
        "33": " * A drawing notifies listeners when a figure is added or removed,",
        "40": " * <p>",
        "41": " * A drawing can have a number of input formats and output formats,",
        "42": " * allowing to load and save the drawing, and to copy and paste figures",
        "39": " * events related to a drawing.",
        "34": " * and when its drawing area needs to be repainted.",
        "29": "/**",
        "30": " * A drawing holds figures. It can draw its figures, and it can find",
        "31": " * them on its drawing area."
      },
      "id": 136068556,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://github.com/ESHughes/UMLDiagramTool.git",
      "language": "Java",
      "linescount": 378,
      "location": "/src/org/jhotdraw/draw",
      "name": "UMLDiagramTool",
      "url": "https://searchcode.com/codesearch/view/70715117/",
      "md5hash": "cc777edf8ce144699731d102b14b0b60",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "33": " * <ul>",
        "40": " * <li>A drawing can find contained figures given a point or a rectangular",
        "41": " * region.",
        "42": " * Specialized implementations of the {@code Drawing} interface can use",
        "39": " * ",
        "44": " * ",
        "34": " * <li>A drawing notifies a figure and its {@code CompositeFigureListener}'s when",
        "46": " * {@code Handle} as a mediator for undoable edit events. This way, undoable",
        "45": " * <li>The drawing object is used by {@code Figure}, {@code Tool} and",
        "26": "/**",
        "27": " * A <em>drawing</em> is a container for {@link Figure}s. A drawing can hold",
        "28": " * multiple figures, but a figure can only be in one drawing at a time.",
        "29": " * A drawing can be in one or multiple {@link DrawingView}s.",
        "30": " * <p>",
        "31": " * {@code Drawing} is essentially a {@link CompositeFigure} with a number of"
      },
      "id": 70715117,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 280,
      "location": "/test/subjects/JHD324source/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136065149/",
      "md5hash": "d523051e47508618327e894462dd009f",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java  2.1  2006-12-31",
        "38": " */",
        "39": "public interface Drawing extends Serializable, DOMStorable {",
        "40": "    /**",
        "41": "     * Removes all figures from the drawing.",
        "44": "    /**",
        "45": "     * Adds a figure to the drawing.",
        "46": "     * The drawing sends an <code>addNotify</code> message to the figure",
        "47": "     * after it has been added.",
        "48": "     *",
        "49": "     * @param figure to be added to the drawing",
        "28": "/**",
        "29": " * Drawing is a container for figures.",
        "30": " * <p>",
        "31": " * Drawing sends out DrawingChanged events to DrawingChangeListeners"
      },
      "id": 136065149,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 280,
      "location": "/test/subjects/JHD324target/src/org/jhotdraw/draw",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136069355/",
      "md5hash": "d523051e47508618327e894462dd009f",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java  2.1  2006-12-31",
        "38": " */",
        "39": "public interface Drawing extends Serializable, DOMStorable {",
        "40": "    /**",
        "41": "     * Removes all figures from the drawing.",
        "44": "    /**",
        "45": "     * Adds a figure to the drawing.",
        "46": "     * The drawing sends an <code>addNotify</code> message to the figure",
        "47": "     * after it has been added.",
        "48": "     *",
        "49": "     * @param figure to be added to the drawing",
        "28": "/**",
        "29": " * Drawing is a container for figures.",
        "30": " * <p>",
        "31": " * Drawing sends out DrawingChanged events to DrawingChangeListeners"
      },
      "id": 136069355,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 318,
      "location": "/test/subjects/jhotdraw_target/src/org/jhotdraw/framework",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136064558/",
      "md5hash": "3aa0e94b9ad6fa09a665067d5273ca68",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "3": " *",
        "4": " * Project:\t\tJHotdraw - a GUI framework for technical drawings",
        "134": "\t/**",
        "129": "\t * @param figure figure to be searched in all direct descendents",
        "136": "\t */",
        "137": "\tpublic void addDrawingChangeListener(DrawingChangeListener listener);",
        "135": "\t * Adds a listener for this drawing.",
        "130": "\t * @return true if the figure is a direct child of this Drawing, else otherwise",
        "20": "/**",
        "21": " * Drawing is a container for figures.",
        "22": " * <p>",
        "23": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "28": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "29": " * The Observer pattern is used to decouple the Drawing from its views and"
      },
      "id": 136064558,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 318,
      "location": "/test/subjects/jhotdraw_source/src/org/jhotdraw/framework",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136064909/",
      "md5hash": "3aa0e94b9ad6fa09a665067d5273ca68",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "3": " *",
        "4": " * Project:\t\tJHotdraw - a GUI framework for technical drawings",
        "134": "\t/**",
        "129": "\t * @param figure figure to be searched in all direct descendents",
        "136": "\t */",
        "137": "\tpublic void addDrawingChangeListener(DrawingChangeListener listener);",
        "135": "\t * Adds a listener for this drawing.",
        "130": "\t * @return true if the figure is a direct child of this Drawing, else otherwise",
        "20": "/**",
        "21": " * Drawing is a container for figures.",
        "22": " * <p>",
        "23": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "28": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "29": " * The Observer pattern is used to decouple the Drawing from its views and"
      },
      "id": 136064909,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 318,
      "location": "/test/subjects/JHD176source/src/CH/ifa/draw/framework",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136065890/",
      "md5hash": "91df4b3d82e3664a10c6038738ef2c15",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "3": " *",
        "4": " * Project:\t\tJHotdraw - a GUI framework for technical drawings",
        "134": "\t/**",
        "129": "\t * @param figure figure to be searched in all direct descendents",
        "136": "\t */",
        "137": "\tpublic void addDrawingChangeListener(DrawingChangeListener listener);",
        "135": "\t * Adds a listener for this drawing.",
        "130": "\t * @return true if the figure is a direct child of this Drawing, else otherwise",
        "20": "/**",
        "21": " * Drawing is a container for figures.",
        "22": " * <p>",
        "23": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "28": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "29": " * The Observer pattern is used to decouple the Drawing from its views and"
      },
      "id": 136065890,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/gustavoasoares/saferefactor.git",
      "language": "Java",
      "linescount": 318,
      "location": "/test/subjects/JHD176target/src/CH/ifa/draw/framework",
      "name": "saferefactor",
      "url": "https://searchcode.com/codesearch/view/136066382/",
      "md5hash": "91df4b3d82e3664a10c6038738ef2c15",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "3": " *",
        "4": " * Project:\t\tJHotdraw - a GUI framework for technical drawings",
        "134": "\t/**",
        "129": "\t * @param figure figure to be searched in all direct descendents",
        "136": "\t */",
        "137": "\tpublic void addDrawingChangeListener(DrawingChangeListener listener);",
        "135": "\t * Adds a listener for this drawing.",
        "130": "\t * @return true if the figure is a direct child of this Drawing, else otherwise",
        "20": "/**",
        "21": " * Drawing is a container for figures.",
        "22": " * <p>",
        "23": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "28": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "29": " * The Observer pattern is used to decouple the Drawing from its views and"
      },
      "id": 136066382,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/chris_chamberlain/moin-1.9-daccord-fork",
      "language": "Java",
      "linescount": 202,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/framework",
      "name": "moin-1.9-daccord-fork",
      "url": "https://searchcode.com/codesearch/view/125372776/",
      "md5hash": "38e66426d1bd948b8459dd8ac51658ce",
      "lines": {
        "64": "     * that is temporarily inserted into the drawing.",
        "1": "/*",
        "2": " * @(#)Drawing.java 5.1",
        "34": "     * Releases the drawing and its contained figures.",
        "33": "    /**",
        "13": "/**",
        "14": " * Drawing is a container for figures.",
        "15": " * <p>",
        "16": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "21": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "22": " * The Observer pattern is used to decouple the Drawing from its views and",
        "25": " * @see Figure",
        "26": " * @see DrawingView",
        "29": "",
        "30": "public interface Drawing",
        "63": "     * in figure. Use this method to ignore a figure"
      },
      "id": 125372776,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/matthijs/moin-1.9",
      "language": "Java",
      "linescount": 202,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/framework",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/132503024/",
      "md5hash": "38e66426d1bd948b8459dd8ac51658ce",
      "lines": {
        "64": "     * that is temporarily inserted into the drawing.",
        "1": "/*",
        "2": " * @(#)Drawing.java 5.1",
        "34": "     * Releases the drawing and its contained figures.",
        "33": "    /**",
        "13": "/**",
        "14": " * Drawing is a container for figures.",
        "15": " * <p>",
        "16": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "21": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "22": " * The Observer pattern is used to decouple the Drawing from its views and",
        "25": " * @see Figure",
        "26": " * @see DrawingView",
        "29": "",
        "30": "public interface Drawing",
        "63": "     * in figure. Use this method to ignore a figure"
      },
      "id": 132503024,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/oangeor/moin-1.9",
      "language": "Java",
      "linescount": 202,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/framework",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/134222221/",
      "md5hash": "38e66426d1bd948b8459dd8ac51658ce",
      "lines": {
        "64": "     * that is temporarily inserted into the drawing.",
        "1": "/*",
        "2": " * @(#)Drawing.java 5.1",
        "34": "     * Releases the drawing and its contained figures.",
        "33": "    /**",
        "13": "/**",
        "14": " * Drawing is a container for figures.",
        "15": " * <p>",
        "16": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "21": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "22": " * The Observer pattern is used to decouple the Drawing from its views and",
        "25": " * @see Figure",
        "26": " * @see DrawingView",
        "29": "",
        "30": "public interface Drawing",
        "63": "     * in figure. Use this method to ignore a figure"
      },
      "id": 134222221,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/mixedpower/moin-1.9",
      "language": "Java",
      "linescount": 202,
      "location": "/contrib/TWikiDrawPlugin/src/CH/ifa/draw/framework",
      "name": "moin-1.9",
      "url": "https://searchcode.com/codesearch/view/135121374/",
      "md5hash": "38e66426d1bd948b8459dd8ac51658ce",
      "lines": {
        "64": "     * that is temporarily inserted into the drawing.",
        "1": "/*",
        "2": " * @(#)Drawing.java 5.1",
        "34": "     * Releases the drawing and its contained figures.",
        "33": "    /**",
        "13": "/**",
        "14": " * Drawing is a container for figures.",
        "15": " * <p>",
        "16": " * Drawing sends out DrawingChanged events to DrawingChangeListeners",
        "21": " * <b><a href=../pattlets/sld026.htm>Observer</a></b><br>",
        "22": " * The Observer pattern is used to decouple the Drawing from its views and",
        "25": " * @see Figure",
        "26": " * @see DrawingView",
        "29": "",
        "30": "public interface Drawing",
        "63": "     * in figure. Use this method to ignore a figure"
      },
      "id": 135121374,
      "filename": "Drawing.java"
    },
    {
      "repo": "http://umple.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 386,
      "location": "/Umplificator/UmplifiedProjects/jhotdraw7/src/main/java/org/jhotdraw/draw",
      "name": "umple",
      "url": "https://searchcode.com/codesearch/view/2884370/",
      "md5hash": "e6e47b9612ec8b4faa886394343310f6",
      "lines": {
        "1": "/*",
        "2": " * @(#)Drawing.java",
        "33": " * <ul>",
        "40": " * <li>A drawing can find contained figures given a point or a rectangular",
        "41": " * region.",
        "42": " * Specialized implementations of the {@code Drawing} interface can use",
        "39": " * ",
        "44": " * ",
        "34": " * <li>A drawing notifies a figure and its {@code CompositeFigureListener}'s when",
        "46": " * {@code Handle} as a mediator for undoable edit events. This way, undoable",
        "45": " * <li>The drawing object is used by {@code Figure}, {@code Tool} and",
        "26": "/**",
        "27": " * A <em>drawing</em> is a container for {@link Figure}s. A drawing can hold",
        "28": " * multiple figures, but a figure can only be in one drawing at a time.",
        "29": " * A drawing can be in one or multiple {@link DrawingView}s.",
        "30": " * <p>",
        "31": " * {@code Drawing} is essentially a {@link CompositeFigure} with a number of"
      },
      "id": 2884370,
      "filename": "Drawing.java"
    },
    {
      "repo": "https://bitbucket.org/korri_vlg/mos09_java.git",
      "language": "Java",
      "linescount": 47,
      "location": "/Bluej ? ???????/???????/polygons",
      "name": "mos09_java",
      "url": "https://searchcode.com/codesearch/view/38781444/",
      "md5hash": "76ebc1830c17717b22694e5088c63e90",
      "lines": {
        "19": "",
        "2": "/**",
        "3": " * Drawing a spiral",
        "20": "/** Drawing of a spiral"
      },
      "id": 38781444,
      "filename": "Spiral.java"
    },
    {
      "repo": "https://bitbucket.org/korri_vlg/mos09_java.git",
      "language": "Java",
      "linescount": 54,
      "location": "/Bluej ? ???????/???????/polygons",
      "name": "mos09_java",
      "url": "https://searchcode.com/codesearch/view/38781447/",
      "md5hash": "df8a2cc946f3d498c7b18953893cfe11",
      "lines": {
        "2": "/**",
        "3": " * Drawing a polygon",
        "21": "",
        "22": "/** Drawing of a polygon"
      },
      "id": 38781447,
      "filename": "Polygon.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1131,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/drawing",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260632/",
      "md5hash": "850f062c2566ead40b115c1e9bde2348",
      "lines": {
        "128": "   * The drawing data",
        "129": "   */",
        "130": "  private DrawingData drawingData;",
        "36": "/**",
        "37": " * Contains the various biff records used to insert a drawing into a",
        "133": "   * The type of this drawing object",
        "39": " */",
        "40": "public class Drawing implements DrawingGroupObject, Image",
        "44": "   */",
        "45": "  private static Logger logger = Logger.getLogger(Drawing.class);",
        "142": "  /**",
        "143": "   * The drawing position on the sheet",
        "19": "",
        "20": "package jxl.biff.drawing;",
        "132": "  /**",
        "127": "  /**"
      },
      "id": 43260632,
      "filename": "Drawing.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 10384,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 4486,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2508,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 120,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 61,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 30,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 8,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 5,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 2,
      "source": "Unknown",
      "id": 0
    }
  ]
}