{
  "matchterm": "HSSFCell",
  "previouspage": null,
  "searchterm": "HSSFCell",
  "query": "HSSFCell",
  "language_filters": [
    {
      "count": 363,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 363,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 1062,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642303/",
      "md5hash": "a320b63ccf16b2c1798c3d8c1abc8ed7",
      "lines": {
        "256": "                retval = HSSFCell.CELL_TYPE_NUMERIC;",
        "259": "            case BlankRecord.sid :",
        "260": "                retval = HSSFCell.CELL_TYPE_BLANK;",
        "263": "            case LabelSSTRecord.sid :",
        "264": "                retval = HSSFCell.CELL_TYPE_STRING;",
        "268": "                retval = HSSFCell.CELL_TYPE_FORMULA;",
        "267": "            case FormulaRecordAggregate.sid :",
        "159": "    {",
        "274": "                retval = (boolErrRecord.isBoolean())",
        "275": "                         ? HSSFCell.CELL_TYPE_BOOLEAN",
        "185": "",
        "186": "    //protected HSSFCell(Workbook book, Sheet sheet, short row, short col,",
        "187": "    protected HSSFCell(Workbook book, Sheet sheet, int row, short col,",
        "156": "",
        "157": "    //protected HSSFCell(Workbook book, Sheet sheet, short row, short col)",
        "158": "    protected HSSFCell(Workbook book, Sheet sheet, int row, short col)",
        "255": "            case NumberRecord.sid :"
      },
      "id": 15642303,
      "filename": "HSSFCell.java"
    },
    {
      "repo": "https://bitbucket.org/sagittatius/cardplayer",
      "language": "Java",
      "linescount": 145,
      "location": "/src/com/thoughtworks/studio/tools/cardkit",
      "name": "cardplayer",
      "url": "https://searchcode.com/codesearch/view/52992680/",
      "md5hash": "4a4e19c7f14bb6beed88e7bdbd211bfc",
      "lines": {
        "68": "",
        "69": "    protected Object getCellString(HSSFCell cell) {",
        "76": "",
        "77": "            case HSSFCell.CELL_TYPE_STRING:",
        "79": "                break;",
        "80": "            case HSSFCell.CELL_TYPE_NUMERIC:",
        "17": "import org.apache.poi.hssf.usermodel.HSSFRow;",
        "18": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "83": "            case HSSFCell.CELL_TYPE_FORMULA:",
        "82": "                break;",
        "86": "            case HSSFCell.CELL_TYPE_ERROR:",
        "88": "                break;",
        "89": "            case HSSFCell.CELL_TYPE_BOOLEAN:",
        "58": "                for (short columnIndex = 0; columnIndex < columnCount; columnIndex++) {",
        "59": "                    HSSFCell cell = row.getCell(columnIndex);",
        "85": "                break;"
      },
      "id": 52992680,
      "filename": "ExcelIdentifier.java"
    },
    {
      "repo": "https://bitbucket.org/htsi/huataioa.git",
      "language": "Java",
      "linescount": 344,
      "location": "/src/main/java/com/huataisi/oa/crm",
      "name": "huataioa",
      "url": "https://searchcode.com/codesearch/view/42988393/",
      "md5hash": "38fd812a5dd747e6efcf3acc0d88c2ae",
      "lines": {
        "320": "\t\t\t\tint type = cell.getCellType();",
        "321": "\t\t\t\tif(type == HSSFCell.CELL_TYPE_STRING){",
        "332": "\t\t\t\t\t}",
        "10": "",
        "11": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "300": "\t\t}",
        "301": "\t\tprivate String getStringValue(HSSFCell cell){",
        "303": "\t\t\t\tint type = cell.getCellType();",
        "304": "\t\t\t\tif(type == HSSFCell.CELL_TYPE_STRING){",
        "305": "\t\t\t\t\treturn cell.getStringCellValue();",
        "306": "\t\t\t\t}else if(type == HSSFCell.CELL_TYPE_NUMERIC){",
        "333": "\t\t\t\t}else if(type == HSSFCell.CELL_TYPE_NUMERIC){",
        "317": "\t\tSimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy/MM/dd\");",
        "318": "\t\tprivate Date getDateValue(HSSFCell cell){"
      },
      "id": 42988393,
      "filename": "UpLoadFileWindow.java"
    },
    {
      "repo": "https://bitbucket.org/tuannguyen/mytest.git",
      "language": "Java",
      "linescount": 279,
      "location": "/myproject/src/com/bp/pensionline/reporting/util",
      "name": "mytest",
      "url": "https://searchcode.com/codesearch/view/43507489/",
      "md5hash": "b06613f225965ca6f6532c850ea10d2c",
      "lines": {
        "144": "\t\t\tc1.setCellValue(new HSSFRichTextString(p[0]));",
        "142": "\t\t\tHSSFCell c1 = row.createCell(0);",
        "145": "\t\t\tHSSFCell c2 = row.createCell(1);",
        "106": "\t\t",
        "107": "\t\tHSSFCellStyle headingStyle = wb.createCellStyle();",
        "12": "import org.apache.commons.logging.Log;",
        "13": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "14": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "15": "import org.apache.poi.hssf.usermodel.HSSFFont;",
        "112": "\t\theadingStyle.setFont(headingFont);",
        "113": "\t\theadingStyle.setAlignment(HSSFCellStyle.ALIGN_LEFT);",
        "114": "\t\theadingStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);",
        "115": "\t\theadingStyle.setFillForegroundColor(HSSFColor.GREEN.index);",
        "116": "\t\theadingStyle.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);",
        "117": "\t\t",
        "141": "\t\t\tHSSFRow row = sheet.createRow(i+1);"
      },
      "id": 43507489,
      "filename": "ContentPermissionReportUtil.java"
    },
    {
      "repo": "https://bitbucket.org/AlexeyD/hibench.git",
      "language": "Java",
      "linescount": 93,
      "location": "/nutchindexing/nutch-1.2/src/plugin/parse-msexcel/src/java/org/apache/nutch/parse/msexcel",
      "name": "hibench",
      "url": "https://searchcode.com/codesearch/view/48925127/",
      "md5hash": "bfabca239bacfb6f45e729151b226a6a",
      "lines": {
        "80": "            }",
        "81": "            /* else if(cell.getCellType() == HSSFCell.CELL_TYPE_FORMULA){",
        "50": "    HSSFRow row;",
        "51": "    HSSFCell cell;",
        "22": "// Jakarta POI imports",
        "23": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "74": "             */",
        "75": "            if (cell.getCellType() == HSSFCell.CELL_TYPE_STRING) {",
        "76": "              resultText.append(cell.getStringCellValue()).append(\" \");",
        "77": "            } else if (cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC) {"
      },
      "id": 48925127,
      "filename": "ExcelExtractor.java"
    },
    {
      "repo": "https://github.com/yyj1203/epda_j.git",
      "language": "Java",
      "linescount": 328,
      "location": "/src/com/kps/epda/util",
      "name": "epda_j",
      "url": "https://searchcode.com/codesearch/view/107347816/",
      "md5hash": "878dc886001228a322cd04b81dd59cb2",
      "lines": {
        "160": "                        case HSSFCell.CELL_TYPE_STRING:",
        "163": "",
        "164": "                        case HSSFCell.CELL_TYPE_BLANK:",
        "165": "                        case HSSFCell.CELL_TYPE_ERROR:",
        "136": "            Map<String, String> rowMap = new LinkedHashMap<String, String>();",
        "137": "            for (Iterator<HSSFCell> cit = (Iterator<HSSFCell>)row.cellIterator(); cit.hasNext();) {",
        "138": "                HSSFCell cell = cit.next();",
        "139": "                if (cell != null) {",
        "15": "",
        "16": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "145": "                    switch (type) {",
        "146": "                        case HSSFCell.CELL_TYPE_BOOLEAN:",
        "150": "",
        "151": "                        case HSSFCell.CELL_TYPE_NUMERIC:",
        "159": ""
      },
      "id": 107347816,
      "filename": "ExcelProcessor.java"
    },
    {
      "repo": "https://github.com/wangwenan/myproject01.git",
      "language": "Java",
      "linescount": 383,
      "location": "/src/main/java/com/newland/beecode/service/impl",
      "name": "myproject01",
      "url": "https://searchcode.com/codesearch/view/114533602/",
      "md5hash": "570e3a94263985c3f578f86e63ce1583",
      "lines": {
        "165": "\t\t\tcellValue = title + \"  \" + cellValue;",
        "166": "\t\t\tHSSFCell cell = row.createCell((short) 0);",
        "167": "\t\t\t//cell.setEncoding(HSSFCell.ENCODING_UTF_16);",
        "168": "                        //TODO \u65e0\u6b64\u63a5\u53e3",
        "176": "\t\t\tCellDefine cellDefine = (CellDefine) cellList.get(i);",
        "177": "\t\t\tHSSFCell cell = row.createCell(i);",
        "178": "",
        "179": "\t\t\tHSSFCellStyle style = wb.createCellStyle();",
        "20": "import org.apache.commons.logging.LogFactory;",
        "21": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "22": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "23": "import org.apache.poi.hssf.usermodel.HSSFDataFormat;",
        "180": "\t\t\tstyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);",
        "186": "\t\t\tstyle.setFillForegroundColor(HSSFColor.GREY_50_PERCENT.index);",
        "187": "\t\t\t//style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);",
        "181": ""
      },
      "id": 114533602,
      "filename": "XPathExcelTemplateService.java"
    },
    {
      "repo": "https://bitbucket.org/smitdevel/delta.git",
      "language": "Java",
      "linescount": 341,
      "location": "/source/java/ee/webmedia/alfresco/importer/excel/mapper",
      "name": "delta",
      "url": "https://searchcode.com/codesearch/view/50611227/",
      "md5hash": "359b2c5791033d6f4ba37ca43a466bad",
      "lines": {
        "17": "import org.apache.commons.lang.StringUtils;",
        "18": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "179": "                StringBuffer text = new StringBuffer();",
        "180": "                HSSFRichTextString str = ((HSSFCell) cell).getRichStringCellValue();",
        "198": "    /**",
        "199": "     * Method copied from private method {@link HSSFCell#getCellType()}",
        "174": "    private Object evaluateFormula(final Cell cell) {",
        "175": "        if (cell instanceof HSSFCell) {"
      },
      "id": 50611227,
      "filename": "ExcelRowMapper.java"
    },
    {
      "repo": "https://bitbucket.org/taijh999/keyanguanli",
      "language": "Java",
      "linescount": 2153,
      "location": "/src/java/test/dao",
      "name": "keyanguanli",
      "url": "https://searchcode.com/codesearch/view/62222587/",
      "md5hash": "c363e1a1ade8262f631be345b83454c5",
      "lines": {
        "1467": "        cell = row.createCell(4);",
        "1451": "        HSSFRow row = null;",
        "1452": "        HSSFCell cell = null;",
        "1459": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "1458": "        cell = row.createCell(1);",
        "1456": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "17": "import java.util.TreeMap;",
        "18": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "19": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "20": "import org.apache.poi.hssf.usermodel.HSSFRichTextString;",
        "1461": "        cell = row.createCell(2);",
        "1462": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "1464": "        cell = row.createCell(3);",
        "1465": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "1455": "        cell = row.createCell(0);",
        "1468": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);"
      },
      "id": 62222587,
      "filename": "ketiListDAO.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 1375,
      "location": "/src/main/java/org/comsoft/juniprint/utils",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212069/",
      "md5hash": "c11a8c0e57714af4cf1eeffb5ef652f0",
      "lines": {
        "256": "\t\t\t\tfor(int col=cRA.getFirstColumn(); col <= cRA.getLastColumn(); col++){",
        "257": "\t\t\t\t\tHSSFCell cell = r.getCell(col);",
        "34": "",
        "35": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "325": "\t\t\t\tfor(int col = aRef.getFirstCell().getCol(); col <= aRef.getLastCell().getCol(); col++){",
        "326": "\t\t\t\t\tHSSFCell cell = r.getCell(col);",
        "307": "\t\t\tHSSFRow r = (HSSFRow)it.next();",
        "331": "\t",
        "332": "\tpublic static HSSFCell getCell(HSSFRow row, int columnIndex){",
        "258": "\t\t\t\t\tif (cell == null) isNotFormula =true;",
        "333": "\t\tif(row==null) return null;",
        "259": "\t\t\t\t\telse if (cell.getCellType() == HSSFCell.CELL_TYPE_FORMULA) isFormula = true;",
        "308": "\t\t\tHSSFCell cell = r.getCell(indexColumn);",
        "280": "\t\t\twhile (it.hasNext()){",
        "281": "\t\t\t\tHSSFCell cell = (HSSFCell)it.next();",
        "282": "\t\t\t\tif (cell.getCellType() == HSSFCell.CELL_TYPE_FORMULA) isFormula = true;",
        "283": "\t\t\t\telse isNotFormula = true;"
      },
      "id": 60212069,
      "filename": "ExcelUtils.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 345,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/hssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854667/",
      "md5hash": "69c13b066ab7080e5b5737d464e674f4",
      "lines": {
        "96": "    public String getValue() {",
        "48": "",
        "99": "        }",
        "97": "        if (theCell.getCellType() == HSSFCell.CELL_TYPE_BLANK) {",
        "102": "        }",
        "49": "    public CellHSSFImpl(HSSFWorkbook workbook, HSSFCell theCell) {",
        "40": "    ",
        "41": "    private static Map<HSSFWorkbook,Map<Color,HSSFCellStyle>> colourStylesForWorkbook = new HashMap<HSSFWorkbook, Map<Color,HSSFCellStyle>>();",
        "42": "",
        "43": "    private HSSFCell theCell;",
        "16": "import org.apache.log4j.Logger;",
        "17": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "18": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "19": "import org.apache.poi.hssf.usermodel.HSSFComment;",
        "100": "        else if (theCell.getCellType() == HSSFCell.CELL_TYPE_BOOLEAN) {",
        "103": "        else if (theCell.getCellType() == HSSFCell.CELL_TYPE_ERROR) {"
      },
      "id": 72854667,
      "filename": "CellHSSFImpl.java"
    },
    {
      "repo": "https://bitbucket.org/taijh999/keyanguanli",
      "language": "Java",
      "linescount": 1513,
      "location": "/src/java/test/dao",
      "name": "keyanguanli",
      "url": "https://searchcode.com/codesearch/view/62222589/",
      "md5hash": "85d93465ec3827814df2e7233c7c79b6",
      "lines": {
        "960": "        cell = row.createCell(1);",
        "961": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "963": "        cell = row.createCell(2);",
        "964": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "966": "        cell = row.createCell(3);",
        "967": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "969": "        cell = row.createCell(4);",
        "970": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "12": "import java.util.List;",
        "13": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "1034": "                    cell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "1033": "                    cell = row.createCell((j - 1));",
        "953": "        HSSFRow row = null;",
        "954": "        HSSFCell cell = null;",
        "957": "        cell = row.createCell(0);",
        "958": "        cell.setCellType(HSSFCell.CELL_TYPE_STRING);"
      },
      "id": 62222589,
      "filename": "jiandingListDAO.java"
    },
    {
      "repo": "https://github.com/satishija/Hybrid-Framework.git",
      "language": "Java",
      "linescount": 438,
      "location": "/src/test/java/com/hybrid",
      "name": "Hybrid-Framework",
      "url": "https://searchcode.com/codesearch/view/71798596/",
      "md5hash": "98ccf2518e9afd156b6a3c56fb3d5070",
      "lines": {
        "385": "                break;",
        "386": "            case HSSFCell.CELL_TYPE_FORMULA: //2",
        "387": "                throw new RuntimeException(\"We can't evaluate formulas in Java\");",
        "388": "            case HSSFCell.CELL_TYPE_BLANK: //3",
        "390": "                break;",
        "7": "",
        "8": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "393": "                break;",
        "394": "            case HSSFCell.CELL_TYPE_ERROR: //5",
        "391": "            case HSSFCell.CELL_TYPE_BOOLEAN: //4",
        "428": "\t        \tcell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "427": "\t        \tHSSFCell cell = row.createCell(mycol);",
        "408": "\t        for (int mycol = 0; mycol < xTC_cols; mycol++) {",
        "409": "\t        \tHSSFCell cell = row.createCell(mycol);",
        "410": "\t        \tcell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "411": "\t        \tcell.setCellValue(xldata[myrow][mycol]);",
        "426": "\t        for (int mycol = 0; mycol < xTS_cols; mycol++) {"
      },
      "id": 71798596,
      "filename": "Hybrid_Framework.java"
    },
    {
      "repo": "https://github.com/satishija/Hybrid-Framework.git",
      "language": "Java",
      "linescount": 433,
      "location": "/src/test/java/com/hybrid",
      "name": "Hybrid-Framework",
      "url": "https://searchcode.com/codesearch/view/71798609/",
      "md5hash": "b9a0a9cf93f4f1526915cc708570f503",
      "lines": {
        "256": "\t",
        "257": "\tpublic static String cellToString(HSSFCell cell) {",
        "261": "\t        switch (type) {",
        "262": "\t            case HSSFCell.CELL_TYPE_NUMERIC: //0",
        "7": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "264": "\t                break;",
        "265": "\t            case HSSFCell.CELL_TYPE_STRING: //1",
        "267": "\t                break;",
        "268": "\t            case HSSFCell.CELL_TYPE_FORMULA: //2",
        "269": "\t                throw new RuntimeException(\"We can't evaluate formulas in Java\");",
        "270": "\t            case HSSFCell.CELL_TYPE_BLANK: //3",
        "272": "\t                break;",
        "273": "\t            case HSSFCell.CELL_TYPE_BOOLEAN: //4",
        "275": "\t                break;",
        "276": "\t            case HSSFCell.CELL_TYPE_ERROR: //5",
        "6": ""
      },
      "id": 71798609,
      "filename": "Hybrid_Framework_WebDriver.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 2096,
      "location": "/src/main/java/org/comsoft/juniprint",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212057/",
      "md5hash": "e9487002cf69dbd9246766c01c968b73",
      "lines": {
        "32": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "33": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "34": "import org.apache.poi.hssf.usermodel.HSSFComment;",
        "409": "\t\t\t\t\t\t\t\t\tHSSFCellStyle style= wb.createCellStyle();",
        "423": "\t\t\t\t\t\t\t\tif (!styleMap.containsKey(strValue)){",
        "424": "\t\t\t\t\t\t\t\t\tHSSFCellStyle style= wb.createCellStyle();",
        "408": "\t\t\t\t\t\t\t\tif (!styleMap.containsKey(strValue)){",
        "399": "\t\t\t\t\t\t\t\tif (!styleMap.containsKey(strValue)){",
        "400": "\t\t\t\t\t\t\t\t\tHSSFCellStyle style= wb.createCellStyle();",
        "312": "\tprivate void setStyleRow(HSSFSheet ash,  String strStyle, int row, int beCol, int countCol, int breakCol,   ",
        "281": "\t\t\t\t\t HSSFCell c = (HSSFCell)cit.next();",
        "280": "\t\t\t\t for(Iterator cit = r.cellIterator(); cit.hasNext();) {",
        "313": "\t\t\tMap<String,  HSSFCellStyle[]> styleRowMap, HSSFFont font){",
        "282": "\t\t\t\t\t if(c.getCellType() == HSSFCell.CELL_TYPE_FORMULA) {",
        "283": "\t\t\t\t\t\t try{",
        "31": "import org.apache.poi.hssf.record.formula.udf.DefaultUDFFinder;"
      },
      "id": 60212057,
      "filename": "JUniPrint.java"
    },
    {
      "repo": "https://github.com/dsteiner/wub.git",
      "language": "Java",
      "linescount": 227,
      "location": "/src/main/java/de/dsteiner/wub/web/orderlist/report/excel",
      "name": "wub",
      "url": "https://searchcode.com/codesearch/view/112311786/",
      "md5hash": "b84f8228ffaeba6763bfd2367150c06c",
      "lines": {
        "3": "import org.apache.commons.lang.Validate;",
        "4": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "5": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "6": "import org.apache.poi.hssf.usermodel.HSSFClientAnchor;",
        "103": "\tprivate HSSFCellStyle createBorderedHeaderCellStyle(",
        "106": "",
        "107": "\t\tfinal HSSFCellStyle headerCellStyle = workbook.createCellStyle();",
        "108": "\t\theaderCellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);",
        "102": "",
        "22": "",
        "23": "\tprotected final HSSFCellStyle borderedCellStyle;",
        "24": "\tprotected final HSSFCellStyle borderedBoldCellStyle;",
        "25": "\tprotected final HSSFCellStyle borderedCurrencyCellStyle;",
        "26": "\tprotected final HSSFCellStyle borderedBoldUnderlinedCellStyle;",
        "27": "",
        "28": "\tprotected final HSSFFont fatUnterlinedFont;",
        "29": "\tprotected final HSSFCellStyle borderedHeaderCellStyle;"
      },
      "id": 112311786,
      "filename": "SheetBuilderBase.java"
    },
    {
      "repo": "https://bitbucket.org/taijh999/keyanguanli",
      "language": "Java",
      "linescount": 119,
      "location": "/src/java/wsxk",
      "name": "keyanguanli",
      "url": "https://searchcode.com/codesearch/view/62222550/",
      "md5hash": "f47486fd06e0116628291c981d2d821f",
      "lines": {
        "32": "\t\t\tHSSFCellStyle style = wb.createCellStyle(); // ????",
        "33": "",
        "34": "\t\t\tstyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);// ??",
        "35": "\t\t\tstyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);// ??",
        "36": "\t\t\tHSSFRow row = sheet.createRow((short) 0);",
        "39": "\t\t\tsheet.addMergedRegion(new Region(0, (short) 0, 1, (short) 0));",
        "40": "\t\t\tHSSFCell ce = row.createCell((short) 0);",
        "41": "\t\t\t//ce.setEncoding(HSSFCell.ENCODING_UTF_16);// ????",
        "42": "\t\t\tce.setCellValue(\"??\\\\??\"); // ??????????????",
        "14": "",
        "15": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "16": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "17": "import org.apache.poi.hssf.usermodel.HSSFRow;",
        "59": "\t\t\t\t\t\t(short) (celle + 1)));",
        "60": "\t\t\t\tHSSFCell cell = row.createCell((short) (celln + 1));",
        "31": "\t\t\tHSSFSheet sheet = wb.createSheet(\"new   sheet\");"
      },
      "id": 62222550,
      "filename": "ExcelTest.java"
    },
    {
      "repo": "https://github.com/mariuszs/rcsnewsletter.git",
      "language": "Java",
      "linescount": 304,
      "location": "/newsletter-portlet/src/main/java/com/rcs/newsletter/commons",
      "name": "rcsnewsletter",
      "url": "https://searchcode.com/codesearch/view/75361087/",
      "md5hash": "9473a87bf32b6a3d8451ab585930d35f",
      "lines": {
        "178": "",
        "80": "            HSSFRow row = sheet.createRow((short) 0);",
        "81": "            HSSFCellStyle cellStyle = ExcelExporterUtil.createHeaderStyle(workbook);",
        "82": "",
        "179": "                    HSSFCell nameCell = row.getCell(NAME_INDEX);",
        "180": "                    if (nameCell != null && nameCell.getCellType() == HSSFCell.CELL_TYPE_STRING && nameCell.getStringCellValue() != null) {",
        "181": "                        firstName = nameCell.getStringCellValue();",
        "183": "",
        "184": "                    HSSFCell lastNameCell = row.getCell(LAST_NAME_INDEX);",
        "185": "                    if (lastNameCell != null && lastNameCell.getCellType() == HSSFCell.CELL_TYPE_STRING && lastNameCell.getStringCellValue() != null) {",
        "186": "                        lastName = lastNameCell.getStringCellValue();",
        "187": "                    }",
        "188": "                    HSSFCell emailCell = row.getCell(EMAIL_INDEX);",
        "189": "                    if (emailCell != null && emailCell.getCellType() == HSSFCell.CELL_TYPE_STRING) {",
        "190": "                        if (emailCell.getStringCellValue() != null && isValidEmailAddress(emailCell.getStringCellValue().trim())) {"
      },
      "id": 75361087,
      "filename": "SubscriptorsResourceUtil.java"
    },
    {
      "repo": "https://github.com/satishija/Hybrid-Framework.git",
      "language": "Java",
      "linescount": 262,
      "location": "/src/test/java/com/framework",
      "name": "Hybrid-Framework",
      "url": "https://searchcode.com/codesearch/view/71798584/",
      "md5hash": "373fcb16baa2004c92c7dfde386b48d1",
      "lines": {
        "192": "\t            for (int j = 0; j < xCols; j++) {",
        "193": "\t               HSSFCell cell = row.getCell(j); // To read value from each col in each row",
        "10": "",
        "11": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "204": "\t",
        "205": "\tpublic static String cellToString(HSSFCell cell) {",
        "209": "      switch (type) {",
        "210": "          case HSSFCell.CELL_TYPE_NUMERIC: //0",
        "212": "              break;",
        "213": "          case HSSFCell.CELL_TYPE_STRING: //1",
        "215": "              break;",
        "216": "          case HSSFCell.CELL_TYPE_FORMULA: //2",
        "217": "              throw new RuntimeException(\"We can't evaluate formulas in Java\");",
        "218": "          case HSSFCell.CELL_TYPE_BLANK: //3",
        "220": "              break;",
        "221": "          case HSSFCell.CELL_TYPE_BOOLEAN: //4"
      },
      "id": 71798584,
      "filename": "hybrid.java"
    },
    {
      "repo": "https://bitbucket.org/anozimada/idempiere-smartreport",
      "language": "Java",
      "linescount": 561,
      "location": "/src/com/smj/webui/component",
      "name": "iDempiere-SmartReport",
      "url": "https://searchcode.com/codesearch/view/66638946/",
      "md5hash": "cca272634349e81e3def153722614272",
      "lines": {
        "64": "\t\t\t// estio celda - cell style",
        "65": "\t\t\tHSSFCellStyle cellStyle = book.createCellStyle();",
        "66": "\t\t\tcellStyle.setWrapText(true);",
        "182": "\t\t// estio celda - cell style",
        "12": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "139": "\t\t\tcell.setCellStyle(cellStyle);",
        "140": "\t\t\tcell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "13": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "14": "import org.apache.poi.hssf.usermodel.HSSFClientAnchor;",
        "149": "\t\t\tcell.setCellStyle(cellStyle);",
        "150": "\t\t\tcell.setCellType(HSSFCell.CELL_TYPE_STRING);",
        "183": "\t\tHSSFCellStyle cellStyle = book.createCellStyle();",
        "184": "\t\tcellStyle.setWrapText(true);",
        "185": "\t\tcellStyle.setAlignment(HSSFCellStyle.ALIGN_JUSTIFY);",
        "186": "\t\tcellStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_TOP);",
        "187": "//\t\tcellStyle.setFillPattern(HSSFCellStyle.SPARSE_DOTS);"
      },
      "id": 66638946,
      "filename": "SmjXlsReport.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 148,
      "source": "Github",
      "id": 2
    },
    {
      "count": 107,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 105,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 2,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    }
  ]
}