{
  "matchterm": "Placeholder",
  "previouspage": null,
  "searchterm": "Placeholder",
  "query": "Placeholder",
  "language_filters": [
    {
      "count": 8393,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 8393,
  "results": [
    {
      "repo": "http://google-api-adwords-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 85,
      "location": "/src/com/google/api/adwords/v201109/cm",
      "name": "google-api-adwords-java",
      "url": "https://searchcode.com/codesearch/view/4800341/",
      "md5hash": "519135b5c3d2374ab1d765b210b584ff",
      "lines": {
        "1": "/**",
        "2": " * PlaceHolder.java",
        "46": "    private static org.apache.axis.description.TypeDesc typeDesc =",
        "13": " */",
        "14": "public class PlaceHolder  implements java.io.Serializable {",
        "15": "    public PlaceHolder() {",
        "16": "    }",
        "49": "    static {",
        "50": "        typeDesc.setXmlType(new javax.xml.namespace.QName(\"https://adwords.google.com/api/adwords/cm/v201109\", \"PlaceHolder\"));",
        "19": "    public synchronized boolean equals(java.lang.Object obj) {",
        "20": "        if (!(obj instanceof PlaceHolder)) return false;",
        "21": "        PlaceHolder other = (PlaceHolder) obj;",
        "22": "        if (obj == null) return false;",
        "47": "        new org.apache.axis.description.TypeDesc(PlaceHolder.class, true);"
      },
      "id": 4800341,
      "filename": "PlaceHolder.java"
    },
    {
      "repo": "https://github.com/santoshainsight/googleads-java-lib.git",
      "language": "Java",
      "linescount": 85,
      "location": "/modules/adwords_axis/src/main/java/com/google/api/ads/adwords/axis/v201309/cm",
      "name": "googleads-java-lib",
      "url": "https://searchcode.com/codesearch/view/97444760/",
      "md5hash": "0c5166dd601c5220120e559979cfec9c",
      "lines": {
        "1": "/**",
        "2": " * PlaceHolder.java",
        "46": "    private static org.apache.axis.description.TypeDesc typeDesc =",
        "13": " */",
        "14": "public class PlaceHolder  implements java.io.Serializable {",
        "15": "    public PlaceHolder() {",
        "16": "    }",
        "49": "    static {",
        "50": "        typeDesc.setXmlType(new javax.xml.namespace.QName(\"https://adwords.google.com/api/adwords/cm/v201309\", \"PlaceHolder\"));",
        "19": "    public synchronized boolean equals(java.lang.Object obj) {",
        "20": "        if (!(obj instanceof PlaceHolder)) return false;",
        "21": "        PlaceHolder other = (PlaceHolder) obj;",
        "22": "        if (obj == null) return false;",
        "47": "        new org.apache.axis.description.TypeDesc(PlaceHolder.class, true);"
      },
      "id": 97444760,
      "filename": "PlaceHolder.java"
    },
    {
      "repo": "https://github.com/AsherBond/FreeRDP.git",
      "language": "Java",
      "linescount": 84,
      "location": "/client/Android/FreeRDPCore/src/com/freerdp/freerdpcore/domain",
      "name": "FreeRDP",
      "url": "https://searchcode.com/codesearch/view/71279268/",
      "md5hash": "0efb04a678ec5a4b9635a4b8ead42369",
      "lines": {
        "1": "/*",
        "2": "   Placeholder for bookmark items with a special purpose (i.e. just displaying some text)",
        "40": "\t",
        "41": "\tpublic static final Parcelable.Creator<PlaceholderBookmark> CREATOR = new Parcelable.Creator<PlaceholderBookmark>()",
        "42": "\t{",
        "15": "",
        "16": "public class PlaceholderBookmark extends BookmarkBase {",
        "19": "\t",
        "20": "\tpublic PlaceholderBookmark(Parcel parcel)",
        "22": "\t\tsuper(parcel);",
        "23": "\t\ttype = TYPE_PLACEHOLDER;",
        "26": "",
        "27": "\tpublic PlaceholderBookmark() {",
        "28": "\t\tsuper();",
        "29": "\t\ttype = TYPE_PLACEHOLDER;"
      },
      "id": 71279268,
      "filename": "PlaceholderBookmark.java"
    },
    {
      "repo": "https://bitbucket.org/felixlong/android-rdp.git",
      "language": "Java",
      "linescount": 84,
      "location": "/src/com/softmedia/remote/domain",
      "name": "android-rdp",
      "url": "https://searchcode.com/codesearch/view/42919016/",
      "md5hash": "0528463bccf43fd9bb87b788fa131de3",
      "lines": {
        "1": "/*",
        "2": "   Placeholder for bookmark items with a special purpose (i.e. just displaying some text)",
        "40": "\t",
        "41": "\tpublic static final Parcelable.Creator<PlaceholderBookmark> CREATOR = new Parcelable.Creator<PlaceholderBookmark>()",
        "42": "\t{",
        "15": "",
        "16": "public class PlaceholderBookmark extends BookmarkBase {",
        "19": "\t",
        "20": "\tpublic PlaceholderBookmark(Parcel parcel)",
        "22": "\t\tsuper(parcel);",
        "23": "\t\ttype = TYPE_PLACEHOLDER;",
        "26": "",
        "27": "\tpublic PlaceholderBookmark() {",
        "28": "\t\tsuper();",
        "29": "\t\ttype = TYPE_PLACEHOLDER;"
      },
      "id": 42919016,
      "filename": "PlaceholderBookmark.java"
    },
    {
      "repo": "https://bitbucket.org/felixlong/android-rdp.git",
      "language": "Java",
      "linescount": 84,
      "location": "/jni/FreeRDP/client/Android/src/com/freerdp/afreerdp/domain",
      "name": "android-rdp",
      "url": "https://searchcode.com/codesearch/view/42922776/",
      "md5hash": "e4ccd5546420b68ef903b0f73d783abc",
      "lines": {
        "1": "/*",
        "2": "   Placeholder for bookmark items with a special purpose (i.e. just displaying some text)",
        "40": "\t",
        "41": "\tpublic static final Parcelable.Creator<PlaceholderBookmark> CREATOR = new Parcelable.Creator<PlaceholderBookmark>()",
        "42": "\t{",
        "15": "",
        "16": "public class PlaceholderBookmark extends BookmarkBase {",
        "19": "\t",
        "20": "\tpublic PlaceholderBookmark(Parcel parcel)",
        "22": "\t\tsuper(parcel);",
        "23": "\t\ttype = TYPE_PLACEHOLDER;",
        "26": "",
        "27": "\tpublic PlaceholderBookmark() {",
        "28": "\t\tsuper();",
        "29": "\t\ttype = TYPE_PLACEHOLDER;"
      },
      "id": 42922776,
      "filename": "PlaceholderBookmark.java"
    },
    {
      "repo": "http://migen.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 576,
      "location": "/java/src/uk/ac/lkl/migen/mockup/shapebuilder/ui/drag",
      "name": "migen",
      "url": "https://searchcode.com/codesearch/view/2187085/",
      "md5hash": "6f424756f0eabb3d5e9d1a08022434a9",
      "lines": {
        "136": "     * ",
        "137": "     * This means that the placeholder is never really empty.",
        "284": "     * ",
        "142": "    /**",
        "143": "     * The id of this placeHolder.",
        "168": "     */",
        "285": "     * A PlaceHolderEvent is fired if appropriate.",
        "21": " */",
        "22": "public class PlaceHolder<O extends JComponent> extends JPanel implements",
        "169": "    public PlaceHolder(DraggableComponent<O> draggableComponent,",
        "57": "     * ",
        "58": "     * This is used to return a non-zero preferred size when the placeHolder",
        "156": "     */",
        "157": "    public PlaceHolder(Class<O> componentClass) {",
        "190": "    /**",
        "191": "     * Get the class of components that this placeholder can hold."
      },
      "id": 2187085,
      "filename": "PlaceHolder.java"
    },
    {
      "repo": "http://gxp.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 188,
      "location": "/java/src/com/google/transconsole/common/messages",
      "name": "gxp",
      "url": "https://searchcode.com/codesearch/view/834906/",
      "md5hash": "68120cde25a287a701951da19f85a27e",
      "lines": {
        "32": "public final class Placeholder implements MessageFragment {",
        "33": "",
        "34": "  public static final String VALID_PLACEHOLDER_REG_EXP = \"^[A-Z0-9_]+$\";",
        "135": "   *",
        "40": "  /**",
        "41": "   * Constructs a new placeholder.  This consists of a substring of the",
        "142": "  public boolean conflictsWith(MessageFragment f) {",
        "143": "    if (!(f instanceof Placeholder)) {",
        "136": "   * A placeholder conflicts only with other placeholders, and only when",
        "50": "   */",
        "51": "  public Placeholder(String original, String presentation, String example) {",
        "57": "  /**",
        "25": "/**",
        "26": " * Message fragment representing a placeholder.  This is a fragment of the",
        "58": "   * Constructs a placeholder when no example is provided.",
        "31": " */"
      },
      "id": 834906,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://code.google.com/p/okapi/",
      "language": "Java",
      "linescount": 193,
      "location": "/okapi/libraries/lib-segmentation/src/main/java/net/sf/okapi/lib/segmentation",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/12770327/",
      "md5hash": "3f2a5b70593b6c8bc9f1a66be4155602",
      "lines": {
        "32": "class Placeholder {",
        "99": "\t",
        "100": "\tpublic Placeholder(char value, RuleBasedBreakIterator iterator, int lexemId) {",
        "37": "\t",
        "38": "\tstatic final char GRAPHEME_CLUSTER = 0xE010; // Grapheme cluster placeholder",
        "39": "\tstatic final char WORD_BOUNDARY = 0xE011; // Word boundary placeholder",
        "40": "\tstatic final char WORD_NON_BOUNDARY = 0xE012; // Word non-boundary placeholder",
        "41": "\tstatic final char START_BEFORE = 0xE013;",
        "106": "\t",
        "107": "\tpublic Placeholder(int index, RuleBasedBreakIterator iterator, int lexemId) {",
        "44": "\tstatic final char END_AFTER = 0xE016;",
        "45": "\tstatic final char BASE = 0xE020; // Base for other placeholders",
        "115": "\t\tif (iterator == null) {",
        "116": "\t\t\tthrow new RuntimeException(\"Iterator not set for placeholder\"); ",
        "31": ""
      },
      "id": 12770327,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://github.com/thepes/tapestry5-jquery.git",
      "language": "Java",
      "linescount": 36,
      "location": "/src/main/java/org/got5/tapestry5/jquery/mixins",
      "name": "tapestry5-jquery",
      "url": "https://searchcode.com/codesearch/view/73415834/",
      "md5hash": "4091f43d5bc554ef97b36c3534d4ac05",
      "lines": {
        "32": "\tvoid beginRender(MarkupWriter writer) {",
        "33": "\t\twriter.attributes(\"placeholder\", text);",
        "8": "import org.got5.tapestry5.jquery.mixins.ui.Widget;",
        "9": "import org.got5.tapestry5.jquery.services.javascript.PlaceholderStack;",
        "11": "/**",
        "12": " * A jQuery plugin that enables HTML5 placeholder support for legacy browsers.",
        "13": " * The HTML5 placeholder attribute is awesome, unfortunately only supported by",
        "14": " * some browsers. This plugin replicates the placeholder behavior for",
        "15": " * unsupported browsers.",
        "18": " * @see <a",
        "19": " *      href=\"http://webcloud.se/code/jQuery-Placeholder/\">http://webcloud.se/code/jQuery-Placeholder/</a>",
        "22": " */",
        "23": "@Import(stack = PlaceholderStack.STACK_ID)",
        "24": "@MixinAfter",
        "25": "public class Placeholder extends Widget {"
      },
      "id": 73415834,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 382,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/csd02",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355380/",
      "md5hash": "401c7fec4f725783c50757f2b31ff835",
      "lines": {
        "162": "    /**",
        "163": "     * Create a <code>Placeholder</code> object with the given DOM element",
        "164": "     */",
        "144": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "145": "        span.setAttribute(\"data-type\", \"placeholder\");",
        "146": "        span.setAttribute(\"data-ns\", \"http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD02\");",
        "147": "        span.setClassName(\"widget placeholder\");",
        "25": " * the element placeholder is an inline element containing the text of a computable expression (e.g.,<br/> ''30 days after the publication of this act'') that can be replaced editorially with an actual value",
        "24": "/**",
        "153": "    /**",
        "154": "     * Create a <code>Placeholder</code> object and set up its type",
        "155": "     */",
        "156": "    public Placeholder() {",
        "157": "        super(create());",
        "158": "        setType(\"placeholder\");"
      },
      "id": 40355380,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 368,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/akomantoso20",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355739/",
      "md5hash": "1312a54e3d3f0c15171af5bd409a00ed",
      "lines": {
        "160": "     * Create a <code>Placeholder</code> object with the given DOM element",
        "161": "     */",
        "141": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "142": "        span.setAttribute(\"data-type\", \"placeholder\");",
        "143": "        span.setAttribute(\"data-ns\", \"http://www.akomantoso.org/2.0\");",
        "144": "        span.setClassName(\"widget placeholder\");",
        "152": "     */",
        "150": "    /**",
        "151": "     * Create a <code>Placeholder</code> object and set up its type",
        "24": "/**",
        "25": " * the element placeholder is an inline element containing the text of a computable expression<br/> (e.g., ''30 days after the publication of this act'') that can be replaced editorially with an actual<br/> value",
        "154": "        super(create());",
        "155": "        setType(\"placeholder\");",
        "28": "",
        "29": "public class Placeholder extends InlineComplexType {",
        "159": "    /**"
      },
      "id": 40355739,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://bitbucket.org/ashokhari/bungeni-at4am.git",
      "language": "Java",
      "linescount": 346,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/client/ui/overlay/document/gen/akomantoso20",
      "name": "bungeni-at4am",
      "url": "https://searchcode.com/codesearch/view/51611129/",
      "md5hash": "c02837717569cecbdd50a65ca47c2993",
      "lines": {
        "32": "public class Placeholder extends InlineComplexType {",
        "128": "    public Placeholder() {",
        "130": "        setType(\"placeholder\");",
        "134": "    /**",
        "129": "        super(create());",
        "136": "     */",
        "137": "    public Placeholder(Element element) {",
        "135": "     * Create a <code>Placeholder</code> object with the given DOM element",
        "180": "     * @param originalTextAttr the new value",
        "181": "     * @return <code>Placeholder</code> instance",
        "182": "     */",
        "127": "     */",
        "27": "/**",
        "28": " * the element placeholder is an inline element containing the text of a computable expression (e.g., ''30 days after the publication of this act'') that can be replaced editorially with an actual value",
        "31": ""
      },
      "id": 51611129,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://github.com/JockiHendry/simple-escp.git",
      "language": "Java",
      "linescount": 364,
      "location": "/src/main/java/simple/escp/placeholder",
      "name": "simple-escp",
      "url": "https://searchcode.com/codesearch/view/99501518/",
      "md5hash": "57b72bf3b44acdc839d400aa0196753c",
      "lines": {
        "1": "package simple.escp.placeholder;",
        "2": "",
        "3": "import simple.escp.data.DataSource;",
        "4": "import simple.escp.exception.InvalidPlaceholder;",
        "13": "/**",
        "14": " *  <code>Placeholder</code> represent a placeholder in template, such as <code>${name}</code> or",
        "16": " *",
        "17": " *  <p>Placeholder may have an optional formatting, such as <code>${salary:currency}</code>.  The following",
        "21": " *",
        "22": " *  <p>All value types support a number as options that will limit the result of this placeholder if number",
        "26": " *",
        "27": " *  <p>If placeholders has more than one part separated by semicolon (<code>:</code>), the first part should always",
        "28": " *  be name of the placeholder.",
        "29": " *",
        "30": " */",
        "31": "public abstract class Placeholder {"
      },
      "id": 99501518,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://github.com/tyano/karatachi-core.git",
      "language": "Java",
      "linescount": 47,
      "location": "/karatachi-wicket/src/main/java/org/karatachi/wicket/form/behavior",
      "name": "karatachi-core",
      "url": "https://searchcode.com/codesearch/view/71713568/",
      "md5hash": "67a6bfded896c456dbe374fda9358dca",
      "lines": {
        "44": "        response.render(OnDomReadyHeaderItem.forScript(\"jQuery(':input[placeholder]').placeholder({ blankSubmit: true });\"));",
        "42": "        response.render(JavaScriptHeaderItem.forReference(AjaxLibrariesReference.jquery));",
        "43": "        response.render(JavaScriptHeaderItem.forReference(AjaxLibrariesReference.jquery_placeholder));",
        "12": "",
        "13": "public class Placeholder extends Behavior {",
        "45": "    }",
        "17": "",
        "18": "    public Placeholder(String prompt) {",
        "21": "",
        "22": "    public Placeholder(IModel<String> model) {",
        "28": "        if (this.isEnabled(component)) {",
        "29": "            tag.getAttributes().put(\"placeholder\", model.getObject());"
      },
      "id": 71713568,
      "filename": "Placeholder.java"
    },
    {
      "repo": "http://okapi.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 141,
      "location": "/okapi/filters/xini/src/main/java/net/sf/okapi/filters/xini/jaxb",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/401412/",
      "md5hash": "cbd3d13668532b7a81777dba9f26a20c",
      "lines": {
        "32": "public class PlaceHolder",
        "33": "    extends TextContent",
        "68": "     *     possible object is",
        "69": "     *     {@link PlaceHolderType }",
        "38": "    @XmlAttribute",
        "39": "    protected PlaceHolderType type;",
        "72": "    public PlaceHolderType getType() {",
        "73": "        if (type == null) {",
        "10": "/**",
        "11": " * <p>Java class for PlaceHolder complex type.",
        "15": " * <pre>",
        "16": " * &lt;complexType name=\"PlaceHolder\">",
        "19": " *       &lt;attribute name=\"ID\" use=\"required\" type=\"{}ID\" />",
        "20": " *       &lt;attribute name=\"type\" type=\"{}PlaceHolderType\" default=\"ph\" />",
        "71": "     */",
        "30": "@XmlAccessorType(XmlAccessType.FIELD)",
        "31": "@XmlType(name = \"PlaceHolder\")"
      },
      "id": 401412,
      "filename": "PlaceHolder.java"
    },
    {
      "repo": "http://google-caja.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 65,
      "location": "/src/com/google/caja/plugin",
      "name": "google-caja",
      "url": "https://searchcode.com/codesearch/view/8627732/",
      "md5hash": "12252c6e655d12280671c4a5724eb323",
      "lines": {
        "51": "   * Returns a new span element placeholder for the given node.",
        "34": " * The {@link com.google.caja.plugin.stages.CompileHtmlStage} recombines the",
        "35": " * various parts, using placeholders, and does some normalization",
        "40": " */",
        "41": "public final class Placeholder {",
        "43": "  /**",
        "44": "   * An ID used to indicate that an element is just a placeholder for extracted",
        "50": "  /**",
        "61": "  private Placeholder() {",
        "60": ""
      },
      "id": 8627732,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://code.google.com/p/okapi/",
      "language": "Java",
      "linescount": 137,
      "location": "/okapi/filters/xini/src/main/java/net/sf/okapi/filters/xini/jaxb",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/12769687/",
      "md5hash": "fbde7b56722ec48a86e4712c1e63a25d",
      "lines": {
        "32": "public class PlaceHolder",
        "33": "    extends TextContent",
        "68": "     *     possible object is",
        "69": "     *     {@link PlaceHolderType }",
        "38": "    @XmlAttribute",
        "39": "    protected PlaceHolderType type;",
        "72": "    public PlaceHolderType getType() {",
        "80": "     *     allowed object is",
        "10": "/**",
        "11": " * <p>Java class for PlaceHolder complex type.",
        "15": " * <pre>",
        "16": " * &lt;complexType name=\"PlaceHolder\">",
        "81": "     *     {@link PlaceHolderType }",
        "83": "     */",
        "84": "    public void setType(PlaceHolderType value) {",
        "71": "     */",
        "31": "@XmlType(name = \"PlaceHolder\")"
      },
      "id": 12769687,
      "filename": "PlaceHolder.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 386,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/csd05",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/133185500/",
      "md5hash": "bcc5d286478c38fd620102c751a3c266",
      "lines": {
        "160": "    public Placeholder() {",
        "161": "        super(create());",
        "162": "        setType(\"placeholder\");",
        "166": "    /**",
        "167": "     * Create a <code>Placeholder</code> object with the given DOM element",
        "168": "     */",
        "30": "",
        "159": "     */",
        "148": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "149": "        span.setAttribute(\"data-type\", \"placeholder\");",
        "150": "        span.setAttribute(\"data-ns\", \"http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD05\");",
        "151": "        span.setClassName(\"widget placeholder\");",
        "26": "/**",
        "27": " * the element placeholder is an inline element containing the text of a computable expression (e.g., ''30 days after the publication of this act'') that can be replaced editorially with an actual value",
        "157": "    /**",
        "158": "     * Create a <code>Placeholder</code> object and set up its type",
        "31": "public class Placeholder extends InlineComplexType {"
      },
      "id": 133185500,
      "filename": "Placeholder.java"
    },
    {
      "repo": "https://github.com/Gaarnik/ChestCommands.git",
      "language": "Java",
      "linescount": 56,
      "location": "/ChestCommands/src/com/gmail/filoghost/chestcommands/components",
      "name": "ChestCommands",
      "url": "https://searchcode.com/codesearch/view/99986158/",
      "md5hash": "2917f0f33f6ae853ff3edd392e6c2711",
      "lines": {
        "33": "\tString string;",
        "34": "\tIPlaceholder handler;",
        "35": "\t",
        "6": "",
        "7": "public enum Placeholder {",
        "8": "\t",
        "9": "\tPLAYER(\"%player%\", new IPlaceholder() { public String getReplacement(Player whoClicked) {",
        "12": "\t",
        "13": "\tWORLD(\"%world%\", new IPlaceholder() { public String getReplacement(Player whoClicked) {",
        "16": "\t",
        "17": "\tONLINE_PLAYERS(\"%online_players%\", new IPlaceholder() { public String getReplacement(Player whoClicked) {\t\t",
        "20": "\t",
        "21": "\tMAX_PLAYERS(\"%max_players%\", new IPlaceholder() { public String getReplacement(Player whoClicked) {\t\t",
        "24": "\t",
        "25": "\tMONEY(\"%money%\", new IPlaceholder() { public String getReplacement(Player whoClicked) {"
      },
      "id": 99986158,
      "filename": "Placeholder.java"
    },
    {
      "repo": "http://softariawebdesktopmanager.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 16,
      "location": "/SBS-common/trunk/src/main/java/com/softaria/gwt/common/client/widget",
      "name": "softariawebdesktopmanager",
      "url": "https://searchcode.com/codesearch/view/4534326/",
      "md5hash": "9118f9010f2d4509e40311c8701a6bb9",
      "lines": {
        "5": "",
        "6": "public class PlaceHolder extends Image {",
        "7": "",
        "8": "  private static String STYLE = \"sa-placeHolder\";",
        "9": "",
        "10": "  public PlaceHolder() {"
      },
      "id": 4534326,
      "filename": "PlaceHolder.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 3853,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3395,
      "source": "Github",
      "id": 2
    },
    {
      "count": 935,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 115,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 57,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 25,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 8,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 4,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "Gitorious",
      "id": 10
    }
  ]
}