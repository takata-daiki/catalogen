{
  "matchterm": "Hyperlink",
  "previouspage": null,
  "searchterm": "Hyperlink",
  "query": "Hyperlink",
  "language_filters": [
    {
      "count": 2699,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 2699,
  "results": [
    {
      "repo": "https://bitbucket.org/sylinx/msk.git",
      "language": "Java",
      "linescount": 133,
      "location": "/src/ui",
      "name": "msk",
      "url": "https://searchcode.com/codesearch/view/46665049/",
      "md5hash": "b1c886609d107ff69ef2833ad706d596",
      "lines": {
        "64": "",
        "1": "/*",
        "2": " * HyperLink.java",
        "35": "",
        "36": "\tpublic HyperLink() {",
        "65": "\tpublic void clearHyperLink() {",
        "40": "",
        "41": "\tpublic HyperLink(String label) {",
        "26": " */",
        "27": "public class HyperLink extends JLabel implements MouseInputListener {"
      },
      "id": 46665049,
      "filename": "HyperLink.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 71,
      "location": "/plugins/Hyperlinks/tags/Hyperlinks-1.0.3/src/gatchan/jedit/hyperlinks",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1371619/",
      "md5hash": "05b59321abb7b9459511b9f18168c72e",
      "lines": {
        "1": "/*",
        "2": " * Hyperlink.java - An Hyperlink",
        "50": "\t/**",
        "21": "",
        "22": "package gatchan.jedit.hyperlinks;",
        "42": "\t/**",
        "43": "\t * Returns the start physical line where the hyperlink is.",
        "29": " */",
        "30": "public interface Hyperlink",
        "51": "\t * Returns the end physical line where the hyperlink is."
      },
      "id": 1371619,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 28,
      "location": "/plugins/Code2HTML/tags/code2html-0-6-0/code2html/generic",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1378490/",
      "md5hash": "7ed43ce317336f008568ce525b4a88c9",
      "lines": {
        "1": "/*",
        "2": " * HyperLink.java",
        "21": "",
        "22": "public abstract class HyperLink{"
      },
      "id": 1378490,
      "filename": "HyperLink.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 108,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260223/",
      "md5hash": "e741c2918ae46148d2393deaf238fcc4",
      "lines": {
        "32": " */",
        "33": "public interface Hyperlink",
        "59": "   * Determines whether this is a hyperlink to a file",
        "60": "   *",
        "49": "  /**",
        "50": "   * Gets the range of cells which activate this hyperlink",
        "58": "  /**",
        "53": "   *",
        "54": "   * @return the range of cells which activate the hyperlink",
        "25": "/**",
        "26": " * Hyperlink information.  Only URLs or file links are supported",
        "27": " *",
        "28": " * Hyperlinks may apply to a range of cells; in such cases the methods",
        "29": " * getRow and getColumn return the cell at the top left of the range",
        "30": " * the hyperlink refers to.  Hyperlinks have no specific cell format"
      },
      "id": 43260223,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 108,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200751/",
      "md5hash": "e741c2918ae46148d2393deaf238fcc4",
      "lines": {
        "32": " */",
        "33": "public interface Hyperlink",
        "59": "   * Determines whether this is a hyperlink to a file",
        "60": "   *",
        "49": "  /**",
        "50": "   * Gets the range of cells which activate this hyperlink",
        "58": "  /**",
        "53": "   *",
        "54": "   * @return the range of cells which activate the hyperlink",
        "25": "/**",
        "26": " * Hyperlink information.  Only URLs or file links are supported",
        "27": " *",
        "28": " * Hyperlinks may apply to a range of cells; in such cases the methods",
        "29": " * getRow and getColumn return the cell at the top left of the range",
        "30": " * the hyperlink refers to.  Hyperlinks have no specific cell format"
      },
      "id": 49200751,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/pointcliki/hope.git",
      "language": "Java",
      "linescount": 94,
      "location": "/src/com/pointcliki/ui",
      "name": "hope",
      "url": "https://searchcode.com/codesearch/view/38881391/",
      "md5hash": "b5668014d10fc105de04299c82426845",
      "lines": {
        "32": "\t",
        "33": "\tpublic Hyperlink(String text, String href, UnicodeFont font) {",
        "36": "\t",
        "37": "\tpublic Hyperlink(String text, String href, UnicodeFont font, boolean selected) {",
        "81": "\t\t",
        "12": "/**",
        "13": " * The Hyperlink class is a clickable text component",
        "78": "\tpublic static class HyperlinkEvent implements IEvent {",
        "77": "\t",
        "80": "\t\tprotected Hyperlink fH;",
        "17": " */",
        "18": "public class Hyperlink extends UIEntity {",
        "84": "\t\t}",
        "82": "\t\tpublic HyperlinkEvent(Hyperlink h) {",
        "79": "\t\t",
        "85": "\t\tpublic Hyperlink hyperlink() {"
      },
      "id": 38881391,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 182,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60434733/",
      "md5hash": "3f23a1d956a8d7003d852db0c5770ed1",
      "lines": {
        "38": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "39": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "40": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "41": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "171": "     /**",
        "44": " * <p>Example:</p>",
        "45": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "46": " */",
        "47": "public class Hyperlink extends ButtonBase {",
        "172": "      * Hyperlink uses HAND as the default value for cursor. ",
        "55": "    /**",
        "56": "     * Creates a hyperlink with no label.",
        "57": "     */",
        "154": "    private static final String DEFAULT_STYLE_CLASS = \"hyperlink\";",
        "153": ""
      },
      "id": 60434733,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/eug48/xmind3-releases-mirror",
      "language": "Java",
      "linescount": 50,
      "location": "/org.xmind.ui.toolkit/src/org/xmind/ui/richtext",
      "name": "xmind3-releases-mirror",
      "url": "https://searchcode.com/codesearch/view/119536645/",
      "md5hash": "a8cbf5cccf9c96716b74322bc511cf66",
      "lines": {
        "32": "        StringBuilder stringBuilder = new StringBuilder();",
        "33": "        stringBuilder.append(\"hyperlink{start=\"); //$NON-NLS-1$",
        "2": "",
        "3": "public class Hyperlink implements Cloneable {",
        "10": "",
        "11": "    public Hyperlink(int start, int length, String hyperlink) {",
        "13": "        this.length = length;",
        "14": "        this.href = hyperlink;",
        "45": "    public Object clone() {",
        "46": "        Hyperlink clone = new Hyperlink(this.start, this.length, this.href);",
        "23": "            return true;",
        "24": "        if (obj != null || !(obj instanceof Hyperlink))",
        "25": "            return false;",
        "26": "        Hyperlink that = (Hyperlink) obj;"
      },
      "id": 119536645,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://github.com/ernan/trademaker.git",
      "language": "Java",
      "linescount": 548,
      "location": "/src/org/lifeform/gui",
      "name": "trademaker",
      "url": "https://searchcode.com/codesearch/view/64892556/",
      "md5hash": "b723024c4e406d9c40592e7b6325d8f3",
      "lines": {
        "475": "\t *            the text to be displayed in the hyperlink or null",
        "243": "\t\t\t\t\t\t\t.getCursorControl() == Hyperlink.this;",
        "242": "\t\t\t\t\tboolean newCursorInControl = getDisplay()",
        "339": "\t * Return the Hyperlink's displayed text.",
        "338": "\t/**",
        "462": "\t/**",
        "47": " * @since Mar 2, 2004",
        "48": " * @version $Id: Hyperlink.java,v 1.15 2009/07/23 04:12:00 alexpkb Exp $",
        "50": "",
        "51": "public final class Hyperlink extends Canvas {",
        "340": "\t * ",
        "341": "\t * @return the text of the hyperlink or null",
        "24": "/**",
        "25": " * A hyperlink text label.",
        "474": "\t * @param text",
        "463": "\t * Set the Hyperlink's displayed text. The value <code>null</code> clears"
      },
      "id": 64892556,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://github.com/tobyweston/simple-excel.git",
      "language": "Java",
      "linescount": 51,
      "location": "/src/main/java/bad/robot/excel/cell",
      "name": "simple-excel",
      "url": "https://searchcode.com/codesearch/view/67862393/",
      "md5hash": "4f5d9b9c557927a6cf6a928465bd16b5",
      "lines": {
        "32": "    }",
        "33": "",
        "34": "    public static Hyperlink hyperlink(String text, String url) {",
        "35": "        try {",
        "36": "            return new Hyperlink(text, new URL(url));",
        "41": "",
        "42": "    private Hyperlink(String text, URL url) {",
        "25": "",
        "26": "public class Hyperlink extends AbstractValueType<URL> {",
        "29": "",
        "30": "    public static Hyperlink hyperlink(String text, URL link) {",
        "31": "        return new Hyperlink(text, link);"
      },
      "id": 67862393,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-rt",
      "language": "Java",
      "linescount": 185,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-rt",
      "url": "https://searchcode.com/codesearch/view/132892847/",
      "md5hash": "1389a618165bb5ccc5dba70b457304ea",
      "lines": {
        "160": "",
        "161": "    private static final String DEFAULT_STYLE_CLASS = \"hyperlink\";",
        "34": "import com.sun.javafx.css.PseudoClass;",
        "35": "import com.sun.javafx.scene.control.skin.HyperlinkSkin;",
        "39": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "40": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "41": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "42": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "45": " * <p>Example:</p>",
        "46": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "47": " */",
        "48": "public class Hyperlink extends ButtonBase {",
        "150": "    @Override protected Skin<?> createDefaultSkin() {",
        "151": "        return new HyperlinkSkin(this);",
        "56": "    /**",
        "57": "     * Creates a hyperlink with no label.",
        "58": "     */"
      },
      "id": 132892847,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/rbair/rbair-controls-8",
      "language": "Java",
      "linescount": 177,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "rbair-controls-8",
      "url": "https://searchcode.com/codesearch/view/135697540/",
      "md5hash": "97899ee314189ba4ef4d02234ae879c9",
      "lines": {
        "161": "",
        "34": "import javafx.css.PseudoClass;",
        "35": "import com.sun.javafx.scene.control.skin.HyperlinkSkin;",
        "40": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "41": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "42": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "43": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "162": "    private static final String DEFAULT_STYLE_CLASS = \"hyperlink\";",
        "46": " * <p>Example:</p>",
        "47": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "49": " */",
        "50": "public class Hyperlink extends ButtonBase {",
        "151": "    @Override protected Skin<?> createDefaultSkin() {",
        "152": "        return new HyperlinkSkin(this);",
        "58": "    /**",
        "59": "     * Creates a hyperlink with no label.",
        "60": "     */"
      },
      "id": 135697540,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 177,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/135762153/",
      "md5hash": "97899ee314189ba4ef4d02234ae879c9",
      "lines": {
        "161": "",
        "34": "import javafx.css.PseudoClass;",
        "35": "import com.sun.javafx.scene.control.skin.HyperlinkSkin;",
        "40": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "41": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "42": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "43": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "162": "    private static final String DEFAULT_STYLE_CLASS = \"hyperlink\";",
        "46": " * <p>Example:</p>",
        "47": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "49": " */",
        "50": "public class Hyperlink extends ButtonBase {",
        "151": "    @Override protected Skin<?> createDefaultSkin() {",
        "152": "        return new HyperlinkSkin(this);",
        "58": "    /**",
        "59": "     * Creates a hyperlink with no label.",
        "60": "     */"
      },
      "id": 135762153,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 177,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/136760553/",
      "md5hash": "2f23d4a92d7ae7c98885cc70135b2324",
      "lines": {
        "34": "import javafx.css.PseudoClass;",
        "35": "import com.sun.javafx.scene.control.skin.HyperlinkSkin;",
        "40": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "41": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "42": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "43": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "46": " * <p>Example:</p>",
        "47": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "48": " */",
        "49": "public class Hyperlink extends ButtonBase {",
        "151": "    @Override protected Skin<?> createDefaultSkin() {",
        "152": "        return new HyperlinkSkin(this);",
        "57": "    /**",
        "58": "     * Creates a hyperlink with no label.",
        "59": "     */"
      },
      "id": 136760553,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-graphics-rt",
      "language": "Java",
      "linescount": 177,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-graphics-rt",
      "url": "https://searchcode.com/codesearch/view/136763675/",
      "md5hash": "2f23d4a92d7ae7c98885cc70135b2324",
      "lines": {
        "34": "import javafx.css.PseudoClass;",
        "35": "import com.sun.javafx.scene.control.skin.HyperlinkSkin;",
        "40": " * <p>An HTML like label which can be a graphic and/or text which responds to rollovers and clicks.",
        "41": " * When a hyperlink is clicked/pressed {@link #isVisited} becomes {@code true}.  A Hyperlink behaves",
        "42": " * just like a {@link Button}.  When a hyperlink is pressed and released",
        "43": " * a {@link ActionEvent} is sent, and your application can perform some action based on this event.",
        "46": " * <p>Example:</p>",
        "47": " * {@code Hyperlink link = new Hyperlink(\"www.oracle.com\"); }",
        "48": " */",
        "49": "public class Hyperlink extends ButtonBase {",
        "151": "    @Override protected Skin<?> createDefaultSkin() {",
        "152": "        return new HyperlinkSkin(this);",
        "57": "    /**",
        "58": "     * Creates a hyperlink with no label.",
        "59": "     */"
      },
      "id": 136763675,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 65,
      "location": "/platform/platform-impl/src/com/intellij/openapi/keymap/impl/ui",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/116173930/",
      "md5hash": "f85dd84041379776f100a5549889cf88",
      "lines": {
        "33": "",
        "34": "  protected Hyperlink(@NotNull String linkText) {",
        "37": "",
        "38": "  protected Hyperlink(@Nullable Icon icon, @NotNull String linkText) {",
        "41": "",
        "24": "",
        "25": "public abstract class Hyperlink {",
        "42": "  protected Hyperlink(@Nullable Icon icon, @NotNull String linkText, @NotNull SimpleTextAttributes textAttributes) {"
      },
      "id": 116173930,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://bitbucket.org/Britefury/the-larch-environment",
      "language": "Java",
      "linescount": 119,
      "location": "/java/BritefuryJ/Controls",
      "name": "the-larch-environment",
      "url": "https://searchcode.com/codesearch/view/119523976/",
      "md5hash": "616f66da84ff89096e46525a1904f269",
      "lines": {
        "96": "\tpublic Hyperlink(String text, LinkListener listener)",
        "100": "\t",
        "101": "\tpublic Hyperlink(String text, Subject targetSubject)",
        "105": "\t",
        "106": "\tpublic Hyperlink(String text, URI uri)",
        "112": "\t@Override",
        "113": "\tprotected Control createHyperlinkControl(PresentationContext ctx, StyleValues style, LSElement contentsElement, boolean bClosePopupOnActivate, LinkListener listener,",
        "115": "\t{",
        "116": "\t\treturn new HyperlinkControl( ctx, style, contentsElement, listener, bClosePopupOnActivate );",
        "85": "\t",
        "86": "\tpublic static class HyperlinkControl extends AbstractHyperlink.AbstractHyperlinkControl",
        "87": "\t{",
        "88": "\t\tprotected HyperlinkControl(PresentationContext ctx, StyleValues style, LSElement element, LinkListener listener, boolean bClosePopupOnActivate)",
        "27": "",
        "28": "public class Hyperlink extends AbstractHyperlink",
        "95": "\t"
      },
      "id": 119523976,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 108,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374384/",
      "md5hash": "eaa4ba9212220c29d028514051b406db",
      "lines": {
        "32": " */",
        "33": "public interface Hyperlink",
        "59": "   * Determines whether this is a hyperlink to a file",
        "60": "   *",
        "49": "  /**",
        "50": "   * Gets the range of cells which activate this hyperlink",
        "58": "  /**",
        "53": "   *",
        "54": "   * @return the range of cells which activate the hyperlink",
        "25": "/**",
        "26": " * Hyperlink information.  Only URLs or file links are supported",
        "27": " *",
        "28": " * Hyperlinks may apply to a range of cells; in such cases the methods",
        "29": " * getRow and getColumn return the cell at the top left of the range",
        "30": " * the hyperlink refers to.  Hyperlinks have no specific cell format"
      },
      "id": 11374384,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://code.google.com/p/gerrit/",
      "language": "Java",
      "linescount": 70,
      "location": "/gerrit-gwtui/src/main/java/com/google/gerrit/client/ui",
      "name": "gerrit",
      "url": "https://searchcode.com/codesearch/view/570043/",
      "md5hash": "6f375ba66ca750c4a07765b3793b6bd5",
      "lines": {
        "32": "  /**",
        "33": "   * Creates a hyperlink with its text and target history token specified.",
        "34": "   *",
        "35": "   * @param text the hyperlink's text",
        "38": "   */",
        "39": "  public Hyperlink(final String text, final String token) {",
        "21": "import com.google.gwt.user.client.ui.Anchor;",
        "22": "import com.google.gwt.user.client.ui.impl.HyperlinkImpl;",
        "23": "",
        "24": "/** Standard GWT hyperlink with late updating of the token. */",
        "25": "public class Hyperlink extends com.google.gwt.user.client.ui.Hyperlink {",
        "26": "  static final HyperlinkImpl impl = GWT.create(HyperlinkImpl.class);",
        "27": "",
        "28": "  /** Initialize a default hyperlink with no target and no text. */",
        "29": "  public Hyperlink() {",
        "30": "  }"
      },
      "id": 570043,
      "filename": "Hyperlink.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 59,
      "location": "/designer/report-designer/src/org/pentaho/reporting/designer/core/util",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100680271/",
      "md5hash": "1f1797c2f36d46e49a344685f2339c12",
      "lines": {
        "27": "public class HyperLink extends JLabel",
        "52": "",
        "53": "  public HyperLink(final String lbl, final ImageIcon icon)",
        "44": "  public HyperLink(final String linkName)",
        "26": "",
        "43": "",
        "28": "{",
        "29": "  private class HyperlinkMouseHandler extends MouseAdapter",
        "46": "    super(String.format(\"<html><u>%s</u></html>\", linkName)); // NON-NLS",
        "47": "    this.addMouseListener(new HyperlinkMouseHandler());"
      },
      "id": 100680271,
      "filename": "HyperLink.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 1191,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 907,
      "source": "Github",
      "id": 2
    },
    {
      "count": 503,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 77,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 14,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 4,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 2,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 1,
      "source": "CodePlex",
      "id": 5
    }
  ]
}