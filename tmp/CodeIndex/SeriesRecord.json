{
  "matchterm": "SeriesRecord",
  "previouspage": null,
  "searchterm": "SeriesRecord",
  "query": "SeriesRecord",
  "language_filters": [
    {
      "count": 54,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 54,
  "results": [
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 374,
      "location": "/src/database",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973410/",
      "md5hash": "294b19b643d46067fe0b4fcaf06d53a9",
      "lines": {
        "113": "    DBConnection.beginTransaction();",
        "101": "",
        "102": "  public static Vector<SeriesRecord> queryAll(String whereClause, String[] whereValues, String order, String limit) throws SQLException {",
        "103": "    ResultSet rs = query(TABLE, null, whereClause, whereValues, null, null, order, limit);",
        "72": "   */",
        "73": "  public SeriesRecord() {",
        "76": "  ",
        "77": "  public static SeriesRecord create(ResultSet rs) throws SQLException {",
        "78": "    SeriesRecord s = new SeriesRecord();",
        "79": "        s.setSeason(rs.getInt(C_SEASON));",
        "104": "    Vector<SeriesRecord> a = new Vector<SeriesRecord>();",
        "114": "    SeriesRecord.delete(TABLE, C_SERIES_ID+ \"=?\", new String[] {String.valueOf(this.getSeries_ID())});",
        "91": "",
        "92": "  public static SeriesRecord queryOne(String whereClause, String[] whereValues, String order) throws SQLException {",
        "93": "    SeriesRecord record = null;",
        "94": "    ResultSet rs = query(TABLE, null, whereClause, whereValues, null, null, order, \"1\");"
      },
      "id": 12973410,
      "filename": "SeriesRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 340,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642395/",
      "md5hash": "6470ad241b65c20c72a487cd2b84bcf8",
      "lines": {
        "185": "        SeriesRecord rec = new SeriesRecord();",
        "54": " */",
        "55": "public class SeriesRecord",
        "184": "    public Object clone() {",
        "89": "",
        "90": "    public SeriesRecord(RecordInputStream in)",
        "78": "",
        "79": "    public SeriesRecord()"
      },
      "id": 15642395,
      "filename": "SeriesRecord.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 877,
      "location": "/src/myseriesproject/series",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973488/",
      "md5hash": "e967d142123e3367e92c0d30c7d2786a",
      "lines": {
        "128": "      textfield_tvSubsId.setText(seriesRecord.getTvSubtitlesCode());",
        "129": "      textfield_tvRageID.setText(String.valueOf(seriesRecord.getTvrage_ID()));",
        "130": "      textfield_localDir.setText(seriesRecord.getLocalDir());",
        "99": "  public AdminSeries(MySeries m) throws SQLException {",
        "100": "    this(m, new SeriesRecord());",
        "106": "   * @param m The main mySeries form",
        "107": "   * @param seriesRecord The series to edit.If null it creates a new series",
        "109": "   */",
        "110": "  public AdminSeries(MySeries m, SeriesRecord seriesRecord) throws SQLException {",
        "79": "   */",
        "80": "  private SeriesRecord seriesRecord;",
        "17": "import myComponents.MyUsefulFunctions;",
        "18": "import database.SeriesRecord;",
        "131": "      textfield_screenshot.setText(seriesRecord.getScreenshot().equals(\"\") ? \"\" : MySeriesOptions._USER_DIR_ + Paths.SCREENSHOTS_PATH + seriesRecord.getScreenshot());",
        "132": "      setScreenshot();",
        "127": "      label_Title.setText(\"Edit Series \" + seriesRecord.getFullTitle());"
      },
      "id": 12973488,
      "filename": "AdminSeries.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 284,
      "location": "/src/myseriesproject/series",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973492/",
      "md5hash": "28d8f69c5cfc55ead94ef4d2e141ed39",
      "lines": {
        "128": "    String sql = \"SELECT * FROM \" + SeriesRecord.TABLE + \"  WHERE \" + SeriesRecord.C_DELETED + \" = \" + d + \" ORDER BY \" + SeriesRecord.C_TITLE + \" , \" + SeriesRecord.C_SEASON;",
        "129": "",
        "133": "    while (rs.next()) {",
        "134": "      SeriesRecord s = new SeriesRecord();",
        "7": "import database.DBConnection;",
        "8": "import database.SeriesRecord;",
        "41": "   */",
        "42": "  public static final int SERIESRECORD_COLUMN = 0;",
        "135": "      s.setTitle(rs.getString(SeriesRecord.C_TITLE));",
        "81": "   */",
        "82": "  private static SeriesRecord currentSeries;",
        "137": "      s.setSeries_ID(rs.getInt(SeriesRecord.C_SERIES_ID));",
        "136": "      s.setSeason(rs.getInt(SeriesRecord.C_SEASON));",
        "138": "      s.setTvrage_ID(rs.getInt(SeriesRecord.C_TVRAGE_ID));",
        "127": "    ArrayList<SeriesRecord> series = new ArrayList<SeriesRecord>();"
      },
      "id": 12973492,
      "filename": "Series.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 116,
      "location": "/src/myComponents/myGUI/myJTreeTable",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973563/",
      "md5hash": "61a04100dd4f6da6301c2e7914356ff3",
      "lines": {
        "64": "    ArrayList<SeriesRecord> series = new ArrayList<SeriesRecord>();",
        "66": "      if (value == null) {",
        "67": "        ResultSet rs = SeriesRecord.query(\"SELECT * FROM series WHERE deleted = 0 GROUP BY title ORDER BY title\");",
        "68": "        while (rs.next()) {          ",
        "69": "          series.add(SeriesRecord.create(rs));",
        "6": "",
        "7": "import database.SeriesRecord;",
        "46": "    }",
        "47": "    return ((SeriesRecord) value).getFullTitle();",
        "49": "",
        "50": "  public SeriesRecord getSeriesRecord() {",
        "51": "    if (value instanceof SeriesRecord) {",
        "52": "      return (SeriesRecord) value;",
        "53": "    }",
        "63": "    }"
      },
      "id": 12973563,
      "filename": "SeriesNode.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1311,
      "location": "/src/myComponents",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973527/",
      "md5hash": "75a421106323353a5998c1e3faff03f8",
      "lines": {
        "705": "",
        "706": "  private static ArrayList<File> getVideoFiles(SeriesRecord series, EpisodesRecord episode, boolean ignoreOption) {",
        "806": "        ep.getTitle());",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "777": "  private static ArrayList<File> getSubtitles(SeriesRecord series, EpisodesRecord episode, boolean ignoreOption) {",
        "807": "    SeriesRecord series;",
        "684": "",
        "685": "  private static File getVideoFile(SeriesRecord series, EpisodesRecord episode, boolean ignoreOption) {",
        "808": "    try {",
        "776": "",
        "809": "      series = SeriesRecord.queryOne(SeriesRecord.C_SERIES_ID + \"=?\",",
        "668": "    String size = \"\";",
        "669": "    SeriesRecord series;",
        "670": "    try {",
        "671": "      series = SeriesRecord.queryOne(SeriesRecord.C_SERIES_ID + \"=?\","
      },
      "id": 12973527,
      "filename": "MyUsefulFunctions.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 283,
      "location": "/src/myseriesproject/series",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973495/",
      "md5hash": "d03aa80a52b2f434effde217e04d1f8d",
      "lines": {
        "65": "    MySeriesLogger.logger.log(Level.INFO, \"Filling table with deleted series\");",
        "66": "    for (Iterator<SeriesRecord> it = series.iterator(); it.hasNext();) {",
        "67": "      SeriesRecord seriesRecord = it.next();",
        "68": "      model.addRow(new Object[]{seriesRecord, false, false});",
        "69": "    }",
        "38": "  public static final long serialVersionUID = 23534663L;",
        "39": "  private final ArrayList<SeriesRecord> series;",
        "200": "",
        "201": "  private int restore(ArrayList<SeriesRecord> series) {",
        "202": "    int count = 0;",
        "13": "import database.DBHelper;",
        "14": "import database.SeriesRecord;",
        "47": "  public RecycleSeries(MySeries m) {",
        "48": "    this(new ArrayList<SeriesRecord>(), m);",
        "50": "",
        "51": "  public RecycleSeries(ArrayList<SeriesRecord> series, MySeries m) {"
      },
      "id": 12973495,
      "filename": "RecycleSeries.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 145,
      "location": "/src/myComponents/myGUI/myJTreeTable",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973566/",
      "md5hash": "e1a16e84941439c7e3401df2872f6e27",
      "lines": {
        "128": "      seriesRecord = new SeriesRecord();",
        "129": "    }",
        "130": "    return seriesRecord;",
        "132": "//        case 0:",
        "133": "//          return seriesRecord;",
        "134": "//        case 1:",
        "135": "//          return seriesRecord.getHidden() == 1 ? true : false;",
        "136": "//        case 2:",
        "41": " */",
        "42": "import database.SeriesRecord;",
        "75": "  //",
        "76": "  protected SeriesRecord getSeriesRecord(Object node) {",
        "77": "    if (node == null) {",
        "137": "//          return seriesRecord.getInternetUpdate() == 1 ? true : false;",
        "127": "    if (seriesRecord == null) {"
      },
      "id": 12973566,
      "filename": "SeriesModel.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 278,
      "location": "/src/myseriesproject/actions",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973515/",
      "md5hash": "df17786f82887dc7eb5032a51ba129c7",
      "lines": {
        "160": "    try {",
        "161": "      SeriesRecord origSeries = Series.getCurrentSerial();",
        "162": "      ArrayList<SeriesRecord> series = Series.getSeries(false);",
        "163": "      for (Iterator<SeriesRecord> it = series.iterator(); it.hasNext();) {",
        "164": "        SeriesRecord ser = it.next();",
        "165": "        if (ser.getSeries_ID() != origSeries.getSeries_ID()) {",
        "8": "import database.DBConnection;",
        "73": "    String title = Series.getCurrentSerial().getTitle();",
        "74": "    SeriesRecord series = Series.getCurrentSerial();",
        "194": "    MySeriesLogger.logger.log(Level.INFO, \"Updating series from internet\");",
        "79": "    int answ = MyMessages.confirm(\"Delete Series?\", \"Really delete the series \" + title + \" season \" + season + \"?\", true);",
        "80": "    ArrayList<SeriesRecord> s;",
        "81": "    SeriesRecord ser;",
        "195": "    SeriesRecord cSeries = Series.getCurrentSerial();",
        "9": "import database.SeriesRecord;"
      },
      "id": 12973515,
      "filename": "SeriesActions.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 184,
      "location": "/src/tools/internetUpdate",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973666/",
      "md5hash": "c100eb373ed33a21da4815c92d005ce4",
      "lines": {
        "162": "   */",
        "59": "   */",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "60": "  protected SeriesRecord series;",
        "28": "  protected Vector<SeriesRecord> serVector = new Vector<SeriesRecord>();",
        "163": "  protected abstract boolean read(SeriesRecord series);",
        "121": "      if (iu.getCurrentSeries() == null) {",
        "122": "        serVector = SeriesRecord.queryAll(SeriesRecord.C_INTERNET_UPDATE + \" = ? AND \" + SeriesRecord.C_DELETED + \" =?\",",
        "27": "   */",
        "124": "              String.valueOf(1),",
        "125": "              String.valueOf(SeriesRecord.NOT_DELETED),}, null, null);"
      },
      "id": 12973666,
      "filename": "AbstractUpdate.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 60,
      "location": "/src/myseriesproject/series",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973491/",
      "md5hash": "33b5507c263e4d1ec46e4714947a3270",
      "lines": {
        "48": "    private void updateSeries(Object[] rec) throws SQLException {",
        "49": "        SeriesRecord ser = (SeriesRecord) rec[Series.SERIESRECORD_COLUMN];",
        "50": "        ser.setHidden((Boolean) rec[Series.HIDDEN_COLUMN] ? SeriesRecord.HIDDEN : SeriesRecord.NOT_HIDDEN);",
        "51": "        ser.setInternetUpdate((Boolean) rec[Series.UPDATE_COLUMN] ? SeriesRecord.INTERNET_UPDATE : SeriesRecord.NO_INTERNET_UPDATE);",
        "52": "        MySeriesLogger.logger.log(Level.INFO, \"Updating series {0}\", ser.getFullTitle());",
        "6": "",
        "7": "import database.SeriesRecord;"
      },
      "id": 12973491,
      "filename": "UpdateSeriesTable.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 394,
      "location": "/src/myseriesproject/episodes",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973505/",
      "md5hash": "628a2c36a37bf7de0311f5b27840ebc8",
      "lines": {
        "64": "   */",
        "65": "  public AdminEpisodes(MySeries m, SeriesRecord currentSerial, EpisodesRecord currentEpisode) throws SQLException, IOException {",
        "66": "    this.m = m;",
        "67": "    this.seriesRecord = currentSerial;",
        "46": "   */",
        "47": "  private SeriesRecord seriesRecord;",
        "302": "    }",
        "21": "import database.EpisodesRecord;",
        "22": "import database.SeriesRecord;",
        "303": "    episodeRecord.setSeries_ID(seriesRecord.getSeries_ID());",
        "92": "    EpisodesRecord ep = EpisodesRecord.queryOne(null, EpisodesRecord.C_SERIES_ID",
        "93": "            + \" = ?\", new String[]{String.valueOf(seriesRecord.getSeries_ID())},"
      },
      "id": 12973505,
      "filename": "AdminEpisodes.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 89,
      "location": "/src/tools/files",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973616/",
      "md5hash": "14cbb2019a43e750a9c80cec77d0eec3",
      "lines": {
        "65": "",
        "34": "  public void move() {",
        "35": "    for (Iterator<SeriesRecord> it = series.iterator(); it.hasNext();) {",
        "36": "      SeriesRecord ser = it.next();",
        "37": "      if (ser.isValidLocalDir()) {",
        "6": "",
        "7": "import database.SeriesRecord;",
        "72": "  protected ArrayList<File> getFiles(SeriesRecord ser) {",
        "71": "  ",
        "66": "  private void move(File file, SeriesRecord ser) {",
        "47": "",
        "48": "  protected boolean isValid(File file, SeriesRecord ser) {",
        "24": "",
        "25": "  protected ArrayList<SeriesRecord> series;",
        "28": "",
        "29": "  public AbstractMover(ArrayList<SeriesRecord> series) {"
      },
      "id": 12973616,
      "filename": "AbstractMover.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 377,
      "location": "/src/myseriesproject/episodes",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973506/",
      "md5hash": "1c8cbb906a3a8905e41c95f7c4709230",
      "lines": {
        "162": "    emptyEpisodes(episodesTable);",
        "163": "    SeriesRecord series = Series.getCurrentSerial();",
        "261": "",
        "262": "  public static boolean checkDownloads(SeriesRecord series, EpisodesRecord e, boolean ignoreOption) {",
        "167": "      MySeriesLogger.logger.log(Level.INFO, \"File auto updating is active\");",
        "168": "      ArrayList<SeriesRecord> list = new ArrayList<SeriesRecord>();",
        "12": "import database.EpisodesRecord;",
        "13": "import database.SeriesRecord;",
        "86": "",
        "87": "  private static void unzipSubtitleFiles(SeriesRecord series) {",
        "121": "    public static boolean isWatchable(EpisodesRecord episode, boolean ignoreOption) {",
        "122": "        SeriesRecord series = Series.getCurrentSerial();"
      },
      "id": 12973506,
      "filename": "Episodes.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 344,
      "location": "/src/myseriesproject/actions",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973516/",
      "md5hash": "0b5b7797fa7aa13c95cc05967c761868",
      "lines": {
        "328": "    SeriesRecord series = Series.getCurrentSerial();",
        "295": "          MySeriesLogger.logger.log(Level.FINE, \"Sonline code found {0}\",sOnlineCode);",
        "8": "import database.EpisodesRecord;",
        "9": "import database.SeriesRecord;",
        "327": "  public static void downloadEpisodesTorrent(String site) {",
        "143": "    ArrayList<EpisodesRecord> newNames = new ArrayList<EpisodesRecord>();",
        "144": "    SeriesRecord series = Series.getCurrentSerial();",
        "296": "          SeriesRecord ser = Series.getCurrentSerial();",
        "247": "    if (site.equals(SubtitleConstants.TV_SUBTITLES_NAME)) {",
        "248": "      SeriesRecord series = Series.getCurrentSerial();",
        "189": "      ArrayList<EpisodesRecord> newNames = new ArrayList<EpisodesRecord>();",
        "190": "      SeriesRecord series = Series.getCurrentSerial();"
      },
      "id": 12973516,
      "filename": "EpisodesActions.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 47,
      "location": "/src/tools/download/torrents",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973690/",
      "md5hash": "63bea296e0ea6878706395da3ad7fdf1",
      "lines": {
        "32": "    try {",
        "24": "",
        "34": "      for (Iterator<SeriesRecord> it = s.iterator(); it.hasNext();) {",
        "35": "        SeriesRecord seriesRecord = it.next();",
        "36": "        v.add(seriesRecord.getTitle());",
        "33": "      ArrayList<SeriesRecord> s = Series.getSeries(false);",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "25": "  protected SeriesRecord series = null;",
        "37": "      }"
      },
      "id": 12973690,
      "filename": "AbstractTorrentForm.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 153,
      "location": "/src/myseriesproject",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973483/",
      "md5hash": "8f9813635c35a36c67dec39003dc530f",
      "lines": {
        "40": "",
        "115": "",
        "84": "",
        "85": "    private static void setSeriesPopup(SeriesRecord series, MySeries m) {",
        "116": "    private static void setSeriesToolbar(SeriesRecord s, MySeries m) {",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "41": "    public static void setEpisodesPopup(SeriesRecord series, EpisodesRecord episode,",
        "27": "",
        "28": "    public static void setSeriesMenus(SeriesRecord s, MySeries m) {"
      },
      "id": 12973483,
      "filename": "Menus.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 243,
      "location": "/src/myseriesproject/statistics",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973509/",
      "md5hash": "47b90cb4b0536d083ab36dd491a3de2f",
      "lines": {
        "181": "      while (rs.next()) {",
        "182": "        SeriesRecord series = SeriesRecord.queryOne(SeriesRecord.C_SERIES_ID + \"=?\",",
        "168": "      if (MySeries.options.getBooleanOption(MySeriesOptions.HIDE_DELETED_SERIES_RATINGS)) {",
        "169": "        showDeleted = \"AND series.deleted = \" + SeriesRecord.NOT_DELETED;",
        "14": "import database.DBConnection;",
        "15": "import database.SeriesRecord;"
      },
      "id": 12973509,
      "filename": "StatSeries.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 106,
      "location": "/src/myComponents/myTableCellEditors",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973594/",
      "md5hash": "9562de5677f745df4de086ce1b2f1c3d",
      "lines": {
        "84": "      try {",
        "85": "        series = SeriesRecord.queryOne(SeriesRecord.C_SERIES_ID +\"=?\", ",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "76": "    }",
        "77": "    SeriesRecord series = new SeriesRecord();"
      },
      "id": 12973594,
      "filename": "MySubtitleCellEditor.java"
    },
    {
      "repo": "http://myseriesproject.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 75,
      "location": "/src/myComponents/myTableCellEditors",
      "name": "myseriesproject",
      "url": "https://searchcode.com/codesearch/view/12973595/",
      "md5hash": "e1fc7eb5207b6bc50e009234ccde9d26",
      "lines": {
        "53": "            try {",
        "54": "                series = SeriesRecord.queryOne(SeriesRecord.C_SERIES_ID +\"=?\", ",
        "7": "import database.EpisodesRecord;",
        "8": "import database.SeriesRecord;",
        "45": "        }",
        "46": "        SeriesRecord series = new SeriesRecord();"
      },
      "id": 12973595,
      "filename": "MyDownloadedCellEditor.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 53,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1,
      "source": "Github",
      "id": 2
    }
  ]
}