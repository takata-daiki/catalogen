{
  "matchterm": "ICell",
  "previouspage": null,
  "searchterm": "ICell",
  "query": "ICell",
  "language_filters": [
    {
      "count": 99,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 99,
  "results": [
    {
      "repo": "https://github.com/tyano/karatachi-core.git",
      "language": "Java",
      "linescount": 32,
      "location": "/karatachi-wicket/src/main/java/org/karatachi/wicket/grid",
      "name": "karatachi-core",
      "url": "https://searchcode.com/codesearch/view/71714537/",
      "md5hash": "c3700f538aede91a1c7dd267808dd743",
      "lines": {
        "4": "",
        "5": "public interface ICell {"
      },
      "id": 71714537,
      "filename": "ICell.java"
    },
    {
      "repo": "https://bitbucket.org/potentialware/potentialgames.git",
      "language": "Java",
      "linescount": 53,
      "location": "/src/potentialgames/data",
      "name": "potentialgames",
      "url": "https://searchcode.com/codesearch/view/40186330/",
      "md5hash": "48c92f4976e6b870b4621e471c5cbb91",
      "lines": {
        "2": "",
        "3": "public interface ICell {"
      },
      "id": 40186330,
      "filename": "ICell.java"
    },
    {
      "repo": "https://bitbucket.org/fenrir/jcollector",
      "language": "Java",
      "linescount": 26,
      "location": "/src/org/fenrir/jcollector/dto",
      "name": "jcollector",
      "url": "https://searchcode.com/codesearch/view/61900777/",
      "md5hash": "dc89bc18e1e429d0d532355d7720dc64",
      "lines": {
        "10": " */",
        "11": "public interface ICell"
      },
      "id": 61900777,
      "filename": "ICell.java"
    },
    {
      "repo": "http://agimatec-tools.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 46,
      "location": "/dbimport/src/main/java/com/agimatec/utility/fileimport/spreadsheet",
      "name": "agimatec-tools",
      "url": "https://searchcode.com/codesearch/view/11695979/",
      "md5hash": "50cd2a0b6657b14c15add8e66398e303",
      "lines": {
        "11": " */",
        "12": "public interface ICell {"
      },
      "id": 11695979,
      "filename": "ICell.java"
    },
    {
      "repo": "https://github.com/tyano/karatachi-core.git",
      "language": "Java",
      "linescount": 162,
      "location": "/karatachi-wicket/src/main/java/org/karatachi/wicket/grid",
      "name": "karatachi-core",
      "url": "https://searchcode.com/codesearch/view/71714503/",
      "md5hash": "f416dec2bb7cc67d8c623874d11f1b60",
      "lines": {
        "32": "    public void sortRow(int row, final int col, boolean ascend,",
        "33": "            final Comparator<ICell> comparator) {",
        "130": "            data.set(row, new ArrayList<ICell>());",
        "132": "",
        "133": "        ArrayList<ICell> r = data.get(row);",
        "129": "        if (data.get(row) == null) {",
        "40": "",
        "41": "        List<ArrayList<ICell>> sub = data.subList(row - 1, data.size());",
        "42": "        Collections.sort(sub, new Comparator<ArrayList<ICell>>() {",
        "11": "",
        "12": "    private ArrayList<ArrayList<ICell>> data =",
        "13": "            new ArrayList<ArrayList<ICell>>();",
        "14": "",
        "143": "        ICell cell = getCell(row, col);",
        "142": "    public Object getValue(int row, int col) {"
      },
      "id": 71714503,
      "filename": "Cells.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_external_emma.git",
      "language": "Java",
      "linescount": 1641,
      "location": "/core/java12/com/vladium/emma/report/html",
      "name": "android_external_emma",
      "url": "https://searchcode.com/codesearch/view/40474028/",
      "md5hash": "4742b337e17c100bbfb2c769c4cbd555",
      "lines": {
        "257": "                    {",
        "258": "                        final HTMLTable.ICell cell2 = second.newCell ();",
        "673": "                        ",
        "200": "                        ",
        "201": "                        final HTMLTable.ICell cell = coverage.newCell (); ",
        "554": "//                    final HTMLTable.IRow subheader = childSummaryTable.newTitleRow ();",
        "555": "//                    final HTMLTable.ICell cell = subheader.newCell ();",
        "674": "                        final HTMLTable.ICell cell = coverage.newCell (); ",
        "791": "            final HTMLTable.ICell cell = navRow.newCell ();",
        "790": "            ",
        "663": "                    ",
        "664": "                    final HTMLTable.ICell headercell = header.newCell ();",
        "825": "            ",
        "826": "            final HTMLTable.ICell cell = navRow.newCell ();",
        "190": "                    ",
        "191": "                    final HTMLTable.ICell headercell = header.newCell ();"
      },
      "id": 40474028,
      "filename": "ReportGenerator.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 3142,
      "location": "/src/main/java/com/extentech/ExtenXLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47125189/",
      "md5hash": "fe67a393666e812d472cc3c733fc5812",
      "lines": {
        "1248": "            \t\t\tlegendAddr= ICell.getWorkSheetName() + \"!\" + ICell.getCellAddress();",
        "1090": "        try {",
        "1091": "            CellHandle ICell = null;",
        "1094": "            \ttry {",
        "1095": "            \t\tICell = wbh.getCell(legendCell);",
        "1256": "            \t\t\tString celstr = legendCell.substring(shtpos+1);",
        "1257": "            \t\t\tICell= sht.add(\"\", celstr);\t// TODO: Why is this being added?",
        "1260": "            \t}",
        "1101": "            \t\t\tString celstr = legendCell.substring(shtpos+1);",
        "1102": "            \t\t\tICell= sht.add(\"\", celstr);",
        "1261": "            \tif (ICell!=null)",
        "1104": "            \t}",
        "1105": "            \tlegendText= ICell.getStringVal();",
        "1262": "            \t\tlegendText= ICell.getStringVal();",
        "1247": "            \t\tif (legendCell.indexOf(\"!\")==-1)"
      },
      "id": 47125189,
      "filename": "ChartHandle.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 3142,
      "location": "/src/main/java/com/extentech/ExtenXLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976813/",
      "md5hash": "fe67a393666e812d472cc3c733fc5812",
      "lines": {
        "1248": "            \t\t\tlegendAddr= ICell.getWorkSheetName() + \"!\" + ICell.getCellAddress();",
        "1090": "        try {",
        "1091": "            CellHandle ICell = null;",
        "1094": "            \ttry {",
        "1095": "            \t\tICell = wbh.getCell(legendCell);",
        "1256": "            \t\t\tString celstr = legendCell.substring(shtpos+1);",
        "1257": "            \t\t\tICell= sht.add(\"\", celstr);\t// TODO: Why is this being added?",
        "1260": "            \t}",
        "1101": "            \t\t\tString celstr = legendCell.substring(shtpos+1);",
        "1102": "            \t\t\tICell= sht.add(\"\", celstr);",
        "1261": "            \tif (ICell!=null)",
        "1104": "            \t}",
        "1105": "            \tlegendText= ICell.getStringVal();",
        "1262": "            \t\tlegendText= ICell.getStringVal();",
        "1247": "            \t\tif (legendCell.indexOf(\"!\")==-1)"
      },
      "id": 50976813,
      "filename": "ChartHandle.java"
    },
    {
      "repo": "https://github.com/tyano/karatachi-core.git",
      "language": "Java",
      "linescount": 317,
      "location": "/karatachi-wicket/src/main/java/org/karatachi/wicket/grid",
      "name": "karatachi-core",
      "url": "https://searchcode.com/codesearch/view/71714458/",
      "md5hash": "172a89ae6b39fd599bade6231423e81d",
      "lines": {
        "246": "            ICell cell) {",
        "245": "    protected void setCellAttribute(Component component, int row, int col,",
        "134": "                    } else {",
        "231": "    protected Component createCellComponent(String id, int row, int col,",
        "232": "            ICell cell) {",
        "135": "                        ICell cell = cells.getCell(row, col);",
        "174": "",
        "175": "    private void populateCell(LoopItem item, int r, int c, ICell cell) {"
      },
      "id": 71714458,
      "filename": "FixedGrid.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_external_emma.git",
      "language": "Java",
      "linescount": 132,
      "location": "/core/java12/com/vladium/emma/report/html/doc",
      "name": "android_external_emma",
      "url": "https://searchcode.com/codesearch/view/40474038/",
      "md5hash": "6720d4a93f8e1c6a22693b4ae9b292be",
      "lines": {
        "107": "    {",
        "108": "        public ICell newCell ()",
        "109": "        {",
        "110": "            final ICell cell = new Cell (m_th ? Tag.TH : Tag.TD);",
        "19": "    ",
        "20": "    public static interface ICell extends IElement",
        "21": "    {",
        "22": "        ICell setColspan (final int span);",
        "87": "    private static class Cell extends IElement.Factory.ElementImpl",
        "88": "                              implements ICell",
        "89": "    {",
        "90": "        public ICell setColspan (final int span)",
        "27": "    {",
        "28": "        ICell newCell ();"
      },
      "id": 40474038,
      "filename": "HTMLTable.java"
    },
    {
      "repo": "https://bitbucket.org/jyukopla/gwt-bootstrap.git",
      "language": "Java",
      "linescount": 195,
      "location": "/src/main/java/com/github/gwtbootstrap/client/ui",
      "name": "gwt-bootstrap",
      "url": "https://searchcode.com/codesearch/view/47019607/",
      "md5hash": "2b6c6e62bf9dade39ec25162e31ae6e5",
      "lines": {
        "17": " * {@code  ",
        "18": " * final IconCell iCell = new IconCell(IconType.INFO_SIGN, IconSize.LARGE);",
        "19": " *",
        "20": " * Column<OneObject, Void> iconColumn = new Column<OneObject, Void>(iCell) {",
        "23": " *\t\tif (object.getOneValue() > 0) {",
        "24": " *\t\t\tiCell.setIconType(IconType.PLUS_SIGN);",
        "25": " *\t\t\tiCell.setTooltip(\"High\");",
        "26": " *\t\t}",
        "27": " *\t\tif (object.getOneValue() < 0) {",
        "28": " *\t\t\tiCell.setIconType(IconType.MINUS_SIGN);",
        "29": " *\t\t\tiCell.setTooltip(\"Low\");",
        "30": " *\t\t}"
      },
      "id": 47019607,
      "filename": "IconCell.java"
    },
    {
      "repo": "https://github.com/tyano/karatachi-core.git",
      "language": "Java",
      "linescount": 134,
      "location": "/karatachi-wicket/src/main/java/org/karatachi/wicket/grid",
      "name": "karatachi-core",
      "url": "https://searchcode.com/codesearch/view/71714679/",
      "md5hash": "3464d1c276e34aeadf183040b30028ac",
      "lines": {
        "64": "                    ICell cell = cells.getObject().getCell(row, col);",
        "115": "    protected void setCellAttribute(Component component, int row, int col,",
        "116": "            ICell cell) {",
        "104": "    protected Component createCellComponent(String id, int row, int col,",
        "105": "            ICell cell) {",
        "63": "                } else {"
      },
      "id": 71714679,
      "filename": "Grid.java"
    },
    {
      "repo": "https://github.com/BertrandDechoux/OrganicBuilder.git",
      "language": "Java",
      "linescount": 165,
      "location": "/src/main/java/uk/org/squirm3/model/level/validators",
      "name": "OrganicBuilder",
      "url": "https://searchcode.com/codesearch/view/113104097/",
      "md5hash": "6eda9d1344a3919a5615f70e52043426",
      "lines": {
        "130": "            }",
        "131": "            while (sequence[iCell].length() < 10) {",
        "136": "                // append the type letter (a-f) to the string",
        "137": "                sequence[iCell] += current.getType().getCharacterIdentifier();",
        "152": "                // parameter :",
        "147": "            }",
        "148": "            // System.out.println(sequence[iCell]);",
        "149": "            if (sequence[iCell].length() != 6",
        "150": "                    || sequence[iCell].charAt(0) != 'e'",
        "151": "                    || sequence[iCell].charAt(5) != 'f') {",
        "120": "        final String sequence[] = {new String(), new String()};",
        "121": "        for (int iCell = 0; iCell < 2; iCell++) {",
        "122": "            final List<Atom> seen = new LinkedList<Atom>();",
        "123": "            Atom current = heads[iCell];",
        "124": "            seen.add(current);",
        "153": "                // \"Incorrect template sequence detected: \"+sequence[iCell];"
      },
      "id": 113104097,
      "filename": "CellDivisionValidator.java"
    },
    {
      "repo": "https://bitbucket.org/potentialware/potentialgames.git",
      "language": "Java",
      "linescount": 114,
      "location": "/src/potentialgames/controller",
      "name": "potentialgames",
      "url": "https://searchcode.com/codesearch/view/40186336/",
      "md5hash": "6aec1cc12098b46a880af20f9a776cb8",
      "lines": {
        "94": "",
        "4": "",
        "5": "import potentialgames.data.ICell;",
        "60": "\t\tICell[] tmp = gc.getWay();",
        "95": "\tprivate void move(ICell[] tmp, int pos, int newPos, IPlayer player,\tint pin, GameController gc) {",
        "59": "\tpublic boolean pinEntry(GameController gc, IPlayer player, int steps) {",
        "12": "\tpublic boolean pinMove(GameController gc, IPlayer player, int pin, int steps) {",
        "13": "\t\tICell[] tmp = gc.getWay();",
        "62": "\t\tif (steps == SIX) {",
        "61": "\t\tICell entry = tmp[player.getEntry()];"
      },
      "id": 40186336,
      "filename": "PinActionMove.java"
    },
    {
      "repo": "https://github.com/idega/is.idega.idegaweb.egov.fsk.git",
      "language": "Java",
      "linescount": 921,
      "location": "/src/java/is/idega/idegaweb/egov/fsk/business/output",
      "name": "is.idega.idegaweb.egov.fsk",
      "url": "https://searchcode.com/codesearch/view/105022418/",
      "md5hash": "e31a33c057365f4aa398337446ef740c",
      "lines": {
        "193": "",
        "194": "\t\t\t\tHSSFCell cell = row.createCell(iCell++);",
        "197": "",
        "198": "\t\t\t\tcell = row.createCell(iCell++);",
        "208": "",
        "209": "\t\t\t\tiCell = 0;",
        "211": "\t\t\t\trow = sheet.createRow(cellRow++);",
        "212": "\t\t\t\tcell = row.createCell(iCell++);",
        "222": "\t\t\t\trow = sheet.createRow(cellRow++);",
        "215": "",
        "216": "\t\t\t\tcell = row.createCell(iCell++);",
        "219": "",
        "220": "\t\t\t\tiCell = 0;",
        "189": "\t\t\t\tHSSFRow row = sheet.createRow(cellRow++);",
        "190": "\t\t\t\tshort iCell = 0;",
        "223": "\t\t\t\tcell = row.createCell(iCell++);"
      },
      "id": 105022418,
      "filename": "PaymentAllocationWriter.java"
    },
    {
      "repo": "https://github.com/idega/is.idega.idegaweb.egov.fsk.git",
      "language": "Java",
      "linescount": 836,
      "location": "/src/java/is/idega/idegaweb/egov/fsk/business/output",
      "name": "is.idega.idegaweb.egov.fsk",
      "url": "https://searchcode.com/codesearch/view/105022425/",
      "md5hash": "830fae05f3df47592c2bc3bdb1edef77",
      "lines": {
        "214": "\t\t\t\trow = sheet.createRow(cellRow++);",
        "200": "",
        "201": "\t\t\t\tiCell = 0;",
        "203": "\t\t\t\trow = sheet.createRow(cellRow++);",
        "204": "\t\t\t\tcell = row.createCell(iCell++);",
        "207": "",
        "208": "\t\t\t\tcell = row.createCell(iCell++);",
        "211": "",
        "212": "\t\t\t\tiCell = 0;",
        "181": "\t\t\t\tHSSFRow row = sheet.createRow(cellRow++);",
        "182": "\t\t\t\tshort iCell = 0;",
        "215": "\t\t\t\tcell = row.createCell(iCell++);",
        "185": "",
        "186": "\t\t\t\tHSSFCell cell = row.createCell(iCell++);",
        "189": "",
        "190": "\t\t\t\tcell = row.createCell(iCell++);"
      },
      "id": 105022425,
      "filename": "CostsAllocationWriter.java"
    },
    {
      "repo": "https://bitbucket.org/lwallace/cnda_xnat_1_5",
      "language": "Java",
      "linescount": 216,
      "location": "/src/java/org/apache/turbine/app/cnda_xnat/modules/screens",
      "name": "cnda_xnat_1_5",
      "url": "https://searchcode.com/codesearch/view/119345076/",
      "md5hash": "96a5513dbccdd440ca376221eabac55c",
      "lines": {
        "131": "\t\t\t\tRectangle border = getBorder();\t",
        "132": "\t\t\t\tPdfPCell iCell = null, cell = null;",
        "138": "\t\t\t\t\t\tImage image = Image.getInstance(files.get(j).getAbsolutePath());",
        "139": "\t\t\t\t\t\tiCell = new PdfPCell();",
        "140": "\t\t\t\t\t\tiCell.setImage(image);",
        "141": "\t\t\t\t\t\tiCell.setBorder(Rectangle.NO_BORDER);\t",
        "142": "\t\t\t\t\t\titable.addCell(iCell);",
        "143": "\t\t\t\t\t\tcell = new PdfPCell(new Phrase(absRsc.getLabel(),new Font(Font.TIMES_ROMAN,11,Font.NORMAL)));"
      },
      "id": 119345076,
      "filename": "XDATScreen_radReadPDFScreen.java"
    },
    {
      "repo": "https://bitbucket.org/lwallace/cnda_xnat_1_5",
      "language": "Java",
      "linescount": 206,
      "location": "/src/java/org/apache/turbine/app/cnda_xnat/modules/screens",
      "name": "cnda_xnat_1_5",
      "url": "https://searchcode.com/codesearch/view/119345077/",
      "md5hash": "3e50f711cf5d82ca3f18e2f4ce4e0db5",
      "lines": {
        "128": "\t\t\t\t\t\tImage image = Image.getInstance(files.get(j).getAbsolutePath());",
        "129": "\t\t\t\t\t\tiCell = new PdfPCell();",
        "130": "\t\t\t\t\t\tiCell.setImage(image);",
        "131": "\t\t\t\t\t\tiCell.setBorder(Rectangle.NO_BORDER);\t",
        "132": "\t\t\t\t\t\titable.addCell(iCell);",
        "133": "\t\t\t\t\t\tcell = new PdfPCell(new Phrase(absRsc.getLabel(),new Font(Font.TIMES_ROMAN,11,Font.NORMAL)));",
        "121": "\t\t\t\tRectangle border = getBorder();\t",
        "122": "\t\t\t\tPdfPCell iCell = null, cell = null;"
      },
      "id": 119345077,
      "filename": "RadReadPDFScreen.java"
    },
    {
      "repo": "https://bitbucket.org/fenrir/jcollector",
      "language": "Java",
      "linescount": 442,
      "location": "/src/org/fenrir/jcollector/ui/widget",
      "name": "jcollector",
      "url": "https://searchcode.com/codesearch/view/61900732/",
      "md5hash": "0160b307d4924bbab55f9ab6b1eb14f9",
      "lines": {
        "425": "\t\t@Override",
        "406": "\t\t\t\tICell cell = cells.get(i);",
        "412": "\t\t\tfor(int i=startLoadingIndex; i<loadingAmount; i++){",
        "42": "\t",
        "43": "\tprivate List<ICell> cells = new ArrayList<ICell>();",
        "428": "\t\t\tboolean repaint = false;",
        "429": "\t\t\tIterator<ICell> iterator = chunks.iterator();",
        "146": "\t",
        "147": "\tpublic ICell getSelectedCell(int x, int y)",
        "405": "\t\t\tfor(int i=startUnloadingIndex; i<unloadingAmount; i++){",
        "22": "import org.fenrir.jcollector.util.CommonUtils;",
        "23": "import org.fenrir.jcollector.dto.ICell;",
        "155": "\t\tif(index<cells.size()){",
        "156": "\t\t\tICell cell = cells.get(index);",
        "413": "\t\t\t\tICell cell = cells.get(i);",
        "426": "\t\tprotected void process(List<ICell> chunks) "
      },
      "id": 61900732,
      "filename": "Canvas.java"
    },
    {
      "repo": "https://bitbucket.org/potentialware/potentialgames.git",
      "language": "Java",
      "linescount": 66,
      "location": "/src/potentialgames/data",
      "name": "potentialgames",
      "url": "https://searchcode.com/codesearch/view/40186331/",
      "md5hash": "b05ec881c0778fec459864a7d201da7a",
      "lines": {
        "36": "\t */",
        "37": "\tpublic ICell[] getWay() {",
        "40": "\t",
        "41": "\tprivate void fillCells(ICell[] toFill){",
        "12": "public class GameField implements IGameField{",
        "13": "\tprivate ICell[] way;"
      },
      "id": 40186331,
      "filename": "GameField.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 70,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 21,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Google Code",
      "id": 1
    }
  ]
}