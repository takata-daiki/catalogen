{
  "matchterm": "FontRecord",
  "previouspage": null,
  "searchterm": "FontRecord",
  "query": "FontRecord",
  "language_filters": [
    {
      "count": 46,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 46,
  "results": [
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 548,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260509/",
      "md5hash": "7064ce423a33fdd10a71aa29b38d0458",
      "lines": {
        "34": " */",
        "35": "public class FontRecord extends WritableRecordData implements Font",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(FontRecord.class);",
        "137": "   */",
        "138": "  public FontRecord(Record t, WorkbookSettings ws)",
        "115": "   */",
        "116": "  protected FontRecord(String fn, int ps, int bold, boolean it,",
        "501": "",
        "502": "    if (!(o instanceof FontRecord))",
        "506": "",
        "187": "   */",
        "188": "  public FontRecord(Record t, WorkbookSettings ws, Biff7 dummy)",
        "221": "   */",
        "222": "  protected FontRecord(Font f)",
        "507": "    FontRecord font = (FontRecord) o;"
      },
      "id": 43260509,
      "filename": "FontRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 548,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201037/",
      "md5hash": "7064ce423a33fdd10a71aa29b38d0458",
      "lines": {
        "34": " */",
        "35": "public class FontRecord extends WritableRecordData implements Font",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(FontRecord.class);",
        "137": "   */",
        "138": "  public FontRecord(Record t, WorkbookSettings ws)",
        "115": "   */",
        "116": "  protected FontRecord(String fn, int ps, int bold, boolean it,",
        "501": "",
        "502": "    if (!(o instanceof FontRecord))",
        "506": "",
        "187": "   */",
        "188": "  public FontRecord(Record t, WorkbookSettings ws, Biff7 dummy)",
        "221": "   */",
        "222": "  protected FontRecord(Font f)",
        "507": "    FontRecord font = (FontRecord) o;"
      },
      "id": 49201037,
      "filename": "FontRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 548,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374667/",
      "md5hash": "7064ce423a33fdd10a71aa29b38d0458",
      "lines": {
        "34": " */",
        "35": "public class FontRecord extends WritableRecordData implements Font",
        "39": "   */",
        "40": "  private static Logger logger = Logger.getLogger(FontRecord.class);",
        "137": "   */",
        "138": "  public FontRecord(Record t, WorkbookSettings ws)",
        "115": "   */",
        "116": "  protected FontRecord(String fn, int ps, int bold, boolean it,",
        "501": "",
        "502": "    if (!(o instanceof FontRecord))",
        "506": "",
        "187": "   */",
        "188": "  public FontRecord(Record t, WorkbookSettings ws, Biff7 dummy)",
        "221": "   */",
        "222": "  protected FontRecord(Font f)",
        "507": "    FontRecord font = (FontRecord) o;"
      },
      "id": 11374667,
      "filename": "FontRecord.java"
    },
    {
      "repo": "https://code.google.com/p/ganttproject/",
      "language": "Java",
      "linescount": 76,
      "location": "/org.ganttproject.impex.htmlpdf/src/org/ganttproject/impex/htmlpdf/fonts",
      "name": "ganttproject",
      "url": "https://searchcode.com/codesearch/view/8440055/",
      "md5hash": "ad9e5a3a212bba45e31876c3f47132f1",
      "lines": {
        "46": "  public FontRecord(URI fontLocation, URI metricsLocation) {",
        "39": "",
        "40": "  public FontRecord(File fontFile, FontMetricsStorage metricsStorage) throws IOException {",
        "45": "",
        "30": " */",
        "31": "public class FontRecord {"
      },
      "id": 8440055,
      "filename": "FontRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 564,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642433/",
      "md5hash": "24e4c2501a3c215c3cc3693a0254dd91",
      "lines": {
        "96": "",
        "97": "    public FontRecord()",
        "56": "",
        "57": "public class FontRecord",
        "106": "",
        "107": "    public FontRecord(RecordInputStream in)"
      },
      "id": 15642433,
      "filename": "FontRecord.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 178,
      "location": "/libraries/libfonts/source/org/pentaho/reporting/libraries/fonts/registry",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100685524/",
      "md5hash": "1a5f83e51b95dcdfe270093721b84b43",
      "lines": {
        "33": "",
        "34": "  private FontRecord[] fontRecords;",
        "67": "",
        "68": "  public FontRecord getFontRecord(final boolean bold, final boolean italics)",
        "71": "    {",
        "72": "      final FontRecord record = fontRecords[3];",
        "138": "    {",
        "135": "",
        "45": "    this.allNames.add(familyName);",
        "46": "    this.fontRecords = new FontRecord[4];",
        "79": "    {",
        "80": "      final FontRecord record = fontRecords[2];",
        "136": "    final FontRecord oldRecord = fontRecords[index];",
        "139": "      fontRecords[index] = record;",
        "87": "    {",
        "88": "      final FontRecord record = fontRecords[1];"
      },
      "id": 100685524,
      "filename": "DefaultFontFamily.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 110,
      "location": "/libraries/libfonts/source/org/pentaho/reporting/libraries/fonts/itext",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100685834/",
      "md5hash": "28c3c442cd6c035aeadbaa87913f48d2",
      "lines": {
        "67": "    final boolean italic;",
        "68": "    if (record instanceof FontRecord)",
        "69": "    {",
        "70": "      final FontRecord fontRecord = (FontRecord) record;",
        "71": "      fontName = fontRecord.getFamily().getFamilyName();",
        "72": "      if (compoundFontIdentifier != null)",
        "78": "      {",
        "79": "        bold = fontRecord.isBold();",
        "80": "        italic = fontRecord.isItalic();",
        "81": "      }",
        "84": "    {",
        "85": "      final TrueTypeFontIdentifier ttfFontRecord = (TrueTypeFontIdentifier) record;",
        "86": "      fontName = ttfFontRecord.getFontName();",
        "87": "      if (compoundFontIdentifier != null)",
        "24": "import org.pentaho.reporting.libraries.fonts.registry.FontContext;",
        "25": "import org.pentaho.reporting.libraries.fonts.registry.FontRecord;"
      },
      "id": 100685834,
      "filename": "ITextFontMetricsFactory.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 182,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260508/",
      "md5hash": "8727f00d6a74eb9521dcdec328b50cf1",
      "lines": {
        "130": "    {",
        "131": "      fr = (FontRecord) fonts.get(i);",
        "137": "    Iterator it = null;",
        "138": "    FontRecord fr2 = null;",
        "172": "    {",
        "141": "    {",
        "142": "      fr = (FontRecord) fonts.get(i);",
        "173": "      fr = (FontRecord) it.next();",
        "148": "      {",
        "53": "  /**",
        "54": "   * Adds a font record to this workbook.  If the FontRecord passed in has not",
        "55": "   * been initialized, then its font index is determined based upon the size",
        "56": "   * of the fonts list.  The FontRecord's initialized method is called, and",
        "60": "   */",
        "61": "  public void addFont(FontRecord f)",
        "149": "        fr2 = (FontRecord) it.next();"
      },
      "id": 43260508,
      "filename": "Fonts.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 182,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201036/",
      "md5hash": "8727f00d6a74eb9521dcdec328b50cf1",
      "lines": {
        "130": "    {",
        "131": "      fr = (FontRecord) fonts.get(i);",
        "137": "    Iterator it = null;",
        "138": "    FontRecord fr2 = null;",
        "172": "    {",
        "141": "    {",
        "142": "      fr = (FontRecord) fonts.get(i);",
        "173": "      fr = (FontRecord) it.next();",
        "148": "      {",
        "53": "  /**",
        "54": "   * Adds a font record to this workbook.  If the FontRecord passed in has not",
        "55": "   * been initialized, then its font index is determined based upon the size",
        "56": "   * of the fonts list.  The FontRecord's initialized method is called, and",
        "60": "   */",
        "61": "  public void addFont(FontRecord f)",
        "149": "        fr2 = (FontRecord) it.next();"
      },
      "id": 49201036,
      "filename": "Fonts.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 182,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374651/",
      "md5hash": "8727f00d6a74eb9521dcdec328b50cf1",
      "lines": {
        "130": "    {",
        "131": "      fr = (FontRecord) fonts.get(i);",
        "137": "    Iterator it = null;",
        "138": "    FontRecord fr2 = null;",
        "172": "    {",
        "141": "    {",
        "142": "      fr = (FontRecord) fonts.get(i);",
        "173": "      fr = (FontRecord) it.next();",
        "148": "      {",
        "53": "  /**",
        "54": "   * Adds a font record to this workbook.  If the FontRecord passed in has not",
        "55": "   * been initialized, then its font index is determined based upon the size",
        "56": "   * of the fonts list.  The FontRecord's initialized method is called, and",
        "60": "   */",
        "61": "  public void addFont(FontRecord f)",
        "149": "        fr2 = (FontRecord) it.next();"
      },
      "id": 11374651,
      "filename": "Fonts.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 182,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919835/",
      "md5hash": "0609fea1b2d79d4f1de353c388085df9",
      "lines": {
        "130": "    {",
        "131": "      fr = (FontRecord) fonts.get(i);",
        "137": "    Iterator it = null;",
        "138": "    FontRecord fr2 = null;",
        "172": "    {",
        "141": "    {",
        "142": "      fr = (FontRecord) fonts.get(i);",
        "173": "      fr = (FontRecord) it.next();",
        "148": "      {",
        "53": "  /**",
        "54": "   * Adds a font record to this workbook.  If the FontRecord passed in has not",
        "55": "   * been initialized, then its font index is determined based upon the size",
        "56": "   * of the fonts list.  The FontRecord's initialized method is called, and",
        "60": "   */",
        "61": "  public void addFont(FontRecord f)",
        "149": "        fr2 = (FontRecord) it.next();"
      },
      "id": 13919835,
      "filename": "Fonts.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 2351,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642358/",
      "md5hash": "2f47d8e4aa73ffbba0d056d2a6f68eee",
      "lines": {
        "449": "",
        "450": "    public FontRecord createNewFont() {",
        "451": "        FontRecord rec = ( FontRecord ) createFont();",
        "438": "",
        "1190": "     * @see loci.poi.hssf.record.Record",
        "1191": "     * @return record containing a FontRecord",
        "424": "",
        "425": "    public FontRecord getFontRecordAt(int idx) {",
        "1194": "    protected Record createFont() {",
        "1195": "        FontRecord retval = new FontRecord();",
        "435": "        }",
        "436": "        FontRecord retval =",
        "437": "        ( FontRecord ) records.get((records.getFontpos() - (numfonts - 1)) + index);",
        "182": "",
        "183": "                case FontRecord.sid :",
        "446": "     *",
        "447": "     * @return FontRecord that was just created"
      },
      "id": 15642358,
      "filename": "Workbook.java"
    },
    {
      "repo": "http://mp4parser.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 97,
      "location": "/isoparser/src/main/java/com/googlecode/mp4parser/boxes/threegpp26245",
      "name": "mp4parser",
      "url": "https://searchcode.com/codesearch/view/5345304/",
      "md5hash": "3c022bf0d33a333b2723ef6a82a9b794",
      "lines": {
        "59": "",
        "37": "        for (int i = 0; i < numberOfRecords; i++) {",
        "38": "            FontRecord fr = new FontRecord();",
        "60": "    public static class FontRecord {",
        "46": "        IsoTypeWriter.writeUInt16(byteBuffer, entries.size());",
        "47": "        for (FontRecord record : entries) {",
        "17": "",
        "18": "    List<FontRecord> entries = new LinkedList<FontRecord>();",
        "51": "",
        "52": "    public List<FontRecord> getEntries() {",
        "55": "",
        "56": "    public void setEntries(List<FontRecord> entries) {",
        "26": "        int size = 2;",
        "27": "        for (FontRecord fontRecord : entries) {",
        "28": "            size += fontRecord.getSize();",
        "29": "        }"
      },
      "id": 5345304,
      "filename": "FontTableBox.java"
    },
    {
      "repo": "https://code.google.com/p/ganttproject/",
      "language": "Java",
      "linescount": 138,
      "location": "/org.ganttproject.impex.htmlpdf/src/org/ganttproject/impex/htmlpdf/fonts",
      "name": "ganttproject",
      "url": "https://searchcode.com/codesearch/view/8440051/",
      "md5hash": "74c93d333fe2c9cc18104ff33790b897",
      "lines": {
        "51": "    }",
        "52": "    ArrayList<FontRecord> result = new ArrayList<FontRecord>(children.length);",
        "70": "    }",
        "54": "      try {",
        "39": "",
        "40": "  public FontRecord[] getFontRecords() {",
        "73": "",
        "71": "    return result.toArray(new FontRecord[0]);",
        "55": "        FontRecord record = new FontRecord(children[i], myFontMetricsStorage);",
        "74": "  private void populateWithTriplets(FontRecord record) {"
      },
      "id": 8440051,
      "filename": "JDKFontLocator.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 122,
      "location": "/libraries/libfonts/source/org/pentaho/reporting/libraries/fonts/monospace",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100685680/",
      "md5hash": "d7c31c9a713e68886a1be3bbd2acbe11",
      "lines": {
        "80": "    }",
        "65": "   */",
        "66": "  public FontRecord getFontRecord(final boolean bold, final boolean italics)",
        "20": "import org.pentaho.reporting.libraries.fonts.registry.FontFamily;",
        "21": "import org.pentaho.reporting.libraries.fonts.registry.FontRecord;",
        "38": "    this.familyName = familyName;",
        "39": "    this.fonts = new FontRecord[4];",
        "25": "  private String familyName;",
        "26": "  private FontRecord[] fonts;",
        "81": "    fonts[index] = new MonospaceFontRecord(this, bold, italics);"
      },
      "id": 100685680,
      "filename": "MonospaceFontFamily.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1236,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260380/",
      "md5hash": "f211fcbcd99d5395a88da8a66147af91",
      "lines": {
        "610": "      {",
        "611": "        FontRecord fr = null;",
        "36": "import jxl.biff.EmptyCell;",
        "37": "import jxl.biff.FontRecord;",
        "614": "        {",
        "615": "          fr = new FontRecord(r, settings);",
        "618": "        {",
        "619": "          fr = new FontRecord(r, settings, FontRecord.biff7);"
      },
      "id": 43260380,
      "filename": "WorkbookParser.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1236,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/read/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200908/",
      "md5hash": "f211fcbcd99d5395a88da8a66147af91",
      "lines": {
        "610": "      {",
        "611": "        FontRecord fr = null;",
        "36": "import jxl.biff.EmptyCell;",
        "37": "import jxl.biff.FontRecord;",
        "614": "        {",
        "615": "          fr = new FontRecord(r, settings);",
        "618": "        {",
        "619": "          fr = new FontRecord(r, settings, FontRecord.biff7);"
      },
      "id": 49200908,
      "filename": "WorkbookParser.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1236,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/read/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374433/",
      "md5hash": "f211fcbcd99d5395a88da8a66147af91",
      "lines": {
        "610": "      {",
        "611": "        FontRecord fr = null;",
        "36": "import jxl.biff.EmptyCell;",
        "37": "import jxl.biff.FontRecord;",
        "614": "        {",
        "615": "          fr = new FontRecord(r, settings);",
        "618": "        {",
        "619": "          fr = new FontRecord(r, settings, FontRecord.biff7);"
      },
      "id": 11374433,
      "filename": "WorkbookParser.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1298,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/read/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919614/",
      "md5hash": "065ebacbd9ecafe57916ba59731b4787",
      "lines": {
        "624": "        {",
        "625": "          fr = new FontRecord(r, settings);",
        "36": "import jxl.biff.EmptyCell;",
        "37": "import jxl.biff.FontRecord;",
        "628": "        {",
        "620": "      {",
        "621": "        FontRecord fr = null;",
        "629": "          fr = new FontRecord(r, settings, FontRecord.biff7);"
      },
      "id": 13919614,
      "filename": "WorkbookParser.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1688,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260491/",
      "md5hash": "9ac200201b51feec81a95d9bea44664f",
      "lines": {
        "422": "   */",
        "551": "    // Deep copy of the font",
        "552": "    font = new FontRecord(fmt.getFont());",
        "423": "  public XFRecord(FontRecord fnt, DisplayFormat form)",
        "1676": "   */",
        "1677": "  public void setFont(FontRecord f)",
        "190": "   */",
        "191": "  private FontRecord font;"
      },
      "id": 43260491,
      "filename": "XFRecord.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 17,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 15,
      "source": "Github",
      "id": 2
    },
    {
      "count": 14,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}