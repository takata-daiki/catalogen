{
  "matchterm": "AggregateFunction",
  "previouspage": null,
  "searchterm": "AggregateFunction",
  "query": "AggregateFunction",
  "language_filters": [
    {
      "count": 228,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 228,
  "results": [
    {
      "repo": "https://bitbucket.org/sudhirk76/ogb12",
      "language": "Java",
      "linescount": 79,
      "location": "/framework/sql/src/org/ofbiz/sql",
      "name": "ogb12",
      "url": "https://searchcode.com/codesearch/view/63362839/",
      "md5hash": "ebce37d397ce6b6ebb06424f2d94c77c",
      "lines": {
        "62": "            AggregateFunction other = (AggregateFunction) o;",
        "23": "@SourceMonitored",
        "24": "public final class AggregateFunction extends StaticValue {",
        "25": "    public static final String module = AggregateFunction.class.getName();",
        "26": "",
        "63": "            return name.equals(other.name) && isDistinct == other.isDistinct && value.equals(other.value);",
        "60": "    public boolean equals(Object o) {",
        "61": "        if (o instanceof AggregateFunction) {",
        "30": "",
        "31": "    public AggregateFunction(String name, boolean isDistinct, StaticValue value) {"
      },
      "id": 63362839,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/zwqjsj0404/phoenix.git",
      "language": "Java",
      "linescount": 53,
      "location": "/src/main/java/com/salesforce/phoenix/expression/function",
      "name": "phoenix",
      "url": "https://searchcode.com/codesearch/view/59242748/",
      "md5hash": "6cc039072a6536b0c861fb2e0e9ccb0f",
      "lines": {
        "48": "",
        "49": "    public AggregateFunction(List<Expression> children) {",
        "43": " */",
        "44": "abstract public class AggregateFunction extends FunctionExpression {",
        "45": "",
        "46": "    public AggregateFunction() {"
      },
      "id": 59242748,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 123,
      "location": "/api/src/main/java/org/teiid/language",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73436567/",
      "md5hash": "b9f62e68a1bdfaba55b7672cb3fd1bec",
      "lines": {
        "32": "public class AggregateFunction extends Function {",
        "48": "    public AggregateFunction(String aggName, boolean isDistinct, List<? extends Expression> params, Class<?> type) {",
        "47": "    ",
        "31": " */"
      },
      "id": 73436567,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 113,
      "location": "/engine/src/main/java/org/teiid/query/function/aggregate",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73455401/",
      "md5hash": "96754db040b7f79c22a036bfc3fdcaa5",
      "lines": {
        "40": "public abstract class AggregateFunction {",
        "35": " * This represents the interface for an aggregate function.  The basic lifecycle",
        "36": " * is that the AggregateFunction is initialize()'d with the type of the element",
        "39": " */"
      },
      "id": 73455401,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/tzolkincz/phoenix.git",
      "language": "Java",
      "linescount": 54,
      "location": "/phoenix-core/src/main/java/org/apache/phoenix/expression/function",
      "name": "phoenix",
      "url": "https://searchcode.com/codesearch/view/97648350/",
      "md5hash": "3d13b242501cfe592fc40ad43ebf1311",
      "lines": {
        "34": " */",
        "35": "abstract public class AggregateFunction extends FunctionExpression {",
        "36": "",
        "37": "    public AggregateFunction() {",
        "39": "",
        "40": "    public AggregateFunction(List<Expression> children) {"
      },
      "id": 97648350,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/chrajeshbabu/phoenix.git",
      "language": "Java",
      "linescount": 53,
      "location": "/phoenix-core/src/main/java/org/apache/phoenix/expression/function",
      "name": "phoenix",
      "url": "https://searchcode.com/codesearch/view/98294798/",
      "md5hash": "44fbf11a70b096510a3e45f6fa4ec5c2",
      "lines": {
        "33": " */",
        "34": "abstract public class AggregateFunction extends FunctionExpression {",
        "35": "",
        "36": "    public AggregateFunction() {",
        "38": "",
        "39": "    public AggregateFunction(List<Expression> children) {"
      },
      "id": 98294798,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/navssurtani/JBossAS51.git",
      "language": "Java",
      "linescount": 39,
      "location": "/server/src/main/org/jboss/ejb/plugins/cmp/ejbql",
      "name": "JBossAS51",
      "url": "https://searchcode.com/codesearch/view/109277896/",
      "md5hash": "cd739df6e7709327caa91274dcfc254b",
      "lines": {
        "33": "",
        "34": "   public AggregateFunction(int i)",
        "28": " */",
        "29": "public abstract class AggregateFunction"
      },
      "id": 109277896,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/ahoy-jon/optiq.git",
      "language": "Java",
      "linescount": 37,
      "location": "/core/src/main/java/net/hydromatic/optiq",
      "name": "optiq",
      "url": "https://searchcode.com/codesearch/view/97868880/",
      "md5hash": "18d1f586b9e9c4eac7a1411c93bb5dae",
      "lines": {
        "25": " */",
        "26": "public interface AggregateFunction extends Function {",
        "35": "",
        "36": "// End AggregateFunction.java"
      },
      "id": 97868880,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 57,
      "location": "/ojc-core/component-common/axiondb/src/org/axiondb/functions",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43259779/",
      "md5hash": "465fb38e996fa125c92ace03c9d066be",
      "lines": {
        "52": " */",
        "53": "public interface AggregateFunction extends ConcreteFunction {"
      },
      "id": 43259779,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 57,
      "location": "/ojc-core/component-common/axiondb/src/org/axiondb/functions",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200307/",
      "md5hash": "465fb38e996fa125c92ace03c9d066be",
      "lines": {
        "52": " */",
        "53": "public interface AggregateFunction extends ConcreteFunction {"
      },
      "id": 49200307,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "git://github.com/jbossas/jboss-as.git",
      "language": "Java",
      "linescount": 37,
      "location": "/cmp/src/main/java/org/jboss/as/cmp/ejbql",
      "name": "jboss-as",
      "url": "https://searchcode.com/codesearch/view/7392997/",
      "md5hash": "a62a0d25786705d68ef667049bdc6810",
      "lines": {
        "32": "",
        "33": "    public AggregateFunction(int i) {",
        "28": " */",
        "29": "public abstract class AggregateFunction"
      },
      "id": 7392997,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://bitbucket.org/antiguru/h2database.git",
      "language": "Java",
      "linescount": 56,
      "location": "/h2/src/main/org/h2/api",
      "name": "h2database",
      "url": "https://searchcode.com/codesearch/view/91928949/",
      "md5hash": "e19f4b73666eeab31f2bc07dddec38bd",
      "lines": {
        "19": " */",
        "20": "public interface AggregateFunction {"
      },
      "id": 91928949,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "http://h2database.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 57,
      "location": "/h2/src/main/org/h2/api",
      "name": "h2database",
      "url": "https://searchcode.com/codesearch/view/1937756/",
      "md5hash": "f05ff8aebdcda48b789720aec8f76ce0",
      "lines": {
        "20": " */",
        "21": "public interface AggregateFunction {"
      },
      "id": 1937756,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "git://github.com/zauberlabs/commons.git",
      "language": "Java",
      "linescount": 32,
      "location": "/repository/api/src/main/java/ar/com/zauber/commons/repository/query/aggreate",
      "name": "commons",
      "url": "https://searchcode.com/codesearch/view/16096441/",
      "md5hash": "2ad907241f81f3d6ed8be49ca1724cc8",
      "lines": {
        "26": " */",
        "27": "public interface AggregateFunction {",
        "29": "    /** acepta al visitador */",
        "30": "    void accept(AggregateFunctionVisitor visitor);"
      },
      "id": 16096441,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://github.com/mrbradparks/jOOQ.git",
      "language": "Java",
      "linescount": 271,
      "location": "/jOOQ/src/main/java/org/jooq",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/92817015/",
      "md5hash": "19d80d65f1ea381edfafef1112382754",
      "lines": {
        "65": "        \"StatisticalFunction\",",
        "66": "        \"OrderedAggregateFunction\",",
        "70": ")",
        "71": "public interface AggregateFunction<T> extends Field<T>, WindowOverStep<T> {"
      },
      "id": 92817015,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 194,
      "location": "/jOOQ/src/main/java/org/jooq",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16956959/",
      "md5hash": "acc0c546b255bf601cb2a81ea2e21f0b",
      "lines": {
        "65": "        \"StatisticalFunction\",",
        "66": "        \"OrderedAggregateFunction\",",
        "70": ")",
        "71": "public interface AggregateFunction<T> extends Field<T>, WindowOverStep<T> {"
      },
      "id": 16956959,
      "filename": "AggregateFunction.java"
    },
    {
      "repo": "https://bitbucket.org/weinpau/groovyjpa.git",
      "language": "Java",
      "linescount": 660,
      "location": "/src/main/java/org/pw/groovy/jpa",
      "name": "groovyjpa",
      "url": "https://searchcode.com/codesearch/view/46476606/",
      "md5hash": "d2a7b0fefd8c9159c6b74bd9b577ad3c",
      "lines": {
        "480": "",
        "481": "    private String getQuery(String aggregateFunction) {",
        "482": "        return getQuery(aggregateFunction, null);",
        "483": "    }",
        "484": "",
        "421": "    public Object sum(Closure closure) {",
        "422": "        return aggregateFunction(closure, \"SUM\");",
        "135": "        return (double) aggregateFunction(closure, \"AVG\");",
        "488": "        String select = aggregateFunction != null ? aggregateFunction + \"(\" + selectItem + \")\" : selectItem;",
        "487": "        selectItem = selectItem == null ? iv : selectItem;",
        "334": "    public Object max(Closure closure) {",
        "335": "        return aggregateFunction(closure, \"MAX\");",
        "572": "",
        "573": "    private Object aggregateFunction(Closure closure, String operator) {",
        "134": "    public double avg(Closure closure) {",
        "485": "    private String getQuery(String aggregateFunction, String selectItem) {"
      },
      "id": 46476606,
      "filename": "GroovyDAO.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 1536,
      "location": "/engine/src/main/java/org/teiid/query/validator",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73457615/",
      "md5hash": "b05d22a1685df697dcfd513af9c98118",
      "lines": {
        "1088": "        Type aggregateFunction = obj.getAggregateFunction();",
        "1089": "        if((aggregateFunction == Type.SUM || aggregateFunction == Type.AVG) && obj.getType() == null) {",
        "1090": "            handleValidationError(QueryPlugin.Util.getString(\"ERR.015.012.0041\", new Object[] {aggregateFunction, obj}), obj); //$NON-NLS-1$",
        "1091": "        } else if (obj.getType() != DataTypeManager.DefaultDataClasses.NULL) {",
        "1092": "        \tif (aggregateFunction == Type.XMLAGG && aggExps[0].getType() != DataTypeManager.DefaultDataClasses.XML) {",
        "1093": "        \t\thandleValidationError(QueryPlugin.Util.getString(\"AggregateValidationVisitor.non_xml\", new Object[] {aggregateFunction, obj}), obj); //$NON-NLS-1$",
        "1062": "    \t}",
        "1063": "    \tif (obj.getAggregateFunction() == AggregateSymbol.Type.USER_DEFINED) {",
        "1032": "    \tAggregateSymbol.Type type = windowFunction.getFunction().getAggregateFunction();",
        "1097": "        }",
        "1098": "        if((obj.isDistinct() || aggregateFunction == Type.MIN || aggregateFunction == Type.MAX) && DataTypeManager.isNonComparable(DataTypeManager.getDataTypeName(aggExps[0].getType()))) {",
        "1031": "    public void visit(WindowFunction windowFunction) {",
        "1099": "    \t\thandleValidationError(QueryPlugin.Util.getString(\"AggregateValidationVisitor.non_comparable\", new Object[] {aggregateFunction, obj}), obj); //$NON-NLS-1$",
        "1095": "        \t\thandleValidationError(QueryPlugin.Util.getString(\"AggregateValidationVisitor.non_boolean\", new Object[] {aggregateFunction, obj}), obj); //$NON-NLS-1$",
        "1094": "        \t} else if (obj.isBoolean() && aggExps[0].getType() != DataTypeManager.DefaultDataClasses.BOOLEAN) {",
        "1087": "        // Verify data type of aggregate expression"
      },
      "id": 73457615,
      "filename": "ValidationVisitor.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 367,
      "location": "/engine/src/main/java/org/teiid/query/sql/symbol",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73456567/",
      "md5hash": "0335694623bc4f689ca77c0b62a40a63",
      "lines": {
        "263": "\t\tAggregateSymbol copy = new AggregateSymbol(getName(), getAggregateFunction(), isDistinct(), LanguageObject.Util.deepClone(getArgs()));",
        "129": "\t * Construct an aggregate symbol with all given data.",
        "130": "\t * @param aggregateFunction Aggregate function type ({@link org.teiid.language.SQLConstants.NonReserved#COUNT}, etc)",
        "133": "\t */",
        "134": "\tpublic AggregateSymbol(String aggregateFunction, boolean isDistinct, Expression expression) {",
        "135": "\t\tthis(aggregateFunction, isDistinct, expression == null?EMPTY_ARGS:new Expression[] {expression}, null);",
        "137": "    ",
        "138": "\tpublic AggregateSymbol(String aggregateFunction, boolean isDistinct, Expression[] args, OrderBy orderBy) {",
        "139": "\t\tsuper(aggregateFunction, args);",
        "140": "\t\tthis.aggregate = nameMap.get(aggregateFunction);",
        "141": "\t\tif (this.aggregate == null) {",
        "150": "\t * IllegalArgumentException is thrown.",
        "151": "\t * @param aggregateFunction Aggregate function type",
        "262": "\tpublic Object clone() {",
        "157": "\t */",
        "158": "\tpublic void setAggregateFunction(Type aggregateFunction) {",
        "159": "\t\tthis.aggregate = aggregateFunction;"
      },
      "id": 73456567,
      "filename": "AggregateSymbol.java"
    },
    {
      "repo": "https://github.com/belong/teiid.git",
      "language": "Java",
      "linescount": 296,
      "location": "/connectors/translator-jdbc/src/main/java/org/teiid/translator/jdbc/sqlserver",
      "name": "teiid",
      "url": "https://searchcode.com/codesearch/view/73443950/",
      "md5hash": "e851efef2bfa1bce62ce87b466effca8",
      "lines": {
        "34": "",
        "35": "import org.teiid.language.AggregateFunction;",
        "105": "\t\t\t}",
        "106": "    \t} else if (obj instanceof AggregateFunction) {",
        "107": "    \t\tAggregateFunction af = (AggregateFunction)obj;",
        "108": "    \t\tif (af.getName().equals(AggregateFunction.STDDEV_POP)) {",
        "109": "    \t\t\taf.setName(\"STDDEVP\"); //$NON-NLS-1$",
        "110": "    \t\t} else if (af.getName().equals(AggregateFunction.STDDEV_SAMP)) {",
        "111": "    \t\t\taf.setName(\"STDDEV\"); //$NON-NLS-1$",
        "112": "    \t\t} else if (af.getName().equals(AggregateFunction.VAR_POP)) {",
        "113": "    \t\t\taf.setName(\"VARP\"); //$NON-NLS-1$",
        "114": "    \t\t} else if (af.getName().equals(AggregateFunction.VAR_SAMP)) {"
      },
      "id": 73443950,
      "filename": "SQLServerExecutionFactory.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 135,
      "source": "Github",
      "id": 2
    },
    {
      "count": 77,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 14,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 1,
      "source": "Unknown",
      "id": 0
    }
  ]
}