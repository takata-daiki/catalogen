{
  "matchterm": "BeginRecord",
  "previouspage": null,
  "searchterm": "BeginRecord",
  "query": "BeginRecord",
  "language_filters": [
    {
      "count": 60,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 60,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 113,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642501/",
      "md5hash": "7a46d50b415cb1bb5e205264e87527c0",
      "lines": {
        "64": "    /**",
        "65": "     * Constructs a BeginRecord record and sets its fields appropriately.",
        "68": "",
        "69": "    public BeginRecord(RecordInputStream in)",
        "54": "",
        "55": "public class BeginRecord",
        "59": "",
        "60": "    public BeginRecord()"
      },
      "id": 15642501,
      "filename": "BeginRecord.java"
    },
    {
      "repo": "https://bitbucket.org/vikingshooter/code-examples.git",
      "language": "Java",
      "linescount": 15347,
      "location": "/processingTest/src/processing/core",
      "name": "code-examples",
      "url": "https://searchcode.com/codesearch/view/40049089/",
      "md5hash": "fb445fd015e6a030e33045be03aaaf8e",
      "lines": {
        "4108": "   * Check a string for #### signs to see if the frame number should be",
        "4109": "   * inserted. Used for functions like saveFrame() and beginRecord() to"
      },
      "id": 40049089,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://github.com/4622/Energia.git",
      "language": "Java",
      "linescount": 10209,
      "location": "/core/src/processing/core",
      "name": "Energia",
      "url": "https://searchcode.com/codesearch/view/75984686/",
      "md5hash": "a2094f608da983174dbee11e21340ee2",
      "lines": {
        "7392": "  public void beginRecord(PGraphics recorder) {",
        "7426": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7427": "   * command should beginRecord() be in use.",
        "2711": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7438": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7439": "   * command should beginRecord() be in use.",
        "7380": "   */",
        "7381": "  public PGraphics beginRecord(String renderer, String filename) {",
        "2710": "   * Check a string for #### signs to see if the frame number should be",
        "7383": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7384": "    beginRecord(rec);",
        "7391": "   */"
      },
      "id": 75984686,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://bitbucket.org/madsen953/jgv",
      "language": "Java",
      "linescount": 10673,
      "location": "/lib/processing/src/processing/core",
      "name": "jgv",
      "url": "https://searchcode.com/codesearch/view/60876602/",
      "md5hash": "a676afa038f5c1ff2c88223d473168e9",
      "lines": {
        "7616": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7617": "    beginRecord(rec);",
        "7685": "   */",
        "7686": "  public PShape beginRecord() {",
        "7687": "    return g.beginRecord();",
        "7624": "   */",
        "7625": "  public void beginRecord(PGraphics recorder) {",
        "2762": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7662": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7663": "   * command should beginRecord() be in use.",
        "7688": "  }",
        "2761": "   * Check a string for #### signs to see if the frame number should be",
        "7674": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7675": "   * command should beginRecord() be in use.",
        "7613": "   */",
        "7614": "  public PGraphics beginRecord(String renderer, String filename) {"
      },
      "id": 60876602,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://bitbucket.org/madsen953/ethervisu",
      "language": "Java",
      "linescount": 10673,
      "location": "/lib/processing/src/processing/core",
      "name": "ethervisu",
      "url": "https://searchcode.com/codesearch/view/125212103/",
      "md5hash": "a676afa038f5c1ff2c88223d473168e9",
      "lines": {
        "7616": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7617": "    beginRecord(rec);",
        "7685": "   */",
        "7686": "  public PShape beginRecord() {",
        "7687": "    return g.beginRecord();",
        "7624": "   */",
        "7625": "  public void beginRecord(PGraphics recorder) {",
        "2762": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7662": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7663": "   * command should beginRecord() be in use.",
        "7688": "  }",
        "2761": "   * Check a string for #### signs to see if the frame number should be",
        "7674": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7675": "   * command should beginRecord() be in use.",
        "7613": "   */",
        "7614": "  public PGraphics beginRecord(String renderer, String filename) {"
      },
      "id": 125212103,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://github.com/uzi18/maple-ide.git",
      "language": "Java",
      "linescount": 8238,
      "location": "/core/src/processing/core",
      "name": "maple-ide",
      "url": "https://searchcode.com/codesearch/view/68379234/",
      "md5hash": "83f1ce08258b7f6c32a0a861b93384f0",
      "lines": {
        "6912": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "6913": "   * command should beginRecord() be in use.",
        "2366": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "6924": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "6925": "   * command should beginRecord() be in use.",
        "6877": "   */",
        "6866": "   */",
        "6867": "  public PGraphics beginRecord(String renderer, String filename) {",
        "6869": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "6870": "    beginRecord(rec);",
        "2365": "   * Check a string for #### signs to see if the frame number should be",
        "6878": "  public void beginRecord(PGraphics recorder) {"
      },
      "id": 68379234,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://bitbucket.org/kerstinhovland/korginterfaceosc",
      "language": "Java",
      "linescount": 145,
      "location": "/libraries/minim/src/ddf/minim",
      "name": "korginterfaceosc",
      "url": "https://searchcode.com/codesearch/view/54935283/",
      "md5hash": "c46ee0de1b5aabb295ae855567c44905",
      "lines": {
        "96": "   * likely that a call to {@link #beginRecord()} will create the file again,",
        "65": "   */",
        "66": "  public void beginRecord()",
        "67": "  {",
        "68": "    recorder.beginRecord();",
        "92": "   * work if you have called {@link #endRecord()}. If this was created with a",
        "93": "   * buffered recorder, then calling {@link #beginRecord()} after saving will",
        "95": "   * called. However, if this was created with an unbuffered recorder, it is"
      },
      "id": 54935283,
      "filename": "AudioRecorder.java"
    },
    {
      "repo": "https://github.com/mperes/Prototype.git",
      "language": "Java",
      "linescount": 1004,
      "location": "/src/prototype",
      "name": "Prototype",
      "url": "https://searchcode.com/codesearch/view/65972529/",
      "md5hash": "54b31f0430980169f22d71be55cc94a5",
      "lines": {
        "547": "\t\t\t\tPrototype.stage.mergeShapes(true);",
        "548": "\t\t\t\tpartModel = Prototype.stage.beginRecord();",
        "521": "\t\t\t\tpartModel = Prototype.stage.beginRecord();",
        "520": "\t\t\t\tPrototype.stage.mergeShapes(true);",
        "489": "\t\t\tPrototype.stage.mergeShapes(true);",
        "490": "\t\t\tpartModel = Prototype.stage.beginRecord();",
        "574": "\t\t\t\tPrototype.stage.mergeShapes(true);",
        "575": "\t\t\t\tpartModel = Prototype.stage.beginRecord();"
      },
      "id": 65972529,
      "filename": "Part.java"
    },
    {
      "repo": "https://github.com/garelli/svetik.git",
      "language": "Java",
      "linescount": 14347,
      "location": "/processing-core-src/src/processing/core",
      "name": "svetik",
      "url": "https://searchcode.com/codesearch/view/99034830/",
      "md5hash": "4fce149b74a1c69d77689a300b0f20a6",
      "lines": {
        "9536": "   * file as well as the display window. The <b>beginRecord()</b> function",
        "9540": "   * <br /> <br />",
        "9541": "   * Note that beginRecord() will only pick up any settings that happen after",
        "9542": "   * it has been called. For instance, if you call textFont() before",
        "9543": "   * beginRecord(), then that font will not be set for the file that you're",
        "9672": "  public PShape beginRecord() {",
        "9641": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "9642": "   * command should beginRecord() be in use.",
        "9671": "  /*",
        "9552": "   */",
        "9553": "  public PGraphics beginRecord(String renderer, String filename) {",
        "9674": "  }",
        "9673": "    return g.beginRecord();",
        "9532": "  /**",
        "9533": "   * ( begin auto-generated from beginRecord.xml )",
        "9535": "   * Opens a new file and all subsequent drawing functions are echoed to this"
      },
      "id": 99034830,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://bitbucket.org/robeden/starlight-common.git",
      "language": "Java",
      "linescount": 114,
      "location": "/src/main/java/com/starlight/io/hprof",
      "name": "starlight-common",
      "url": "https://searchcode.com/codesearch/view/46423306/",
      "md5hash": "de17fb365b339eb1df995cfed6bc52d1",
      "lines": {
        "36": "\t */",
        "37": "\tpublic void beginRecord( byte tag_type, long micros_since_header, long length );",
        "40": "\t/**",
        "41": "\t * Called when we a finished parsing a record. See {@link #beginRecord} for more",
        "45": "\t *",
        "46": "\t * @see #beginRecord(byte, long, long)"
      },
      "id": 46423306,
      "filename": "HPROFParseHandler.java"
    },
    {
      "repo": "https://github.com/jedi-Knight/processing-android.git",
      "language": "Java",
      "linescount": 9693,
      "location": "/core/src/processing/core",
      "name": "processing-android",
      "url": "https://searchcode.com/codesearch/view/98072332/",
      "md5hash": "00c7e901f03af54f0e13ee5f33233309",
      "lines": {
        "3232": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7648": "   */",
        "7651": "//    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7652": "//    beginRecord(rec);",
        "7649": "//  public PGraphics beginRecord(String renderer, String filename) {",
        "7689": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7690": "   * command should beginRecord() be in use.",
        "7659": "   */",
        "7660": "//  public void beginRecord(PGraphics recorder) {",
        "7661": "//    PGraphics.showMethodWarning(\"beginRecord\");",
        "7662": "//  }",
        "7701": "   * generated by preproc.pl) for clarity and so that it doesn't echo the",
        "7702": "   * command should beginRecord() be in use.",
        "3231": "   * Check a string for #### signs to see if the frame number should be"
      },
      "id": 98072332,
      "filename": "PApplet.java"
    },
    {
      "repo": "https://github.com/itsvikramagr/presto.git",
      "language": "Java",
      "linescount": 1221,
      "location": "/presto-hive/src/test/java/com/facebook/presto/hive",
      "name": "presto",
      "url": "https://searchcode.com/codesearch/view/95982735/",
      "md5hash": "7db21ad30257db7e4caa56d366ec1bff",
      "lines": {
        "930": "",
        "931": "        sink.beginRecord(5);",
        "934": "",
        "935": "        sink.beginRecord(7);",
        "1003": "",
        "1004": "        sink.beginRecord(1);",
        "1011": "",
        "1012": "        sink.beginRecord(1);",
        "1019": "",
        "1020": "        sink.beginRecord(1);",
        "926": "",
        "927": "        sink.beginRecord(8);"
      },
      "id": 95982735,
      "filename": "AbstractTestHiveClient.java"
    },
    {
      "repo": "http://creativecomputing.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 120,
      "location": "/cc.creativecomputing.sound.audio/src/cc/creativecomputing/sound",
      "name": "creativecomputing",
      "url": "https://searchcode.com/codesearch/view/1116039/",
      "md5hash": "1a576d4e17d7339e70166d2244294b6f",
      "lines": {
        "80": "\t * saving will not overwrite the file on the disk, unless this method is subsequently called. However, if this was",
        "81": "\t * created with an unbuffered recorder, it is likely that a call to {@link #beginRecord()} will create the file",
        "55": "\t */",
        "56": "\tpublic void beginRecord() {",
        "57": "\t\t_myRecorder.beginRecord();",
        "58": "\t}",
        "78": "\t * Requests the current <code>SampleRecorder</code> to save. This will only work if you have called",
        "79": "\t * {@link #endRecord()}. If this was created with a buffered recorder, then calling {@link #beginRecord()} after"
      },
      "id": 1116039,
      "filename": "CCAudioRecorder.java"
    },
    {
      "repo": "http://replicatorg.googlecode.com/svn/",
      "language": "Java",
      "linescount": 8385,
      "location": "/tags/0003/src/replicatorg/core",
      "name": "replicatorg",
      "url": "https://searchcode.com/codesearch/view/3228433/",
      "md5hash": "f2db85c0fd5474f93525cb5c753af987",
      "lines": {
        "7138": "",
        "7139": "  public PGraphics beginRecord(String renderer, String filename) {",
        "7142": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7143": "    beginRecord(rec);",
        "7177": "   * Check a string for #### signs to see if the frame number should be",
        "7178": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7147": "",
        "7148": "  public void beginRecord(PGraphics recorder) {"
      },
      "id": 3228433,
      "filename": "PApplet.java"
    },
    {
      "repo": "http://replicatorg.googlecode.com/svn/",
      "language": "Java",
      "linescount": 8335,
      "location": "/tags/0002/core",
      "name": "replicatorg",
      "url": "https://searchcode.com/codesearch/view/3229174/",
      "md5hash": "4b6fb51d5dc725922310c72811667bc8",
      "lines": {
        "7088": "",
        "7089": "  public PGraphics beginRecord(String renderer, String filename) {",
        "7092": "    PGraphics rec = createGraphics(width, height, renderer, filename);",
        "7093": "    beginRecord(rec);",
        "7127": "   * Check a string for #### signs to see if the frame number should be",
        "7128": "   * inserted. Used for functions like saveFrame() and beginRecord() to",
        "7097": "",
        "7098": "  public void beginRecord(PGraphics recorder) {"
      },
      "id": 3229174,
      "filename": "PApplet.java"
    },
    {
      "repo": "git://github.com/ddf/Minim.git",
      "language": "Java",
      "linescount": 170,
      "location": "/src/ddf/minim",
      "name": "Minim",
      "url": "https://searchcode.com/codesearch/view/17059764/",
      "md5hash": "01b8fc4e68c633918244d104b9a60174",
      "lines": {
        "107": "   * buffered recorder, then calling the beginRecord method after saving will",
        "72": "   */",
        "73": "  public void beginRecord()",
        "74": "  {",
        "75": "    recorder.beginRecord();",
        "106": "   * work if you have called the endRecord method. If this was created with a",
        "110": "   * likely that a call to the beginRecord method will create the file again,",
        "109": "   * called. However, if this was created with an unbuffered recorder, it is"
      },
      "id": 17059764,
      "filename": "AudioRecorder.java"
    },
    {
      "repo": "https://bitbucket.org/rikardmustajarvi/xlbp.git",
      "language": "Java",
      "linescount": 155,
      "location": "/src/dmonner/xlbp/stat",
      "name": "xlbp",
      "url": "https://searchcode.com/codesearch/view/49251102/",
      "md5hash": "4bbfe57844888a0b3d68664e4e3eae7e",
      "lines": {
        "123": "\t{",
        "124": "\t\tout.beginRecord();",
        "115": "\t{",
        "116": "\t\tout.beginRecord();"
      },
      "id": 49251102,
      "filename": "TrialStat.java"
    },
    {
      "repo": "https://bitbucket.org/rikardmustajarvi/xlbp.git",
      "language": "Java",
      "linescount": 123,
      "location": "/src/dmonner/xlbp/stat",
      "name": "xlbp",
      "url": "https://searchcode.com/codesearch/view/49251107/",
      "md5hash": "2cf6a88c9e48f7beef0b37b2e9bb5491",
      "lines": {
        "99": "\t{",
        "90": "\t{",
        "91": "\t\tout.beginRecord();",
        "100": "\t\tout.beginRecord();"
      },
      "id": 49251107,
      "filename": "SetStat.java"
    },
    {
      "repo": "https://bitbucket.org/verveguy/bamboo-hg",
      "language": "Java",
      "linescount": 243,
      "location": "/src/main/java/com/rpath/bamboo/plugins/repository",
      "name": "bamboo-hg",
      "url": "https://searchcode.com/codesearch/view/53656502/",
      "md5hash": "2eea273b353abb8cb6efc23e91acdbab",
      "lines": {
        "25": "public class ChangeLogParser {",
        "26": "    private static String beginRecord = \"begin-record:\";",
        "60": "        }",
        "61": "        if (!beginRecord.equals(getToken())) {"
      },
      "id": 53656502,
      "filename": "ChangeLogParser.java"
    },
    {
      "repo": "https://bitbucket.org/madsen953/jgv",
      "language": "Java",
      "linescount": 6039,
      "location": "/lib/processing/src/processing/core",
      "name": "jgv",
      "url": "https://searchcode.com/codesearch/view/60876599/",
      "md5hash": "e2e4d2761410545fde8baf02b4be36d2",
      "lines": {
        "5984": "  public PShape beginRecord() { // ignore",
        "5985": "    showMissingWarning(\"beginRecord\");",
        "5986": "    return null;",
        "5983": ""
      },
      "id": 60876599,
      "filename": "PGraphics.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 27,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 18,
      "source": "Github",
      "id": 2
    },
    {
      "count": 15,
      "source": "Google Code",
      "id": 1
    }
  ]
}