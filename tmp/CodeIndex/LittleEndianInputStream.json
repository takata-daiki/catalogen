{
  "matchterm": "LittleEndianInputStream",
  "previouspage": null,
  "searchterm": "LittleEndianInputStream",
  "query": "LittleEndianInputStream",
  "language_filters": [
    {
      "count": 64,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 64,
  "results": [
    {
      "repo": "https://bitbucket.org/david_finlayson/binarystreamtools",
      "language": "Java",
      "linescount": 229,
      "location": "/src/gov/usgs/wr/io",
      "name": "binarystreamtools",
      "url": "https://searchcode.com/codesearch/view/53531437/",
      "md5hash": "62b94ed5262016f7c8a1bbd1fed987e2",
      "lines": {
        "1": "/**",
        "2": " * LittleEndianInputStream",
        "21": "/**",
        "22": " * A <code>LittleEndianInputStream</code> object reads 8-, 16-, 24-, 32-, and 64-bit ",
        "39": "    /**",
        "40": "     * Creates a new <code>LittleEndianInputStream</code> and attaches it to the",
        "44": "     */",
        "29": " */",
        "30": "public class LittleEndianInputStream extends BinaryInputStream {",
        "45": "    public LittleEndianInputStream(InputStream in) {"
      },
      "id": 53531437,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "http://pescuma.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 138,
      "location": "/MirIcoGen/lib/image4j-core-0.7/src/net/sf/image4j/io",
      "name": "pescuma",
      "url": "https://searchcode.com/codesearch/view/3598516/",
      "md5hash": "a6970d0b5502e251be3759c42a4f3f78",
      "lines": {
        "1": "/*",
        "2": " * LittleEndianInputStream.java",
        "19": "public class LittleEndianInputStream extends java.io.DataInputStream {",
        "21": "  /**",
        "22": "   * Creates a new instance of <tt>LittleEndianInputStream</tt>, which will read from the specified source.",
        "24": "   */",
        "25": "  public LittleEndianInputStream(java.io.InputStream in) {",
        "18": " */"
      },
      "id": 3598516,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/thelearninglabs/uclinux-distro-tll-public.git",
      "language": "Java",
      "linescount": 632,
      "location": "/lib/classpath/gnu/CORBA/CDR",
      "name": "uclinux-distro-tll-public",
      "url": "https://searchcode.com/codesearch/view/37726521/",
      "md5hash": "c47f05140279f41e388fad3646b9b340",
      "lines": {
        "1": "/* LittleEndianInputStream.java --",
        "2": "   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation",
        "67": "   */",
        "68": "  public LittleEndianInputStream(InputStream in)",
        "54": " */",
        "55": "public class LittleEndianInputStream"
      },
      "id": 37726521,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 635,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37950740/",
      "md5hash": "b90b5eed2caa79980e5885e9feff551a",
      "lines": {
        "1": "/* LittleEndianInputStream.java --",
        "2": "   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation",
        "69": "   */",
        "70": "  public LittleEndianInputStream(InputStream in)",
        "56": " */",
        "57": "public class LittleEndianInputStream"
      },
      "id": 37950740,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 635,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46816377/",
      "md5hash": "b90b5eed2caa79980e5885e9feff551a",
      "lines": {
        "1": "/* LittleEndianInputStream.java --",
        "2": "   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation",
        "69": "   */",
        "70": "  public LittleEndianInputStream(InputStream in)",
        "56": " */",
        "57": "public class LittleEndianInputStream"
      },
      "id": 46816377,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 635,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127591915/",
      "md5hash": "b90b5eed2caa79980e5885e9feff551a",
      "lines": {
        "1": "/* LittleEndianInputStream.java --",
        "2": "   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation",
        "69": "   */",
        "70": "  public LittleEndianInputStream(InputStream in)",
        "56": " */",
        "57": "public class LittleEndianInputStream"
      },
      "id": 127591915,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 635,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223345/",
      "md5hash": "b90b5eed2caa79980e5885e9feff551a",
      "lines": {
        "1": "/* LittleEndianInputStream.java --",
        "2": "   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2005  Free Software Foundation",
        "69": "   */",
        "70": "  public LittleEndianInputStream(InputStream in)",
        "56": " */",
        "57": "public class LittleEndianInputStream"
      },
      "id": 130223345,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://github.com/imace/bson4jackson.git",
      "language": "Java",
      "linescount": 305,
      "location": "/src/main/java/de/undercouch/bson4jackson/io",
      "name": "bson4jackson",
      "url": "https://searchcode.com/codesearch/view/96825672/",
      "md5hash": "4487cd63b502609e1e0d80d6bcc8074b",
      "lines": {
        "63": "\tpublic LittleEndianInputStream(InputStream in) {",
        "62": "\t */",
        "38": " */",
        "39": "public class LittleEndianInputStream extends FilterInputStream implements DataInput {"
      },
      "id": 96825672,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 141,
      "location": "/src/java/org/broad/tribble/util",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424349/",
      "md5hash": "44720176cb0f46c565ce5671445d2152",
      "lines": {
        "25": "",
        "26": "    public LittleEndianInputStream(InputStream in) {",
        "21": " */",
        "22": "public class LittleEndianInputStream extends FilterInputStream {"
      },
      "id": 58424349,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/marpiech/genomestore.git",
      "language": "Java",
      "linescount": 129,
      "location": "/src/main/java/org/broad/tribble/util",
      "name": "genomestore",
      "url": "https://searchcode.com/codesearch/view/37328483/",
      "md5hash": "823386c37912e951be3862491ed02a83",
      "lines": {
        "16": "",
        "17": "public class LittleEndianInputStream extends FilterInputStream {",
        "18": "",
        "19": "    public LittleEndianInputStream(InputStream in) {"
      },
      "id": 37328483,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 110,
      "location": "/gdx/src/com/badlogic/gdx/utils",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/3608624/",
      "md5hash": "4355fe0157df38b140b5dbb23c4855ef",
      "lines": {
        "26": " * @author mzechner */",
        "27": "public class LittleEndianInputStream extends FilterInputStream implements DataInput {",
        "30": "",
        "31": "\tpublic LittleEndianInputStream (InputStream in) {"
      },
      "id": 3608624,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://bitbucket.org/tescott/libgdx",
      "language": "Java",
      "linescount": 110,
      "location": "/gdx/src/com/badlogic/gdx/utils",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/135118878/",
      "md5hash": "4355fe0157df38b140b5dbb23c4855ef",
      "lines": {
        "26": " * @author mzechner */",
        "27": "public class LittleEndianInputStream extends FilterInputStream implements DataInput {",
        "30": "",
        "31": "\tpublic LittleEndianInputStream (InputStream in) {"
      },
      "id": 135118878,
      "filename": "LittleEndianInputStream.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 565,
      "location": "/src-plugins/IO_/net/sf/image4j/codec/bmp",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113852432/",
      "md5hash": "136d3839c4b4dfbbf191ddfac1f34a90",
      "lines": {
        "128": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}.",
        "131": "   */",
        "132": "  public static BufferedImage read(InfoHeader infoHeader, net.sf.image4j.io.LittleEndianInputStream lis) throws IOException {",
        "293": "   * @param infoHeader the <tt>InfoHeader</tt> structure, which was read using",
        "294": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}",
        "127": "   * @param infoHeader an <tt>InfoHeader</tt> that was read by a call to ",
        "204": "   * @param infoHeader the <tt>InfoHeader</tt> structure, which was read using",
        "205": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}",
        "302": "      net.sf.image4j.io.LittleEndianInputStream lis,",
        "301": "  public static BufferedImage read4(InfoHeader infoHeader,",
        "153": "   * @param infoHeader an <tt>InfoHeader</tt> that was read by a call to ",
        "154": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}.",
        "27": "  public BMPDecoder(java.io.InputStream in) throws IOException {",
        "28": "    net.sf.image4j.io.LittleEndianInputStream lis = new net.sf.image4j.io.LittleEndianInputStream(in);",
        "158": "   */",
        "159": "  public static BufferedImage read(InfoHeader infoHeader, net.sf.image4j.io.LittleEndianInputStream lis,"
      },
      "id": 113852432,
      "filename": "BMPDecoder.java"
    },
    {
      "repo": "https://github.com/mudogg/libgdx.git",
      "language": "Java",
      "linescount": 93,
      "location": "/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/loaders/gameplay",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/73280966/",
      "md5hash": "46376f6fee95efe162625d1370a56c24",
      "lines": {
        "68": "\t",
        "69": "\tprivate ReferenceTable readReferenceTable (LittleEndianInputStream in) throws IOException {",
        "41": "\tpublic StillModel load (FileHandle handle, ModelLoaderHints hints) {\t\t",
        "42": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(handle.read());",
        "12": "import com.badlogic.gdx.utils.GdxRuntimeException;",
        "13": "import com.badlogic.gdx.utils.LittleEndianInputStream;",
        "80": "",
        "81": "\tprivate Reference readReference (LittleEndianInputStream in) throws IOException {",
        "18": "\t",
        "19": "\tprivate byte[] read(LittleEndianInputStream in, int len) throws IOException {",
        "26": "\t",
        "27": "\tprivate String readString(LittleEndianInputStream in) throws IOException {"
      },
      "id": 73280966,
      "filename": "GameplayBundleLoader.java"
    },
    {
      "repo": "https://github.com/imace/bson4jackson.git",
      "language": "Java",
      "linescount": 219,
      "location": "/src/test/java/de/undercouch/bson4jackson/io",
      "name": "bson4jackson",
      "url": "https://searchcode.com/codesearch/view/96825582/",
      "md5hash": "c1691a034036ac85c6e5931a519a5fcc",
      "lines": {
        "32": " * Tests {@link LittleEndianInputStream}",
        "129": "\t\tByteArrayInputStream bais = new ByteArrayInputStream(b);",
        "34": " */",
        "35": "public class LittleEndianInputStreamTest {",
        "172": "\t\tleis = new LittleEndianInputStream(bais);",
        "43": "\t */",
        "44": "\tprivate LittleEndianInputStream _leis;",
        "130": "\t\tLittleEndianInputStream leis = new LittleEndianInputStream(bais);",
        "144": "\t\tByteArrayInputStream bais = new ByteArrayInputStream(b);",
        "145": "\t\tLittleEndianInputStream leis = new LittleEndianInputStream(bais);",
        "50": "\t\t_bais = new ByteArrayInputStream(b);",
        "51": "\t\t_leis = new LittleEndianInputStream(_bais);",
        "171": "\t\tbais = new ByteArrayInputStream(b2);",
        "185": "\t",
        "186": "\tprivate LittleEndianInputStream outputBufferToInputStream(DynamicOutputBuffer db) throws Exception {",
        "31": "/**"
      },
      "id": 96825582,
      "filename": "LittleEndianInputStreamTest.java"
    },
    {
      "repo": "https://bitbucket.org/david_finlayson/binarystreamtools",
      "language": "Java",
      "linescount": 408,
      "location": "/test/gov/usgs/wr/io",
      "name": "binarystreamtools",
      "url": "https://searchcode.com/codesearch/view/53531435/",
      "md5hash": "bdd1cecaee68112ce879c1d1575cd5f8",
      "lines": {
        "1": "/*",
        "2": " * LittleEndianInputStreamTest.java",
        "37": "        ByteArrayInputStream byteStream = new ByteArrayInputStream(bytes);",
        "38": "        LittleEndianInputStream in = new LittleEndianInputStream(byteStream);",
        "42": "    /**",
        "43": "     * Test of readUInt8 method, of class LittleEndianInputStream.",
        "16": "/**",
        "17": " * Test cases for the LittleEndianInputStream.",
        "20": " */",
        "21": "public class LittleEndianInputStreamTest {",
        "54": "        ByteArrayInputStream byteStream = new ByteArrayInputStream(bytes);",
        "55": "        LittleEndianInputStream in = new LittleEndianInputStream(byteStream);",
        "25": "     */",
        "26": "    public LittleEndianInputStreamTest() {",
        "29": "    /**",
        "30": "     * Test of isBigEndian method, of class LittleEndianInputStream."
      },
      "id": 53531435,
      "filename": "LittleEndianInputStreamTest.java"
    },
    {
      "repo": "http://pescuma.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 589,
      "location": "/MirIcoGen/lib/image4j-core-0.7/src/net/sf/image4j/codec/bmp",
      "name": "pescuma",
      "url": "https://searchcode.com/codesearch/view/3598525/",
      "md5hash": "b202ac06455a1db37d672b3beb3748d5",
      "lines": {
        "128": "  public static InfoHeader readInfoHeader(net.sf.image4j.io.LittleEndianInputStream lis) throws IOException {",
        "384": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}",
        "391": "  public static BufferedImage read8(InfoHeader infoHeader,",
        "177": "  public static BufferedImage read(InfoHeader infoHeader, net.sf.image4j.io.LittleEndianInputStream lis,",
        "392": "      net.sf.image4j.io.LittleEndianInputStream lis,",
        "171": "   * @param infoHeader an <tt>InfoHeader</tt> that was read by a call to ",
        "172": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}.",
        "176": "   */",
        "145": "   * @param infoHeader an <tt>InfoHeader</tt> that was read by a call to ",
        "146": "   * {@link #readInfoHeader(net.sf.image4j.io.LittleEndianInputStream) readInfoHeader()}.",
        "383": "   * @param infoHeader the <tt>InfoHeader</tt> structure, which was read using",
        "149": "   */",
        "150": "  public static BufferedImage read(InfoHeader infoHeader, net.sf.image4j.io.LittleEndianInputStream lis) throws IOException {",
        "27": "  public BMPDecoder(java.io.InputStream in) throws IOException {",
        "28": "    net.sf.image4j.io.LittleEndianInputStream lis = new net.sf.image4j.io.LittleEndianInputStream(in);",
        "127": "   */"
      },
      "id": 3598525,
      "filename": "BMPDecoder.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 514,
      "location": "/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/loaders/md2",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/3607358/",
      "md5hash": "5f46d58a217c4c680293239ca33b1c98",
      "lines": {
        "417": "\tprivate MD2Header loadHeader (byte[] bytes) throws IOException {",
        "418": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "43": "import com.badlogic.gdx.graphics.glutils.ShaderProgram;",
        "44": "import com.badlogic.gdx.utils.LittleEndianInputStream;",
        "333": "",
        "334": "\tprivate MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {",
        "400": "\tprivate float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {",
        "401": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "376": "\tprivate MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {",
        "377": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "318": "\tprivate MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {",
        "319": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));"
      },
      "id": 3607358,
      "filename": "MD2Loader.java"
    },
    {
      "repo": "http://libgdx.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 420,
      "location": "/extensions/model-loaders/model-loaders/src/com/badlogic/gdx/graphics/g3d/loaders/md2",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/10129155/",
      "md5hash": "b5861b2f09f93cf8daba9aab2f2b648b",
      "lines": {
        "323": "\tprivate float[] loadTexCoords (MD2Header header, byte[] bytes) throws IOException {",
        "324": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "37": "import com.badlogic.gdx.math.Vector3;",
        "38": "import com.badlogic.gdx.utils.LittleEndianInputStream;",
        "266": "",
        "267": "\tprivate MD2Frame loadFrame (MD2Header header, LittleEndianInputStream in) throws IOException {",
        "302": "\tprivate MD2Triangle[] loadTriangles (MD2Header header, byte[] bytes) throws IOException {",
        "303": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "340": "\tprivate MD2Header loadHeader (byte[] bytes) throws IOException {",
        "341": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));",
        "251": "\tprivate MD2Frame[] loadFrames (MD2Header header, byte[] bytes) throws IOException {",
        "252": "\t\tLittleEndianInputStream in = new LittleEndianInputStream(new ByteArrayInputStream(bytes));"
      },
      "id": 10129155,
      "filename": "MD2Loader.java"
    },
    {
      "repo": "https://github.com/imace/bson4jackson.git",
      "language": "Java",
      "linescount": 919,
      "location": "/src/main/java/de/undercouch/bson4jackson",
      "name": "bson4jackson",
      "url": "https://searchcode.com/codesearch/view/96825610/",
      "md5hash": "9dd01c9dca56e4fa14326134e96d1668",
      "lines": {
        "416": "\t\t\t_counter = new CountingInputStream(in);",
        "417": "\t\t\t_in = new LittleEndianInputStream(_counter);",
        "83": "\t */",
        "84": "\tprivate LittleEndianInputStream _in;",
        "134": "\t\t\t_counter = new CountingInputStream(in);",
        "135": "\t\t\t_in = new LittleEndianInputStream(_counter);",
        "44": "import de.undercouch.bson4jackson.io.CountingInputStream;",
        "45": "import de.undercouch.bson4jackson.io.LittleEndianInputStream;"
      },
      "id": 96825610,
      "filename": "BsonParser.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 45,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 9,
      "source": "Google Code",
      "id": 1
    }
  ]
}