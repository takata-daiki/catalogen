{
  "matchterm": "BlankRecord",
  "previouspage": null,
  "searchterm": "BlankRecord",
  "query": "BlankRecord",
  "language_filters": [
    {
      "count": 15,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 15,
  "results": [
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 110,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260376/",
      "md5hash": "20408206b5ba88b13c02cc59143b5a20",
      "lines": {
        "32": "public abstract class BlankRecord extends CellValue",
        "36": "   */",
        "37": "  private static Logger logger = Logger.getLogger(BlankRecord.class);",
        "70": "  protected BlankRecord(Cell c)",
        "31": " */",
        "45": "   */",
        "46": "  protected BlankRecord(int c, int r)",
        "81": "   */",
        "82": "  protected BlankRecord(int c, int r, BlankRecord br)",
        "58": "   */",
        "59": "  protected BlankRecord(int c, int r, CellFormat st)",
        "69": "   */"
      },
      "id": 43260376,
      "filename": "BlankRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 110,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200904/",
      "md5hash": "20408206b5ba88b13c02cc59143b5a20",
      "lines": {
        "32": "public abstract class BlankRecord extends CellValue",
        "36": "   */",
        "37": "  private static Logger logger = Logger.getLogger(BlankRecord.class);",
        "70": "  protected BlankRecord(Cell c)",
        "31": " */",
        "45": "   */",
        "46": "  protected BlankRecord(int c, int r)",
        "81": "   */",
        "82": "  protected BlankRecord(int c, int r, BlankRecord br)",
        "58": "   */",
        "59": "  protected BlankRecord(int c, int r, CellFormat st)",
        "69": "   */"
      },
      "id": 49200904,
      "filename": "BlankRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 331,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642441/",
      "md5hash": "bbf1c9ed447f6ee0462a495afa5038ec",
      "lines": {
        "323": "    public Object clone() {",
        "324": "      BlankRecord rec = new BlankRecord();",
        "69": "",
        "70": "    /** Creates a new instance of BlankRecord */",
        "71": "",
        "72": "    public BlankRecord()",
        "105": "            throw new RecordFormatException(\"NOT A BLANKRECORD!\");",
        "42": "/*",
        "43": " * BlankRecord.java",
        "76": "    /**",
        "77": "     * Constructs a BlankRecord and sets its fields appropriately",
        "80": "",
        "81": "    public BlankRecord(RecordInputStream in)",
        "104": "        {",
        "59": "",
        "60": "public class BlankRecord"
      },
      "id": 15642441,
      "filename": "BlankRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 110,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374578/",
      "md5hash": "ad856505cea65ae9f5ed33f926c9537c",
      "lines": {
        "32": "public abstract class BlankRecord extends CellValue",
        "36": "   */",
        "37": "  private static Logger logger = Logger.getLogger(BlankRecord.class);",
        "70": "  protected BlankRecord(Cell c)",
        "31": " */",
        "45": "   */",
        "46": "  protected BlankRecord(int c, int r)",
        "81": "   */",
        "82": "  protected BlankRecord(int c, int r, BlankRecord br)",
        "58": "   */",
        "59": "  protected BlankRecord(int c, int r, CellFormat st)",
        "69": "   */"
      },
      "id": 11374578,
      "filename": "BlankRecord.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 110,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919761/",
      "md5hash": "ff96fc4baf28191492af16c18b838dd9",
      "lines": {
        "32": "public abstract class BlankRecord extends CellValue",
        "36": "   */",
        "37": "  private static Logger logger = Logger.getLogger(BlankRecord.class);",
        "70": "  protected BlankRecord(Cell c)",
        "31": " */",
        "45": "   */",
        "46": "  protected BlankRecord(int c, int r)",
        "81": "   */",
        "82": "  protected BlankRecord(int c, int r, BlankRecord br)",
        "58": "   */",
        "59": "  protected BlankRecord(int c, int r, CellFormat st)",
        "69": "   */"
      },
      "id": 13919761,
      "filename": "BlankRecord.java"
    },
    {
      "repo": "https://github.com/xiezhaohui/DataViewer.git",
      "language": "Java",
      "linescount": 304,
      "location": "/ETL/src/com/util",
      "name": "DataViewer",
      "url": "https://searchcode.com/codesearch/view/68613461/",
      "md5hash": "8bd64dddea629578a6d8e6f976c7b348",
      "lines": {
        "19": "import org.apache.poi.hssf.record.BOFRecord;",
        "20": "import org.apache.poi.hssf.record.BlankRecord;",
        "153": "",
        "154": "\t\tcase BlankRecord.sid:",
        "155": "\t\t\tBlankRecord brec = (BlankRecord) record;",
        "156": ""
      },
      "id": 68613461,
      "filename": "HxlsAbstract.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 3300,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642365/",
      "md5hash": "1e8d548d196dc1063c30d9430b35b9f5",
      "lines": {
        "912": "    {",
        "917": "        });",
        "918": "        BlankRecord rec = new BlankRecord();",
        "905": "     *",
        "906": "     * @param row - the row the BlankRecord is a member of",
        "907": "     * @param col - the column the BlankRecord is a member of",
        "908": "     */",
        "909": "",
        "910": "    //public BlankRecord createBlank(short row, short col)",
        "911": "    public BlankRecord createBlank(int row, short col)"
      },
      "id": 15642365,
      "filename": "Sheet.java"
    },
    {
      "repo": "https://github.com/sangprabo/syahfi.git",
      "language": "Java",
      "linescount": 1241,
      "location": "",
      "name": "syahfi",
      "url": "https://searchcode.com/codesearch/view/105179627/",
      "md5hash": "dbf8c8c87a0efef6d74b53d100225da3",
      "lines": {
        "425": "    /**",
        "439": "        for (int i=startRecordId;i<endRecordId;i++){",
        "440": "            if (!blankRecord(i)){",
        "137": "     */",
        "138": "    boolean blankRecord(int recID){",
        "426": "     * this method only use blankRecord, that means the slot or the record can be use for another card, later"
      },
      "id": 105179627,
      "filename": "Store.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 1062,
      "location": "/components/forks/poi/src/loci/poi/hssf/usermodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642303/",
      "md5hash": "a320b63ccf16b2c1798c3d8c1abc8ed7",
      "lines": {
        "432": "                BlankRecord brec = null;",
        "258": "",
        "259": "            case BlankRecord.sid :",
        "436": "                    brec = new BlankRecord();",
        "439": "                {",
        "440": "                    brec = ( BlankRecord ) record;",
        "435": "                {",
        "431": "            case CELL_TYPE_BLANK :"
      },
      "id": 15642303,
      "filename": "HSSFCell.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 506,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventmodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642343/",
      "md5hash": "468caa59753e7c2d27a76f3903f70894",
      "lines": {
        "405": "                BlankRecord br = new BlankRecord();",
        "404": "            {",
        "397": "        }",
        "398": "        else if (retval instanceof MulBlankRecord)",
        "399": "        {",
        "400": "            MulBlankRecord mb = ( MulBlankRecord ) retval;",
        "178": "                WindowTwoRecord.class, SelectionRecord.class, ContinueRecord.class,",
        "179": "                LabelRecord.class, BlankRecord.class, ColumnInfoRecord.class,",
        "52": "import loci.poi.hssf.record.BackupRecord;",
        "53": "import loci.poi.hssf.record.BlankRecord;",
        "180": "                MulRKRecord.class, MulBlankRecord.class, MergeCellsRecord.class,",
        "92": "import loci.poi.hssf.record.MergeCellsRecord;",
        "93": "import loci.poi.hssf.record.MulBlankRecord;",
        "181": "                BoolErrRecord.class, ExternSheetRecord.class, NameRecord.class,"
      },
      "id": 15642343,
      "filename": "EventRecordFactory.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 313,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642481/",
      "md5hash": "3a96eda8fddbdf5ee7f2d333771bc3be",
      "lines": {
        "248": "            MulBlankRecord mb = ( MulBlankRecord ) retval;",
        "245": "        }",
        "246": "        else if (retval instanceof MulBlankRecord)",
        "247": "        {",
        "88": "                WindowTwoRecord.class, SelectionRecord.class, ContinueRecord.class,",
        "89": "                LabelRecord.class, BlankRecord.class, ColumnInfoRecord.class,",
        "90": "                MulRKRecord.class, MulBlankRecord.class, MergeCellsRecord.class,",
        "91": "                FormulaRecord.class, BoolErrRecord.class, ExternSheetRecord.class,",
        "252": "            {",
        "253": "                BlankRecord br = new BlankRecord();"
      },
      "id": 15642481,
      "filename": "RecordFactory.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 96,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260263/",
      "md5hash": "90e4d5453502fd7126b3ab1867dc646a",
      "lines": {
        "24": "import jxl.write.biff.BlankRecord;",
        "31": "public class Blank extends BlankRecord implements WritableCell",
        "30": " */",
        "23": "import jxl.format.CellFormat;"
      },
      "id": 43260263,
      "filename": "Blank.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 96,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200791/",
      "md5hash": "90e4d5453502fd7126b3ab1867dc646a",
      "lines": {
        "24": "import jxl.write.biff.BlankRecord;",
        "31": "public class Blank extends BlankRecord implements WritableCell",
        "30": " */",
        "23": "import jxl.format.CellFormat;"
      },
      "id": 49200791,
      "filename": "Blank.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 210,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642392/",
      "md5hash": "2ae7a6367566625aafd067c77535f614",
      "lines": {
        "194": "        {",
        "195": "            throw new RecordFormatException(\"Not a MulBlankRecord!\");",
        "70": "",
        "71": "    /** Creates new MulBlankRecord */",
        "72": "",
        "73": "    public MulBlankRecord()",
        "42": "/*",
        "43": " * MulBlankRecord.java",
        "82": "",
        "83": "    public MulBlankRecord(RecordInputStream in)",
        "52": " *               In this release we have read-only support for this record type.",
        "53": " *               The RecordFactory converts this to a set of BlankRecord objects.<P>",
        "57": " * @version 2.0-pre",
        "58": " * @see loci.poi.hssf.record.BlankRecord",
        "60": "",
        "61": "public class MulBlankRecord"
      },
      "id": 15642392,
      "filename": "MulBlankRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 96,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374501/",
      "md5hash": "90e4d5453502fd7126b3ab1867dc646a",
      "lines": {
        "24": "import jxl.write.biff.BlankRecord;",
        "31": "public class Blank extends BlankRecord implements WritableCell",
        "30": " */",
        "23": "import jxl.format.CellFormat;"
      },
      "id": 11374501,
      "filename": "Blank.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 8,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    }
  ]
}