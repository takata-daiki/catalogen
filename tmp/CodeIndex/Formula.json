{
  "matchterm": "Formula",
  "previouspage": null,
  "searchterm": "Formula",
  "query": "Formula",
  "language_filters": [
    {
      "count": 10223,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 10223,
  "results": [
    {
      "repo": "https://code.google.com/p/synoptic/",
      "language": "Java",
      "linescount": 1050,
      "location": "/synoptic/src/gov/nasa/ltl/trans",
      "name": "synoptic",
      "url": "https://searchcode.com/codesearch/view/13191096/",
      "md5hash": "078fdc5d229fe0a2cde60f1c30a8c567",
      "lines": {
        "32": " */",
        "33": "public class Formula implements Comparable<Formula> {",
        "131": "",
        "132": "    public Formula getSub1() {",
        "139": "",
        "140": "    public Formula getSub2() {",
        "46": "    private static final int P_EVENTUALLY = 6;",
        "47": "    private static Hashtable<String, Formula> ht = new Hashtable<String, Formula>();",
        "48": "    private static Hashtable<String, Formula> matches = new Hashtable<String, Formula>();",
        "147": "",
        "148": "    public void addLeft(Formula l) {",
        "151": "",
        "152": "    public void addRight(Formula r) {",
        "155": "",
        "156": "    public int compareTo(Formula f) {"
      },
      "id": 13191096,
      "filename": "Formula.java"
    },
    {
      "repo": "https://github.com/jimm/DataVision.git",
      "language": "Java",
      "linescount": 335,
      "location": "/jimm/datavision",
      "name": "DataVision",
      "url": "https://searchcode.com/codesearch/view/107559582/",
      "md5hash": "3f67efacbf02eff78fa8db6b73bc9102",
      "lines": {
        "32": " */",
        "33": "public class Formula extends Expression {",
        "45": " * generate a new id",
        "43": " *",
        "44": " * @param id the unique identifier for the new formula; if <code>null</code>,",
        "10": "/**",
        "11": " * A formula is a Bean Scripting Framework (BSF) script evaluated at runtime.",
        "12": " * It may contain database column values, other formulas, special values, and",
        "13": " * aggregates.",
        "46": " * @param report the report containing this formula",
        "15": " * Before being evaluated, the following substitutions are made withing",
        "16": " * the evaluation string of a formula:",
        "21": " * <li>{&#64;<i>id_number</i>} is replaced by the results of evaluating the",
        "22": " * formula whose id is <i>id_number</i>.</li>",
        "47": " * @param name the formula name"
      },
      "id": 107559582,
      "filename": "Formula.java"
    },
    {
      "repo": "https://code.google.com/p/gwt-equation-editor/",
      "language": "Java",
      "linescount": 766,
      "location": "/src/java/org/formed/client/formula",
      "name": "gwt-equation-editor",
      "url": "https://searchcode.com/codesearch/view/4939878/",
      "md5hash": "2fe72bf1083ed5383f1192245d311e73",
      "lines": {
        "35": " */",
        "36": "public class Formula {",
        "37": "",
        "16": " */",
        "17": "package org.formed.client.formula;",
        "18": "",
        "19": "import org.formed.client.formula.drawer.Metrics;",
        "20": "import org.formed.client.formula.drawer.Rectangle;",
        "21": "import org.formed.client.formula.editor.Cursor;",
        "22": "import com.google.gwt.user.client.ui.HTML;",
        "27": "import java.util.Map;",
        "28": "import org.formed.client.formula.elements.LeftCloser;",
        "29": "import org.formed.client.formula.elements.PlaceElement;",
        "30": "import org.formed.client.formula.elements.RightCloser;",
        "31": ""
      },
      "id": 4939878,
      "filename": "Formula.java"
    },
    {
      "repo": "https://code.google.com/p/gwt-excel-import-export/",
      "language": "Java",
      "linescount": 129,
      "location": "/dk/lindhardt/gwt/geie/shared",
      "name": "gwt-excel-import-export",
      "url": "https://searchcode.com/codesearch/view/3263459/",
      "md5hash": "7307e79212e67f3c9eca8c87a84f6944",
      "lines": {
        "35": " *",
        "36": " *    Formula sinFormula = new Formula(\"Sin[x]\");",
        "37": " *    sinFormula.putVariable(\"x\", position);",
        "38": " * </pre>",
        "39": " */",
        "40": "public class Formula implements Serializable {",
        "41": "",
        "42": "   private String formula;",
        "47": "    */",
        "48": "   Formula() {",
        "51": "   /**",
        "52": "    * Constructs a new formula",
        "53": "    * @param formula a formula",
        "26": " * <p/>",
        "27": " * A formula"
      },
      "id": 3263459,
      "filename": "Formula.java"
    },
    {
      "repo": "http://googlechartwrapper.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 217,
      "location": "/googlechartwrapper/de/toolforge/googlechartwrapper",
      "name": "googlechartwrapper",
      "url": "https://searchcode.com/codesearch/view/13646918/",
      "md5hash": "d13f132da002703884458fc5fd630dfa",
      "lines": {
        "35": " * <pre>",
        "36": " * Formula formula = new Formula(new FormulaData(\"e^{\\\\mathrm{i}\\\\,\\\\pi}%2B1=0\\\\\"));",
        "37": " * ",
        "38": " * Formula formula = new Formula(new FormulaData(\"x=\\\\frac{-b\\\\pm\\\\sqrt{b^2-4ac}}{2a}\"), 200);",
        "18": "import de.toolforge.googlechartwrapper.color.SolidFill;",
        "19": "import de.toolforge.googlechartwrapper.data.FormulaData;",
        "20": "import de.toolforge.googlechartwrapper.data.FormulaDataAppender;",
        "21": "import de.toolforge.googlechartwrapper.util.GenericAppender;",
        "25": "/**",
        "26": " * Specifies a formula <a",
        "27": " * href=\"http://code.google.com/apis/chart/docs/gallery/formulas.html\"> ",
        "28": " * http://code.google.com/apis/chart/docs/gallery/formulas.html</a>",
        "29": " * ",
        "30": " * <p>",
        "31": " * Here are some examples of how formulas can be used:"
      },
      "id": 13646918,
      "filename": "Formula.java"
    },
    {
      "repo": "https://code.google.com/p/javawfm/",
      "language": "Java",
      "linescount": 727,
      "location": "/farmR/src/java/src/jfm/model",
      "name": "javawfm",
      "url": "https://searchcode.com/codesearch/view/13904509/",
      "md5hash": "9a271caab1d4a0fe115c3cdae610c223",
      "lines": {
        "35": "\t\t} catch (Exception ex){",
        "36": "\t\t\tthrow new Error(\"Error parsing formula\"+ex.getMessage());",
        "38": "\t}",
        "39": "\t/** Give the formula a new value by getting it to parse a string */",
        "41": "\t\toriginalString=input;",
        "10": " * ",
        "11": " * \\todo Add caching of formula results but force recalculation in VariableHolder's change",
        "14": " * */",
        "15": "public final class Formula {",
        "22": "\tprivate final Map<VariableType,Double> variableValues=new HashMap<VariableType,Double>();",
        "23": "\t/** Construct the formula from a string */",
        "24": "\tpublic Formula(String input) {",
        "25": "//\t\toriginalString=input;",
        "26": "\t//\tSystem.out.println(\"Initializing formula \"+originalString);",
        "42": "\t//\tSystem.out.println(\"Parsing formula \"+originalString+\"\\n\");"
      },
      "id": 13904509,
      "filename": "Formula.java"
    },
    {
      "repo": "https://github.com/ZeissS/atpportal.git",
      "language": "Java",
      "linescount": 99,
      "location": "/src/model/org/tptp/model",
      "name": "atpportal",
      "url": "https://searchcode.com/codesearch/view/106394601/",
      "md5hash": "f6f1764a279aa23764842d42515d361a",
      "lines": {
        "5": "/**",
        "6": " * NOTE: References do not hold a list of Formula's so the object tree is a top-down-tree without backreferences,",
        "8": " */",
        "9": "public class Formula {",
        "11": "    private String name;",
        "12": "    private String formulaText;",
        "13": "    private String comment;",
        "14": "    private List<FormulaReference> references;",
        "17": "    ",
        "18": "    public Formula() {",
        "20": "    }",
        "21": "    public Formula (String name) {",
        "23": "    }",
        "24": "    public Formula(String name, String formula) {",
        "25": "        this(name, formula, \"\");"
      },
      "id": 106394601,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/mst/ooo340",
      "language": "Java",
      "linescount": 264,
      "location": "/xmerge/java/org/openoffice/xmerge/converter/xml/sxc/pexcel/records",
      "name": "ooo340",
      "url": "https://searchcode.com/codesearch/view/122077703/",
      "md5hash": "02dd3cd834df71fcb8227c10dcffd007",
      "lines": {
        "68": " \t */",
        "69": "    public Formula(int row, int column, String cellContents, int ixfe, Format fmt, Workbook wb)",
        "76": "\t\tsetIxfe(ixfe);",
        "43": "import org.openoffice.xmerge.converter.xml.sxc.Format;",
        "44": "import org.openoffice.xmerge.converter.xml.sxc.pexcel.records.formula.FormulaHelper;",
        "77": "\t\tsetFormula(cellContents);",
        "93": "\t\t\tDebug.log(Debug.TRACE,\"Date Formula\");",
        "92": "\t\t} else if(category.equalsIgnoreCase(CELLTYPE_DATE)) {",
        "49": "/**",
        "50": " * Represents a BIFF Record describing a formula  ",
        "51": " */",
        "52": "public class Formula extends CellValue implements OfficeConstants {",
        "57": "    private byte[] rgce;",
        "58": "\tprivate FormulaHelper fh = new FormulaHelper();",
        "60": "\t/**",
        "61": " \t * Constructs a <code>Formula</code> using specified attributes"
      },
      "id": 122077703,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/mst/ooo340",
      "language": "Java",
      "linescount": 258,
      "location": "/xmerge/source/pexcel/java/org/openoffice/xmerge/converter/xml/sxc/pexcel/records",
      "name": "ooo340",
      "url": "https://searchcode.com/codesearch/view/122078427/",
      "md5hash": "e6ec085143b506a78d76e8464e25cd7e",
      "lines": {
        "86": "\t\t} else if(category.equalsIgnoreCase(CELLTYPE_DATE)) {",
        "37": "import org.openoffice.xmerge.converter.xml.sxc.Format;",
        "38": "import org.openoffice.xmerge.converter.xml.sxc.pexcel.records.formula.FormulaHelper;",
        "71": "\t\tsetFormula(cellContents);",
        "43": "/**",
        "44": " * Represents a BIFF Record describing a formula  ",
        "45": " */",
        "46": "public class Formula extends CellValue implements OfficeConstants {",
        "51": "    private byte[] rgce;",
        "52": "\tprivate FormulaHelper fh = new FormulaHelper();",
        "54": "\t/**",
        "55": " \t * Constructs a <code>Formula</code> using specified attributes",
        "87": "\t\t\tDebug.log(Debug.TRACE,\"Date Formula\");",
        "70": "\t\tsetIxfe(ixfe);",
        "62": " \t */",
        "63": "    public Formula(int row, int column, String cellContents, int ixfe, Format fmt, Workbook wb)"
      },
      "id": 122078427,
      "filename": "Formula.java"
    },
    {
      "repo": "http://atf2flightsim.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 192,
      "location": "/ATF2/control-software/epics-3.14.8/extensions/src/ChannelArchiver/archive_viewer/src/epics/archiveviewer/base/fundamental",
      "name": "atf2flightsim",
      "url": "https://searchcode.com/codesearch/view/13527717/",
      "md5hash": "d63e556a92cb775f7c501990f96bc44e",
      "lines": {
        "33": "\t",
        "34": "\tpublic Formula(AVEntry ave, String _term, FormulaParameter[] params, boolean createMetaData)",
        "91": "\t//may return NULL",
        "38": "\t\t",
        "39": "\t\tsetFormulaParametersAndTerm(params, _term, createMetaData);",
        "49": "\t",
        "50": "\tpublic FormulaParameter[] getFormulaParameters() {",
        "58": "\t",
        "55": "\t{",
        "56": "\t\treturn ((FormulaParameter) this.aveNamesAndArguments.get(argName)).getAVEName();",
        "25": " */",
        "26": "public class Formula",
        "59": "\tpublic void setFormulaParametersAndTerm(FormulaParameter[] params, String _term, boolean updateMetaData)",
        "92": "\t//if this formula contains formula arguments, ",
        "29": "\tprivate String term;",
        "30": "\tprivate FormulaParameter[] parameters;"
      },
      "id": 13527717,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1217,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124848/",
      "md5hash": "e2ffcb9b04691b947199aefe1b33ee17",
      "lines": {
        "84": "",
        "34": "",
        "35": "/** FORMULA (0x406) describes a cell that contains a formula.",
        "40": " * 4       ixfe        2       Index to the XF record",
        "41": " * 6       num         8       Current value of the formula",
        "61": "public final class Formula",
        "81": "",
        "82": "    /** Whether this formula contains an indirect reference. */",
        "52": " *        2      0x04   (Reserved)",
        "53": " *        3      0x08   fShrFmla       this is a reference to a shared formula",
        "56": " * </pre> ",
        "57": " * In most cases, formulas should have fAlwaysCalc asserted to ensure that",
        "60": " */",
        "29": "import com.extentech.ExtenXLS.WorkBookHandle;",
        "30": "import com.extentech.formats.XLS.formulas.*;",
        "85": "    /** Whether this FORMULA record has an attached STRING record. */"
      },
      "id": 47124848,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1217,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976472/",
      "md5hash": "e2ffcb9b04691b947199aefe1b33ee17",
      "lines": {
        "84": "",
        "34": "",
        "35": "/** FORMULA (0x406) describes a cell that contains a formula.",
        "40": " * 4       ixfe        2       Index to the XF record",
        "41": " * 6       num         8       Current value of the formula",
        "61": "public final class Formula",
        "81": "",
        "82": "    /** Whether this formula contains an indirect reference. */",
        "52": " *        2      0x04   (Reserved)",
        "53": " *        3      0x08   fShrFmla       this is a reference to a shared formula",
        "56": " * </pre> ",
        "57": " * In most cases, formulas should have fAlwaysCalc asserted to ensure that",
        "60": " */",
        "29": "import com.extentech.ExtenXLS.WorkBookHandle;",
        "30": "import com.extentech.formats.XLS.formulas.*;",
        "85": "    /** Whether this FORMULA record has an attached STRING record. */"
      },
      "id": 50976472,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 306,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/csd02",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355486/",
      "md5hash": "fa05da28773e43119aa933513db468d3",
      "lines": {
        "155": "     * @param classAttr new value",
        "132": "     * @param nameAttr the new value",
        "133": "     * @return <code>Formula</code> instance",
        "134": "     */",
        "135": "    public Formula nameAttr(final StringSimpleType nameAttr) {",
        "156": "     * @return <code> Formula</code> instance",
        "60": "        span.setAttribute(\"data-type\", \"formula\");",
        "29": "public class Formula extends BlocksreqComplexType {",
        "144": "     * @param alternativeToAttr new value",
        "145": "     * @return <code> Formula</code> instance",
        "146": "     */",
        "147": "    public Formula alternativeToAttr(final AnyURISimpleType alternativeToAttr) {",
        "24": "/**",
        "25": " * the element formula is a section of the preface or preamble that contains a formulaic expression<br/> that is systematically or frequently present in a preface or a preamble and has e precise legal<br/> meaning (e.g. an enacting formula). Use the refersTo attribute for the specification of the actual<br/> type of formula.",
        "59": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "28": "",
        "61": "        span.setAttribute(\"data-ns\", \"http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD02\");"
      },
      "id": 40355486,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/pluppens/nsesa-editor-an.git",
      "language": "Java",
      "linescount": 242,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/common/client/ui/overlay/document/gen/akomantoso20",
      "name": "nsesa-editor-an",
      "url": "https://searchcode.com/codesearch/view/40355844/",
      "md5hash": "720bf2719626edd89ed943018278d9b3",
      "lines": {
        "69": "    /**",
        "70": "     * Create a <code>Formula</code> object and set up its type",
        "71": "     */",
        "72": "    public Formula() {",
        "60": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "74": "        setType(\"formula\");",
        "78": "    /**",
        "29": "public class Formula extends BlocksoptComplexType {",
        "80": "     */",
        "73": "        super(create());",
        "24": "/**",
        "25": " * the element formula is a section of the preface or preamble that contains a formulaic<br/> expression that is systematically or frequently present in a preface or a preamble and has e precise<br/> legal meaning (e.g. an enacting formula). Use the refersTo attribute for the specification of the<br/> actual type of formula.",
        "79": "     * Create a <code>Formula</code> object with the given DOM element",
        "28": "",
        "61": "        span.setAttribute(\"data-type\", \"formula\");",
        "62": "        span.setAttribute(\"data-ns\", \"http://www.akomantoso.org/2.0\");",
        "63": "        span.setClassName(\"widget formula\");"
      },
      "id": 40355844,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/ashokhari/bungeni-at4am.git",
      "language": "Java",
      "linescount": 240,
      "location": "/src/main/java/org/nsesa/editor/gwt/an/client/ui/overlay/document/gen/akomantoso20",
      "name": "bungeni-at4am",
      "url": "https://searchcode.com/codesearch/view/51611234/",
      "md5hash": "0ad0323be44be50f1ba832c95598d97a",
      "lines": {
        "32": "public class Formula extends BlocksoptComplexType {",
        "64": "    /**",
        "66": "     */",
        "67": "    public Formula() {",
        "68": "        super(create());",
        "69": "        setType(\"formula\");",
        "65": "     * Create a <code>Formula</code> object and set up its type",
        "73": "    /**",
        "74": "     * Create a <code>Formula</code> object with the given DOM element",
        "75": "     */",
        "55": "        com.google.gwt.user.client.Element span = DOM.createSpan();",
        "56": "        span.setAttribute(\"type\", \"formula\");",
        "57": "        span.setAttribute(\"ns\", \"http://www.akomantoso.org/2.0\");",
        "58": "        span.setClassName(\"widget formula\");",
        "27": "/**",
        "28": " * the element formula is a section of the preface or preamble that contains a formulaic expression that is systematically or frequently present in a preface or a preamble and has e precise legal meaning (e.g. an enacting formula). Use the refersTo attribute for the specification of the actual type of formula.",
        "31": ""
      },
      "id": 51611234,
      "filename": "Formula.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 78,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374497/",
      "md5hash": "0d5f12d9f84ba26b81832c4bb61a7cb8",
      "lines": {
        "34": "   * @param r the row",
        "35": "   * @param form the  formula",
        "36": "   */",
        "37": "  public Formula(int c, int r, String form)",
        "42": "  /**",
        "43": "   * Constructs a formula",
        "46": "   * @param r the row",
        "47": "   * @param form the formula",
        "49": "   */",
        "50": "  public Formula(int c, int r, String form, CellFormat st)",
        "74": "  {",
        "22": "import jxl.format.CellFormat;",
        "23": "import jxl.write.biff.FormulaRecord;",
        "75": "    return new Formula(col, row, this);",
        "61": "   */",
        "62": "  protected Formula(int c, int r, Formula f)"
      },
      "id": 11374497,
      "filename": "Formula.java"
    },
    {
      "repo": "http://renjin.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 205,
      "location": "/core/src/main/java/org/renjin/primitives/models",
      "name": "renjin",
      "url": "https://searchcode.com/codesearch/view/13555277/",
      "md5hash": "9a4a3b14ea5465cde30a9dab381f5c5b",
      "lines": {
        "33": " * <p>A <i>term</i> is a combination of one or more <i>variables</i>. This class stores terms in",
        "34": " * their expanded form: the formula described by {@code y ~ a * b} actually has three terms: ",
        "35": " * {@code a}, {@code b}, and {@code a:b}, where {@code a:b} is an interaction term. See ",
        "37": " * ",
        "38": " * <p>This internal class is used by the primitives that manipulate model formulas. ",
        "39": " */",
        "40": "public class Formula {",
        "44": "  ",
        "45": "  public Formula(SEXP response, int intercept, Iterable<Term> terms) {",
        "18": "/**",
        "19": " * Encapsulates the properties of R model formulae, which consist of three elements:",
        "26": " * ",
        "27": " * <p>Within the context of R model formulas, a <i>variable</i> is any valid R",
        "28": " * expression that can be evaluated within the formula's {@link Environment} (usually a",
        "29": " * data.frame object). It is often a symbol, like simply {@code x} or {@code y}, but a "
      },
      "id": 13555277,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 251,
      "location": "/xmerge/source/pexcel/java/org/openoffice/xmerge/converter/xml/sxc/pexcel/records",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45005320/",
      "md5hash": "aae97006169e9603a96dd5d0a3972cb5",
      "lines": {
        "33": "/**",
        "34": " * Represents a BIFF Record describing a formula",
        "35": " */",
        "36": "public class Formula extends CellValue implements OfficeConstants {",
        "41": "    private byte[] rgce;",
        "42": "    private FormulaHelper fh = new FormulaHelper();",
        "44": "    /**",
        "45": "     * Constructs a <code>Formula</code> using specified attributes",
        "77": "        } else if(category.equalsIgnoreCase(CELLTYPE_DATE)) {",
        "61": "        setIxfe(ixfe);",
        "78": "            Debug.log(Debug.TRACE,\"Date Formula\");",
        "53": "     */",
        "54": "    public Formula(int row, int column, String cellContents, int ixfe, Format fmt, Workbook wb)",
        "28": "import org.openoffice.xmerge.converter.xml.sxc.Format;",
        "29": "import org.openoffice.xmerge.converter.xml.sxc.pexcel.records.formula.FormulaHelper;",
        "62": "        setFormula(cellContents);"
      },
      "id": 45005320,
      "filename": "Formula.java"
    },
    {
      "repo": "https://bitbucket.org/mig_isep_work/lapr4_grupo_58",
      "language": "Java",
      "linescount": 121,
      "location": "/src/csheets/core/formula",
      "name": "lapr4_grupo_58",
      "url": "https://searchcode.com/codesearch/view/102415343/",
      "md5hash": "0a06ee9f41cae69f1bff81917e266f93",
      "lines": {
        "32": "import csheets.core.formula.util.ExpressionVisitorException;",
        "33": "import csheets.core.formula.util.ReferenceFetcher;",
        "34": "",
        "35": "/**",
        "36": " * A formula in a cell.",
        "38": " */",
        "39": "public class Formula implements Expression {",
        "43": "",
        "44": "\t/** The cell to which the formula belongs */",
        "20": " */",
        "21": "package csheets.core.formula;",
        "28": "import csheets.core.Value;",
        "29": "import csheets.core.formula.util.CircularReferenceException;",
        "30": "import csheets.core.formula.util.CircularReferenceFinder;",
        "31": "import csheets.core.formula.util.ExpressionVisitor;"
      },
      "id": 102415343,
      "filename": "Formula.java"
    },
    {
      "repo": "https://github.com/jcalvert/hibernate-osgi-fix.git",
      "language": "Java",
      "linescount": 76,
      "location": "/java/org/hibernate/mapping",
      "name": "hibernate-osgi-fix",
      "url": "https://searchcode.com/codesearch/view/114110230/",
      "md5hash": "76f7ba97acbc7076017a45231f889192",
      "lines": {
        "33": "/**",
        "34": " * A formula is a derived column value",
        "36": " */",
        "37": "public class Formula implements Selectable, Serializable {",
        "38": "\tprivate static int formulaUniqueInteger=0;",
        "39": "",
        "40": "\tprivate String formula;",
        "42": "",
        "43": "\tpublic Formula() {",
        "44": "\t\tuniqueInteger = formulaUniqueInteger++;",
        "45": "\t}",
        "47": "\tpublic String getTemplate(Dialect dialect, SQLFunctionRegistry functionRegistry) {",
        "48": "\t\treturn Template.renderWhereStringTemplate(formula, dialect, functionRegistry);",
        "50": "\tpublic String getText(Dialect dialect) {",
        "51": "\t\treturn getFormula();"
      },
      "id": 114110230,
      "filename": "Formula.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 7078,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1962,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1044,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 97,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 23,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 11,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 6,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 2,
      "source": "Gitorious",
      "id": 10
    }
  ]
}