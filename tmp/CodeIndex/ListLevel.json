{
  "matchterm": "ListLevel",
  "previouspage": null,
  "searchterm": "ListLevel",
  "query": "ListLevel",
  "language_filters": [
    {
      "count": 38,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 38,
  "results": [
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 270,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384065/",
      "md5hash": "9b1ed77d0b27e7f155e2a74d1d59ba8c",
      "lines": {
        "91": "",
        "68": "    @Deprecated",
        "37": "@Internal",
        "38": "public final class ListLevel",
        "40": "    private static final POILogger logger = POILogFactory",
        "41": "            .getLogger( ListLevel.class );",
        "74": "    public ListLevel( int level, boolean numbered )",
        "108": "",
        "109": "        ListLevel lvl = (ListLevel) obj;",
        "73": "",
        "63": "    ListLevel()",
        "92": "    public ListLevel( int startAt, int numberFormatCode, int alignment,",
        "62": "",
        "69": "    public ListLevel( final byte[] buf, final int startOffset )"
      },
      "id": 97384065,
      "filename": "ListLevel.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 457,
      "location": "/src/main/java/org/docx4j/model/listnumbering",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17641738/",
      "md5hash": "f4c8b486d95f9a9c4003e54d5bd05e63",
      "lines": {
        "100": "\t *   - footnotes/endnotes",
        "133": "     * Constructor for a ListLevel in an abstract definition.",
        "102": "\t * for each story, or the there should be a ListLevel defined",
        "103": "\t * for each story! ",
        "135": "    public ListLevel(Lvl levelNode)",
        "109": "\t",
        "110": "\tprotected static Logger log = Logger.getLogger(ListLevel.class);",
        "185": "     */",
        "183": "    /** ",
        "184": "     * Constructor for a ListLevel in an instance definition.",
        "132": "    /**",
        "186": "    public ListLevel(ListLevel masterCopy)",
        "92": "",
        "93": "public class ListLevel {",
        "134": "     */",
        "101": "\t * This means that ListLevel should have independent counters"
      },
      "id": 17641738,
      "filename": "ListLevel.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 606,
      "location": "/targets/itext/1.4.8/com/lowagie/text/rtf/list",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313985/",
      "md5hash": "fcd39a334e47e988c750565716cd606c",
      "lines": {
        "320": "                result.write(LIST_LEVEL_STYLE_NUMBERED_BEGIN);",
        "257": "                    ((RtfListItem) rtfElement).setParent(this);",
        "258": "                    ((RtfListItem) rtfElement).inheritListSettings(listNumber, listLevel + 1);",
        "323": "                }",
        "324": "                result.write(intToByteArray(listLevel));",
        "321": "                if(listLevel < 10) {",
        "265": "        ",
        "170": "     */",
        "171": "    private int listLevel = 0;",
        "418": "                result.write(LIST_LEVEL_NUMBER);",
        "417": "            if(listLevel > 0) {",
        "416": "            result.write(intToByteArray(listNumber));",
        "85": "     */",
        "86": "    private static final byte[] LIST_LEVEL = \"\\\\listlevel\".getBytes();",
        "419": "                result.write(intToByteArray(listLevel));",
        "266": "        if(this.listLevel == 0) {"
      },
      "id": 120313985,
      "filename": "RtfList.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 2323,
      "location": "/targets/itext/1.4.8/com/lowagie/text/rtf",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313962/",
      "md5hash": "34563ddc40f45b8f6900858b95b9365d",
      "lines": {
        "289": "    /** Level alignment (old) */",
        "290": "    private static final byte[] listLevelAlignOld = \"leveljc\".getBytes();",
        "292": "    /** Level alignment (new) */",
        "293": "    private static final byte[] listLevelAlignNew = \"leveljcn\".getBytes();",
        "295": "    /** Level starting number */",
        "296": "    private static final byte[] listLevelStartAt = \"levelstartat\".getBytes();",
        "298": "    /** Level text group */",
        "299": "    private static final byte[] listLevelTextDefinition = \"leveltext\".getBytes();",
        "301": "    /** Filler for Level Text Length */",
        "302": "    private static final byte[] listLevelTextLength = \"\\'0\".getBytes();",
        "280": "    /** Current List level */",
        "281": "    private static final byte[] listLevelDefinition = \"listlevel\".getBytes();",
        "283": "    /** Level numbering (old) */",
        "284": "    private static final byte[] listLevelTypeOld = \"levelnfc\".getBytes();",
        "286": "    /** Level numbering (new) */",
        "287": "    private static final byte[] listLevelTypeNew = \"levelnfcn\".getBytes();"
      },
      "id": 120313962,
      "filename": "RtfWriter.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 764,
      "location": "/src/org/apache/poi/hwpf/dev",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384386/",
      "md5hash": "a5fd3aeec9338ae1535ca742a1539e0e",
      "lines": {
        "736": "                            new SprmIterator( listLevel.getGrpprlPapx(), 0 ),",
        "739": "",
        "740": "                if ( listLevel.getGrpprlPapx() != null )",
        "741": "                {",
        "742": "                    System.out.println( \"PAP's ListLevel CHPX:\" );",
        "743": "                    dumpSprms(",
        "744": "                            new SprmIterator( listLevel.getGrpprlChpx(), 0 ),",
        "45": "import org.apache.poi.hwpf.model.LFOData;",
        "46": "import org.apache.poi.hwpf.model.ListLevel;",
        "727": "            {",
        "728": "                final ListLevel listLevel = listTables.getLevel( lfo.getLsid(),",
        "730": "",
        "731": "                System.out.println( \"PAP's ListLevel: \" + listLevel );",
        "732": "                if ( listLevel.getGrpprlPapx() != null )",
        "735": "                    dumpSprms("
      },
      "id": 97384386,
      "filename": "HWPFLister.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 1103,
      "location": "/source/net/yacy/data/wiki",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62351959/",
      "md5hash": "a055842d553d9b50616dce0bddc0ecd9",
      "lines": {
        "193": "    private String orderedListLevel = EMPTY;",
        "194": "    private String unorderedListLevel = EMPTY;",
        "419": "            String listLevel;",
        "424": "            if (ListType.ORDERED.equals(listType)) {",
        "425": "                listLevel = this.orderedListLevel;",
        "418": "",
        "430": "                listLevel = this.unorderedListLevel;",
        "429": "            } else if (ListType.UNORDERED.equals(listType)) {",
        "195": "    private String defListLevel = EMPTY;",
        "437": "",
        "438": "            if (line.startsWith(listLevel + symbol)) {      //more #",
        "442": "                stringBuilder.append(HTML_OPEN_LIST_ELEMENT);",
        "443": "                stringBuilder.append(line.substring(listLevel.length() + 1).trim());",
        "445": "                ret = stringBuilder.toString();",
        "446": "                listLevel += symbol;",
        "447": "            } else if (!listLevel.isEmpty() && line.startsWith(listLevel)) {           //equal number of #"
      },
      "id": 62351959,
      "filename": "WikiCode.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 250,
      "location": "/src/org/apache/poi/hwpf/usermodel",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384433/",
      "md5hash": "8bb8ee10eff23db02cff3526d2c5e375",
      "lines": {
        "32": "import org.apache.poi.hwpf.model.ListLevel;",
        "137": "    @Internal",
        "138": "    ListLevel getLVL( char level )",
        "235": "    {",
        "236": "        ListLevel listLevel = _listData.getLevel( level );",
        "242": "        listLevel.setLevelProperties( grpprl );",
        "241": "                base );",
        "146": "        }",
        "147": "        ListLevel lvl = _listData.getLevels()[level];",
        "216": "    {",
        "217": "        ListLevel listLevel = _listData.getLevel( level );",
        "31": "import org.apache.poi.hwpf.model.ListFormatOverrideLevel;",
        "222": "                base );",
        "223": "        listLevel.setNumberProperties( grpprl );"
      },
      "id": 97384433,
      "filename": "HWPFList.java"
    },
    {
      "repo": "https://github.com/faquino/iText-4.2.0.git",
      "language": "Java",
      "linescount": 707,
      "location": "/src/rtf/com/lowagie/text/rtf/list",
      "name": "iText-4.2.0",
      "url": "https://searchcode.com/codesearch/view/70303449/",
      "md5hash": "eed3e3a36dff55a83272d2e7a77a42bc",
      "lines": {
        "257": "    public RtfList(RtfDocument doc, List list) {",
        "258": "        // setup the listlevels",
        "260": "        ",
        "261": "        // setup 1 listlevel if it's a simple list",
        "294": "\t\t\t\tll.setListType(RtfListLevel.LIST_TYPE_LOWER_ROMAN);",
        "295": "\t\t\t} else {",
        "296": "\t\t\t\tll.setListType(RtfListLevel.LIST_TYPE_UPPER_ROMAN);",
        "298": "\t\t} else if (list.isNumbered()) {",
        "299": "\t\t\tll.setListType(RtfListLevel.LIST_TYPE_NUMBERED);",
        "268": "        this.items = new ArrayList();\t\t// list content",
        "269": "        RtfListLevel ll = (RtfListLevel)this.listLevels.get(0);",
        "400": "         ",
        "401": "        // write the listlevels here",
        "402": "        for(int i = 0; i<levelsToWrite; i++) {",
        "403": "        \t((RtfListLevel)listLevels.get(i)).writeDefinition(result);",
        "293": "\t\t\tif (list.isLowercase()) {"
      },
      "id": 70303449,
      "filename": "RtfList.java"
    },
    {
      "repo": "https://bitbucket.org/wrapman/frostwire.desktop.translations.pirate",
      "language": "Java",
      "linescount": 1062,
      "location": "/lib/jars-src/icu4j/src/com/ibm/icu/dev/test",
      "name": "frostwire.desktop.translations.pirate",
      "url": "https://searchcode.com/codesearch/view/125744925/",
      "md5hash": "364adf3ccb4511bbcb52e98d87e52158",
      "lines": {
        "910": "            return !inDocMode() || listlevel == 3 || (indentLevel == 1 && listlevel > 0);",
        "913": "        public boolean doRecurse() {",
        "905": "        public boolean inDocMode() {",
        "906": "            return describe || listlevel != 0;",
        "877": "        public boolean   quiet = false;",
        "878": "        public int       listlevel = 0;;",
        "909": "        public boolean doMethods() {",
        "465": "                } else if (arg.equals(\"-list\") || arg.equals(\"-l\")) {",
        "466": "                    params.listlevel = 1;",
        "467": "                } else if (arg.equals(\"-listall\") || arg.equals(\"-la\")) {",
        "468": "                    params.listlevel = 2;",
        "469": "                } else if (arg.equals(\"-listexaustive\") || arg.equals(\"-le\")) {",
        "918": "            return inDocMode() && (listlevel == 2 || (indentLevel == 1 && listlevel > 0));",
        "914": "            return !inDocMode() || listlevel > 1 || (indentLevel == 1 && listlevel > 0);",
        "917": "        public boolean doRecurseGroupsOnly() {"
      },
      "id": 125744925,
      "filename": "TestFmwk.java"
    },
    {
      "repo": "https://github.com/larrycai/doxia-module-markdown.git",
      "language": "Java",
      "linescount": 859,
      "location": "/src/main/java/com/petebevin/markdown",
      "name": "doxia-module-markdown",
      "url": "https://searchcode.com/codesearch/view/114232604/",
      "md5hash": "65334091251f6a75946b279f5b9f2789",
      "lines": {
        "66": "    public MarkdownProcessor() {",
        "547": "        // starting cardinal number; e.g. \"1.\" or \"a.\".",
        "548": "        listLevel++;",
        "454": "",
        "455": "        if (listLevel > 0) {",
        "527": "    private String processListItems(String list) {",
        "528": "        // The listLevel variable keeps track of when we're inside a list.",
        "67": "        listLevel = 0;",
        "58": "    private static final CharacterProtector CHAR_PROTECTOR = new CharacterProtector();",
        "59": "    private int listLevel;",
        "572": "        });",
        "573": "        listLevel--;"
      },
      "id": 114232604,
      "filename": "MarkdownProcessor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 660,
      "location": "/src/org/apache/poi/hwpf/usermodel",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384407/",
      "md5hash": "d9e337622aaacee6d2790b7572b0af11",
      "lines": {
        "129": "",
        "130": "                if ( listLevel != null && listLevel.getGrpprlPapx() != null )",
        "132": "                    properties = ParagraphSprmUncompressor.uncompressPAP(",
        "133": "                            properties, listLevel.getGrpprlPapx(), 0 );",
        "23": "import org.apache.poi.hwpf.model.LFO;",
        "24": "import org.apache.poi.hwpf.model.ListLevel;",
        "126": "            {",
        "127": "                final ListLevel listLevel = listTables.getLevel( lfo.getLsid(),"
      },
      "id": 97384407,
      "filename": "Paragraph.java"
    },
    {
      "repo": "http://t4-wiki-parser.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 790,
      "location": "/src/ys/wikiparser",
      "name": "t4-wiki-parser",
      "url": "https://searchcode.com/codesearch/view/13888060/",
      "md5hash": "96b64316d935f7bc41fb7e9061a23cad",
      "lines": {
        "179": "          sb.append(LIST_CLOSE[LIST_CHARS.indexOf(listLevels[listLevel--])]);",
        "390": "    int end=parseItem(start, null, ContextType.LIST_ITEM);",
        "391": "    if ((listLevels[listLevel]=='>' || listLevels[listLevel]==':') && wikiText.substring(start, end).trim().length()==0) { // empty line within blockquote/div",
        "171": "",
        "172": "    if (listLevel>=0 || LIST_CHARS.indexOf(c)>=0) { // lists",
        "174": "      // count list level",
        "175": "      for (lc=0; lc<=listLevel && pos+lc<wikiLength && wikiChars[pos+lc]==listLevels[lc]; lc++) ;",
        "176": "",
        "177": "      if (lc<=listLevel) { // end list block(s)",
        "178": "        do {",
        "51": "  private int pos=0;",
        "52": "  private int listLevel=-1;",
        "53": "  private static final int MAX_LIST_LEVELS=100;",
        "54": "  private char listLevels[]=new char[MAX_LIST_LEVELS+1]; // max number of levels allowed",
        "180": "        } while (lc<=listLevel);"
      },
      "id": 13888060,
      "filename": "WikiParser.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 216,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384153/",
      "md5hash": "f04e9799c9a8555d3618ad5c62633ad4",
      "lines": {
        "100": "      tableStream.write(lst.toByteArray());",
        "101": "      ListLevel[] lvls = lst.getLevels();",
        "73": "            {",
        "74": "                ListLevel lvl = new ListLevel();",
        "139": "  public ListLevel getLevel(int lsid, int level)",
        "138": "",
        "142": "    if(level < lst.numLevels()) {",
        "143": "    \tListLevel lvl = lst.getLevels()[level];"
      },
      "id": 97384153,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://github.com/xuyazhou18/MarkdownView.git",
      "language": "Java",
      "linescount": 851,
      "location": "/MarkdownView/src/com/petebevin/markdown",
      "name": "MarkdownView",
      "url": "https://searchcode.com/codesearch/view/98614922/",
      "md5hash": "6cf9ea046e37a58fa86840c0f687beab",
      "lines": {
        "65": "    public MarkdownProcessor() {",
        "66": "        listLevel = 0;",
        "59": "    private int listLevel;",
        "453": "",
        "454": "        if (listLevel > 0) {",
        "519": "    private String processListItems(String list) {",
        "520": "        // The listLevel variable keeps track of when we're inside a list.",
        "564": "        });",
        "565": "        listLevel--;",
        "58": "    private static final CharacterProtector CHAR_PROTECTOR = new CharacterProtector();",
        "539": "        // starting cardinal number; e.g. \"1.\" or \"a.\".",
        "540": "        listLevel++;"
      },
      "id": 98614922,
      "filename": "MarkdownProcessor.java"
    },
    {
      "repo": "https://github.com/myabc/markdownj.git",
      "language": "Java",
      "linescount": 899,
      "location": "/core/src/main/java/org/markdownj",
      "name": "markdownj",
      "url": "https://searchcode.com/codesearch/view/103837125/",
      "md5hash": "83b910228d5694ddd1cf27fe7511cc8d",
      "lines": {
        "576": "        listLevel--;",
        "65": "    public MarkdownProcessor() {",
        "66": "        listLevel = 0;",
        "550": "        // starting cardinal number; e.g. \"1.\" or \"a.\".",
        "551": "        listLevel++;",
        "457": "",
        "458": "        if (listLevel > 0) {",
        "530": "    private String processListItems(String list) {",
        "531": "        // The listLevel variable keeps track of when we're inside a list.",
        "58": "    private static final CharacterProtector CHAR_PROTECTOR = new CharacterProtector();",
        "59": "    private int listLevel;",
        "575": "        });"
      },
      "id": 103837125,
      "filename": "MarkdownProcessor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/xdocreport.git",
      "language": "Java",
      "linescount": 341,
      "location": "/thirdparties-extension/org.odftoolkit.odfdom.converter.pdf/src/main/java/org/odftoolkit/odfdom/converter/pdf/internal/stylable",
      "name": "xdocreport",
      "url": "https://searchcode.com/codesearch/view/96673904/",
      "md5hash": "67921cae5c768de100a5a97184a58be2",
      "lines": {
        "64": "        this.listLevel = listLevel;",
        "54": "",
        "55": "    private int listLevel;",
        "216": "        {",
        "217": "            StyleListProperties listProperties = getListProperties( listPropertiesMap, listLevel );",
        "60": "",
        "61": "    public StylableList( StylableDocument ownerDocument, IStylableContainer parent, int listLevel )",
        "63": "        this.parent = parent;"
      },
      "id": 96673904,
      "filename": "StylableList.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 412,
      "location": "/src/main/java/org/docx4j/model/listnumbering",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17641733/",
      "md5hash": "d3f1cbff1587fdd8061505a6d2a3104b",
      "lines": {
        "259": "    {",
        "260": "        ListLevel controllingLvl = this.levels.get( level ); ",
        "342": "                    ListLevel lvl = this.levels.get( Integer.toString(levelId) );",
        "208": "",
        "209": "\tprivate HashMap<String, ListLevel> levels;",
        "210": "\tpublic ListLevel getLevel(String ilvl) {",
        "211": "\t\treturn levels.get(ilvl);",
        "149": "",
        "150": "            this.levels = new HashMap<String, ListLevel>(this.abstractListDefinition.getLevelCount() );",
        "152": "            // initialize the levels to the same as the template (\"abstract\") list level",
        "153": "    \t\tIterator listLevelIterator = this.abstractListDefinition.getListLevels().entrySet().iterator();",
        "154": "    \t    while (listLevelIterator.hasNext()) {",
        "155": "    \t        Map.Entry pairs = (Map.Entry)listLevelIterator.next();",
        "156": "    \t        this.levels.put( (String)pairs.getKey(), new ListLevel( (ListLevel)pairs.getValue() ) );        \t        ",
        "341": "                    int levelId =  Integer.parseInt(formatStringLevel) - 1;"
      },
      "id": 17641733,
      "filename": "ListNumberingDefinition.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 183,
      "location": "/targets/itext/1.4.8/com/lowagie/text/rtf/list",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313986/",
      "md5hash": "a7fdbe6a7124675c547f40821ad87c4d",
      "lines": {
        "145": "                ((RtfList) rtfElement).setListNumber(listNumber);",
        "146": "                ((RtfList) rtfElement).setListLevel(listLevel);",
        "138": "     * @param listNumber The list number to inherit.",
        "139": "     * @param listLevel The list level to inherit.",
        "140": "     */",
        "141": "    public void inheritListSettings(int listNumber, int listLevel) {"
      },
      "id": 120313986,
      "filename": "RtfListItem.java"
    },
    {
      "repo": "https://github.com/berlinbrown/openbotlist.git",
      "language": "Java",
      "linescount": 423,
      "location": "/botlist/src/org/spirit/util/markdown",
      "name": "openbotlist",
      "url": "https://searchcode.com/codesearch/view/139252667/",
      "md5hash": "26846ae36cdc6fdc6085c5e8270653e9",
      "lines": {
        "259": "",
        "260": "\t\t// The listLevel variable keeps track of when we're inside a list.",
        "265": "\t\t// treated as the start of a sub-list. ",
        "266": "\t\tlistLevel++;",
        "16": "",
        "17": "\tprivate int listLevel;",
        "291": "\t\t});",
        "245": "\t\tString anchor;",
        "246": "\t\tif (listLevel == 0) {",
        "23": "\tpublic BotListMarkUtil() {",
        "24": "\t\tlistLevel = 0;",
        "292": "\t\tlistLevel--;"
      },
      "id": 139252667,
      "filename": "BotListMarkUtil.java"
    },
    {
      "repo": "https://github.com/berlinbrown/openbotlist.git",
      "language": "Java",
      "linescount": 419,
      "location": "/botlist/src/org/spirit/util/markdown/doc",
      "name": "openbotlist",
      "url": "https://searchcode.com/codesearch/view/139252669/",
      "md5hash": "a689e550b8d10721cea17dab2fc42052",
      "lines": {
        "256": "\t\t// The listLevel variable keeps track of when we're inside a list.",
        "288": "\t\tlistLevel--;",
        "261": "\t\t// treated as the start of a sub-list. ",
        "262": "\t\tlistLevel++;",
        "287": "\t\t});",
        "241": "\t\tString anchor;",
        "242": "\t\tif (listLevel == 0) {",
        "19": "",
        "20": "\tprivate int listLevel;",
        "26": "\tpublic BotListDocWriteUtil() {",
        "27": "\t\tlistLevel = 0;",
        "255": ""
      },
      "id": 139252669,
      "filename": "BotListDocWriteUtil.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 25,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "Gitorious",
      "id": 10
    }
  ]
}