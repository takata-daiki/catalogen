{
  "matchterm": "Rank",
  "previouspage": null,
  "searchterm": "Rank",
  "query": "Rank",
  "language_filters": [
    {
      "count": 6500,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 6500,
  "results": [
    {
      "repo": "https://github.com/davidminor/java-playing-cards.git",
      "language": "Java",
      "linescount": 120,
      "location": "/src/main/java/minor/cards",
      "name": "java-playing-cards",
      "url": "https://searchcode.com/codesearch/view/108635610/",
      "md5hash": "851f78555723062a1a0cbaeab569f1bb",
      "lines": {
        "48": "  public static final Rank TEN = new Rank(TEN_VALUE);",
        "38": "",
        "39": "  public static final Rank ACE = new Rank(ACE_VALUE);",
        "40": "  public static final Rank TWO = new Rank(TWO_VALUE);",
        "41": "  public static final Rank THREE = new Rank(THREE_VALUE);",
        "42": "  public static final Rank FOUR = new Rank(FOUR_VALUE);",
        "43": "  public static final Rank FIVE = new Rank(FIVE_VALUE);",
        "44": "  public static final Rank SIX = new Rank(SIX_VALUE);",
        "45": "  public static final Rank SEVEN = new Rank(SEVEN_VALUE);",
        "46": "  public static final Rank EIGHT = new Rank(EIGHT_VALUE);",
        "15": "",
        "16": "File: Rank.java - card rank",
        "49": "  public static final Rank JACK = new Rank(JACK_VALUE);",
        "50": "  public static final Rank QUEEN = new Rank(QUEEN_VALUE);",
        "47": "  public static final Rank NINE = new Rank(NINE_VALUE);"
      },
      "id": 108635610,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/psksvp/itec802.git",
      "language": "Java",
      "linescount": 79,
      "location": "/psksvp/CardGameEngine",
      "name": "itec802",
      "url": "https://searchcode.com/codesearch/view/40280484/",
      "md5hash": "8941081af221841906b93ccd6089359d",
      "lines": {
        "64": "\t\tranks.add(Rank.Two);",
        "65": "\t\tranks.add(Rank.Three);",
        "27": "\t//Rank and its default numeric values",
        "44": "    ",
        "45": "    Rank(int n)",
        "16": "/**",
        "17": " * This enum contains type of Rank for standard 52 cards per deck describe in ",
        "24": " */",
        "25": "public enum Rank ",
        "26": "{",
        "59": "    ",
        "60": "\tpublic static ArrayList<Rank> allRanks()",
        "61": "\t{",
        "62": "\t\tArrayList<Rank> ranks = new ArrayList<Rank>();",
        "63": "\t\tranks.add(Rank.Ace);"
      },
      "id": 40280484,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/technopunk2099/metasploit-framework.git",
      "language": "Java",
      "linescount": 63,
      "location": "/external/source/gui/msfguijava/src/msfgui",
      "name": "metasploit-framework",
      "url": "https://searchcode.com/codesearch/view/49781274/",
      "md5hash": "f5dfd6f7ef1e0d6b5aea83445a9affd9",
      "lines": {
        "4": " *",
        "5": " * Represents a module rank. Immutable, like an integer.",
        "7": " */",
        "8": "public final class Rank {",
        "9": "\t//ManualRanking       = 0",
        "10": "\t//LowRanking          = 100",
        "11": "\t//AverageRanking      = 200",
        "12": "\t//NormalRanking       = 300",
        "13": "\t//GoodRanking         = 400",
        "14": "\t//GreatRanking        = 500",
        "15": "\t//ExcellentRanking    = 600",
        "16": "\tprivate final int rank;",
        "17": "",
        "18": "\t//Creates from object, hopefully string or integer",
        "19": "\tpublic Rank(Object rank){",
        "20": "\t\tthis(rank instanceof Integer ?"
      },
      "id": 49781274,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/schans/jackrabbit.git",
      "language": "Java",
      "linescount": 276,
      "location": "/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/commons/flat",
      "name": "jackrabbit",
      "url": "https://searchcode.com/codesearch/view/114223963/",
      "md5hash": "25dd207d0f4a7c9d2604f1baaa5cba57",
      "lines": {
        "32": " * {@link Comparator} for <code>T</code>. After creating an instance of",
        "33": " * <code>Rank</code>, the {@link #take(int)} method returns the next",
        "44": " *",
        "45": " * @param <T> Type of values in this <code>Rank</code>.",
        "46": " */",
        "47": "public class Rank<T> {",
        "52": "    /**",
        "53": "     * Create a new instance of <code>Rank</code> for a given array of",
        "56": "     *",
        "57": "     * @param values values for ranking. Duplicates are <em>not allowed</em>.",
        "58": "     * @param order Ordering for ranking",
        "59": "     */",
        "60": "    public Rank(T[] values, Comparator<? super T> order) {",
        "30": " * <p>",
        "31": " * This class does efficient ranking of values of type <code>T</code> wrt. to a"
      },
      "id": 114223963,
      "filename": "Rank.java"
    },
    {
      "repo": "http://gbif-ecat.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 471,
      "location": "/ecat-common/src/main/java/org/gbif/ecat/voc",
      "name": "gbif-ecat",
      "url": "https://searchcode.com/codesearch/view/3886646/",
      "md5hash": "c06ff63323408e443e7c26cda0bcca9a",
      "lines": {
        "34": "  private static final int ID_BASE = 0; // reserved upto 999",
        "35": "  public static final Rank[] KINGDOM_TO_SUBGENUS =",
        "36": "    new Rank[] {Rank.KINGDOM, Rank.PHYLUM, Rank.CLASS, Rank.ORDER, Rank.FAMILY, Rank.GENUS, Rank.SUBGENUS};",
        "15": "",
        "16": "public enum Rank implements KnownTerm {",
        "20": "    null), Superfamily(300, \"superfam.\"), FAMILY(325, \"fam.\"), Subfamily(350, \"subfam.\"), Tribe(375, \"trib.\"), Subtribe(",
        "21": "    400, \"subtrib.\"), SupragenericName(410, \"supergen.\"), // used for any other unspecific rank above genera",
        "23": "    \"ser.\"), Subseries(550, \"subser.\"), InfragenericName(575,",
        "24": "    \"infragen.\"), // used for any other unspecific rank below genera and above",
        "25": "  // species",
        "26": "  SPECIES(600, \"sp.\"), InfraspecificName(625, \"agg.\"), // used for any other unspecific rank below species",
        "27": "  SUBSPECIES(650, \"subsp.\"), InfrasubspecificName(675, \"infrasubsp.\"), // used also for any other unspecific rank below",
        "28": "  // subspecies",
        "29": "  VARIETY(700, \"var.\"), Subvariety(725, \"subvar.\"), Form(750, \"f.\"), Subform(775, \"subf.\"), CultivarGroup(800,",
        "30": "    null), Cultivar(825, \"cv.\"), Strain(835, \"strain\"), Informal(850, null), Unranked(875, null);"
      },
      "id": 3886646,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/wrambro/Blackjack.git",
      "language": "Java",
      "linescount": 23,
      "location": "/tma/deck/card",
      "name": "Blackjack",
      "url": "https://searchcode.com/codesearch/view/113745518/",
      "md5hash": "80f47acc6edef1eb4961a90fab7ee3ce",
      "lines": {
        "3": "/**",
        "4": " * Rank class is an enum for all card ranks. The only other method",
        "5": " * is convert(), which returns the Rank with the passed-in enum value.",
        "6": " * ",
        "9": " */",
        "10": "public enum Rank {",
        "14": "\t/**",
        "15": "\t * Returns a Rank value based on it's enum value",
        "16": "\t * @param rank enum value of Rank",
        "17": "\t * @return Rank value",
        "18": "\t */",
        "19": "\tpublic static Rank convert(int rank) {",
        "20": "\t\treturn Rank.class.getEnumConstants()[rank];",
        "21": "\t}"
      },
      "id": 113745518,
      "filename": "Rank.java"
    },
    {
      "repo": "http://jgogears.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 191,
      "location": "/jgogears/jgogears",
      "name": "jgogears",
      "url": "https://searchcode.com/codesearch/view/12041790/",
      "md5hash": "e9260128cccd905f435df6fa0760cb3c",
      "lines": {
        "4": "/**",
        "5": " * Class representing dan / kyu ranks. 30kyu to 1kyu and 1dan to 20dan. Classes are represented internally as a double.",
        "6": " * Rank parsing and formatting are only supported for whole numbers.",
        "7": " * ",
        "10": "",
        "11": "public final class Rank {",
        "13": "\t/** The Constant SHODAN. */",
        "14": "\tpublic final static Rank SHODAN = new Rank(\"1d\");",
        "16": "\t/** The Constant BEGINNER. */",
        "17": "\tpublic final static Rank BEGINNER = new Rank(\"25k\");",
        "19": "\t/** The Constant ME. */",
        "20": "\tpublic final static Rank ME = new Rank(\"12k\");",
        "24": "",
        "25": "\t/** The Constant MAX_RANK. */",
        "26": "\tfinal static double MAX_RANK = 80;"
      },
      "id": 12041790,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/zmeda/iu.git",
      "language": "Java",
      "linescount": 60,
      "location": "/client/src/iu/android/explore",
      "name": "iu",
      "url": "https://searchcode.com/codesearch/view/48618057/",
      "md5hash": "5fa4e0562881d110a5f7a6c5edb5c692",
      "lines": {
        "7": "",
        "8": "public enum Rank",
        "10": "",
        "11": "\tPVT (500/* 1500 */, R.drawable.rank_1, \"Private\", 4, 2, 1), CPL (1500/* 5000 */, R.drawable.rank_2,",
        "12": "\t\t\t\"Corporal\", 6, 3, 1), SGT (25000, R.drawable.rank_3, \"Sergeant\", 8, 4, 2), LT (70000,",
        "13": "\t\t\tR.drawable.rank_4, \"Liutenant\", 10, 5, 3), CPT (200000, R.drawable.rank_5, \"Captain\", 10, 6, 4), MAJ (",
        "14": "\t\t\t800000, R.drawable.rank_6, \"Major\", 10, 7, 5),",
        "15": "\t// TODO proper values",
        "16": "\tCOL (3000000, R.drawable.rank_7, \"Colonel\", 10, 8, 5), CMD (10000000, R.drawable.rank_8, \"Commander\", 10,",
        "17": "\t\t\t8, 5), LTG (25000000, R.drawable.rank_9, \"Liutenant General\", 10, 8, 5), GEN (50000000,",
        "18": "\t\t\tR.drawable.rank_10, \"General\", 10, 8, 5), MAR (100000000, R.drawable.rank_11, \"Marshall\", 10, 8, 5), FLM (",
        "19": "\t\t\tInteger.MAX_VALUE, R.drawable.rank_12, \"Field Marshall\", 10, 8, 5);",
        "20": "",
        "29": "",
        "30": "\tprivate Rank (int experience, int insignia_id, String longName, int maxHover, int maxTank, int maxArtillery)"
      },
      "id": 48618057,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/mhotan/cse454_mdj.git",
      "language": "Java",
      "linescount": 52,
      "location": "/DistantSupervisionSlotFiller/src/trainingDataGenerator",
      "name": "cse454_mdj",
      "url": "https://searchcode.com/codesearch/view/49457074/",
      "md5hash": "31d0ebf002e886a29c0acbed7d46b004",
      "lines": {
        "35": "\t",
        "36": "\tpublic static class PrecisionComparator implements Comparator<Rank>{",
        "5": "public class Rank {",
        "38": "\t\t@Override",
        "39": "\t\tpublic int compare(Rank o1, Rank o2) {",
        "44": "\tpublic static class RecallComparator implements Comparator<Rank>{",
        "43": "\t",
        "12": "\t",
        "13": "\tpublic Rank(String name, double prec, double recall, double fmeasure){",
        "46": "\t\t@Override",
        "47": "\t\tpublic int compare(Rank o1, Rank o2) {",
        "4": "",
        "27": "\t",
        "28": "\tpublic static class FMeasureComparator implements Comparator<Rank>{",
        "30": "\t\t@Override",
        "31": "\t\tpublic int compare(Rank o1, Rank o2) {"
      },
      "id": 49457074,
      "filename": "Rank.java"
    },
    {
      "repo": "http://ala-bie.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 202,
      "location": "/bie-profile/src/main/java/org/ala/model",
      "name": "ala-bie",
      "url": "https://searchcode.com/codesearch/view/12574619/",
      "md5hash": "62a4513729cc61563fb4086f0791db1e",
      "lines": {
        "32": "public enum Rank {",
        "64": "    CL          (3000, \"class\", \"cl\"),",
        "65": "    // non standard rank values encountered while indexing...",
        "47": "    FORM        (8020, \"form\", \"forma\", \"f\", \"f.\",\"fm.\", \"fm\", \"[f.]\", \"form taxon\"),",
        "48": "    TAXSUPRAGEN (5999, \"suprageneric tax. of undefined rank\", \"taxsupragen\"),",
        "49": "    SUPERFAM    (4500, \"superfamily\", \"superfam\"),",
        "50": "    NUL         (9999, \"(rank not specified)\",\"null\"),  // NULL is reserved word",
        "23": "/**",
        "24": " * Enum to store values of taxon rank extracted from namesIndex.txt dump",
        "25": " *",
        "26": " * Rank value definitions taken from",
        "27": " * @link{ http://www.diversitycampus.net/Projects/TDWG-SDD/Minutes/2004NZ_schema/UBIF-Docu-Enumerations.html#TaxonomicRankEnum }",
        "28": " * Ids taken from GBIF TaxonRank.java enum class",
        "29": " *",
        "31": " */"
      },
      "id": 12574619,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/stkoev81/BlackJackSimulator2.git",
      "language": "Java",
      "linescount": 23,
      "location": "/src/com/skoev/blackjack2/model/game",
      "name": "BlackJackSimulator2",
      "url": "https://searchcode.com/codesearch/view/71121100/",
      "md5hash": "815fa5b7ab7de75acc773f98bd391d50",
      "lines": {
        "16": "\t * Returns the points value of this rank. All the ranks except Ace have well defined values. Returns null for an ace since its value is ",
        "6": "/**",
        "7": " * Rank of a card.  ",
        "8": " */",
        "9": "public enum Rank implements ValueObject{",
        "11": "\tprivate final Integer value;",
        "12": "\tRank(Integer value){",
        "15": "\t/**"
      },
      "id": 71121100,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 61,
      "location": "/src-plugins/jep/org/lsmp/djep/jama",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113852032/",
      "md5hash": "028a9a74d2c4636e5ad967f48b00da7a",
      "lines": {
        "37": "\t\tJama.Matrix m = JamaUtil.toJama((Matrix) o);",
        "38": "\t\tint rank = m.rank();",
        "39": "\t\ts.push(new Integer(rank));",
        "40": "\t}",
        "55": "\t\tint rank = m.rank();",
        "16": "/**",
        "17": " * Find the rank of a matrix.",
        "56": "\t\tres.setEle(0,new Integer(rank));",
        "57": "\t\treturn res;",
        "54": "\t\tJama.Matrix m = JamaUtil.toJama((Matrix) lhs);",
        "23": " */",
        "24": "public class Rank extends PostfixMathCommand implements UnaryOperatorI ",
        "25": "{",
        "26": "\tpublic Rank()"
      },
      "id": 113852032,
      "filename": "Rank.java"
    },
    {
      "repo": "http://pokerenprolog.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 58,
      "location": "/pokerenprolog/src/poker",
      "name": "pokerenprolog",
      "url": "https://searchcode.com/codesearch/view/12043950/",
      "md5hash": "6029485d4eefb8c8da5a7eddbc63afa3",
      "lines": {
        "51": "        else if(s.compareTo(\"10\")==0) return Rank.R10;",
        "50": "        else if(s.compareTo(\"9\")==0) return Rank.R9;",
        "49": "        else if(s.compareTo(\"8\")==0) return Rank.R8;",
        "40": "",
        "41": "    static public Rank stringToRank(String s)",
        "42": "    {",
        "43": "        if(s.compareTo(\"2\")==0) return Rank.R2;",
        "44": "        else if(s.compareTo(\"3\")==0) return Rank.R3;",
        "45": "        else if(s.compareTo(\"4\")==0) return Rank.R4;",
        "47": "        else if(s.compareTo(\"6\")==0) return Rank.R6;",
        "48": "        else if(s.compareTo(\"7\")==0) return Rank.R7;",
        "17": "",
        "18": "class PRank",
        "19": "{",
        "52": "        else if(s.compareTo(\"jack\")==0) return Rank.JACK;"
      },
      "id": 12043950,
      "filename": "Rank.java"
    },
    {
      "repo": "http://ossbuild.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 74,
      "location": "/Main/OSSBuild/Java/Libraries/media-gstreamer-bindings/src/ossbuild/media/gstreamer",
      "name": "ossbuild",
      "url": "https://searchcode.com/codesearch/view/11971049/",
      "md5hash": "5c24fb6fcfbe5a11b69ead808ee814c0",
      "lines": {
        "7": " */",
        "8": "public enum Rank {",
        "41": "\t//<editor-fold defaultstate=\"collapsed\" desc=\"Public Static Methods\">",
        "42": "\tpublic static boolean atLeastNone(int rank) {",
        "43": "\t\treturn rank <= None.nativeValue;",
        "44": "\t}",
        "45": "",
        "46": "\tpublic static boolean atLeastMarginal(int rank) {",
        "47": "\t\treturn rank >= Marginal.nativeValue;",
        "48": "\t}",
        "49": "",
        "50": "\tpublic static boolean atLeastSecondary(int rank) {",
        "51": "\t\treturn rank >= Secondary.nativeValue;",
        "21": "\t//<editor-fold defaultstate=\"collapsed\" desc=\"Initialization\">",
        "22": "\tRank(int nativeValue) {"
      },
      "id": 11971049,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/jparkton/carddeck.git",
      "language": "Java",
      "linescount": 28,
      "location": "/src/com/clinkworks/carddeck/datatypes",
      "name": "carddeck",
      "url": "https://searchcode.com/codesearch/view/36789796/",
      "md5hash": "840a0adeac8d4a8046bbd796fcde8931",
      "lines": {
        "3": "public enum Rank {",
        "2": "",
        "19": "\tpublic static Rank[] getRanksWithoutJokers(){",
        "20": "\t\tRank[] ranks = Rank.values();",
        "21": "\t\tRank[] ranksWithoutJokers = new Rank[Rank.values().length - 1];",
        "22": "\t\tfor(int i = 0; i < ranksWithoutJokers.length; i++){",
        "23": "\t\t\tranksWithoutJokers[i] = ranks[i];",
        "24": "\t\t}",
        "25": "\t\treturn ranksWithoutJokers;",
        "18": "\t"
      },
      "id": 36789796,
      "filename": "Rank.java"
    },
    {
      "repo": "http://cspoker.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 96,
      "location": "/common/common/src/main/java/org/cspoker/common/elements/cards",
      "name": "cspoker",
      "url": "https://searchcode.com/codesearch/view/3123343/",
      "md5hash": "d67b6d6227441aff07b6a571f2cbb01e",
      "lines": {
        "36": "",
        "37": "\tprivate Rank(final String longDescription, final String shortDescription) {",
        "87": "\tpublic static Rank getRank(String value) {",
        "89": "\t\t\tif (rank.toString().equalsIgnoreCase(value)) {",
        "78": "\t/**",
        "79": "\t * Returns the numeral value of this rank.",
        "80": "\t * ",
        "81": "\t * @return The numeral value of this rank.",
        "21": "/**",
        "22": " * An enumeration to represent the different ranks a card can have.",
        "55": "\t/**",
        "56": "\t * Returns a textual representation of this rank",
        "88": "\t\tfor (Rank rank : Rank.values()) {",
        "90": "\t\t\t\treturn rank;",
        "86": ""
      },
      "id": 3123343,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/Gearworks/gearworks_core.git",
      "language": "Java",
      "linescount": 64,
      "location": "/src/gearworks/core/common",
      "name": "gearworks_core",
      "url": "https://searchcode.com/codesearch/view/93494603/",
      "md5hash": "95b8389dd5be3457a08ac679bf924b61",
      "lines": {
        "32": "     */",
        "33": "    public static boolean has (Rank playerRank, Rank requiredRank){",
        "34": "        if (playerRank.getPriority () <= requiredRank.getPriority ()){",
        "35": "            return true;",
        "4": "",
        "5": "public enum Rank {",
        "40": "",
        "41": "    public static Rank getRankByName (final String rankName){",
        "42": "        for (final Rank rank : Rank.values ()){",
        "43": "            if (rank.getRankName ().toLowerCase ().equals (rankName.toLowerCase ())){",
        "44": "                return rank;",
        "45": "            }",
        "20": "",
        "21": "    private Rank (int priority, String name, ChatColor color){",
        "54": "",
        "55": "    public String getRankName (){"
      },
      "id": 93494603,
      "filename": "Rank.java"
    },
    {
      "repo": "https://github.com/fvermeulen/BackgroundActualizationFormelOne.git",
      "language": "Java",
      "linescount": 62,
      "location": "/app/src/main/java/de/vermeulen/backgroundactualization/app/Model",
      "name": "BackgroundActualizationFormelOne",
      "url": "https://searchcode.com/codesearch/view/94494153/",
      "md5hash": "0076294119cf74f50db058ece28d03c0",
      "lines": {
        "32": "\tpublic void setRank(int rank) {",
        "33": "\t\tthis.rank = rank;",
        "34": "\t}",
        "5": " */",
        "6": "public class Rank {",
        "8": "\tprivate String name;",
        "9": "\tprivate int rank;",
        "12": "",
        "13": "\tpublic Rank(String name, int rank, int wins, int points) {",
        "14": "\t\tthis.name = name;",
        "15": "\t\tthis.rank = rank;",
        "53": "\tpublic String toString() {",
        "54": "\t\treturn \"Rank{\" +",
        "55": "\t\t\t   \"name='\" + name + '\\'' +",
        "31": ""
      },
      "id": 94494153,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/examtool.git",
      "language": "Java",
      "linescount": 67,
      "location": "/pripTool/src/at.tuwien.prip.common/src/at/tuwien/prip/common/datastructures",
      "name": "examtool",
      "url": "https://searchcode.com/codesearch/view/44027057/",
      "md5hash": "4436e4f8de20af3f4db77e3f080dc505",
      "lines": {
        "32": "\t\tthis.elements = elements;",
        "33": "\t\tranKAscending();",
        "49": "\t",
        "7": "/**",
        "8": " * Rank.java",
        "57": "\t\tCollections.reverse(elements);",
        "16": " */",
        "17": "public class Rank<T extends Comparable<T>> {",
        "50": "\tpublic void ranKAscending () {",
        "21": "\t",
        "22": "\tpublic Rank() {",
        "55": "\tpublic void rankDescending () {",
        "56": "\t\tranKAscending();",
        "25": "\t",
        "26": "\tpublic Rank(T element) {",
        "54": "\t"
      },
      "id": 44027057,
      "filename": "Rank.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/tableannotator.git",
      "language": "Java",
      "linescount": 77,
      "location": "/plugins/at.tuwien.prip.common/src/at/tuwien/prip/common/datastructures",
      "name": "tableannotator",
      "url": "https://searchcode.com/codesearch/view/50149889/",
      "md5hash": "af8589d6821d7651ffe887b03d93b467",
      "lines": {
        "32": "\tpublic Rank() {",
        "64": "\t",
        "66": "\t\tranKAscending();",
        "35": "\t",
        "36": "\tpublic Rank(T element) {",
        "65": "\tpublic void rankDescending () {",
        "40": "\t",
        "41": "\tpublic Rank(Vector<T> elements) {",
        "42": "\t\tthis.elements = elements;",
        "43": "\t\tranKAscending();",
        "17": "/**",
        "18": " * Rank.java",
        "67": "\t\tCollections.reverse(elements);",
        "26": " */",
        "27": "public class Rank<T extends Comparable<T>> {",
        "31": "\t"
      },
      "id": 50149889,
      "filename": "Rank.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2921,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 2428,
      "source": "Github",
      "id": 2
    },
    {
      "count": 987,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 77,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 52,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 21,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 7,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 4,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 3,
      "source": "Unknown",
      "id": 0
    }
  ]
}