{
  "matchterm": "org.apache.poi.hpsf.Filetime",
  "previouspage": null,
  "searchterm": "org.apache.poi.hpsf.Filetime",
  "query": "org.apache.poi.hpsf.Filetime",
  "language_filters": [
    {
      "count": 12,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 12,
  "results": [
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 540,
      "location": "/src/org/apache/poi/hpsf",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97383361/",
      "md5hash": "89a9616b84e878dcdfd285ef7159c220",
      "lines": {
        "1": "/* ====================================================================",
        "2": "   Licensed to the Apache Software Foundation (ASF) under one or more",
        "4": "   this work for additional information regarding copyright ownership.",
        "5": "   The ASF licenses this file to You under the Apache License, Version 2.0",
        "8": "",
        "9": "       http://www.apache.org/licenses/LICENSE-2.0",
        "50": "{",
        "17": "",
        "18": "package org.apache.poi.hpsf;",
        "51": "\tprivate static POILogger logger = POILogFactory.getLogger(VariantSupport.class);",
        "151": "     * @exception ReadingNotSupportedException if a property is to be written",
        "152": "     *            who's variant type HPSF does not yet support",
        "26": "",
        "27": "import org.apache.poi.util.POILogFactory;",
        "28": "import org.apache.poi.util.POILogger;",
        "29": ""
      },
      "id": 97383361,
      "filename": "VariantSupport.java"
    },
    {
      "repo": "https://github.com/PankajSinghChauhan/jna.git",
      "language": "Java",
      "linescount": 907,
      "location": "/contrib/platform/src/com/sun/jna/platform/win32",
      "name": "jna",
      "url": "https://searchcode.com/codesearch/view/95860765/",
      "md5hash": "df8e9e9c09740d940a4049af621afe5c",
      "lines": {
        "35": "    HANDLE INVALID_HANDLE_VALUE =",
        "36": "        new HANDLE(Pointer.createConstant(Pointer.SIZE == 8",
        "165": "    /**",
        "166": "     * The FILETIME structure is a 64-bit value representing the number of ",
        "167": "     * 100-nanosecond intervals since January 1, 1601 (UTC).",
        "168": "     * Conversion code in this class Copyright 2002-2004 Apache Software Foundation.",
        "169": "     * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "170": "     */",
        "157": "    int INVALID_SET_FILE_POINTER    = 0xFFFFFFFF;",
        "19": "import com.sun.jna.Platform;",
        "20": "import com.sun.jna.Pointer;",
        "196": "",
        "156": "    int INVALID_FILE_SIZE           = 0xFFFFFFFF;",
        "29": " * Microsoft Windows SDK 6.0A.",
        "30": " * @author dblock[at]dblock.org",
        "197": "        public FILETIME(Pointer memory) {"
      },
      "id": 95860765,
      "filename": "WinBase.java"
    },
    {
      "repo": "https://bitbucket.org/abg1979/java-process-management",
      "language": "Java",
      "linescount": 760,
      "location": "/platform/src/main/java/com/sun/jna/platform/win32",
      "name": "java-process-management",
      "url": "https://searchcode.com/codesearch/view/118894791/",
      "md5hash": "f1496a584f5784077cf1c5af9625426c",
      "lines": {
        "32": " * @author dblock[at]dblock.org",
        "163": "\tpublic static final int INVALID_FILE_SIZE           = 0xFFFFFFFF;",
        "36": "    /** Constant value representing an invalid HANDLE. */",
        "37": "    public static HANDLE INVALID_HANDLE_VALUE = new HANDLE(Pointer.createConstant(",
        "38": "    \t\tPointer.SIZE == 8 ? -1 : 0xFFFFFFFFL));",
        "39": "",
        "177": "    * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "173": "\t/**",
        "174": "    * The FILETIME structure is a 64-bit value representing the number of ",
        "175": "    * 100-nanosecond intervals since January 1, 1601 (UTC).",
        "176": "    * Conversion code in this class Copyright 2002-2004 Apache Software Foundation.",
        "17": "import com.sun.jna.Platform;",
        "18": "import com.sun.jna.Pointer;",
        "178": "    */",
        "164": "\tpublic static final int INVALID_SET_FILE_POINTER    = 0xFFFFFFFF;",
        "31": " * Microsoft Windows SDK 6.0A."
      },
      "id": 118894791,
      "filename": "WinBase.java"
    },
    {
      "repo": "https://github.com/pke/clipboard.monitor.git",
      "language": "Java",
      "linescount": 389,
      "location": "/clipboard.monitor.target/com.sun.jna.win32/src/com/sun/jna/examples/win32",
      "name": "clipboard.monitor",
      "url": "https://searchcode.com/codesearch/view/107878911/",
      "md5hash": "4ce159b77620037debf0258513ed2b93",
      "lines": {
        "129": "\t\tpublic int nLength = size();",
        "130": "\t\tpublic Pointer lpSecurityDescriptor;",
        "41": "",
        "42": "\tPointer LocalFree(Pointer hLocal);",
        "43": "",
        "141": "\tHANDLE CreateIoCompletionPort(HANDLE FileHandle,",
        "142": "\t\t\tHANDLE ExistingCompletionPort, Pointer CompletionKey,",
        "18": "import com.sun.jna.Native;",
        "19": "import com.sun.jna.Pointer;",
        "148": "\t\t\tIntByReference lpNumberOfBytes, ByReference lpCompletionKey,",
        "149": "\t\t\tPointerByReference lpOverlapped, int dwMilliseconds);",
        "22": "import com.sun.jna.ptr.IntByReference;",
        "23": "import com.sun.jna.ptr.PointerByReference;",
        "152": "\t\t\tint dwNumberOfBytesTransferred, Pointer dwCompletionKey,",
        "151": "\tboolean PostQueuedCompletionStatus(HANDLE CompletionPort,"
      },
      "id": 107878911,
      "filename": "Kernel32.java"
    },
    {
      "repo": "https://github.com/pke/clipboard.monitor.git",
      "language": "Java",
      "linescount": 58,
      "location": "/clipboard.monitor.target/com.sun.jna.win32/src/com/sun/jna/examples/win32",
      "name": "clipboard.monitor",
      "url": "https://searchcode.com/codesearch/view/107878921/",
      "md5hash": "75d137c77f977660d8f908ac837ea00a",
      "lines": {
        "32": "\t * @return The Windows FILETIME as a {@link Date}.",
        "33": "\t */",
        "34": "\tpublic static Date filetimeToDate(final int high, final int low) {",
        "35": "\t\tfinal long filetime = (long) high << 32 | low & 0xffffffffL;",
        "6": " * ",
        "7": " * Parts of this class Copyright 2002-2004 Apache Software Foundation. ",
        "8": " * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "9": " */",
        "22": "\t/**",
        "23": "\t * <p>Converts a Windows FILETIME into a {@link Date}. The Windows",
        "24": "\t * FILETIME structure holds a date and time associated with a",
        "25": "\t * file. The structure identifies a 64-bit integer specifying the",
        "29": "\t *",
        "30": "\t * @param high The higher double word of the FILETIME structure.",
        "31": "\t * @param low The lower double word of the FILETIME structure."
      },
      "id": 107878921,
      "filename": "Utils.java"
    },
    {
      "repo": "https://github.com/pke/file.monitor.git",
      "language": "Java",
      "linescount": 472,
      "location": "/com.sun.jna.examples.win32/src/com/sun/jna/examples/win32",
      "name": "file.monitor",
      "url": "https://searchcode.com/codesearch/view/108248504/",
      "md5hash": "fc1592acc8d018876357151ce02e640e",
      "lines": {
        "130": "\t\tpublic int nLength = size();",
        "131": "\t\tpublic Pointer lpSecurityDescriptor;",
        "42": "",
        "43": "\tPointer LocalFree(Pointer hLocal);",
        "44": "",
        "142": "\tHANDLE CreateIoCompletionPort(HANDLE FileHandle,",
        "143": "\t\t\tHANDLE ExistingCompletionPort, Pointer CompletionKey,",
        "152": "\tboolean PostQueuedCompletionStatus(HANDLE CompletionPort,",
        "19": "import com.sun.jna.Native;",
        "20": "import com.sun.jna.Pointer;",
        "149": "\t\t\tIntByReference lpNumberOfBytes, ByReference lpCompletionKey,",
        "150": "\t\t\tPointerByReference lpOverlapped, int dwMilliseconds);",
        "23": "import com.sun.jna.ptr.IntByReference;",
        "24": "import com.sun.jna.ptr.PointerByReference;",
        "153": "\t\t\tint dwNumberOfBytesTransferred, Pointer dwCompletionKey,"
      },
      "id": 108248504,
      "filename": "Kernel32.java"
    },
    {
      "repo": "https://github.com/cpc26/jna.git",
      "language": "Java",
      "linescount": 858,
      "location": "/contrib/platform/src/com/sun/jna/platform/win32",
      "name": "jna",
      "url": "https://searchcode.com/codesearch/view/67045174/",
      "md5hash": "9b55fb4b9be6cef32e5cdcaaf96b48a2",
      "lines": {
        "32": " * @author dblock[at]dblock.org",
        "36": "    /** Constant value representing an invalid HANDLE. */",
        "37": "    public static HANDLE INVALID_HANDLE_VALUE = new HANDLE(Pointer.createConstant(",
        "38": "    \t\tPointer.SIZE == 8 ? -1 : 0xFFFFFFFFL));",
        "39": "",
        "200": "",
        "177": "    * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "173": "\t/**",
        "174": "    * The FILETIME structure is a 64-bit value representing the number of ",
        "175": "    * 100-nanosecond intervals since January 1, 1601 (UTC).",
        "176": "    * Conversion code in this class Copyright 2002-2004 Apache Software Foundation.",
        "17": "import com.sun.jna.Platform;",
        "18": "import com.sun.jna.Pointer;",
        "178": "    */",
        "201": "        public FILETIME(Pointer memory) {",
        "31": " * Microsoft Windows SDK 6.0A."
      },
      "id": 67045174,
      "filename": "WinBase.java"
    },
    {
      "repo": "git://github.com/twall/jna.git",
      "language": "Java",
      "linescount": 1889,
      "location": "/contrib/platform/src/com/sun/jna/platform/win32",
      "name": "jna",
      "url": "https://searchcode.com/codesearch/view/7074205/",
      "md5hash": "6949820bc497407d1691867d727e2fb5",
      "lines": {
        "33": " * Microsoft Windows SDK 6.0A.",
        "34": " * @author dblock[at]dblock.org",
        "219": "        public FILETIME(Pointer memory) {",
        "39": "    HANDLE INVALID_HANDLE_VALUE =",
        "40": "        new HANDLE(Pointer.createConstant(Pointer.SIZE == 8",
        "177": "    int INVALID_FILE_SIZE           = 0xFFFFFFFF;",
        "178": "    int INVALID_SET_FILE_POINTER    = 0xFFFFFFFF;",
        "22": "import com.sun.jna.Platform;",
        "23": "import com.sun.jna.Pointer;",
        "218": "",
        "186": "    /**",
        "187": "     * The FILETIME structure is a 64-bit value representing the number of",
        "188": "     * 100-nanosecond intervals since January 1, 1601 (UTC).",
        "189": "     * Conversion code in this class Copyright 2002-2004 Apache Software Foundation.",
        "190": "     * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "191": "     */"
      },
      "id": 7074205,
      "filename": "WinBase.java"
    },
    {
      "repo": "https://bitbucket.org/nm2501/holy-gradle-plugins",
      "language": "Java",
      "linescount": 857,
      "location": "/custom-gradle-core-plugin/src/main/java/holygradle/jna/platform/win32",
      "name": "holy-gradle-plugins",
      "url": "https://searchcode.com/codesearch/view/136224311/",
      "md5hash": "66b3e9e12f651592b083a0fde951a39a",
      "lines": {
        "32": " * Microsoft Windows SDK 6.0A.",
        "33": " * @author dblock[at]dblock.org",
        "196": "",
        "197": "        public FILETIME(Pointer memory) {",
        "38": "    HANDLE INVALID_HANDLE_VALUE =",
        "39": "        new HANDLE(Pointer.createConstant(Pointer.SIZE == 8",
        "169": "    /**",
        "170": "     * The FILETIME structure is a 64-bit value representing the number of ",
        "171": "     * 100-nanosecond intervals since January 1, 1601 (UTC).",
        "172": "     * Conversion code in this class Copyright 2002-2004 Apache Software Foundation.",
        "173": "     * @author Rainer Klute (klute@rainer-klute.de) for the Apache Software Foundation (org.apache.poi.hpsf)",
        "174": "     */",
        "175": "    public static class FILETIME extends Structure {",
        "17": "import com.sun.jna.Platform;",
        "18": "import com.sun.jna.Pointer;"
      },
      "id": 136224311,
      "filename": "WinBase.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 586,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642693/",
      "md5hash": "2f1e0d92eda67ca2dfa755dbe2828a3a",
      "lines": {
        "32": "       http://www.apache.org/licenses/LICENSE-2.0",
        "2": " * #%L",
        "3": " * Fork of Apache Jakarta POI.",
        "40": "",
        "9": " * %%",
        "10": " * Licensed under the Apache License, Version 2.0 (the \"License\");",
        "13": " * ",
        "14": " *      http://www.apache.org/licenses/LICENSE-2.0",
        "149": "     * @exception ReadingNotSupportedException if a property is to be written",
        "150": "     * who's variant type HPSF does not yet support",
        "41": "package loci.poi.hpsf;",
        "24": "/* ====================================================================",
        "25": "   Licensed to the Apache Software Foundation (ASF) under one or more",
        "27": "   this work for additional information regarding copyright ownership.",
        "28": "   The ASF licenses this file to You under the Apache License, Version 2.0",
        "31": ""
      },
      "id": 15642693,
      "filename": "VariantSupport.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 537,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642694/",
      "md5hash": "ce67381a4c6cdc5b144657195364dbc8",
      "lines": {
        "32": "       http://www.apache.org/licenses/LICENSE-2.0",
        "2": " * #%L",
        "3": " * Fork of Apache Jakarta POI.",
        "40": "        ",
        "9": " * %%",
        "10": " * Licensed under the Apache License, Version 2.0 (the \"License\");",
        "523": "     * variable, i.e. the length of a string, -1 is returned. If HPSF does not",
        "13": " * ",
        "14": " *      http://www.apache.org/licenses/LICENSE-2.0",
        "149": "    /**",
        "150": "     * <p>[V][T][S] 16 byte fixed point.</p>",
        "41": "package loci.poi.hpsf;",
        "24": "/* ====================================================================",
        "25": "   Licensed to the Apache Software Foundation (ASF) under one or more",
        "522": "     * @return The length of the variant type's data in bytes. If the length is",
        "31": ""
      },
      "id": 15642694,
      "filename": "Variant.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 382,
      "location": "/components/forks/poi/src/loci/poi/hpsf",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642685/",
      "md5hash": "a7a9827f6907d2df242303ec4952558b",
      "lines": {
        "32": "       http://www.apache.org/licenses/LICENSE-2.0",
        "2": " * #%L",
        "3": " * Fork of Apache Jakarta POI.",
        "164": "     * <p>Converts a Windows FILETIME into a {@link Date}. The Windows",
        "165": "     * FILETIME structure holds a date and time associated with a",
        "40": "        ",
        "9": " * %%",
        "10": " * Licensed under the Apache License, Version 2.0 (the \"License\");",
        "13": " * ",
        "14": " *      http://www.apache.org/licenses/LICENSE-2.0",
        "163": "    /**",
        "41": "package loci.poi.hpsf;",
        "24": "/* ====================================================================",
        "25": "   Licensed to the Apache Software Foundation (ASF) under one or more",
        "27": "   this work for additional information regarding copyright ownership.",
        "28": "   The ASF licenses this file to You under the Apache License, Version 2.0",
        "31": ""
      },
      "id": 15642685,
      "filename": "Util.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}