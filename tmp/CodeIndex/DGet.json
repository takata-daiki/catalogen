{
  "matchterm": "DGet",
  "previouspage": null,
  "searchterm": "DGet",
  "query": "DGet",
  "language_filters": [
    {
      "count": 25,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 25,
  "results": [
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 16,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398823/",
      "md5hash": "16f18dbcbf33c70a201bed1916cca6f3",
      "lines": {
        "8": "public class DGET extends SimpleDatabaseFunction",
        "7": ""
      },
      "id": 105398823,
      "filename": "DGET.java"
    },
    {
      "repo": "git://github.com/rzwitserloot/lombok.ast.git",
      "language": "Java",
      "linescount": 7911,
      "location": "/test/resources/performance/extra166y",
      "name": "lombok.ast",
      "url": "https://searchcode.com/codesearch/view/15412624/",
      "md5hash": "ff83f4e713d00a8e0864dc5e6eb65d7c",
      "lines": {
        "912": "                    a[i] = combiner.op(a[i], other.dget(k++));",
        "911": "                for (int i = l; i < h; ++i)",
        "133": "    Object[] ogetArray() { return null; }",
        "134": "    double[] dgetArray() { return null; }",
        "136": "    abstract Object oget(int index);",
        "137": "    abstract double dget(int index);",
        "906": "                        a[i] = combiner.op(a[i], other.dget(k));",
        "413": "        final Object[] ogetArray() { return this.array; }",
        "144": "     * Leaf methods for FJ tasks. Default versions use isSelected,",
        "145": "     * oget, dget, etc. But most are overridden in most concrete",
        "156": "            if (isSelected(i))",
        "905": "                    if (other.isSelected(k))",
        "187": "            if (isSelected(i)) {",
        "188": "                double x = dget(i);",
        "157": "                procedure.op(dget(i));",
        "414": "        double dget(int i) { return ((Number)oget(i)).doubleValue(); }"
      },
      "id": 15412624,
      "filename": "AbstractParallelAnyArray.java"
    },
    {
      "repo": "git://github.com/prog694/VIRSYSJ.git",
      "language": "Java",
      "linescount": 392,
      "location": "/LWJGL/src/java/org/lwjgl/util/mapped",
      "name": "VIRSYSJ",
      "url": "https://searchcode.com/codesearch/view/14442338/",
      "md5hash": "026cf8bf7cee1ebdadf854e057f55785",
      "lines": {
        "368": "\tpublic static double dget(long addr) {",
        "371": "",
        "372": "\tpublic static double dget(MappedObject mapped, int fieldOffset) {",
        "367": ""
      },
      "id": 14442338,
      "filename": "MappedHelper.java"
    },
    {
      "repo": "git://github.com/rzwitserloot/lombok.ast.git",
      "language": "Java",
      "linescount": 3282,
      "location": "/test/resources/performance/extra166y",
      "name": "lombok.ast",
      "url": "https://searchcode.com/codesearch/view/15412625/",
      "md5hash": "4851316b63ad87ad7e1b947b6f23840e",
      "lines": {
        "2944": "        final void pushDown(FJScan parent, FJScan left, FJScan right) {",
        "2945": "            double pin = parent.dgetIn();",
        "2946": "            left.dsetIn(pin);",
        "2947": "            right.dsetIn(reducer.op(pin, left.dgetOut()));",
        "2949": "        final void pushUp(FJScan parent, FJScan left, FJScan right) {",
        "2950": "            parent.dsetOut(reducer.op(left.dgetOut(),",
        "2951": "                                           right.dgetOut()));",
        "2952": "        }",
        "777": "                if (pap.isSelected(i)) {",
        "778": "                    double x = pap.dget(i);",
        "2977": "            double sum = f.dgetIn();",
        "2976": "            double[] arr = array;",
        "1593": "        double[] uniqueDoubles(int size) {",
        "1594": "            double[] src = pap.dgetArray();",
        "3003": "            double[] arr = array;",
        "3004": "            double sum = f.dgetIn();"
      },
      "id": 15412625,
      "filename": "PAS.java"
    },
    {
      "repo": "https://bitbucket.org/Prodes/smallgames",
      "language": "Java",
      "linescount": 392,
      "location": "/libgdx-game/libs/lwjgl-source-2.8.4/src/java/org/lwjgl/util/mapped",
      "name": "smallgames",
      "url": "https://searchcode.com/codesearch/view/127486364/",
      "md5hash": "f27224353779ddbd2dc4f3b1abad404e",
      "lines": {
        "368": "\tpublic static double dget(long addr) {",
        "371": "",
        "372": "\tpublic static double dget(MappedObject mapped, int fieldOffset) {",
        "367": ""
      },
      "id": 127486364,
      "filename": "MappedHelper.java"
    },
    {
      "repo": "https://github.com/craigwblake/scala-parallel.git",
      "language": "Java",
      "linescount": 194,
      "location": "/jsr166/src/extra166y",
      "name": "scala-parallel",
      "url": "https://searchcode.com/codesearch/view/109166891/",
      "md5hash": "b914f5d2ec514c07a5ecd543b8d3edba",
      "lines": {
        "189": "",
        "190": "    final double dget(int i) { return this.array[i]; }"
      },
      "id": 109166891,
      "filename": "ParallelDoubleArrayWithFilter.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100412065/",
      "md5hash": "97269efda67b1f67b152b3400030b364",
      "lines": {
        "285": "",
        "286": "    // Todo: DGet Extracts a single value from a column of a list or database"
      },
      "id": 100412065,
      "filename": "Excel.java"
    },
    {
      "repo": "https://bitbucket.org/nrnhines/nrn",
      "language": "Java",
      "linescount": 107,
      "location": "/src/nrnjava/neuron",
      "name": "nrn",
      "url": "https://searchcode.com/codesearch/view/102403179/",
      "md5hash": "95f1f975c564d20c12b7fb253534ae77",
      "lines": {
        "81": "// limited to scalars",
        "82": "\tpublic double dGet(String name) {"
      },
      "id": 102403179,
      "filename": "HocObject.java"
    },
    {
      "repo": "https://bitbucket.org/nrnhines/nrn",
      "language": "Java",
      "linescount": 679,
      "location": "/src/nrnjava/neuron",
      "name": "nrn",
      "url": "https://searchcode.com/codesearch/view/102403189/",
      "md5hash": "f977394a0e443f73d4fac6af42db7311",
      "lines": {
        "576": "",
        "577": "public static        double dGet(String name) {return new HocVariable(name).getVal();}"
      },
      "id": 102403189,
      "filename": "Neuron.java"
    },
    {
      "repo": "https://bitbucket.org/ramcdougal/neuronrxd",
      "language": "Java",
      "linescount": 107,
      "location": "/src/nrnjava/neuron",
      "name": "neuronrxd",
      "url": "https://searchcode.com/codesearch/view/103257789/",
      "md5hash": "95f1f975c564d20c12b7fb253534ae77",
      "lines": {
        "81": "// limited to scalars",
        "82": "\tpublic double dGet(String name) {"
      },
      "id": 103257789,
      "filename": "HocObject.java"
    },
    {
      "repo": "https://bitbucket.org/ramcdougal/neuronrxd",
      "language": "Java",
      "linescount": 679,
      "location": "/src/nrnjava/neuron",
      "name": "neuronrxd",
      "url": "https://searchcode.com/codesearch/view/103257794/",
      "md5hash": "f977394a0e443f73d4fac6af42db7311",
      "lines": {
        "576": "",
        "577": "public static        double dGet(String name) {return new HocVariable(name).getVal();}"
      },
      "id": 103257794,
      "filename": "Neuron.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 80,
      "location": "/org.boris.expr/java/test/org/boris/expr",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398353/",
      "md5hash": "9ab90a658a3302b6909e3420235ccd2d",
      "lines": {
        "36": "",
        "37": "    public void testDGET() throws Exception {",
        "38": "        assertResult(c(), \"DGET(A4:E10,\\\"Yield\\\",A1:A3)\", ExprError.NUM);",
        "39": "    }"
      },
      "id": 105398353,
      "filename": "ExcelDatabaseFunctionsTest.java"
    },
    {
      "repo": "https://bitbucket.org/yarikoptic/nrn",
      "language": "Java",
      "linescount": 679,
      "location": "/src/nrnjava/neuron",
      "name": "nrn",
      "url": "https://searchcode.com/codesearch/view/57068947/",
      "md5hash": "f977394a0e443f73d4fac6af42db7311",
      "lines": {
        "576": "",
        "577": "public static        double dGet(String name) {return new HocVariable(name).getVal();}"
      },
      "id": 57068947,
      "filename": "Neuron.java"
    },
    {
      "repo": "https://bitbucket.org/yarikoptic/nrn",
      "language": "Java",
      "linescount": 107,
      "location": "/src/nrnjava/neuron",
      "name": "nrn",
      "url": "https://searchcode.com/codesearch/view/57068951/",
      "md5hash": "95f1f975c564d20c12b7fb253534ae77",
      "lines": {
        "81": "// limited to scalars",
        "82": "\tpublic double dGet(String name) {"
      },
      "id": 57068951,
      "filename": "HocObject.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456290/",
      "md5hash": "d000de4330f4246f9ea598129c490c5c",
      "lines": {
        "285": "",
        "286": "    // Todo: DGet Extracts a single value from a column of a list or database"
      },
      "id": 69456290,
      "filename": "Excel.java"
    },
    {
      "repo": "git://github.com/rafalrusin/xmlbeansxx.git",
      "language": "Java",
      "linescount": 2401,
      "location": "/generator/src/main/java/pl/touk/xmlbeansxx",
      "name": "xmlbeansxx",
      "url": "https://searchcode.com/codesearch/view/15601706/",
      "md5hash": "5bad9f9e6462886df99edc926ecdfdbc",
      "lines": {
        "1203": "\t\t\t\tif (haveToGen(Properties.DGET_ARRAY)) {",
        "913": "",
        "754": "\t\t/** dgetArray type */",
        "753": "\t\t",
        "1202": "",
        "915": "\t\t\t//dget_array",
        "916": "\t\t\tgenMethodNormalAndConst(\"\", dvtype, className(currentType), ",
        "917": "\t\t\t\t\t\"dget\" + javaPropertyName(prop) + \"Array\",",
        "1204": "\t\t\t\t\tpg.setGenMethod(PropGen.M_NORMAL);",
        "58": "\t\t\t\tSET_ARRAY_AT = 41, GET_ARRAY_AT = 42,",
        "59": "\t\t\t\tDGET_ARRAY = 43, DSET_ARRAY = 44;",
        "914": "\t\tpublic void genDGetArray() {",
        "1205": "\t\t\t\t\tpg.genDGetArray();"
      },
      "id": 15601706,
      "filename": "ClassGen.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124968/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "944": "\t\t\tcase xlfDget: return \"DGET(\";",
        "276": "\tpublic static final int xlfAtanh    = 234;",
        "277": "\tpublic static final int xlfDget     = 235;",
        "648": "\t\t\t{\"DCOUNTA\", String.valueOf(xlfDcounta), String.valueOf(FTYPE_PTGFUNC)},",
        "649": "\t\t\t{\"DGET\", String.valueOf(xlfDget), String.valueOf(FTYPE_PTGFUNC)},",
        "1387": "\t\tif (iftab == xlfToday) return 0; // today",
        "1388": "\t\tif (iftab == xlfDget) return 3; // DGet",
        "943": "\t\t\tcase xlfDcounta: return \"DCOUNTA(\";"
      },
      "id": 47124968,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976592/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "944": "\t\t\tcase xlfDget: return \"DGET(\";",
        "276": "\tpublic static final int xlfAtanh    = 234;",
        "277": "\tpublic static final int xlfDget     = 235;",
        "648": "\t\t\t{\"DCOUNTA\", String.valueOf(xlfDcounta), String.valueOf(FTYPE_PTGFUNC)},",
        "649": "\t\t\t{\"DGET\", String.valueOf(xlfDget), String.valueOf(FTYPE_PTGFUNC)},",
        "1387": "\t\tif (iftab == xlfToday) return 0; // today",
        "1388": "\t\tif (iftab == xlfDget) return 3; // DGet",
        "943": "\t\t\tcase xlfDcounta: return \"DCOUNTA(\";"
      },
      "id": 50976592,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 284,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124943/",
      "md5hash": "84eef4f6788484522bd858a3c2167e99",
      "lines": {
        "105": "\t\t{\"DCOUNTA\", String.valueOf(FunctionHandler.xlfDcounta)},",
        "106": "\t\t{\"DGET\", String.valueOf(FunctionHandler.xlfDget)},",
        "179": "\t\tif (iftab == 235) return 3; // DGet",
        "178": "\t\tif (iftab == 221) return 0; // today"
      },
      "id": 47124943,
      "filename": "PtgFunc.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1191,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124974/",
      "md5hash": "fad0c9d9b1b37a11e3ca3ef6c27adf41",
      "lines": {
        "257": "\t",
        "258": " /** DGET   Extracts from a database a single record that matches the specified criteria",
        "259": " */",
        "260": "\tprotected static Ptg calcDGet(Ptg[] operands) {",
        "56": "",
        "57": "DGET   Extracts from a database a single record that matches the specified criteria"
      },
      "id": 47124974,
      "filename": "DatabaseCalculator.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 16,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 9,
      "source": "Github",
      "id": 2
    }
  ]
}