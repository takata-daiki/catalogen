{
  "matchterm": "ChartTypes",
  "previouspage": null,
  "searchterm": "ChartTypes",
  "query": "ChartTypes",
  "language_filters": [
    {
      "count": 29,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 29,
  "results": [
    {
      "repo": "http://sqlreport.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 38,
      "location": "/java/sourcecode/SQLReport/src/com/jeasonzhao/report/model/chart",
      "name": "sqlreport",
      "url": "https://searchcode.com/codesearch/view/3760423/",
      "md5hash": "bb9a42791221fae45a22753147c05c68",
      "lines": {
        "2": "",
        "3": "public class ChartTypes extends com.jeasonzhao.commons.basic.IntegerPair",
        "6": "    //Single Dimension",
        "7": "    public static final ChartTypes BarChart = new ChartTypes(1,\"bar\");",
        "8": "    public static final ChartTypes ColumnChart = new ChartTypes(3,\"column,col\");",
        "9": "    public static final ChartTypes LineChart = new ChartTypes(2,\"line\");",
        "10": "    public static final ChartTypes PieChart = new ChartTypes(4,\"pie\");",
        "11": "    public static final ChartTypes AreaChart = new ChartTypes(5,\"area\");",
        "12": "    public static final ChartTypes DoughnutChart = new ChartTypes(6,\"doughnut\");",
        "13": "",
        "14": "    public static final ChartTypes StackedColumnChart = new ChartTypes(101,\"StackedColumn\");",
        "15": "    public static final ChartTypes StackedColumn100Chart = new ChartTypes(102,\"100%StackedColumn,StackedColumn100\");",
        "16": "    public static final ChartTypes StackedBarChart = new ChartTypes(103,\"StackedBar\");",
        "17": "    public static final ChartTypes StackedBar100Chart = new ChartTypes(104,\"100%StackedBar,StackedBar100\");",
        "18": "    public static final ChartTypes StackedAreaChart = new ChartTypes(105,\"StackedArea\");"
      },
      "id": 3760423,
      "filename": "ChartTypes.java"
    },
    {
      "repo": "git://github.com/rjnichols/visural-common.git",
      "language": "Java",
      "linescount": 46,
      "location": "/visural-common/src/com/visural/common/web/api/googlecharts",
      "name": "visural-common",
      "url": "https://searchcode.com/codesearch/view/15782390/",
      "md5hash": "02b87a2c0604d6f0da0a6b26d6f4dc92",
      "lines": {
        "19": "/**",
        "36": "",
        "37": "    ChartTypes(String id) {",
        "22": " */",
        "23": "public enum ChartTypes {",
        "20": " * @version $Id: ChartTypes.java 31 2010-05-21 07:15:23Z tibes80@gmail.com $"
      },
      "id": 15782390,
      "filename": "ChartTypes.java"
    },
    {
      "repo": "https://github.com/smee/cewolf.git",
      "language": "Java",
      "linescount": 80,
      "location": "/cewolf/src/main/java/de/laures/cewolf/taglib",
      "name": "cewolf",
      "url": "https://searchcode.com/codesearch/view/110066346/",
      "md5hash": "c9f346918dd6c4381d91e5e83526e5e1",
      "lines": {
        "32": " */",
        "33": "public class ChartTypes {",
        "77": "",
        "78": "    private ChartTypes() { }"
      },
      "id": 110066346,
      "filename": "ChartTypes.java"
    },
    {
      "repo": "https://bitbucket.org/gmimano/org.javarosa.graphing",
      "language": "Java",
      "linescount": 17,
      "location": "/src/org/javarosa/graphing/api",
      "name": "org.javarosa.graphing",
      "url": "https://searchcode.com/codesearch/view/53931707/",
      "md5hash": "32d1bbd8564dd5d9a708d1ac71c4dd4c",
      "lines": {
        "9": " */",
        "10": "public class ChartTypes {"
      },
      "id": 53931707,
      "filename": "ChartTypes.java"
    },
    {
      "repo": "https://bitbucket.org/semberal/thesesportal.git",
      "language": "Java",
      "linescount": 15,
      "location": "/src/main/java/eu/lsem/bakalarka/model",
      "name": "thesesportal",
      "url": "https://searchcode.com/codesearch/view/36090904/",
      "md5hash": "02c802fd3d1767e02d3320d8037295f2",
      "lines": {
        "2": "",
        "3": "public enum ChartTypes {"
      },
      "id": 36090904,
      "filename": "ChartTypes.java"
    },
    {
      "repo": "https://bitbucket.org/angelodizon/bolares.git",
      "language": "Java",
      "linescount": 1362,
      "location": "/pnproject/src/main/java/gov/mil/controller",
      "name": "bolares",
      "url": "https://searchcode.com/codesearch/view/44331152/",
      "md5hash": "7653052e227457870ae54be64f65311b",
      "lines": {
        "272": "\t\t\tchartTypes = \"columnCharts1\";",
        "517": "\t    \t",
        "518": "\t\t\trB.setJscript1(grph.createGenGraph(chartTypes, containersLoc, \"Monthly Trending of Armed and Unarmed Activities and the Governments Counter Operations\", subtitle, rB.getyAxisCategory(), rLabel , lLabel, bars4));",
        "433": "\t\tif (graphTypes.equalsIgnoreCase(\"simpleLineCharts\")) {",
        "266": "\t\t    \t}",
        "267": "\t\t\trB.setJscript1(grph.createGenGraph(chartTypes, containersLoc, reportTitle, subtitle, rB.getyAxisCategory(), rLabel , lLabel, bars1));",
        "428": "\t\t\tbars3.put(\"Activities\", list3);",
        "429": "\t\t\trB.setJscript1(grph.createGenGraph(chartTypes, containersLoc, reportTitle.replaceFirst(\"Activities\", \"Perpetrators\"), subtitle, rB.getyAxisCategory(), rLabel , lLabel, bars3));",
        "271": "\t\tif (graphTypes.equalsIgnoreCase(\"BarMonthly\")) {",
        "144": "\t\t    rB.setyAxisCategory(yAxisCategory0);",
        "145": "\t    \trB.setJscript1(grph.createGenGraph(chartTypes, containersLoc, reportTitle, subtitle, rB.getyAxisCategory(), rLabel , lLabel, bars0));",
        "434": "\t\t\tchartTypes = \"simpleLineCharts\";",
        "150": "\t\tif (graphTypes.equalsIgnoreCase(\"BarRegions\")) {",
        "151": "\t\t\tchartTypes = \"columnCharts2\";\t\t\t",
        "540": "\t\t\trB.setyAxisCategory(yAxisCategory4);",
        "541": "\t    \trB.setJscript1(grph.createGenGraph(chartTypes, containersLoc, \"Monthly Trending of Maritime Activities\", subtitle, rB.getyAxisCategory(), rLabel , lLabel, bars5));"
      },
      "id": 44331152,
      "filename": "DashboardController.java"
    },
    {
      "repo": "https://bitbucket.org/semberal/thesesportal.git",
      "language": "Java",
      "linescount": 265,
      "location": "/src/main/java/eu/lsem/bakalarka/service",
      "name": "thesesportal",
      "url": "https://searchcode.com/codesearch/view/36090913/",
      "md5hash": "5c4ced94410ad2e716bc517cf031b10b",
      "lines": {
        "76": "        try {",
        "87": "            /*years chart*/",
        "44": "",
        "45": "    private Map<ChartTypes, File> charts;",
        "77": "            Map<ChartTypes, File> tempMap = new HashMap<ChartTypes, File>();",
        "79": "            /* typesChart*/",
        "80": "            tempMap.put(ChartTypes.CATEGORIES_CHART, categoriesChart());",
        "88": "            tempMap.put(ChartTypes.YEARS_CHART, yearsChart());",
        "82": "            /*fields Chart */",
        "83": "            tempMap.put(ChartTypes.FIELDS_CHART, fieldsChart());",
        "85": "            /*forms chart*/",
        "86": "            tempMap.put(ChartTypes.FORMS_CHART, formsChart());",
        "55": "    @Override",
        "56": "    public synchronized InputStream getChart(ChartTypes type) {",
        "90": "            /* date and field chart*/",
        "91": "            tempMap.put(ChartTypes.YEARS_AND_FIELDS_CHART, yearsAndFieldsChart());",
        "92": "            /* date and category chart*/"
      },
      "id": 36090913,
      "filename": "ChartGeneratorImpl.java"
    },
    {
      "repo": "https://bitbucket.org/semberal/thesesportal.git",
      "language": "Java",
      "linescount": 96,
      "location": "/src/main/java/eu/lsem/bakalarka/webfrontend/action/general",
      "name": "thesesportal",
      "url": "https://searchcode.com/codesearch/view/36090866/",
      "md5hash": "4dcfc71278965ea7ee5f1d87ee540fc3",
      "lines": {
        "66": "    public Resolution getThesesByYears() {",
        "67": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.YEARS_CHART));",
        "4": "import eu.lsem.bakalarka.dao.categories.CategoryDao;",
        "5": "import eu.lsem.bakalarka.model.ChartTypes;",
        "40": "    public Resolution getThesesCategoriesGraph() {",
        "41": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.CATEGORIES_CHART));",
        "74": "    public Resolution getThesesByYearsAndCategory() {",
        "75": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.YEARS_AND_CATEGORIES_CHART));",
        "82": "    public Resolution getThesesByYearAndFieldOfStudy() {",
        "49": "    public Resolution getFieldsOfStudyGraph() {",
        "50": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.FIELDS_CHART));",
        "83": "       return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.YEARS_AND_FIELDS_CHART));",
        "57": "    public Resolution getFormsOfStudyGraph() {",
        "58": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.FORMS_CHART));",
        "91": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.CATEGORIES_AND_FIELDS_CHART));",
        "90": "    public Resolution getFieldsAndCategoriesGraph() {"
      },
      "id": 36090866,
      "filename": "ThesesStatisticsActionBean.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 263,
      "location": "/nuclos-client/src/main/java/org/nuclos/client/layout/wysiwyg/component/properties",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46078949/",
      "md5hash": "ebdb9572cd2d2e0070a59ffe72440072",
      "lines": {
        "195": "        if (chartFunction != null) {",
        "196": "        \tfor (int i = 0; i < chartTypes.length; i++) {",
        "198": "\t\t\t\t\tif (chartTypes[i].getType().equals(chartFunction.name())) {",
        "70": "\t",
        "71": "\tprivate ChartTypeEntry[] chartTypes;",
        "202": "\t\t\t\t\t\t\tpublic void run() {",
        "199": "\t\t\t\t\t\tfinal int j = i;",
        "112": "\t\t\t\t",
        "113": "\t\tlist = new JList(chartTypes) {",
        "84": "\t\t",
        "85": "\t\tchartTypes = new ChartTypeEntry[] {",
        "203": "\t\t\t\t\t\t\t\tlist.setSelectedValue(chartTypes[j], true);",
        "197": "\t\t\t\tif (chartTypes[i].getType().equals(chartFunction.name())) {"
      },
      "id": 46078949,
      "filename": "PropertyChartPropertyChartStep.java"
    },
    {
      "repo": "https://bitbucket.org/gmimano/org.javarosa.graphing",
      "language": "Java",
      "linescount": 48,
      "location": "/src/org/javarosa/graphing/view",
      "name": "org.javarosa.graphing",
      "url": "https://searchcode.com/codesearch/view/53931677/",
      "md5hash": "8b5a98139ce4c1417a7740cdbdb8e4b4",
      "lines": {
        "24": "\t\tcase ChartTypes.TYPE_HOR:",
        "34": "\t\t\tbreak;",
        "27": "\t\tcase ChartTypes.TYPE_VER:",
        "35": "\t\tcase ChartTypes.TYPE_TBL:",
        "23": "\t\tswitch (type) {",
        "8": "import org.javarosa.graphing.api.ChartTypes;",
        "26": "\t\t\tbreak;",
        "7": "",
        "30": "\t\t\tbreak;",
        "31": "\t\tcase ChartTypes.TYPE_LIN:"
      },
      "id": 53931677,
      "filename": "VisualizationFactory.java"
    },
    {
      "repo": "https://bitbucket.org/hcp/intradb_builder_customizations",
      "language": "Java",
      "linescount": 1033,
      "location": "/src/java/org/nrg/xnat/restlet/extensions",
      "name": "intradb_builder_customizations",
      "url": "https://searchcode.com/codesearch/view/118093144/",
      "md5hash": "030d3fdbd79b88113d4fa4cd47fadfda",
      "lines": {
        "65": "\t}",
        "66": "\tprivate static final ChartTypes DEFAULT_CHART = ChartTypes.IRCHART;",
        "67": "\tprivate final ChartTypes chartType;",
        "68": "\t",
        "199": "\t\t",
        "200": "\t\tfinal String chartTypeStr = getQueryVariable(\"chartType\");",
        "201": "\t\t// Currently only supporting IR Charts, but will likely add more",
        "202": "\t\tif (chartTypeStr == null) {",
        "203": "\t\t\tchartType=DEFAULT_CHART;",
        "204": "\t\t} else if (chartTypeStr.equalsIgnoreCase(\"IRCHART\")) {",
        "205": "\t\t\tchartType=ChartTypes.IRCHART;",
        "206": "\t\t} else {",
        "482": "\t\tif (chartType == ChartTypes.IRCHART) {",
        "481": "\tprivate void computeChartDataForItem(Map<Object,ChartElements> cElesMap) {",
        "62": "\t// Currently only IR Charts supported, but likely to add more",
        "63": "\tpublic enum ChartTypes {  "
      },
      "id": 118093144,
      "filename": "QcChartRestlet.java"
    },
    {
      "repo": "https://bitbucket.org/semberal/thesesportal.git",
      "language": "Java",
      "linescount": 39,
      "location": "/src/main/java/eu/lsem/bakalarka/webfrontend/action/secure",
      "name": "thesesportal",
      "url": "https://searchcode.com/codesearch/view/36090872/",
      "md5hash": "37520bdf27d2542bafb04695377a9c27",
      "lines": {
        "35": "    public Resolution getNotSelectedDocumentationGraph() {",
        "36": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.NOT_SELECTED_DOCUMENTATION_CHART));",
        "5": "import eu.lsem.bakalarka.service.ChartGenerator;",
        "6": "import eu.lsem.bakalarka.model.ChartTypes;",
        "26": "    public Resolution getUncompleteMetadataGraph() {",
        "27": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.UNCOMPLETE_METADATA_CHART));",
        "30": "    public Resolution getMissingDataGraph() {",
        "31": "        return new StreamingResolution(\"image/png\", chartGenerator.getChart(ChartTypes.MISSING_DATA_CHART));"
      },
      "id": 36090872,
      "filename": "ThesesStatisticsActionBean.java"
    },
    {
      "repo": "https://github.com/dschrimpf/randi2.git",
      "language": "Java",
      "linescount": 134,
      "location": "/src/main/java/de/randi2/jsf/supportBeans",
      "name": "randi2",
      "url": "https://searchcode.com/codesearch/view/108374986/",
      "md5hash": "7321c203affd836fd8cb75619845ba13",
      "lines": {
        "64": "\t\tchartTypes = new ArrayList<SelectItem>();",
        "65": "\t\tchartTypes.add(new SelectItem(\"barclustered\", \"Bars (clustered)\"));",
        "66": "\t\tchartTypes.add(new SelectItem(\"line\", \"Lines\"));",
        "67": "\t\tchartTypes.add(new SelectItem(\"area\", \"Area\"));",
        "68": "\t\tclickedValues = new HashMap<String, String>();",
        "47": "\tList<SelectItem> chartTypes;",
        "46": "\t@Getter",
        "63": "\tpublic Charts(){"
      },
      "id": 108374986,
      "filename": "Charts.java"
    },
    {
      "repo": "https://bitbucket.org/snooppy/ems",
      "language": "Java",
      "linescount": 192,
      "location": "/ems-parent/ems-ui/ems-ui-vaadin/src/main/java/ua/cn/stu/cs/ems/ui/vaadin/ui/experiment",
      "name": "ems",
      "url": "https://searchcode.com/codesearch/view/122037735/",
      "md5hash": "13adf41829f7c82df3d0e976db69837a",
      "lines": {
        "99": "",
        "100": "    protected Select createChartTypeSelect(final StatisticsParameters param) {",
        "179": "    protected InvientCharts.SeriesType getChartType(StatisticsParameters param) {",
        "103": "        select.addItem(\"Bar\");",
        "104": "        InvientCharts.SeriesType type = chartTypes.get(param);",
        "180": "        InvientCharts.SeriesType chartType = chartTypes.get(param);",
        "26": "    private ComboBox entityCB;",
        "27": "    private Map<StatisticsParameters, InvientCharts.SeriesType> chartTypes =",
        "109": "            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {",
        "110": "                chartTypes.put(param, \"Bar\".equals(valueChangeEvent.getProperty().getValue())"
      },
      "id": 122037735,
      "filename": "ExperimentReport.java"
    },
    {
      "repo": "https://bitbucket.org/gmimano/org.javarosa.graphing",
      "language": "Java",
      "linescount": 57,
      "location": "/src/org/javarosa/graphing/devTest",
      "name": "org.javarosa.graphing",
      "url": "https://searchcode.com/codesearch/view/53931691/",
      "md5hash": "f77b9bde6b77310c1df92a6ea369202e",
      "lines": {
        "50": "\t\tmyfactory = new VisualizationFactory();",
        "51": "////\t\tform = new AnalysisView(\"Testing\",myfactory.getVizItem(ChartTypes.TYPE_HOR, \"Sample Form\", UsefulTestingStuff.getBarItems()),myfactory.getVizItem(ChartTypes.TYPE_TBL, \"Sample Table\", UsefulTestingStuff.getBarItems()));"
      },
      "id": 53931691,
      "filename": "VizMidlet.java"
    },
    {
      "repo": "https://bitbucket.org/gmimano/org.javarosa.graphing",
      "language": "Java",
      "linescount": 213,
      "location": "/src/org/javarosa/graphing/api",
      "name": "org.javarosa.graphing",
      "url": "https://searchcode.com/codesearch/view/53931706/",
      "md5hash": "139d7a8ec95634284c5659703dbf5cca",
      "lines": {
        "74": "\t\t}",
        "75": "\t\tthis.graph = (GraphItem)myfactory.getVizItem(ChartTypes.TYPE_HOR, report.getReportTitle(), dataVector,this);",
        "76": "\t\tthis.table = (GraphTable)myfactory.getVizItem(ChartTypes.TYPE_TBL, report.getReportTitle(), dataVector,this);",
        "77": "\t\t"
      },
      "id": 53931706,
      "filename": "Controller.java"
    },
    {
      "repo": "http://sqlreport.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 435,
      "location": "/java/sourcecode/SQLReport/src/com/jeasonzhao/report/model/chart",
      "name": "sqlreport",
      "url": "https://searchcode.com/codesearch/view/3760425/",
      "md5hash": "fe839b26b3b51aeba4c200947568dc18",
      "lines": {
        "22": "    @ModelField(names = \"type,mode,chartType,chart\")",
        "230": "",
        "231": "    public void setChartType(ChartTypes t)",
        "23": "    private ChartTypes m_chartType = null;",
        "235": "",
        "236": "    public ChartTypes getChartType()"
      },
      "id": 3760425,
      "filename": "DataSeries.java"
    },
    {
      "repo": "https://bitbucket.org/semberal/thesesportal.git",
      "language": "Java",
      "linescount": 19,
      "location": "/src/main/java/eu/lsem/bakalarka/service",
      "name": "thesesportal",
      "url": "https://searchcode.com/codesearch/view/36090909/",
      "md5hash": "bb129391d8688c0bc289331949844219",
      "lines": {
        "16": "",
        "9": "",
        "10": "import eu.lsem.bakalarka.model.ChartTypes;",
        "17": "    public InputStream getChart(ChartTypes type);"
      },
      "id": 36090909,
      "filename": "ChartGenerator.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1817,
      "location": "/src/main/java/com/extentech/formats/XLS/charts",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47125069/",
      "md5hash": "611c2a4d2e88ad17e376222d317186e9",
      "lines": {
        "932": "     */",
        "933": "    public int[] getAllChartTypes() {",
        "934": "    \tint[] charttypes= new int[nCharts];\t// max        \t",
        "935": "    \tfor (int i= 0; i < nCharts; i++) {",
        "936": "    \t\tcharttypes[i]= ((ChartType)chartgroup.get(i)).getChartType();",
        "937": "    \t}",
        "938": "        return charttypes;"
      },
      "id": 47125069,
      "filename": "Chart.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1817,
      "location": "/src/main/java/com/extentech/formats/XLS/charts",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976693/",
      "md5hash": "611c2a4d2e88ad17e376222d317186e9",
      "lines": {
        "932": "     */",
        "933": "    public int[] getAllChartTypes() {",
        "934": "    \tint[] charttypes= new int[nCharts];\t// max        \t",
        "935": "    \tfor (int i= 0; i < nCharts; i++) {",
        "936": "    \t\tcharttypes[i]= ((ChartType)chartgroup.get(i)).getChartType();",
        "937": "    \t}",
        "938": "        return charttypes;"
      },
      "id": 50976693,
      "filename": "Chart.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 18,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 7,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 4,
      "source": "Github",
      "id": 2
    }
  ]
}