{
  "matchterm": "PropertyFetcher",
  "previouspage": null,
  "searchterm": "PropertyFetcher",
  "query": "PropertyFetcher",
  "language_filters": [
    {
      "count": 49,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 49,
  "results": [
    {
      "repo": "https://code.google.com/p/ganttproject/",
      "language": "Java",
      "linescount": 87,
      "location": "/org.ganttproject.impex.htmlpdf/src/org/ganttproject/impex/htmlpdf",
      "name": "ganttproject",
      "url": "https://searchcode.com/codesearch/view/8440041/",
      "md5hash": "bf78e3d597beb83aea8255575746d170",
      "lines": {
        "41": "",
        "42": "  public PropertyFetcher(IGanttProject project) {",
        "37": "",
        "38": "public class PropertyFetcher {"
      },
      "id": 8440041,
      "filename": "PropertyFetcher.java"
    },
    {
      "repo": "https://bitbucket.org/akademy/photoss",
      "language": "Java",
      "linescount": 67,
      "location": "/NetBeans/PhotoSS/src/PhotoSS/uk/co/akademy/PhotoShow",
      "name": "photoss",
      "url": "https://searchcode.com/codesearch/view/119720080/",
      "md5hash": "ec789b7f146f54bee59252b93737f508",
      "lines": {
        "17": " */",
        "18": "public class PropertyFetcher",
        "21": "    ",
        "22": "    public PropertyFetcher()"
      },
      "id": 119720080,
      "filename": "PropertyFetcher.java"
    },
    {
      "repo": "https://github.com/xetorthio/inconsequential.git",
      "language": "Java",
      "linescount": 352,
      "location": "/core/src/main/groovy/org/springframework/datastore/reflect",
      "name": "inconsequential",
      "url": "https://searchcode.com/codesearch/view/65115877/",
      "md5hash": "2cddcd88727df514bc9e2ed2e611afb5",
      "lines": {
        "128": "                                new GetterPropertyFetcher(readMethod,",
        "160": "                    PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "35": " */",
        "36": "public class ClassPropertyFetcher {",
        "37": "    private static final Logger LOG = LoggerFactory.getLogger(ClassPropertyFetcher.class);",
        "38": "    ",
        "39": "\tprivate final Class clazz;",
        "40": "\tfinal Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "41": "\tfinal Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "42": "\tprivate final ReferenceInstanceCallback callback;",
        "46": "",
        "47": "\tprivate static Map<Class, ClassPropertyFetcher> cachedClassPropertyFetchers = new WeakHashMap<Class, ClassPropertyFetcher>();",
        "48": "",
        "131": "                        instanceFetchers.put(desc.getName(),",
        "132": "                                new GetterPropertyFetcher(readMethod,",
        "159": "                    }",
        "127": "                        staticFetchers.put(desc.getName(),"
      },
      "id": 65115877,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "https://github.com/marcioaug/grails-core.git",
      "language": "Java",
      "linescount": 367,
      "location": "/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/94892615/",
      "md5hash": "5333b3c36cdedc2d43a86e376c91a8c5",
      "lines": {
        "158": "                            }",
        "46": " */",
        "47": "public class ClassPropertyFetcher {",
        "50": "    private final Class<?> clazz;",
        "51": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "52": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "53": "    private final ReferenceInstanceCallback callback;",
        "55": "",
        "56": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "57": "",
        "58": "    public static void clearClassPropertyFetcherCache() {",
        "59": "        cachedClassPropertyFetchers.clear();",
        "60": "    }",
        "61": "",
        "62": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "159": "                            PropertyFetcher fetcher = new GetterPropertyFetcher("
      },
      "id": 94892615,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "https://github.com/ophirh1/griffon.git",
      "language": "Java",
      "linescount": 381,
      "location": "/subprojects/griffon-core/src/main/java/org/codehaus/griffon/runtime/core/artifact",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/96196939/",
      "md5hash": "e078048b1ac1dce762ea3e35a39224af",
      "lines": {
        "35": " */",
        "36": "public class ClassPropertyFetcher {",
        "37": "    private final Class<?> clazz;",
        "38": "    final Map<String, PropertyFetcher> staticFetchers = new LinkedHashMap<>();",
        "39": "    final Map<String, PropertyFetcher> instanceFetchers = new LinkedHashMap<>();",
        "40": "    private final ReferenceInstanceCallback callback;",
        "145": "                            }",
        "43": "",
        "44": "    private static final Map<Class<?>, ClassPropertyFetcher> CACHED_CLASS_PROPERTY_FETCHERS = new ConcurrentHashMap<>();",
        "45": "",
        "46": "    public static void clearClassPropertyFetcherCache() {",
        "49": "",
        "50": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "53": "",
        "54": "    public static ClassPropertyFetcher forClass(final Class<?> c, ReferenceInstanceCallback callback) {",
        "55": "        ClassPropertyFetcher cpf = CACHED_CLASS_PROPERTY_FETCHERS.get(c);",
        "146": "                            PropertyFetcher fetcher = new GetterPropertyFetcher("
      },
      "id": 96196939,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/griffon/griffon.git",
      "language": "Java",
      "linescount": 389,
      "location": "/subprojects/griffon-core/src/main/java/org/codehaus/griffon/runtime/core/artifact",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/101686793/",
      "md5hash": "43d11dfc7ddf401da68755f2630e84d3",
      "lines": {
        "43": " */",
        "44": "public class ClassPropertyFetcher {",
        "45": "    private final Class<?> clazz;",
        "46": "    final Map<String, PropertyFetcher> staticFetchers = new LinkedHashMap<>();",
        "47": "    final Map<String, PropertyFetcher> instanceFetchers = new LinkedHashMap<>();",
        "48": "    private final ReferenceInstanceCallback callback;",
        "154": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "51": "",
        "52": "    private static final Map<Class<?>, ClassPropertyFetcher> CACHED_CLASS_PROPERTY_FETCHERS = new ConcurrentHashMap<>();",
        "53": "",
        "54": "    public static void clearClassPropertyFetcherCache() {",
        "153": "                            }",
        "57": "",
        "58": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "61": "",
        "62": "    public static ClassPropertyFetcher forClass(final Class<?> c, ReferenceInstanceCallback callback) {",
        "63": "        ClassPropertyFetcher cpf = CACHED_CLASS_PROPERTY_FETCHERS.get(c);"
      },
      "id": 101686793,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 972,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406763/",
      "md5hash": "90e9bcad3d44264dac9d11db9a001e3f",
      "lines": {
        "448": "        PropertyFetcher<LineCap> fetcher = new PropertyFetcher<LineCap>() {",
        "525": "    public XSLFShadow getShadow() {",
        "587": "     */",
        "588": "    boolean fetchShapeProperty(PropertyFetcher visitor) {",
        "397": "",
        "398": "        PropertyFetcher<LineDash> fetcher = new PropertyFetcher<LineDash>() {",
        "175": "    CTTransform2D getXfrm() {",
        "176": "        PropertyFetcher<CTTransform2D> fetcher = new PropertyFetcher<CTTransform2D>() {",
        "340": "    public double getLineWidth() {",
        "341": "        PropertyFetcher<Double> fetcher = new PropertyFetcher<Double>() {",
        "526": "        PropertyFetcher<CTOuterShadowEffect> fetcher = new PropertyFetcher<CTOuterShadowEffect>() {",
        "28": "import org.apache.poi.util.Units;",
        "29": "import org.apache.poi.xslf.model.PropertyFetcher;",
        "447": "    public LineCap getLineCap() {"
      },
      "id": 97406763,
      "filename": "XSLFSimpleShape.java"
    },
    {
      "repo": "git://github.com/shemnon/griffon.git",
      "language": "Java",
      "linescount": 349,
      "location": "/src/cli/org/codehaus/griffon/commons",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/227338/",
      "md5hash": "59df8a6ebb4c29ba4a68ef9b01edd5f3",
      "lines": {
        "152": "                            }",
        "45": " */",
        "46": "public class ClassPropertyFetcher {",
        "48": "    private final Class<?> clazz;",
        "49": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "50": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "51": "    private final ReferenceInstanceCallback callback;",
        "53": "",
        "54": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "55": "",
        "56": "    public static void clearClassPropertyFetcherCache() {",
        "57": "        cachedClassPropertyFetchers.clear();",
        "58": "    }",
        "59": "",
        "60": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "153": "                            PropertyFetcher fetcher = new GetterPropertyFetcher("
      },
      "id": 227338,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/shemnon/griffon.git",
      "language": "Java",
      "linescount": 363,
      "location": "/src/rt/org/codehaus/griffon/runtime/core",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/227467/",
      "md5hash": "98709b0e42bf1288d3842ca51bc964a9",
      "lines": {
        "192": "                            new GetterPropertyFetcher(readMethod,",
        "150": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "44": " */",
        "45": "public class ClassPropertyFetcher {",
        "46": "    private final Class<?> clazz;",
        "47": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "48": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "49": "    private final ReferenceInstanceCallback callback;",
        "51": "",
        "52": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "53": "",
        "54": "    public static void clearClassPropertyFetcherCache() {",
        "55": "        cachedClassPropertyFetchers.clear();",
        "191": "                    staticFetchers.put(desc.getName(),",
        "149": "                            }"
      },
      "id": 227467,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/grails/grails-core.git",
      "language": "Java",
      "linescount": 351,
      "location": "/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/564671/",
      "md5hash": "a3909e8c8b8dc5d1997a9b728fa9be91",
      "lines": {
        "158": "                            }",
        "46": " */",
        "47": "public class ClassPropertyFetcher {",
        "50": "    private final Class<?> clazz;",
        "51": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "52": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "53": "    private final ReferenceInstanceCallback callback;",
        "55": "",
        "56": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "57": "",
        "58": "    public static void clearClassPropertyFetcherCache() {",
        "59": "        cachedClassPropertyFetchers.clear();",
        "60": "    }",
        "61": "",
        "62": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "159": "                            PropertyFetcher fetcher = new GetterPropertyFetcher("
      },
      "id": 564671,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/griffon/griffon.git",
      "language": "Java",
      "linescount": 346,
      "location": "/src/main/cli/org/codehaus/griffon/commons",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/2507865/",
      "md5hash": "bf1c2e041524b60be668ad4af5fde47f",
      "lines": {
        "150": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "42": " */",
        "43": "public class ClassPropertyFetcher {",
        "45": "    private final Class<?> clazz;",
        "46": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "47": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "48": "    private final ReferenceInstanceCallback callback;",
        "50": "",
        "51": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "52": "",
        "53": "    public static void clearClassPropertyFetcherCache() {",
        "54": "        cachedClassPropertyFetchers.clear();",
        "55": "    }",
        "56": "",
        "57": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "149": "                            }"
      },
      "id": 2507865,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/griffon/griffon.git",
      "language": "Java",
      "linescount": 378,
      "location": "/src/main/rt/org/codehaus/griffon/runtime/core",
      "name": "griffon",
      "url": "https://searchcode.com/codesearch/view/2508040/",
      "md5hash": "25a153988a87b5d6331c4688aae31554",
      "lines": {
        "36": " */",
        "37": "public class ClassPropertyFetcher {",
        "38": "    private final Class<?> clazz;",
        "39": "    final Map<String, PropertyFetcher> staticFetchers = new LinkedHashMap<String, PropertyFetcher>();",
        "40": "    final Map<String, PropertyFetcher> instanceFetchers = new LinkedHashMap<String, PropertyFetcher>();",
        "41": "    private final ReferenceInstanceCallback callback;",
        "44": "",
        "45": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "46": "",
        "47": "    public static void clearClassPropertyFetcherCache() {",
        "48": "        cachedClassPropertyFetchers.clear();",
        "49": "    }",
        "50": "",
        "51": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "147": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "146": "                            }"
      },
      "id": 2508040,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "http://google-enterprise-connector-file-system.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 587,
      "location": "/projects/file-system-connector/source/javatests/com/google/enterprise/connector/filesystem",
      "name": "google-enterprise-connector-file-system",
      "url": "https://searchcode.com/codesearch/view/11283448/",
      "md5hash": "a41f2c807c0732d48307854146592cc5",
      "lines": {
        "387": "  public void testGetInheritedAclUseAuthzOnAclError() throws Exception {",
        "388": "    propertyFetcher.setUseAuthzOnAclError(true);",
        "401": "  public void testGetInheritedAclNotUseAuthzOnAclError() throws Exception {",
        "298": "  public void testGetLegacyAclBuilder() throws IOException {",
        "299": "    propertyFetcher.setSupportsInheritedAcls(false);",
        "402": "    propertyFetcher.setUseAuthzOnAclError(false);",
        "558": "                                     propertyFetcher, null);",
        "557": "      return new TestSmbReadonlyFile(this, getDelegate(path), credentials,",
        "49": "  private Credentials credentials;",
        "50": "  private TestFileSystemPropertyManager propertyFetcher;",
        "563": "    TestSmbReadonlyFile(TestSmbFileSystemType type, SmbFileDelegate delegate,",
        "564": "        Credentials credentials, SmbFileProperties propertyFetcher,",
        "565": "        AclBuilder aclBuilder) {",
        "566": "      super(type, delegate, credentials, propertyFetcher);",
        "58": "    List<String> emptyList = Collections.emptyList();",
        "59": "    propertyFetcher = new TestFileSystemPropertyManager(true);",
        "60": "    context = new DocumentContext(\"domain\", \"user\", \"passwd\","
      },
      "id": 11283448,
      "filename": "SmbReadonlyFileTest.java"
    },
    {
      "repo": "http://graelyk.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 346,
      "location": "/Graelyk/src/groovyx/gaelyk/graelyk/domain",
      "name": "graelyk",
      "url": "https://searchcode.com/codesearch/view/12102578/",
      "md5hash": "a6a6bd87658c90bfe8ec8b444299d072",
      "lines": {
        "144": "\t\t\t\t\t\t\tPropertyFetcher fetcher = new GetterPropertyFetcher(",
        "39": " */",
        "40": "public class ClassPropertyFetcher {",
        "41": "\t/*private*/ final Class clazz;",
        "42": "\tfinal Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "43": "\tfinal Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "44": "\t/*private*/ final ReferenceInstanceCallback callback;",
        "46": "",
        "47": "\t/*private*/ static Map<Class, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class, ClassPropertyFetcher>();",
        "48": "",
        "49": "\tpublic static void clearClassPropertyFetcherCache() {",
        "50": "\t\tcachedClassPropertyFetchers.clear();",
        "51": "\t}",
        "52": "",
        "53": "\tpublic static ClassPropertyFetcher forClass(Class c) {",
        "143": "\t\t\t\t\t\t\t}"
      },
      "id": 12102578,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "git://github.com/grails/grails-core.git",
      "language": "Java",
      "linescount": 208,
      "location": "/grails-plugin-converters/src/main/groovy/org/grails/web/converters/marshaller/xml",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/64329326/",
      "md5hash": "e0646b52e7fc3eb8c11853dad56f62bf",
      "lines": {
        "192": "            if (idValue == null) {",
        "193": "                ClassPropertyFetcher propertyFetcher = ClassPropertyFetcher.forClass(refObj.getClass());",
        "194": "                idValue = propertyFetcher.getPropertyValue(refObj, idProperty.getName());",
        "195": "            }",
        "197": "        else {",
        "198": "            ClassPropertyFetcher propertyFetcher = ClassPropertyFetcher.forClass(refObj.getClass());",
        "199": "            idValue = propertyFetcher.getPropertyValue(refObj, idProperty.getName());",
        "200": "        }",
        "26": "",
        "27": "import org.grails.core.util.ClassPropertyFetcher;"
      },
      "id": 64329326,
      "filename": "DomainClassMarshaller.java"
    },
    {
      "repo": "https://github.com/houbie/grails-core.git",
      "language": "Java",
      "linescount": 200,
      "location": "/grails-plugin-converters/src/main/groovy/org/codehaus/groovy/grails/web/converters/marshaller/xml",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/67491483/",
      "md5hash": "42e08222b9f009fcc2697e6219c3ae3e",
      "lines": {
        "192": "        }",
        "184": "            if (idValue == null) {",
        "185": "                ClassPropertyFetcher propertyFetcher = ClassPropertyFetcher.forClass(refObj.getClass());",
        "186": "                idValue = propertyFetcher.getPropertyValue(refObj, idProperty.getName());",
        "187": "            }",
        "189": "        else {",
        "190": "            ClassPropertyFetcher propertyFetcher = ClassPropertyFetcher.forClass(refObj.getClass());",
        "191": "            idValue = propertyFetcher.getPropertyValue(refObj, idProperty.getName());"
      },
      "id": 67491483,
      "filename": "DomainClassMarshaller.java"
    },
    {
      "repo": "https://github.com/rlovtangen/grails-core.git",
      "language": "Java",
      "linescount": 375,
      "location": "/grails-core/src/main/groovy/org/grails/core/util",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/112154175/",
      "md5hash": "5d5d3908cf98db9a45ca408eb9f8c842",
      "lines": {
        "162": "                            }",
        "163": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "45": " */",
        "46": "public class ClassPropertyFetcher {",
        "48": "    private final Class<?> clazz;",
        "49": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "50": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "51": "    private final ReferenceInstanceCallback callback;",
        "53": "",
        "54": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "55": "",
        "56": "    public static void clearClassPropertyFetcherCache() {",
        "57": "        cachedClassPropertyFetchers.clear();",
        "58": "    }",
        "59": "",
        "60": "    public static ClassPropertyFetcher forClass(Class<?> c) {"
      },
      "id": 112154175,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "https://github.com/pa-nico/grails-core.git",
      "language": "Java",
      "linescount": 350,
      "location": "/src/java/org/codehaus/groovy/grails/commons",
      "name": "grails-core",
      "url": "https://searchcode.com/codesearch/view/109538056/",
      "md5hash": "c7c34cdcca44b4a621b4d691837d6b80",
      "lines": {
        "45": " */",
        "46": "public class ClassPropertyFetcher {",
        "154": "                            PropertyFetcher fetcher = new GetterPropertyFetcher(",
        "49": "    private final Class<?> clazz;",
        "50": "    final Map<String, PropertyFetcher> staticFetchers = new HashMap<String, PropertyFetcher>();",
        "51": "    final Map<String, PropertyFetcher> instanceFetchers = new HashMap<String, PropertyFetcher>();",
        "52": "    private final ReferenceInstanceCallback callback;",
        "54": "",
        "55": "    private static Map<Class<?>, ClassPropertyFetcher> cachedClassPropertyFetchers = new ConcurrentHashMap<Class<?>, ClassPropertyFetcher>();",
        "56": "",
        "57": "    public static void clearClassPropertyFetcherCache() {",
        "58": "        cachedClassPropertyFetchers.clear();",
        "59": "    }",
        "60": "",
        "61": "    public static ClassPropertyFetcher forClass(Class<?> c) {",
        "153": "                            }"
      },
      "id": 109538056,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "https://github.com/gulbrand/grails.git",
      "language": "Java",
      "linescount": 250,
      "location": "/grails/src/java/org/codehaus/groovy/grails/commons",
      "name": "grails",
      "url": "https://searchcode.com/codesearch/view/106822010/",
      "md5hash": "3a43bfbb8a3e16cd66afd1fcbfb657fb",
      "lines": {
        "32": "\tprivate final Class clazz;",
        "160": "\tprivate PropertyFetcher resolveFetcher(String name,",
        "162": "\t\tPropertyFetcher fetcher = null;",
        "187": "",
        "36": "",
        "37": "\tClassPropertyFetcher(Class clazz, ReferenceInstanceCallback callback) {",
        "161": "\t\t\tboolean onlyInstanceProperties) {",
        "176": "\tpublic Class getPropertyType(String name, boolean onlyInstanceProperties) {",
        "177": "\t\tPropertyFetcher fetcher = resolveFetcher(name, onlyInstanceProperties);",
        "147": "\tpublic Object getPropertyValue(String name, boolean onlyInstanceProperties) {",
        "148": "\t\tPropertyFetcher fetcher = resolveFetcher(name, onlyInstanceProperties);",
        "31": "public class ClassPropertyFetcher {",
        "188": "\tstatic interface PropertyFetcher {",
        "30": " */",
        "159": ""
      },
      "id": 106822010,
      "filename": "ClassPropertyFetcher.java"
    },
    {
      "repo": "http://google-enterprise-connector-file-system.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 345,
      "location": "/projects/file-system-connector/source/java/com/google/enterprise/connector/filesystem",
      "name": "google-enterprise-connector-file-system",
      "url": "https://searchcode.com/codesearch/view/4010251/",
      "md5hash": "f4e5705c3566c9d165f39e119eb852d2",
      "lines": {
        "128": "                                path, credentials, smbPropertyFetcher);",
        "326": "    if (aclBuilder == null) {",
        "327": "      if (smbPropertyFetcher.supportsInheritedAcls()) {",
        "328": "        aclBuilder = new SmbAclBuilder(delegate, smbPropertyFetcher);",
        "329": "      } else {",
        "74": "   * @param credentials",
        "75": "   * @param propertyFetcher Fetcher object that gives the required properties",
        "79": "  public SmbReadonlyFile(SmbFileSystemType type, String path,",
        "80": "      Credentials credentials, SmbFileProperties propertyFetcher)",
        "81": "      throws RepositoryException {",
        "286": "    if (e instanceof SmbException && smbPropertyFetcher.useAuthzOnAclError()) {",
        "63": "  protected final SmbFileProperties smbPropertyFetcher;",
        "330": "        aclBuilder = new LegacySmbAclBuilder(delegate, smbPropertyFetcher);",
        "285": "    }",
        "62": "  @VisibleForTesting",
        "127": "    return new SmbReadonlyFile((SmbFileSystemType) getFileSystemType(),"
      },
      "id": 4010251,
      "filename": "SmbReadonlyFile.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 31,
      "source": "Github",
      "id": 2
    },
    {
      "count": 9,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 9,
      "source": "Google Code",
      "id": 1
    }
  ]
}