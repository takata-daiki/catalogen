{
  "matchterm": "ListTables",
  "previouspage": null,
  "searchterm": "ListTables",
  "query": "ListTables",
  "language_filters": [
    {
      "count": 298,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 298,
  "results": [
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 216,
      "location": "/src/org/apache/poi/hwpf/model",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97384153/",
      "md5hash": "f04e9799c9a8555d3618ad5c62633ad4",
      "lines": {
        "50": "    public ListTables( byte[] tableStream, final int lstOffset,",
        "49": "",
        "34": "@Internal",
        "35": "public final class ListTables",
        "36": "{",
        "37": "  private static POILogger log = POILogFactory.getLogger(ListTables.class);",
        "176": "        ListTables other = (ListTables) obj;",
        "44": "",
        "45": "  public ListTables()",
        "175": "            return false;"
      },
      "id": 97384153,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://bitbucket.org/St0lz/cubeia-poker",
      "language": "Java",
      "linescount": 147,
      "location": "/backoffice/poker-admin/src/main/java/com/cubeia/games/poker/admin/wicket/pages/tables",
      "name": "cubeia-poker",
      "url": "https://searchcode.com/codesearch/view/102779900/",
      "md5hash": "1d54b79323af7f46d832ccc30b01a2bd",
      "lines": {
        "48": "public class ListTables extends BasePage {",
        "96": "                Component panel = new DeleteLinkPanel(componentId, TableConfigTemplate.class, table.getId(), ListTables.class);",
        "47": " */",
        "60": "     */",
        "61": "    public ListTables(final PageParameters parameters) {",
        "95": "                TableConfigTemplate table = model.getObject();"
      },
      "id": 102779900,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://bitbucket.org/mstram/cubeia-poker",
      "language": "Java",
      "linescount": 147,
      "location": "/backoffice/poker-admin/src/main/java/com/cubeia/games/poker/admin/wicket/pages/tables",
      "name": "cubeia-poker",
      "url": "https://searchcode.com/codesearch/view/135070808/",
      "md5hash": "1d54b79323af7f46d832ccc30b01a2bd",
      "lines": {
        "48": "public class ListTables extends BasePage {",
        "96": "                Component panel = new DeleteLinkPanel(componentId, TableConfigTemplate.class, table.getId(), ListTables.class);",
        "47": " */",
        "60": "     */",
        "61": "    public ListTables(final PageParameters parameters) {",
        "95": "                TableConfigTemplate table = model.getObject();"
      },
      "id": 135070808,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://bitbucket.org/biddyweb/cubeia-poker",
      "language": "Java",
      "linescount": 147,
      "location": "/backoffice/poker-admin/src/main/java/com/cubeia/games/poker/admin/wicket/pages/tables",
      "name": "cubeia-poker",
      "url": "https://searchcode.com/codesearch/view/137137025/",
      "md5hash": "1d54b79323af7f46d832ccc30b01a2bd",
      "lines": {
        "48": "public class ListTables extends BasePage {",
        "96": "                Component panel = new DeleteLinkPanel(componentId, TableConfigTemplate.class, table.getId(), ListTables.class);",
        "47": " */",
        "60": "     */",
        "61": "    public ListTables(final PageParameters parameters) {",
        "95": "                TableConfigTemplate table = model.getObject();"
      },
      "id": 137137025,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://bitbucket.org/sajjad-victim/cubeia-poker",
      "language": "Java",
      "linescount": 147,
      "location": "/backoffice/poker-admin/src/main/java/com/cubeia/games/poker/admin/wicket/pages/tables",
      "name": "cubeia-poker",
      "url": "https://searchcode.com/codesearch/view/137145856/",
      "md5hash": "1d54b79323af7f46d832ccc30b01a2bd",
      "lines": {
        "48": "public class ListTables extends BasePage {",
        "96": "                Component panel = new DeleteLinkPanel(componentId, TableConfigTemplate.class, table.getId(), ListTables.class);",
        "47": " */",
        "60": "     */",
        "61": "    public ListTables(final PageParameters parameters) {",
        "95": "                TableConfigTemplate table = model.getObject();"
      },
      "id": 137145856,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://bitbucket.org/sajjad-victim/sajjad121",
      "language": "Java",
      "linescount": 147,
      "location": "/backoffice/poker-admin/src/main/java/com/cubeia/games/poker/admin/wicket/pages/tables",
      "name": "sajjad121",
      "url": "https://searchcode.com/codesearch/view/137148167/",
      "md5hash": "1d54b79323af7f46d832ccc30b01a2bd",
      "lines": {
        "48": "public class ListTables extends BasePage {",
        "96": "                Component panel = new DeleteLinkPanel(componentId, TableConfigTemplate.class, table.getId(), ListTables.class);",
        "47": " */",
        "60": "     */",
        "61": "    public ListTables(final PageParameters parameters) {",
        "95": "                TableConfigTemplate table = model.getObject();"
      },
      "id": 137148167,
      "filename": "ListTables.java"
    },
    {
      "repo": "https://github.com/alibaba/wasp.git",
      "language": "Java",
      "linescount": 2136,
      "location": "/src/main/java/com/alibaba/wasp/client",
      "name": "wasp",
      "url": "https://searchcode.com/codesearch/view/75828275/",
      "md5hash": "100ae22ff132f2ba3f26b4a47f026c09",
      "lines": {
        "799": "    for (FTable table : listTables(pattern)) {",
        "896": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "798": "    List<FTable> failed = new LinkedList<FTable>();",
        "772": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "773": "   * immediate. Consider using {@link #listTables(String)} and",
        "897": "   * immediate. Consider using {@link #listTables(String)} and",
        "648": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "649": "   * immediate. Consider using {@link #listTables(String)} and",
        "789": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "790": "   * immediate. Consider using {@link #listTables(java.util.regex.Pattern) } and",
        "666": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "667": "   * immediate. Consider using {@link #listTables(java.util.regex.Pattern) } and",
        "285": "   *           if a remote or network exception occurs",
        "286": "   * @see #listTables()",
        "287": "   */"
      },
      "id": 75828275,
      "filename": "WaspAdmin.java"
    },
    {
      "repo": "https://github.com/stumbleupon/hbase.git",
      "language": "Java",
      "linescount": 1822,
      "location": "/src/main/java/org/apache/hadoop/hbase/client",
      "name": "hbase",
      "url": "https://searchcode.com/codesearch/view/111522494/",
      "md5hash": "88b609e0e8d5fc8c556451802f2c102e",
      "lines": {
        "289": "   * @throws IOException if a remote or network exception occurs",
        "290": "   * @see #listTables(java.util.regex.Pattern)",
        "291": "   */",
        "260": "   */",
        "261": "  public HTableDescriptor[] listTables() throws IOException {",
        "262": "    return this.connection.listTables();",
        "263": "  }",
        "270": "   * @throws IOException if a remote or network exception occurs",
        "271": "   * @see #listTables()",
        "272": "   */",
        "273": "  public HTableDescriptor[] listTables(Pattern pattern) throws IOException {",
        "274": "    List<HTableDescriptor> matched = new LinkedList<HTableDescriptor>();",
        "275": "    HTableDescriptor[] tables = listTables();",
        "292": "  public HTableDescriptor[] listTables(String regex) throws IOException {",
        "293": "    return listTables(Pattern.compile(regex));"
      },
      "id": 111522494,
      "filename": "HBaseAdmin.java"
    },
    {
      "repo": "git://github.com/apache/hbase.git",
      "language": "Java",
      "linescount": 1752,
      "location": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client",
      "name": "hbase",
      "url": "https://searchcode.com/codesearch/view/116060377/",
      "md5hash": "bf445d2fa8ce82414657b2e93a6b93e8",
      "lines": {
        "427": "   * #listTables(java.util.regex.Pattern) } and",
        "134": "   * @throws IOException if a remote or network exception occurs",
        "135": "   * @see #listTables(java.util.regex.Pattern, boolean)",
        "136": "   */",
        "137": "  HTableDescriptor[] listTables(String regex, boolean includeSysTables)",
        "298": "   * carefully, there is no prompting and the effect is immediate. Consider using {@link",
        "299": "   * #listTables(java.util.regex.Pattern) } and",
        "125": "  HTableDescriptor[] listTables(Pattern pattern, boolean includeSysTables)",
        "93": "   */",
        "94": "  HTableDescriptor[] listTables() throws IOException;",
        "414": "   * #listTables(java.lang.String)} and {@link #disableTable(org.apache.hadoop.hbase.TableName)}",
        "413": "   * carefully, there is no prompting and the effect is immediate. Consider using {@link",
        "124": "   */",
        "285": "   * carefully, there is no prompting and the effect is immediate. Consider using {@link",
        "286": "   * #listTables(java.lang.String)} and {@link #deleteTable(org.apache.hadoop.hbase.TableName)}",
        "426": "   * carefully, there is no prompting and the effect is immediate. Consider using {@link"
      },
      "id": 116060377,
      "filename": "Admin.java"
    },
    {
      "repo": "git://github.com/apache/hbase.git",
      "language": "Java",
      "linescount": 3633,
      "location": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client",
      "name": "hbase",
      "url": "https://searchcode.com/codesearch/view/116060419/",
      "md5hash": "b3ca8b7d98b04972ff8123a97977e8f1",
      "lines": {
        "323": "  @Override",
        "324": "  public HTableDescriptor[] listTables() throws IOException {",
        "325": "    return listTables((Pattern)null, false);",
        "326": "  }",
        "328": "  @Override",
        "329": "  public HTableDescriptor[] listTables(Pattern pattern) throws IOException {",
        "330": "    return listTables(pattern, false);",
        "587": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "588": "   * immediate. Consider using {@link #listTables(java.util.regex.Pattern) } and",
        "786": "    List<HTableDescriptor> failed = new LinkedList<HTableDescriptor>();",
        "787": "    for (HTableDescriptor table : listTables(pattern)) {",
        "2745": "  @Override",
        "331": "  }",
        "2747": "      String snapshotNameRegex) throws IOException {",
        "2748": "    return listTableSnapshots(Pattern.compile(tableNameRegex), Pattern.compile(snapshotNameRegex));",
        "2746": "  public List<SnapshotDescription> listTableSnapshots(String tableNameRegex,"
      },
      "id": 116060419,
      "filename": "HBaseAdmin.java"
    },
    {
      "repo": "https://github.com/fanhongtao/java.old.git",
      "language": "Java",
      "linescount": 221,
      "location": "/Dharma/src/java/org/fanhongtao/tools/dbviewer",
      "name": "java.old",
      "url": "https://searchcode.com/codesearch/view/111911903/",
      "md5hash": "c3254f2efa342a150c04f40fa8b847f2",
      "lines": {
        "97": "    {",
        "98": "        listTables = new JList();",
        "99": "        listTables.setMinimumSize(new Dimension(100, 200));",
        "100": "        // listTables.setSize(100, 200);",
        "101": "        listTables.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // \u8bbe\u7f6e\u201c\u5355\u9009\u201d",
        "102": "        listTables.addListSelectionListener(new ListSelectionListener()",
        "39": "    /** \u663e\u793a\u6570\u636e\u5e93\u4e2d\u8868\u7684List */",
        "40": "    private JList listTables;",
        "169": "            // ListModel model = listTables.getModel();",
        "106": "            {",
        "103": "        {",
        "174": "            mrs.close();",
        "175": "            listTables.setModel(model);",
        "168": "            DefaultListModel model = new DefaultListModel();",
        "107": "                String tableName = (String) listTables.getSelectedValue();"
      },
      "id": 111911903,
      "filename": "DBViewerFrame.java"
    },
    {
      "repo": "https://github.com/alibaba/wasp.git",
      "language": "Java",
      "linescount": 726,
      "location": "/src/test/java/com/alibaba/wasp/client",
      "name": "wasp",
      "url": "https://searchcode.com/codesearch/view/75827028/",
      "md5hash": "dff6c1e704a4ebc97194c10385be5bac",
      "lines": {
        "176": "    tables = admin.listTables();",
        "204": "    tables = admin.listTables();",
        "200": "        .setBoolean(\"wasp.online.schema.update.enable\", false);",
        "201": "    FTable[] tables = admin.listTables();",
        "203": "    TEST_UTIL.createTable(tableName);",
        "172": "  public void testCreateTable() throws IOException {",
        "173": "    FTable[] tables = admin.listTables();",
        "175": "    TEST_UTIL.createTable(Bytes.toBytes(\"testCreateTable\"));"
      },
      "id": 75827028,
      "filename": "TestAdmin.java"
    },
    {
      "repo": "https://github.com/DWB-eHealth/aws-sdk-java.git",
      "language": "Java",
      "linescount": 2913,
      "location": "/src/main/java/com/amazonaws/services/dynamodbv2",
      "name": "aws-sdk-java",
      "url": "https://searchcode.com/codesearch/view/99355554/",
      "md5hash": "bb3fb0230c336ad3eabcd3d60ea96869",
      "lines": {
        "1184": "        try {",
        "1157": "     * Returns an array of table names associated with the current account",
        "1158": "     * and endpoint. The output from <i>ListTables</i> is paginated, with",
        "1161": "     *",
        "1162": "     * @param listTablesRequest Container for the necessary parameters to",
        "1163": "     *           execute the ListTables service method on AmazonDynamoDBv2.",
        "1164": "     * ",
        "1165": "     * @return The response from the ListTables service method, as returned",
        "1177": "     */",
        "1178": "    public ListTablesResult listTables(ListTablesRequest listTablesRequest) {",
        "1179": "        ExecutionContext executionContext = createExecutionContext(listTablesRequest);",
        "1180": "        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();",
        "1181": "        awsRequestMetrics.startEvent(Field.ClientExecuteTime);",
        "1182": "        Request<ListTablesRequest> request = null;",
        "1183": "        Response<ListTablesResult> response = null;"
      },
      "id": 99355554,
      "filename": "AmazonDynamoDBClient.java"
    },
    {
      "repo": "https://github.com/jy4618272/hindex.git",
      "language": "Java",
      "linescount": 2429,
      "location": "/src/main/java/org/apache/hadoop/hbase/client",
      "name": "hindex",
      "url": "https://searchcode.com/codesearch/view/92486961/",
      "md5hash": "9add9b3c477b906b5b61a5377c59bc78",
      "lines": {
        "288": "   */",
        "290": "    List<HTableDescriptor> matched = new LinkedList<HTableDescriptor>();",
        "291": "    HTableDescriptor[] tables = listTables();",
        "680": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "681": "   * immediate. Consider using {@link #listTables(java.lang.String)} and",
        "813": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "814": "   * immediate. Consider using {@link #listTables(java.lang.String)} and",
        "305": "   * @throws IOException if a remote or network exception occurs",
        "306": "   * @see #listTables(java.util.regex.Pattern)",
        "307": "   */",
        "276": "   */",
        "277": "  public HTableDescriptor[] listTables() throws IOException {",
        "278": "    return this.connection.listTables();",
        "279": "  }",
        "286": "   * @throws IOException if a remote or network exception occurs",
        "287": "   * @see #listTables()"
      },
      "id": 92486961,
      "filename": "HBaseAdmin.java"
    },
    {
      "repo": "https://github.com/nic9805/jeecg.git",
      "language": "Java",
      "linescount": 778,
      "location": "/jeecg-framework/src/main/java/org/jeecgframework/web/cgform/service/migrate",
      "name": "jeecg",
      "url": "https://searchcode.com/codesearch/view/93181883/",
      "md5hash": "8c70bc367ac5bba06d528bf3558527c9",
      "lines": {
        "160": "\t\tList<DBTable> listTables = new ArrayList<DBTable>();// SQL\u8bed\u53e5\u5217\u8868",
        "161": "\t\tlistTables.clear();",
        "162": "\t\tString ls_sql = \"\";",
        "172": "\t\t\tls_sql = \"select * from cgform_head where id='\" + id + \"'\"; // \u83b7\u5f97\u5bfc\u51fa\u8868\u5355",
        "173": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_sql, CgFormHeadPojo.class, jdbcTemplate));",
        "175": "\t\t\tls_tmpsql = \"select * from cgform_field where table_id='\" + id + \"'\"; // \u83b7\u5f97\u5bfc\u51fa\u8868\u5355\u7684\u5b57\u6bb5",
        "176": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_tmpsql, CgFormFieldPojo.class, jdbcTemplate));",
        "178": "\t\t\tls_tmpsql = \"select * from cgform_button where form_id ='\" + id + \"'\";",
        "179": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_tmpsql, CgformButtonEntity.class, jdbcTemplate));",
        "181": "\t\t\tls_tmpsql = \"select * from cgform_enhance_js where form_id ='\" + id + \"'\";",
        "182": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_tmpsql, CgformEnhanceJsEntity.class, jdbcTemplate));",
        "184": "\t\t\tls_tmpsql = \"select * from cgform_button_sql where form_id ='\" + id + \"'\";",
        "185": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_tmpsql, CgformButtonSqlEntity.class, jdbcTemplate));",
        "187": "\t\t\tls_tmpsql = \"select * from cgform_ftl where cgform_id ='\" + id + \"'\";",
        "188": "\t\t\tlistTables.add(bulidDbTableFromSQL(ls_tmpsql, CgformFtlEntity.class, jdbcTemplate));",
        "159": "\tpublic static List<DBTable> buildExportDbTableList(String ids, JdbcTemplate jdbcTemplate) throws Exception {"
      },
      "id": 93181883,
      "filename": "MigrateForm.java"
    },
    {
      "repo": "https://github.com/haoyuan/hbase.git",
      "language": "Java",
      "linescount": 3437,
      "location": "/hbase-client/src/main/java/org/apache/hadoop/hbase/client",
      "name": "hbase",
      "url": "https://searchcode.com/codesearch/view/94576826/",
      "md5hash": "2247d5e38b8da2aa01353d3c9e5d59fa",
      "lines": {
        "1025": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "322": "   */",
        "323": "  public HTableDescriptor[] listTables() throws IOException {",
        "324": "    return this.connection.listTables();",
        "325": "  }",
        "924": "    for (HTableDescriptor table : listTables(pattern)) {",
        "332": "   * @throws IOException if a remote or network exception occurs",
        "333": "   * @see #listTables()",
        "334": "   */",
        "915": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "916": "   * immediate. Consider using {@link #listTables(java.util.regex.Pattern) } and",
        "900": "   * immediate. Consider using {@link #listTables(java.lang.String)} and",
        "923": "    List<HTableDescriptor> failed = new LinkedList<HTableDescriptor>();",
        "899": "   * Warning: Use this method carefully, there is no prompting and the effect is",
        "1026": "   * immediate. Consider using {@link #listTables(java.lang.String)} and"
      },
      "id": 94576826,
      "filename": "HBaseAdmin.java"
    },
    {
      "repo": "https://github.com/keyanmca/aws-sdk-android.git",
      "language": "Java",
      "linescount": 2854,
      "location": "/src/com/amazonaws/services/dynamodbv2",
      "name": "aws-sdk-android",
      "url": "https://searchcode.com/codesearch/view/96082030/",
      "md5hash": "14f55cf02f2a13cb6ff3d3cc9039bf73",
      "lines": {
        "992": "    public ListTablesResult listTables(ListTablesRequest listTablesRequest) {",
        "993": "        ExecutionContext executionContext = createExecutionContext(listTablesRequest);",
        "994": "        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();",
        "1190": "     */",
        "1191": "    public ListTablesResult listTables() throws AmazonServiceException, AmazonClientException {",
        "1192": "        return listTables(new ListTablesRequest());",
        "1193": "    }",
        "975": "     *",
        "976": "     * @param listTablesRequest Container for the necessary parameters to",
        "977": "     *           execute the ListTables service method on AmazonDynamoDBv2.",
        "978": "     * ",
        "979": "     * @return The response from the ListTables service method, as returned",
        "1177": "     * ",
        "1178": "     * @return The response from the ListTables service method, as returned",
        "991": "     */"
      },
      "id": 96082030,
      "filename": "AmazonDynamoDBClient.java"
    },
    {
      "repo": "https://github.com/DWB-eHealth/aws-sdk-java.git",
      "language": "Java",
      "linescount": 2319,
      "location": "/src/main/java/com/amazonaws/services/dynamodbv2",
      "name": "aws-sdk-java",
      "url": "https://searchcode.com/codesearch/view/99355549/",
      "md5hash": "7351b16d142f911b03ac63b1a1a1c449",
      "lines": {
        "772": "     * Returns an array of table names associated with the current account",
        "773": "     * and endpoint. The output from <i>ListTables</i> is paginated, with",
        "776": "     *",
        "777": "     * @param listTablesRequest Container for the necessary parameters to",
        "778": "     *           execute the ListTables service method on AmazonDynamoDBv2.",
        "779": "     * ",
        "780": "     * @return The response from the ListTables service method, as returned",
        "1805": "     * ",
        "1806": "     * @return The response from the ListTables service method, as returned",
        "911": "     * Returns an array of table names associated with the current account",
        "912": "     * and endpoint. The output from <i>ListTables</i> is paginated, with",
        "915": "     * ",
        "916": "     * @return The response from the ListTables service method, as returned",
        "792": "     */",
        "793": "    public ListTablesResult listTables(ListTablesRequest listTablesRequest) "
      },
      "id": 99355549,
      "filename": "AmazonDynamoDB.java"
    },
    {
      "repo": "https://github.com/mkeesey/revori.git",
      "language": "Java",
      "linescount": 2815,
      "location": "/server/src/main/java/com/readytalk/revori/server",
      "name": "revori",
      "url": "https://searchcode.com/codesearch/view/72891980/",
      "md5hash": "f7566a3c8ed9613597af4f6b90f6307b",
      "lines": {
        "288": "",
        "289": "      this.listTables = new QueryTemplate",
        "1604": "        QueryResult result = Revisions.Empty.diff",
        "1605": "          (dbHead(client), client.server.listTables,",
        "1329": "          (dbHead(client), client.server.listTables,",
        "187": "    public final PatchTemplate insertOrUpdateTable;",
        "188": "    public final QueryTemplate listTables;",
        "1328": "        QueryResult result = Revisions.Empty.diff"
      },
      "id": 72891980,
      "filename": "SQLServer.java"
    },
    {
      "repo": "https://github.com/keyanmca/aws-sdk-android.git",
      "language": "Java",
      "linescount": 2277,
      "location": "/src/com/amazonaws/services/dynamodbv2",
      "name": "aws-sdk-android",
      "url": "https://searchcode.com/codesearch/view/96082024/",
      "md5hash": "c639df52dbdda49dba587c6f38512ebd",
      "lines": {
        "608": "     *",
        "609": "     * @param listTablesRequest Container for the necessary parameters to",
        "610": "     *           execute the ListTables service method on AmazonDynamoDBv2.",
        "1827": "     * ",
        "1828": "     * @return The response from the ListTables service method, as returned",
        "1798": "     * @param exclusiveStartTableName The name of the table that starts the",
        "1799": "     * list. If you already ran a <i>ListTables</i> operation and received a",
        "1803": "     * ",
        "1804": "     * @return The response from the ListTables service method, as returned",
        "1775": "     * ",
        "1776": "     * @return The response from the ListTables service method, as returned",
        "1841": "    public ListTablesResult listTables(Integer limit)",
        "1816": "     */",
        "1817": "    public ListTablesResult listTables(String exclusiveStartTableName, Integer limit)",
        "1840": "     */"
      },
      "id": 96082024,
      "filename": "AmazonDynamoDB.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 226,
      "source": "Github",
      "id": 2
    },
    {
      "count": 60,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 12,
      "source": "Google Code",
      "id": 1
    }
  ]
}