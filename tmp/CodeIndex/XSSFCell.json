{
  "matchterm": "XSSFCell",
  "previouspage": null,
  "searchterm": "XSSFCell",
  "query": "XSSFCell",
  "language_filters": [
    {
      "count": 51,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 51,
  "results": [
    {
      "repo": "https://bitbucket.org/rapidpm/tablemodell.git",
      "language": "Java",
      "linescount": 710,
      "location": "/src/org/rapidpm/data/table/importer/xlsx",
      "name": "tablemodell",
      "url": "https://searchcode.com/codesearch/view/37860156/",
      "md5hash": "e03479193feb818d2f288147b1e378d5",
      "lines": {
        "35": "    public enum Alignment {",
        "36": "        HORIZONTAL_LEFT(XSSFCellStyle.ALIGN_LEFT),",
        "37": "        HORIZONTAL_CENTER(XSSFCellStyle.ALIGN_CENTER),",
        "38": "        HORIZONTAL_RIGHT(XSSFCellStyle.ALIGN_RIGHT),",
        "39": "        VERTICAL_TOP(XSSFCellStyle.VERTICAL_TOP),",
        "40": "        VERTICAL_CENTER(XSSFCellStyle.VERTICAL_CENTER),",
        "41": "        VERTICAL_BOTTOM(XSSFCellStyle.VERTICAL_BOTTOM);",
        "42": "",
        "50": "    public enum Border {",
        "51": "        DASH_DOT(XSSFCellStyle.BORDER_DASH_DOT),",
        "52": "        DASH_DOT_DOT(XSSFCellStyle.BORDER_DASH_DOT_DOT),",
        "53": "        DASHED(XSSFCellStyle.BORDER_DASHED),",
        "54": "        DOTTED(XSSFCellStyle.BORDER_DOTTED),",
        "55": "        DOUBLE(XSSFCellStyle.BORDER_DOUBLE),",
        "56": "        HAIR(XSSFCellStyle.BORDER_HAIR),"
      },
      "id": 37860156,
      "filename": "XSSFAssistant.java"
    },
    {
      "repo": "https://bitbucket.org/rapidpm/tablemodell.git",
      "language": "Java",
      "linescount": 107,
      "location": "/src/org/rapidpm/data/table/export",
      "name": "tablemodell",
      "url": "https://searchcode.com/codesearch/view/37860178/",
      "md5hash": "44b86ac9fbf3c35cb8d792fa6a92ad96",
      "lines": {
        "64": "                    if (cellType.equals(CellTypeEnum.RawData)) {",
        "65": "                        xssfCell.setCellValue(cell.getFormattedValue());",
        "66": "                        xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING); //TODO CellType in Abh?ngigkeit der ValueClass z.B. Number",
        "67": "                    } else if (cellType.equals(CellTypeEnum.RawLink)) {",
        "71": "                        xssfHyperlink.setLabel(cell.getLabel());",
        "72": "                        xssfCell.setCellValue(cell.getLabel());",
        "73": "                        xssfCell.setHyperlink(xssfHyperlink);",
        "74": "",
        "75": "                        final CellStyle hlink_style = createHyperLinkStyle(workbook);",
        "76": "                        xssfCell.setCellStyle(hlink_style);",
        "45": "            if (information.isExportable()) {",
        "46": "                final XSSFCell xssfCell = xssfHeaderRow.createCell(information.getSpaltenNr());",
        "47": "                xssfCell.setCellValue(information.getSpaltenName());",
        "48": "                xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING);",
        "49": "            } else {"
      },
      "id": 37860178,
      "filename": "Table2XLSX.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 349,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854552/",
      "md5hash": "999bd42f43674782a2cdf4ddecdfd4a9",
      "lines": {
        "32": "    ",
        "33": "    private static Map<XSSFWorkbook,Map<Color,XSSFCellStyle>> colourStylesForWorkbook = new HashMap<XSSFWorkbook, Map<Color,XSSFCellStyle>>();",
        "34": "",
        "35": "    private XSSFCell theCell;",
        "98": "        }",
        "40": "",
        "41": "    public CellXSSFImpl(XSSFWorkbook workbook, XSSFCell theCell) {",
        "10": "import org.apache.log4j.Logger;",
        "11": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "12": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "13": "import org.apache.poi.xssf.usermodel.XSSFColor;",
        "96": "        else if (theCell.getCellType() == XSSFCell.CELL_TYPE_BOOLEAN) {",
        "99": "        else if (theCell.getCellType() == XSSFCell.CELL_TYPE_ERROR) {",
        "92": "    public String getValue() {",
        "93": "        if (theCell.getCellType() == XSSFCell.CELL_TYPE_BLANK) {",
        "95": "        }"
      },
      "id": 72854552,
      "filename": "CellXSSFImpl.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 291,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854562/",
      "md5hash": "6097966462091e76b85ae67e547abd0b",
      "lines": {
        "256": "        }",
        "257": "        XSSFCell xssfCell = xssfRow.getCell(setCellValue.getCol());",
        "258": "        if (xssfCell == null && setCellValue.getNewValue() != null) {",
        "259": "            xssfCell = xssfRow.createCell(setCellValue.getCol());",
        "260": "        }",
        "261": "        if (xssfCell != null) {",
        "262": "            if (setCellValue.getNewValue() != null) {",
        "263": "                xssfCell.setCellValue(new XSSFRichTextString(setCellValue.getNewValue().toString()));",
        "265": "            else {",
        "266": "                xssfRow.removeCell(xssfCell);",
        "15": "import org.apache.poi.ss.usermodel.Name;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCell;"
      },
      "id": 72854562,
      "filename": "WorkbookXSSFImpl.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1242,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970692/",
      "md5hash": "7da77111e27cd710cd143cdee57bc0a6",
      "lines": {
        "384": "            \t\tTreeMap<Integer, XSSFCell> cells = new TreeMap<Integer, XSSFCell>(oldCells);",
        "448": "        for (Entry<Integer, TreeMap<Integer, XSSFCell>> entry : rowCells.entrySet()) {",
        "450": "        \tfinal TreeMap<Integer, XSSFCell> cells = entry.getValue();",
        "449": "        \tfinal int rownum = entry.getKey().intValue();",
        "456": "        \t}",
        "457": "        \tfor(Entry<Integer, XSSFCell> cellentry : cells.entrySet()) {",
        "458": "        \t\tfinal int colnum = cellentry.getKey().intValue();",
        "781": "    \t//update the cells",
        "782": "    \tfor(XSSFCell srcCell: rowCells) {",
        "148": "    \tfinal short srcHeight = srcRow != null ? srcRow.getHeight() : -1;",
        "149": "//    \tfinal XSSFCellStyle srcStyle = srcRow != null ? srcRow.getRowStyle() : null;",
        "55": "import org.zkoss.poi.xssf.model.CommentsTable;",
        "56": "import org.zkoss.poi.xssf.usermodel.XSSFCell;",
        "57": "import org.zkoss.poi.xssf.usermodel.XSSFCellHelper;",
        "58": "import org.zkoss.poi.xssf.usermodel.XSSFDrawing;",
        "383": "            \tif (!oldCells.isEmpty()) {",
        "447": "        //really update the row's cells"
      },
      "id": 3970692,
      "filename": "XSSFSheetImpl.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 5111,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970697/",
      "md5hash": "f6740268ba4be4778508748ca1c3becc",
      "lines": {
        "1792": "        } else {",
        "1793": "        \tsetXSSFCellPtgs((XSSFCell)cell, ptgs);",
        "2402": "\t\t\t\t\tshiftXSSFFormulas(shifter2007, sheetIndex, (XSSFCell)srcCell, (XSSFWorkbook)srcBook);",
        "2401": "\t\t\t\t} else {",
        "4466": "\tpublic static void assignCell(XSSFCell srcCell, XSSFCell dstCell) {",
        "1070": "\t\tcase Cell.CELL_TYPE_FORMULA:",
        "1071": "\t\t\treturn \"=\"+(cell instanceof XSSFCell ? getFormulaString((XSSFCell)cell) : cell.getCellFormula());",
        "4465": "    //20100916, henrichen@zkoss.org: assign a destination cell per the given source cell except the row and column address",
        "1810": "\t}",
        "1811": "\tprivate static void setXSSFCellPtgs(XSSFCell cell, Ptg[] ptgs) {",
        "4504": "\t\t} else {",
        "4505": "\t\t\t((XSSFCellStyle)newCellStyle).setFillForegroundColor((XSSFColor)xlsColor);",
        "987": "\t\t\t\telse",
        "988": "\t\t\t\t\treturn ((XSSFCell)cell).getEvalHyperlink();",
        "1821": "\t\t\treturn getHSSFPtgs((HSSFCell)cell);",
        "1822": "\t\t} else if (cell instanceof XSSFCell) {"
      },
      "id": 3970697,
      "filename": "BookHelper.java"
    },
    {
      "repo": "https://gitlab.com/jforge/Modules.git",
      "language": "Java",
      "linescount": 126,
      "location": "/_deactivated/cdi-tablemodel/src/main/java/org/rapidpm/data/table/export",
      "name": "Modules",
      "url": "https://searchcode.com/codesearch/view/115088748/",
      "md5hash": "afac3844787763a363133f64554db882",
      "lines": {
        "64": "            if (information.isExportable()) {",
        "65": "                final XSSFCell xssfCell = xssfHeaderRow.createCell(information.getSpaltenNr());",
        "66": "                xssfCell.setCellValue(information.getSpaltenName());",
        "67": "                xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING);",
        "68": "            } else {",
        "92": "                        xssfCell.setHyperlink(xssfHyperlink);",
        "93": "",
        "80": "                if (cell.getColInfo().isExportable()) {",
        "81": "                    final XSSFCell xssfCell = xssfRow.createCell(cell.getColInfo().getSpaltenNr());",
        "83": "                    if (cellType.equals(CellTypeEnum.RawData)) {",
        "84": "                        xssfCell.setCellValue(cell.getFormattedValue());",
        "85": "                        xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING); //JIRA MOD-32 CellType in Abh\ucc44ngigkeit der ValueClass z.B. Number",
        "91": "                        xssfCell.setCellValue(cell.getLabel());",
        "28": "import org.apache.poi.ss.usermodel.IndexedColors;",
        "29": "import org.apache.poi.xssf.usermodel.XSSFCell;"
      },
      "id": 115088748,
      "filename": "Table2XLSX.java"
    },
    {
      "repo": "https://gitlab.com/jforge/Modules.git",
      "language": "Java",
      "linescount": 376,
      "location": "/_deactivated/javafx-filtered-tableview/src/main/java/org/rapidpm/modul/javafx/tableview/filtered/contextmenue",
      "name": "Modules",
      "url": "https://searchcode.com/codesearch/view/115088176/",
      "md5hash": "a08ae3a3ea52f96da725f24765898b8d",
      "lines": {
        "320": "                xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING);",
        "321": "            }",
        "40": "import javafx.stage.FileChooser;",
        "41": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "301": "            final String columnText = column.getText();",
        "302": "            final XSSFCell xssfCell = xssfHeaderRow.createCell(colNr);",
        "303": "            colNr = colNr + 1;",
        "304": "            xssfCell.setCellValue(columnText);",
        "305": "            xssfCell.setCellType(XSSFCell.CELL_TYPE_STRING);",
        "306": "        }",
        "316": "            for (final String s : split) {",
        "317": "                final XSSFCell xssfCell = xssfRow.createCell(cellNr);",
        "318": "                cellNr = cellNr + 1;",
        "319": "                xssfCell.setCellValue(s);"
      },
      "id": 115088176,
      "filename": "FilteredTableContextMenu.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854574/",
      "md5hash": "89d090836d344e0f32e8aeef1b00d9eb",
      "lines": {
        "144": "        }",
        "65": "        \t\tfor (int cellIndex = firstCell ; cellIndex <= lastCell;cellIndex++) {",
        "66": "        \t\t\tXSSFCell cell = row.getCell(cellIndex);",
        "158": "        }",
        "145": "        XSSFCell hssfCell = hssfRow.getCell(col);",
        "168": "        if(theRow != null) {",
        "169": "            XSSFCell theCell = theRow.getCell(col);",
        "13": "import org.apache.poi.ss.util.CellRangeAddressList;",
        "14": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "159": "        XSSFCell cell = hssfRow.getCell(col);"
      },
      "id": 72854574,
      "filename": "SheetXSSFImpl.java"
    },
    {
      "repo": "http://filesearch.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 204,
      "location": "/filesearch/SearchLocalFile/src/com/searchlocal/filereader",
      "name": "filesearch",
      "url": "https://searchcode.com/codesearch/view/14046020/",
      "md5hash": "5f77e78c971a439abb336bfd6fed2512",
      "lines": {
        "182": "\t\t\tbreak;",
        "104": "\t\tXSSFRow row;",
        "105": "\t\tXSSFCell cell;",
        "171": "\t\tswitch (cellType) {",
        "172": "\t\tcase XSSFCell.CELL_TYPE_NUMERIC:",
        "16": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "179": "\t\t\tbreak;",
        "180": "\t\tcase XSSFCell.CELL_TYPE_STRING:",
        "118": "\t\t\t\t\tfor (Iterator iter = row.cellIterator(); iter.hasNext();) {",
        "119": "\t\t\t\t\t\tcell = (XSSFCell) iter.next();",
        "169": "\tprivate static String getCellValue(XSSFCell cell, int cellType) {",
        "168": "",
        "183": "\t\tcase XSSFCell.CELL_TYPE_BOOLEAN:"
      },
      "id": 14046020,
      "filename": "ExcelReader.java"
    },
    {
      "repo": "https://bitbucket.org/tomas12/laguna.git",
      "language": "Java",
      "linescount": 869,
      "location": "/src/main/java/Excel",
      "name": "Laguna",
      "url": "https://searchcode.com/codesearch/view/91974058/",
      "md5hash": "6e91f341ca470ddad3adac6f482a8d65",
      "lines": {
        "64": "\t\t\tXSSFCellStyle dataStyle = xssfWorkbook.createCellStyle();",
        "129": "\t\t\t\t\t// Write data in data row",
        "130": "\t\t\t\t\tXSSFCell cell1 = dataRow.createCell(j + 2);",
        "419": "\t\t\t\t\t\tXSSFCell headerCell6 = row.createCell(kontaktperson1);",
        "433": "\t\t\t\t\t\tXSSFCell headerCell1 = row.createCell(0);",
        "418": "\t\t\t\t\t\t));",
        "14": "import org.apache.poi.ss.usermodel.HorizontalAlignment;",
        "15": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFFont;",
        "432": "",
        "404": "",
        "405": "\t\t\t\t\t\tXSSFCell headerCell1 = row.createCell(0);",
        "58": "\t\t\t// Create Styles for sheet.",
        "59": "\t\t\tXSSFCellStyle headerStyle = xssfWorkbook.createCellStyle();",
        "63": ""
      },
      "id": 91974058,
      "filename": "ExcelFamilienAU.java"
    },
    {
      "repo": "http://filesearch.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 241,
      "location": "/filesearch/SearchLocalFile/src/com/searchlocal/filereader",
      "name": "filesearch",
      "url": "https://searchcode.com/codesearch/view/14046019/",
      "md5hash": "be6ab22e16fe5ee369375c82e0f7f8c2",
      "lines": {
        "99": "\t\tXSSFRow row;",
        "100": "\t\tXSSFCell cell;",
        "179": "\t\tcase XSSFCell.CELL_TYPE_STRING:",
        "167": "",
        "168": "\tprivate static String get2007CellValue(XSSFCell cell, int cellType) {",
        "170": "\t\tswitch (cellType) {",
        "171": "\t\tcase XSSFCell.CELL_TYPE_NUMERIC:",
        "109": "\t\t\t\t\tfor (Iterator iter = row.cellIterator(); iter.hasNext();) {",
        "110": "\t\t\t\t\t\tcell = (XSSFCell) iter.next();",
        "178": "\t\t\tbreak;",
        "19": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "20": "import org.apache.poi.xssf.usermodel.XSSFCell;"
      },
      "id": 14046019,
      "filename": "ExcelToDicReader.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 37,
      "location": "/zss/src/org/zkoss/poi/xssf/usermodel",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970561/",
      "md5hash": "02ed993fec64ab74dcc825ca91668039",
      "lines": {
        "32": "\t",
        "1": "/* XSSFCellHelper.java",
        "2": "",
        "35": "\t}",
        "33": "\tpublic static XSSFCell createCell(XSSFRow row, CTCell cell) {",
        "34": "\t\treturn new XSSFCell(row, cell);",
        "17": "/**",
        "18": " * A helper class to make XSSFCell package method visible.",
        "21": " */",
        "22": "public class XSSFCellHelper {",
        "23": "\tprivate final XSSFCell _cell;",
        "24": "\t",
        "25": "\tpublic XSSFCellHelper(XSSFCell cell) {"
      },
      "id": 3970561,
      "filename": "XSSFCellHelper.java"
    },
    {
      "repo": "http://patiprototype.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 70,
      "location": "/src/com/uspto/pati/Redbook",
      "name": "patiprototype",
      "url": "https://searchcode.com/codesearch/view/13991127/",
      "md5hash": "191dd5f6a8c4a5c2486c6d4fc7c87955",
      "lines": {
        "48": "            \t  XSSFCell myCell = (XSSFCell) cellIter.next();",
        "5": "",
        "6": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "63": "                XSSFCell myCell = (XSSFCell)cellStoreVector.elementAt(j);",
        "62": "            for (int j=0; j < cellStoreVector.size();j++){",
        "47": "              while(cellIter.hasNext()){"
      },
      "id": 13991127,
      "filename": "ReadExcelFile.java"
    },
    {
      "repo": "https://github.com/larsduvaas/Play-test.git",
      "language": "Java",
      "linescount": 248,
      "location": "/app/models",
      "name": "Play-test",
      "url": "https://searchcode.com/codesearch/view/109874113/",
      "md5hash": "391100d519f4acfd148fc454f99cbd02",
      "lines": {
        "80": "        static Column get(XSSFCell cell) {",
        "98": "",
        "99": "    public void addCell(XSSFCell cell) {",
        "196": "",
        "197": "    private void setWidth(XSSFCell cell) {",
        "6": "import org.apache.commons.lang.StringUtils;",
        "7": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "235": "",
        "236": "    private void newPT(XSSFCell cell) {",
        "79": ""
      },
      "id": 109874113,
      "filename": "ProductBuilder.java"
    },
    {
      "repo": "https://bitbucket.org/manticoretrader/etltools",
      "language": "Java",
      "linescount": 317,
      "location": "/src/com/manticore/report",
      "name": "etltools",
      "url": "https://searchcode.com/codesearch/view/121321564/",
      "md5hash": "b476b10c4827335f24ae6b4baf18acfc",
      "lines": {
        "165": "      org.apache.poi.ss.usermodel.Font f;",
        "166": "      if (cellStyle1 instanceof XSSFCellStyle) {",
        "167": "        XSSFCell xssfCell = (XSSFCell) cell;",
        "168": "        XSSFCellStyle xssfCellStyle = xssfCell.getCellStyle();",
        "169": "",
        "170": "        XSSFColor fillForegroundColorColor = xssfCellStyle.getFillForegroundColorColor();",
        "171": "        if (fillForegroundColorColor == null) {",
        "172": "          short fillId = (short) xssfCellStyle.getCoreXf().getFillId();",
        "173": "          XSSFCellFill fill = ((XSSFWorkbook) designer.workbook).getStylesSource().getFillAt(fillId);",
        "17": "import org.apache.poi.ss.usermodel.*;",
        "18": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "19": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "20": "import org.apache.poi.xssf.usermodel.XSSFColor;",
        "22": "import org.apache.poi.xssf.usermodel.XSSFWorkbook;",
        "23": "import org.apache.poi.xssf.usermodel.extensions.XSSFCellFill;"
      },
      "id": 121321564,
      "filename": "CellRenderer.java"
    },
    {
      "repo": "https://bitbucket.org/tomas12/laguna.git",
      "language": "Java",
      "linescount": 247,
      "location": "/src/main/java/Excel",
      "name": "Laguna",
      "url": "https://searchcode.com/codesearch/view/91974011/",
      "md5hash": "804be23326fed0b1aedc784c78f111a0",
      "lines": {
        "128": "\t\t\tXSSFCell nachnameCell = headerRow.createCell(1);",
        "134": "\t\t\t\tfor (String spaltenname : spalten) {",
        "135": "\t\t\t\t\tXSSFCell headerCell1 = headerRow.createCell(count);",
        "169": "\t\t\t\t\t\t\t\t// Write data in data row",
        "170": "\t\t\t\t\t\t\t\tXSSFCell cell1 = dataRow.createCell(j",
        "50": "\t\t\t// Create Styles for sheet.",
        "15": "import org.apache.poi.ss.usermodel.HorizontalAlignment;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "18": "import org.apache.poi.xssf.usermodel.XSSFFont;",
        "51": "\t\t\tXSSFCellStyle headerStyle = xssfWorkbook.createCellStyle();",
        "148": "",
        "149": "\t\t\t\tXSSFCell familien_cell = dataRow.createCell(0);",
        "153": "",
        "154": "\t\t\t\tXSSFCell familien_cell1 = dataRow.createCell(1);",
        "127": ""
      },
      "id": 91974011,
      "filename": "ExcelFamilieBetreuung.java"
    },
    {
      "repo": "https://bitbucket.org/tomas12/laguna.git",
      "language": "Java",
      "linescount": 237,
      "location": "/src/main/java/Excel",
      "name": "Laguna",
      "url": "https://searchcode.com/codesearch/view/91974041/",
      "md5hash": "f275500397a5474f8aea12a4a7ca4364",
      "lines": {
        "48": "\t\t\t// Create Styles for sheet.",
        "132": "\t\t\t\tfor (String spaltenname : spalten) {",
        "133": "\t\t\t\t\tXSSFCell headerCell1 = headerRow.createCell(count);",
        "49": "\t\t\tXSSFCellStyle headerStyle = xssfWorkbook.createCellStyle();",
        "168": "\t\t\t\t\t\t\t\tXSSFCell cell1 = dataRow.createCell(j",
        "167": "\t\t\t\t\t\t\t\t// Write data in data row",
        "146": "",
        "15": "import org.apache.poi.ss.usermodel.HorizontalAlignment;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "18": "import org.apache.poi.xssf.usermodel.XSSFFont;",
        "147": "\t\t\t\tXSSFCell betreuerinnen_cell = dataRow.createCell(0);",
        "53": "",
        "54": "\t\t\tXSSFCellStyle dataStyle = xssfWorkbook.createCellStyle();",
        "151": "",
        "152": "\t\t\t\tXSSFCell betreuerinnen_cell1 = dataRow.createCell(1);"
      },
      "id": 91974041,
      "filename": "ExcelBetreuerinZahlungen.java"
    },
    {
      "repo": "https://bitbucket.org/tomas12/laguna.git",
      "language": "Java",
      "linescount": 234,
      "location": "/src/main/java/Excel",
      "name": "Laguna",
      "url": "https://searchcode.com/codesearch/view/91974043/",
      "md5hash": "1192cdefe489c458a749cac9a42e0a69",
      "lines": {
        "133": "\t\t\t\tfor (String spaltenname : spalten) {",
        "134": "\t\t\t\t\tXSSFCell headerCell1 = headerRow.createCell(count);",
        "49": "\t\t\t// Create Styles for sheet.",
        "168": "\t\t\t\t\t\t\t\t// Write data in data row",
        "169": "\t\t\t\t\t\t\t\tXSSFCell cell1 = dataRow.createCell(j",
        "50": "\t\t\tXSSFCellStyle headerStyle = xssfWorkbook.createCellStyle();",
        "15": "import org.apache.poi.ss.usermodel.HorizontalAlignment;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "18": "import org.apache.poi.xssf.usermodel.XSSFFont;",
        "147": "",
        "148": "\t\t\t\tXSSFCell familien_cell = dataRow.createCell(0);",
        "54": "",
        "55": "\t\t\tXSSFCellStyle dataStyle = xssfWorkbook.createCellStyle();",
        "152": "",
        "153": "\t\t\t\tXSSFCell familien_cell1 = dataRow.createCell(1);"
      },
      "id": 91974043,
      "filename": "ExcelFamilieZahlungen.java"
    },
    {
      "repo": "https://bitbucket.org/tomas12/laguna.git",
      "language": "Java",
      "linescount": 250,
      "location": "/src/main/java/Excel",
      "name": "Laguna",
      "url": "https://searchcode.com/codesearch/view/91974062/",
      "md5hash": "27f140448c40e5f71bcb89342f4169ba",
      "lines": {
        "130": "",
        "131": "\t\t\tXSSFCell nachnameCell = headerRow.createCell(1);",
        "137": "\t\t\t\tfor (String spaltenname : spalten) {",
        "138": "\t\t\t\t\tXSSFCell headerCell1 = headerRow.createCell(count);",
        "172": "\t\t\t\t\t\t\t\t// Write data in data row",
        "173": "\t\t\t\t\t\t\t\tXSSFCell cell1 = dataRow.createCell(j",
        "15": "import org.apache.poi.ss.usermodel.HorizontalAlignment;",
        "16": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "17": "import org.apache.poi.xssf.usermodel.XSSFCellStyle;",
        "18": "import org.apache.poi.xssf.usermodel.XSSFFont;",
        "53": "\t\t\t// Create Styles for sheet.",
        "54": "\t\t\tXSSFCellStyle headerStyle = xssfWorkbook.createCellStyle();",
        "151": "",
        "152": "\t\t\t\tXSSFCell betreuerinnen_cell = dataRow.createCell(0);",
        "156": "",
        "157": "\t\t\t\tXSSFCell betreuerinnen_cell1 = dataRow.createCell(1);"
      },
      "id": 91974062,
      "filename": "ExcelBetreuerinBetreuung.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 28,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 15,
      "source": "Github",
      "id": 2
    },
    {
      "count": 6,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    }
  ]
}