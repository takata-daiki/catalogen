{
  "matchterm": "BATBlock",
  "previouspage": null,
  "searchterm": "BATBlock",
  "query": "BATBlock",
  "language_filters": [
    {
      "count": 10,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 10,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 270,
      "location": "/components/forks/poi/src/loci/poi/poifs/storage",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642267/",
      "md5hash": "885932bb4dd0ae3ebce214952c71770e",
      "lines": {
        "130": "     *",
        "131": "     * @return the newly created array of BATBlocks",
        "133": "",
        "134": "    public static BATBlock [] createXBATBlocks(final int [] entries,",
        "138": "            calculateXBATStorageRequirements(entries.length, size);",
        "139": "        BATBlock[] blocks      = new BATBlock[ block_count ];",
        "166": "     * Calculate how many BATBlocks are needed to hold a specified",
        "149": "                blocks[ index++ ] =",
        "54": "/**",
        "55": " * A block of block allocation table entries. BATBlocks are created",
        "56": " * only through a static factory method: createBATBlocks.",
        "57": " *",
        "60": "",
        "61": "public class BATBlock",
        "150": "                    new BATBlock(entries, j,",
        "165": "    /**"
      },
      "id": 15642267,
      "filename": "BATBlock.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 250,
      "location": "/components/forks/poi/src/loci/poi/poifs/storage",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642253/",
      "md5hash": "b135db390366ec303bafe303dc68de06",
      "lines": {
        "224": "               ? BATBlock.calculateXBATStorageRequirements(blockCount",
        "161": "            }",
        "162": "            rvalue = BATBlock.createXBATBlocks(excess_block_array,",
        "135": "",
        "136": "    public BATBlock [] setBATBlocks(final int blockCount,",
        "138": "    {",
        "139": "        BATBlock[] rvalue;",
        "204": "",
        "205": "    public void setSBATBlockCount(final int count)",
        "168": "            rvalue = BATBlock.createXBATBlocks(new int[ 0 ], 0, size);",
        "167": "        {",
        "223": "        return (blockCount > batsInHeader)"
      },
      "id": 15642253,
      "filename": "HeaderBlockWriter.java"
    },
    {
      "repo": "https://github.com/GhostInMatrix/HeritrixSpider2.git",
      "language": "Java",
      "linescount": 284,
      "location": "/src/org/archive/util/ms",
      "name": "HeritrixSpider2",
      "url": "https://searchcode.com/codesearch/view/95915639/",
      "md5hash": "93fc0c22e9705fb155dfa3e4c36c73e1",
      "lines": {
        "224": "        return batBlock.getInt(batBlockIndex * BAT_POINTER_SIZE);",
        "225": "    }",
        "262": "     */",
        "263": "    private ByteBuffer getBATBlock(int block) throws IOException {",
        "236": "        if (headerIndex < HEADER_BAT_LIMIT + 1) {",
        "237": "            return header.getBATBlockNumber(headerIndex);",
        "241": "        headerIndex -= HEADER_BAT_LIMIT;",
        "242": "        int xbatBlockNumber = headerIndex / POINTERS_PER_BAT;",
        "243": "        xbatBlockNumber += header.getExtendedBATStart();",
        "244": "        ByteBuffer xbat = getBATBlock(xbatBlockNumber);",
        "245": "",
        "246": "        // Find the bat Block number inside the XBAT block",
        "247": "        int xbatBlockIndex = headerIndex % POINTERS_PER_BAT;",
        "248": "        return xbat.getInt(xbatBlockIndex * BAT_POINTER_SIZE);",
        "223": "        ByteBuffer batBlock = getBATBlock(batBlockNumber);"
      },
      "id": 95915639,
      "filename": "DefaultBlockFileSystem.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 226,
      "location": "/components/forks/poi/src/loci/poi/poifs/storage",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642252/",
      "md5hash": "8450934a7708c91f77ff2df9934d6bd9",
      "lines": {
        "102": "            int calculated_bat_blocks  =",
        "103": "                BATBlock.calculateStorageRequirements(bat_blocks",
        "168": "    /**",
        "169": "     * create the BATBlocks",
        "74": "    private IntList    _entries;",
        "75": "    private BATBlock[] _blocks;",
        "173": "    {",
        "174": "        _blocks = BATBlock.createBATBlocks(_entries.toArray(), size);",
        "85": "        _entries     = new IntList();",
        "86": "        _blocks      = new BATBlock[ 0 ];",
        "89": "    /**",
        "90": "     * Create the BATBlocks we need"
      },
      "id": 15642252,
      "filename": "BlockAllocationTableWriter.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 313,
      "location": "/components/forks/poi/src/loci/poi/poifs/storage",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642268/",
      "md5hash": "10699ac97a28478662823933743971be",
      "lines": {
        "132": "            int chain_index           = xbat_index;",
        "133": "            int max_entries_per_block = BATBlock.entriesPerXBATBlock(size);",
        "134": "            int chain_index_offset    = BATBlock.getXBATChainOffset(size);",
        "135": "",
        "286": "    {",
        "287": "        int limit = BATBlock.entriesPerBlock(size);"
      },
      "id": 15642268,
      "filename": "BlockAllocationTableReader.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 615,
      "location": "/ppt/poi/org/apache/poi/poifs/filesystem",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97397929/",
      "md5hash": "5083d727a84f9c004bece7393d2ae9b8",
      "lines": {
        "360": "        header_block_writer.setSBATBlockCount(sbtw.getSBATBlockCount());",
        "359": "        // set the small block allocation table block count",
        "40": "import org.apache.poi.poifs.property.PropertyTable;",
        "41": "import org.apache.poi.poifs.storage.BATBlock;",
        "348": "        HeaderBlockWriter header_block_writer = new HeaderBlockWriter(bigBlockSize);",
        "349": "        BATBlock[]        xbat_blocks         =",
        "350": "            header_block_writer.setBATBlocks(bat.countBlocks(),",
        "351": "                                             batStartBlock);"
      },
      "id": 97397929,
      "filename": "POIFSFileSystem.java"
    },
    {
      "repo": "https://bitbucket.org/tanielp/heritrix-for-wsdl-crawl",
      "language": "Java",
      "linescount": 284,
      "location": "/commons/src/main/java/org/archive/util/ms",
      "name": "heritrix-for-wsdl-crawl",
      "url": "https://searchcode.com/codesearch/view/127095387/",
      "md5hash": "289d8b823bcd1a72e6edf5b5652773c4",
      "lines": {
        "224": "        return batBlock.getInt(batBlockIndex * BAT_POINTER_SIZE);",
        "225": "    }",
        "262": "     */",
        "263": "    private ByteBuffer getBATBlock(int block) throws IOException {",
        "236": "        if (headerIndex < HEADER_BAT_LIMIT + 1) {",
        "237": "            return header.getBATBlockNumber(headerIndex);",
        "241": "        headerIndex -= HEADER_BAT_LIMIT;",
        "242": "        int xbatBlockNumber = headerIndex / POINTERS_PER_BAT;",
        "243": "        xbatBlockNumber += header.getExtendedBATStart();",
        "244": "        ByteBuffer xbat = getBATBlock(xbatBlockNumber);",
        "245": "",
        "246": "        // Find the bat Block number inside the XBAT block",
        "247": "        int xbatBlockIndex = headerIndex % POINTERS_PER_BAT;",
        "248": "        return xbat.getInt(xbatBlockIndex * BAT_POINTER_SIZE);",
        "223": "        ByteBuffer batBlock = getBATBlock(batBlockNumber);"
      },
      "id": 127095387,
      "filename": "DefaultBlockFileSystem.java"
    },
    {
      "repo": "https://bitbucket.org/travisfw/heritrix3",
      "language": "Java",
      "linescount": 284,
      "location": "/commons/src/main/java/org/archive/util/ms",
      "name": "heritrix3",
      "url": "https://searchcode.com/codesearch/view/130732837/",
      "md5hash": "289d8b823bcd1a72e6edf5b5652773c4",
      "lines": {
        "224": "        return batBlock.getInt(batBlockIndex * BAT_POINTER_SIZE);",
        "225": "    }",
        "262": "     */",
        "263": "    private ByteBuffer getBATBlock(int block) throws IOException {",
        "236": "        if (headerIndex < HEADER_BAT_LIMIT + 1) {",
        "237": "            return header.getBATBlockNumber(headerIndex);",
        "241": "        headerIndex -= HEADER_BAT_LIMIT;",
        "242": "        int xbatBlockNumber = headerIndex / POINTERS_PER_BAT;",
        "243": "        xbatBlockNumber += header.getExtendedBATStart();",
        "244": "        ByteBuffer xbat = getBATBlock(xbatBlockNumber);",
        "245": "",
        "246": "        // Find the bat Block number inside the XBAT block",
        "247": "        int xbatBlockIndex = headerIndex % POINTERS_PER_BAT;",
        "248": "        return xbat.getInt(xbatBlockIndex * BAT_POINTER_SIZE);",
        "223": "        ByteBuffer batBlock = getBATBlock(batBlockNumber);"
      },
      "id": 130732837,
      "filename": "DefaultBlockFileSystem.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 522,
      "location": "/components/forks/poi/src/loci/poi/poifs/filesystem",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642276/",
      "md5hash": "821ddc8beda41ba4d7ad809592451995",
      "lines": {
        "258": "        HeaderBlockWriter header_block_writer = new HeaderBlockWriter(512);",
        "259": "        BATBlock[]        xbat_blocks         =",
        "260": "            header_block_writer.setBATBlocks(bat.countBlocks(),",
        "261": "                                             batStartBlock, 512);",
        "55": "import loci.poi.poifs.property.PropertyTable;",
        "56": "import loci.poi.poifs.storage.BATBlock;",
        "269": "        // set the small block allocation table block count",
        "270": "        header_block_writer.setSBATBlockCount(sbtw.getSBATBlockCount());"
      },
      "id": 15642276,
      "filename": "POIFSFileSystem.java"
    },
    {
      "repo": "https://github.com/JosePedroMarques/pathexplorers.git",
      "language": "Java",
      "linescount": 606,
      "location": "/aiad1/src/agents",
      "name": "pathexplorers",
      "url": "https://searchcode.com/codesearch/view/74635084/",
      "md5hash": "fc35ab78134d4fad0fad0c78933582a8",
      "lines": {
        "11": "",
        "12": "import org.apache.poi.poifs.storage.BATBlock;"
      },
      "id": 74635084,
      "filename": "ArmyUnit.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 8,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}