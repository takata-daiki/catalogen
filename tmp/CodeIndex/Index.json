{
  "matchterm": "Index",
  "previouspage": null,
  "searchterm": "Index",
  "query": "Index",
  "language_filters": [
    {
      "count": 298507,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 298506,
  "results": [
    {
      "repo": "http://ambulances.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 511,
      "location": "/src/java/edoc/src/topindex",
      "name": "ambulances",
      "url": "https://searchcode.com/codesearch/view/13899642/",
      "md5hash": "4865402c8a50cc9cac779e195f47d34b",
      "lines": {
        "32": "public class Index {",
        "1": "/*",
        "2": " * Index.java - Index binds document ID with classes and attributes IDs.",
        "99": "                                              String index_db_user,",
        "97": "                                              ",
        "7": "",
        "8": "package topindex;",
        "98": "                                              String index_db_name,",
        "79": "    ",
        "80": "    /** Creates index of documents by Wikipedia topics",
        "25": "import Ontology.*;",
        "26": "import dbindex.*;",
        "91": "     */",
        "92": "    public static void CreateIndexFromWikipedia(int onto_id,Language lang, //int iiLangID,",
        "31": ""
      },
      "id": 13899642,
      "filename": "Index.java"
    },
    {
      "repo": "https://github.com/jortizcs/sfs_applications.git",
      "language": "Java",
      "linescount": 110,
      "location": "/energylens/sfs_transactions/lib/simple/org/simpleframework/http/resource",
      "name": "sfs_applications",
      "url": "https://searchcode.com/codesearch/view/67867048/",
      "md5hash": "c717202bd20457c1ce3ab10b2fc11ed8",
      "lines": {
        "1": "/*",
        "2": " * Index.java December 2005",
        "35": " * @see org.simpleframework.http.resource.Indexer",
        "36": " */ ",
        "37": "public interface Index {",
        "41": "    * name usually refers to the last entry in the path. So if",
        "42": "    * the index target path was \"/usr/bin/\" the name is \"bin\".",
        "43": "    *",
        "44": "    * @return this returns the name of this index target",
        "34": " *",
        "48": "   /**",
        "49": "    * This allows the MIME type of this <code>Index</code> to",
        "25": "/**",
        "26": " * The <code>Index</code> object is used to represent the properties ",
        "27": " * a URI can contain. This is used so that properties relating to a",
        "28": " * file can be quickly extracted from an <code>Indexer</code>. This"
      },
      "id": 67867048,
      "filename": "Index.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 84,
      "location": "/plugins/LucenePlugin/tags/LucenePlugin-2.8/src/gatchan/jedit/lucene",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1383603/",
      "md5hash": "39a8235e65399dcc1541a13ce64ff1e1",
      "lines": {
        "1": "/*",
        "2": " * Index.java - The Index interface",
        "39": "\tvoid commit();",
        "40": "\tvoid reindex(ProgressObserver progressObserver);",
        "76": "\t{",
        "45": "\t/**",
        "46": "\t * Add a single file to the index.",
        "77": "\t\tvoid indexingStarted(Index index);",
        "78": "\t\tvoid indexingEnded(Index index);",
        "57": "\t/**",
        "58": "\t * Add several files to an index",
        "79": "\t}",
        "29": " */",
        "30": "public interface Index"
      },
      "id": 1383603,
      "filename": "Index.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 73,
      "location": "/plugins/LucenePlugin/tags/release-2.6/src/gatchan/jedit/lucene",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1383681/",
      "md5hash": "f4ce7ea2e72e4ed27359febd0415b2f2",
      "lines": {
        "1": "/*",
        "2": " * Index.java - The Index interface",
        "67": "\t\tvoid indexingEnded(Index index);",
        "66": "\t\tvoid indexingStarted(Index index);",
        "38": "\tvoid commit();",
        "39": "\tvoid reindex();",
        "68": "\t}",
        "28": " */",
        "29": "public interface Index",
        "65": "\t{"
      },
      "id": 1383681,
      "filename": "Index.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 76,
      "location": "/source/net/yacy/kelondro/index",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62351789/",
      "md5hash": "e42973c4cbec4da3d6b51b8d409206ec",
      "lines": {
        "1": "/**",
        "2": " *  Index",
        "36": "",
        "37": "public interface Index extends Iterable<Row.Entry> {",
        "38": "",
        "39": "    public String filename(); // returns a unique identified for this index; can be a real or artificial file name",
        "52": "    /**",
        "53": "     * Adds the row to the index. The row is identified by the primary key of the row.",
        "54": "     * @param row a index row",
        "55": "     * @return true if this set did _not_ already contain the given row.",
        "24": "",
        "25": "package net.yacy.kelondro.index;"
      },
      "id": 62351789,
      "filename": "Index.java"
    },
    {
      "repo": "https://bitbucket.org/t2/neuralnetwork",
      "language": "Java",
      "linescount": 154,
      "location": "/src/neuralnetwork",
      "name": "neuralnetwork",
      "url": "https://searchcode.com/codesearch/view/54403683/",
      "md5hash": "78fa3e2b2555aa091b812d05c49e677a",
      "lines": {
        "1": "/*",
        "2": " * Index.java",
        "17": " */",
        "31": "\t\tthis.date = date;",
        "28": "",
        "18": "public class Index {",
        "30": "\tpublic Index(Date date, int r) {",
        "29": "\t/** Creates a new instance of Index */"
      },
      "id": 54403683,
      "filename": "Index.java"
    },
    {
      "repo": "https://bitbucket.org/ssd/capmap-free",
      "language": "Java",
      "linescount": 61,
      "location": "/src/main/java/fr/xlim/ssd/capmanipulator/library/bytecodereader",
      "name": "capmap-free",
      "url": "https://searchcode.com/codesearch/view/126321875/",
      "md5hash": "0206220fe566683e91d52c0ed7eb8def",
      "lines": {
        "32": "public class Index extends Argument {",
        "1": "/**",
        "2": " *      Index.java",
        "35": "",
        "36": "    public Index(byte[] value, short size, Destination destination) {",
        "43": "        Argument a = (Argument) super.clone();",
        "44": "        return new Index(a.getValue(), a.getSize(), destination);",
        "31": " */"
      },
      "id": 126321875,
      "filename": "Index.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 141,
      "location": "/htroot",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62352336/",
      "md5hash": "69ac2084c780f2c5fe0e1a6c93cbb51e",
      "lines": {
        "1": "// index.java",
        "2": "// (C) 2004-2007 by Michael Peter Christen; mc@yacy.net, Frankfurt a. M., Germany",
        "113": "        prop.put(\"searchoptions_indexofChecked\", \"\");",
        "38": "",
        "39": "public class index {",
        "112": "        prop.putHTML(\"searchoptions_prefermaskoptions_prefermaskfilter\", prefermaskfilter);",
        "44": "",
        "45": "        final String forwardTarget = sb.getConfig(SwitchboardConstants.INDEX_FORWARD, \"\");",
        "78": "",
        "79": "        //final boolean indexDistributeGranted = sb.getConfigBool(SwitchboardConstants.INDEX_DIST_ALLOW, true);",
        "80": "        final boolean indexReceiveGranted = sb.getConfigBool(SwitchboardConstants.INDEX_RECEIVE_ALLOW_SEARCH, true);",
        "81": "        global = global && indexReceiveGranted;",
        "110": "        prop.put(\"searchoptions_resource-select\", (sb.peers == null || sb.peers.sizeConnected() == 0 || !indexReceiveGranted) ?  0 : global ? 1 : 2);",
        "27": "// You must compile this file with",
        "28": "// javac -classpath .:../classes index.java",
        "109": "        prop.put(\"searchoptions_count-100\", (count == 100) ? \"1\" : \"0\");"
      },
      "id": 62352336,
      "filename": "index.java"
    },
    {
      "repo": "https://bitbucket.org/sunsetter/sentinel_web.git",
      "language": "Java",
      "linescount": 53,
      "location": "/app/controllers",
      "name": "sentinel_web",
      "url": "https://searchcode.com/codesearch/view/43509253/",
      "md5hash": "761a4cc447d706d9940b3e80d423b5eb",
      "lines": {
        "48": "\t\tSystem.out.println(\"host: \" + smtpHost);",
        "1": "/*",
        "2": " * Index.java",
        "49": "\t\treturn ok( views.html.index.usage.render() );",
        "38": "\t\t",
        "39": "\t\treturn ok( views.html.index.main.render() );",
        "30": "",
        "31": "public class Index extends Controller {"
      },
      "id": 43509253,
      "filename": "Index.java"
    },
    {
      "repo": "https://bitbucket.org/insigngmbh/sentinel_web.git",
      "language": "Java",
      "linescount": 53,
      "location": "/app/controllers",
      "name": "sentinel_web",
      "url": "https://searchcode.com/codesearch/view/45524411/",
      "md5hash": "761a4cc447d706d9940b3e80d423b5eb",
      "lines": {
        "48": "\t\tSystem.out.println(\"host: \" + smtpHost);",
        "1": "/*",
        "2": " * Index.java",
        "49": "\t\treturn ok( views.html.index.usage.render() );",
        "38": "\t\t",
        "39": "\t\treturn ok( views.html.index.main.render() );",
        "30": "",
        "31": "public class Index extends Controller {"
      },
      "id": 45524411,
      "filename": "Index.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 1875,
      "location": "/ecmengine/test/java/it/doqui/index/ecmengine/test",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107872829/",
      "md5hash": "36bfc273667521946bb30e85b687043a",
      "lines": {
        "32": "import it.doqui.index.ecmengine.client.engine.EcmEngineDelegateFactory;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.dto.Node;",
        "36": "import it.doqui.index.ecmengine.dto.OperationContext;",
        "37": "import it.doqui.index.ecmengine.dto.backoffice.AclListParams;",
        "38": "import it.doqui.index.ecmengine.dto.backoffice.Group;",
        "33": "import it.doqui.index.ecmengine.client.engine.exception.EcmEngineDelegateInstantiationException;",
        "40": "import it.doqui.index.ecmengine.dto.backoffice.Repository;",
        "41": "import it.doqui.index.ecmengine.dto.backoffice.SystemProperty;",
        "39": "import it.doqui.index.ecmengine.dto.backoffice.IntegrityReport;",
        "34": "import it.doqui.index.ecmengine.dto.AclRecord;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.test;",
        "31": "import it.doqui.index.ecmengine.client.engine.EcmEngineDelegate;"
      },
      "id": 107872829,
      "filename": "TestBackoffice.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 3862,
      "location": "/ecmengine/test/java/it/doqui/index/ecmengine/test",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107872831/",
      "md5hash": "7c9c3d0556e93dc10cca178ede7b4bfd",
      "lines": {
        "32": "import it.doqui.index.ecmengine.dto.OperationContext;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.dto.engine.management.Aspect;",
        "36": "import it.doqui.index.ecmengine.dto.engine.management.Association;",
        "37": "import it.doqui.index.ecmengine.dto.engine.management.Content;",
        "38": "import it.doqui.index.ecmengine.dto.engine.management.EncryptionInfo;",
        "33": "import it.doqui.index.ecmengine.dto.engine.audit.AuditInfo;",
        "40": "import it.doqui.index.ecmengine.dto.engine.management.FileInfo;",
        "41": "import it.doqui.index.ecmengine.dto.engine.management.Mimetype;",
        "39": "import it.doqui.index.ecmengine.dto.engine.management.FileFormatVersion;",
        "34": "import it.doqui.index.ecmengine.dto.engine.audit.AuditTrailSearchParams;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.test;",
        "31": "import it.doqui.index.ecmengine.dto.Node;"
      },
      "id": 107872831,
      "filename": "TestEngine.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 1893,
      "location": "/ecmengine/test/java/it/doqui/index/ecmengine/test/webservices",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107872859/",
      "md5hash": "6cdf03125ef8e25c88a6abd421082441",
      "lines": {
        "32": "import it.doqui.index.ecmengine.client.webservices.dto.AclRecord;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.AclListParams;",
        "36": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.DataArchive;",
        "37": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Tenant;",
        "38": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Group;",
        "33": "import it.doqui.index.ecmengine.client.webservices.dto.Node;",
        "40": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.SystemProperty;",
        "41": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.User;",
        "39": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Repository;",
        "34": "import it.doqui.index.ecmengine.client.webservices.dto.OperationContext;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.test.webservices;",
        "31": "import it.doqui.index.ecmengine.client.webservices.engine.EcmEngineWebServiceDelegateServiceLocator;"
      },
      "id": 107872859,
      "filename": "TestBackoffice.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 3879,
      "location": "/ecmengine/test/java/it/doqui/index/ecmengine/test/webservices",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107872861/",
      "md5hash": "22ac848b751672aa83c5e40c4eb3024c",
      "lines": {
        "32": "import it.doqui.index.ecmengine.client.webservices.dto.engine.audit.AuditInfo;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.Aspect;",
        "36": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.Association;",
        "37": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.Content;",
        "38": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.EncryptionInfo;",
        "33": "import it.doqui.index.ecmengine.client.webservices.dto.engine.audit.AuditTrailSearchParams;",
        "40": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.FileInfo;",
        "41": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.Property;",
        "39": "import it.doqui.index.ecmengine.client.webservices.dto.engine.management.FileFormatInfo;",
        "34": "import it.doqui.index.ecmengine.client.webservices.dto.engine.audit.OperazioneAudit;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.test.webservices;",
        "31": "import it.doqui.index.ecmengine.client.webservices.dto.OperationContext;"
      },
      "id": 107872861,
      "filename": "TestEngine.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 576,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/client/backoffice",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873377/",
      "md5hash": "78dc373910337426da607fe066392bbc",
      "lines": {
        "32": "import it.doqui.index.ecmengine.dto.backoffice.DataArchive;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.dto.backoffice.IntegrityReport;",
        "36": "import it.doqui.index.ecmengine.dto.backoffice.Repository;",
        "37": "import it.doqui.index.ecmengine.dto.backoffice.SystemProperty;",
        "38": "import it.doqui.index.ecmengine.dto.backoffice.Tenant;",
        "33": "import it.doqui.index.ecmengine.dto.backoffice.ExportedContent;",
        "40": "import it.doqui.index.ecmengine.dto.backoffice.model.CustomModel;",
        "39": "import it.doqui.index.ecmengine.dto.backoffice.User;",
        "34": "import it.doqui.index.ecmengine.dto.backoffice.Group;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.client.backoffice;",
        "26": "",
        "31": "import it.doqui.index.ecmengine.dto.backoffice.AclListParams;"
      },
      "id": 107873377,
      "filename": "AbstractEcmEngineBackofficeDelegateImpl.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 258,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/client/webservices",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873401/",
      "md5hash": "5e5fa429869d7a5e92acdb355b683d4b",
      "lines": {
        "32": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.NoDataExtractedException;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.AclEditException;",
        "36": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.GroupAlreadyExistsException;",
        "37": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.GroupCreateException;",
        "38": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.GroupDeleteException;",
        "33": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.NoSuchNodeException;",
        "40": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.NoSuchGroupException;",
        "39": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.backoffice.GroupEditException;",
        "34": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.PermissionDeniedException;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.client.webservices;",
        "26": "",
        "31": "import it.doqui.index.ecmengine.client.webservices.exception.publishing.InvalidCredentialsException;"
      },
      "id": 107873401,
      "filename": "AbstractWebServiceDelegateBase.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 694,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/client/webservices/backoffice",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873708/",
      "md5hash": "f3fa8b7476eb0dd768ca59937f8b93e9",
      "lines": {
        "32": "import it.doqui.index.ecmengine.client.webservices.dto.OperationContext;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Group;",
        "36": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.IntegrityReport;",
        "37": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Repository;",
        "38": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.SystemProperty;",
        "33": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.AclListParams;",
        "40": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.User;",
        "39": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.Tenant;",
        "34": "import it.doqui.index.ecmengine.client.webservices.dto.backoffice.DataArchive;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.client.webservices.backoffice;",
        "26": "",
        "31": "import it.doqui.index.ecmengine.client.webservices.dto.Node;"
      },
      "id": 107873708,
      "filename": "EcmEngineWebServiceBackofficeDelegateImpl.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 1195,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/client/engine",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873743/",
      "md5hash": "93f60faf3885db6385c83dc56ba3ae99",
      "lines": {
        "32": "import it.doqui.index.ecmengine.dto.OperationContext;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.ecmengine.dto.engine.audit.AuditInfo;",
        "36": "import it.doqui.index.ecmengine.dto.engine.audit.AuditSearchParams;",
        "37": "import it.doqui.index.ecmengine.dto.engine.audit.AuditTrailSearchParams;",
        "38": "import it.doqui.index.ecmengine.dto.engine.audit.OperazioneAudit;",
        "33": "import it.doqui.index.ecmengine.dto.Path;",
        "40": "import it.doqui.index.ecmengine.dto.engine.management.Category;",
        "39": "import it.doqui.index.ecmengine.dto.engine.management.Association;",
        "34": "import it.doqui.index.ecmengine.dto.engine.NodeArchiveParams;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.client.engine;",
        "26": "",
        "31": "import it.doqui.index.ecmengine.dto.Node;"
      },
      "id": 107873743,
      "filename": "AbstractEcmEngineDelegateImpl.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 1471,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/business/personalization/splitting/index/lucene",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873833/",
      "md5hash": "302a85228566c8bcb20a6fbb91051f79",
      "lines": {
        "32": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.fts.RepositoryFTSIndexerAware;",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "35": "import it.doqui.index.fileformat.business.service.FileFormatServiceImpl;",
        "36": "import it.doqui.index.fileformat.exception.FileFormatException;",
        "33": "import it.doqui.index.ecmengine.business.personalization.splitting.SplittingNodeService;",
        "34": "import it.doqui.index.ecmengine.business.personalization.splitting.util.SplittingNodeServiceConstants;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.business.personalization.splitting.index.lucene;",
        "26": "",
        "27": "import it.doqui.index.ecmengine.business.personalization.multirepository.RepositoryManager;",
        "28": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.MultiReader;",
        "29": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.RepositoryAwareADMLuceneIndexer;",
        "30": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.RepositoryAwareAbstractLuceneIndexerImpl;",
        "31": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.fts.RepositoryAwareFullTextSearchIndexer;"
      },
      "id": 107873833,
      "filename": "MultiRepositorySplittingADMIndexerImpl.java"
    },
    {
      "repo": "https://github.com/psacc/doqui-index.git",
      "language": "Java",
      "linescount": 1493,
      "location": "/ecmengine/src/java/it/doqui/index/ecmengine/business/personalization/splitting/index/lucene",
      "name": "doqui-index",
      "url": "https://searchcode.com/codesearch/view/107873844/",
      "md5hash": "4ec9c1bfdf5747eb614839e49c9b7dba",
      "lines": {
        "32": "",
        "1": "/* Index ECM Engine - A system for managing the capture (when created",
        "2": " * or received), classification (cataloguing), storage, retrieval,",
        "65": "import org.alfresco.repo.search.impl.lucene.AbstractLuceneIndexerImpl;",
        "64": "import org.alfresco.repo.search.impl.lucene.ADMLuceneIndexer;",
        "63": "import org.alfresco.repo.search.IndexerException;",
        "62": "import org.alfresco.repo.content.transform.ContentTransformer;",
        "24": "",
        "25": "package it.doqui.index.ecmengine.business.personalization.splitting.index.lucene;",
        "26": "",
        "27": "import it.doqui.index.ecmengine.business.personalization.multirepository.index.lucene.MultiReader;",
        "28": "import it.doqui.index.ecmengine.business.personalization.splitting.SplittingNodeService;",
        "29": "import it.doqui.index.ecmengine.business.personalization.splitting.util.SplittingNodeServiceConstants;",
        "30": "import it.doqui.index.fileformat.business.service.FileFormatServiceImpl;",
        "31": "import it.doqui.index.fileformat.exception.FileFormatException;"
      },
      "id": 107873844,
      "filename": "SplittingADMIndexerImpl.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 143513,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 113737,
      "source": "Github",
      "id": 2
    },
    {
      "count": 34159,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 4392,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1149,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 626,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 433,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 267,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 231,
      "source": "Gitorious",
      "id": 10
    }
  ]
}