{
  "matchterm": "Sumproduct",
  "previouspage": null,
  "searchterm": "Sumproduct",
  "query": "Sumproduct",
  "language_filters": [
    {
      "count": 29,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 29,
  "results": [
    {
      "repo": "https://github.com/psychorav/FactorgraphFramework.git",
      "language": "Java",
      "linescount": 400,
      "location": "/GraphEditor.diagram/src/de/lmu/genzentrum/tresch",
      "name": "FactorgraphFramework",
      "url": "https://searchcode.com/codesearch/view/105246366/",
      "md5hash": "d8d4f673cc5875ab3147ecf0f5d3f33b",
      "lines": {
        "16": "\t// SumProduct bekommt das Objekt Graph \u03ccbergeben",
        "17": "\tpublic SumProduct(Graph graph) {",
        "18": "//\t\tSystem.out.println(\"SumProduct\");",
        "19": "\t\tthis.graph = graph;",
        "10": "",
        "11": "public class SumProduct {",
        "15": ""
      },
      "id": 105246366,
      "filename": "SumProduct.java"
    },
    {
      "repo": "https://github.com/psychorav/FactorgraphFramework.git",
      "language": "Java",
      "linescount": 449,
      "location": "/GraphEditorR/src/de/lmu/genzentrum/tresch",
      "name": "FactorgraphFramework",
      "url": "https://searchcode.com/codesearch/view/105245821/",
      "md5hash": "8ad86e795b5c39aadb065522a8cd7620",
      "lines": {
        "11": "\t",
        "12": "\tpublic SumProduct() {",
        "5": "",
        "6": "public class SumProduct {"
      },
      "id": 105245821,
      "filename": "SumProduct.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 48,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105399439/",
      "md5hash": "3a5e6dce908309eb78507adede399db9",
      "lines": {
        "10": "",
        "11": "public class SUMPRODUCT extends AbstractFunction"
      },
      "id": 105399439,
      "filename": "SUMPRODUCT.java"
    },
    {
      "repo": "https://code.google.com/p/jbooktrader/",
      "language": "Java",
      "linescount": 89,
      "location": "/source/com/jbooktrader/platform/util/movingwindow",
      "name": "jbooktrader",
      "url": "https://searchcode.com/codesearch/view/2035557/",
      "md5hash": "f3c3a22be44a28680c989a94448d141c",
      "lines": {
        "16": "    private final Pair[] buffer;",
        "17": "    private double sum1, sum1Squared, sum2, sum2Squared, sumProduct;",
        "82": "        start = end = 0;",
        "83": "        sum1 = sum1Squared = sum2 = sum2Squared = sumProduct = 0;",
        "53": "        sum2Squared -= (first2 * first2);",
        "54": "        sumProduct -= (first1 * first2);",
        "71": "        double numerator = buffer.length * sumProduct - sum1 * sum2;",
        "42": "        sum2Squared += (value2 * value2);",
        "43": "        sumProduct += (value1 * value2);",
        "70": "        double correlation = 0;"
      },
      "id": 2035557,
      "filename": "MovingWindowCorrelation.java"
    },
    {
      "repo": "https://github.com/dushkindigital/taxmap.git",
      "language": "Java",
      "linescount": 164,
      "location": "/com/libereco/taxmap/symbolics/data/map",
      "name": "taxmap",
      "url": "https://searchcode.com/codesearch/view/113757226/",
      "md5hash": "815db75ed6d784871f798562d75e8fc5",
      "lines": {
        "152": "\tprivate int sumProduct(int[] firstIndices, int[] secondIndices) {",
        "108": "\tpublic int getIndex(int[] indices) {",
        "109": "\t\treturn sumProduct(indices, coordinateOffset);",
        "151": "\t */"
      },
      "id": 113757226,
      "filename": "MultiVector.java"
    },
    {
      "repo": "https://github.com/psychorav/FactorgraphFramework.git",
      "language": "Java",
      "linescount": 309,
      "location": "/GraphEditor.diagram/src/graphEditor/factorgraph",
      "name": "FactorgraphFramework",
      "url": "https://searchcode.com/codesearch/view/105245946/",
      "md5hash": "ee3560a9cbad581f26edbd868db72e15",
      "lines": {
        "36": "import de.lmu.genzentrum.tresch.NoValueException;",
        "37": "import de.lmu.genzentrum.tresch.SumProduct;",
        "286": "\t\t\t de.lmu.genzentrum.tresch.SumProduct sum = new de.lmu.genzentrum.tresch.SumProduct(factorgraph);",
        "285": ""
      },
      "id": 105245946,
      "filename": "DoSumAction.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 439,
      "location": "/org.boris.expr/java/test/org/boris/expr",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398321/",
      "md5hash": "a3ba70c974e0e44d6e8aeb27d6535ba8",
      "lines": {
        "384": "",
        "49": "import org.boris.expr.function.excel.SUMIF;",
        "50": "import org.boris.expr.function.excel.SUMPRODUCT;",
        "387": "        assertEquals(eval(s, toArray(1, 2, 3), toArray(4, 5, 6)), 32.);",
        "385": "    public void testSUMPRODUCT() throws Exception {",
        "386": "        SUMPRODUCT s = new SUMPRODUCT();"
      },
      "id": 105398321,
      "filename": "ExcelMathAndTrigFunctionsTest.java"
    },
    {
      "repo": "https://github.com/psychorav/FactorgraphFramework.git",
      "language": "Java",
      "linescount": 248,
      "location": "/GraphEditorR/src/de/lmu/genzentrum/tresch",
      "name": "FactorgraphFramework",
      "url": "https://searchcode.com/codesearch/view/105245812/",
      "md5hash": "ad404433e162ae2288104c09987c154e",
      "lines": {
        "210": "\t\tGraph test = new Graph(mSeq);",
        "211": "\t\tSumProduct sum = new SumProduct();"
      },
      "id": 105245812,
      "filename": "Main.java"
    },
    {
      "repo": "https://github.com/psychorav/FactorgraphFramework.git",
      "language": "Java",
      "linescount": 206,
      "location": "/GraphEditor.diagram/src/de/lmu/genzentrum/tresch",
      "name": "FactorgraphFramework",
      "url": "https://searchcode.com/codesearch/view/105246360/",
      "md5hash": "3ecbebf25c7fcdbe8f8f5a0ad5a76fdd",
      "lines": {
        "176": "\t\tSumProduct sum = new SumProduct(test);",
        "175": "\t\tGraph test = new Graph(mSeq);"
      },
      "id": 105246360,
      "filename": "Main.java"
    },
    {
      "repo": "https://bitbucket.org/petermr/mathml",
      "language": "Java",
      "linescount": 53,
      "location": "/src/main/java/org/xmlcml/mathml",
      "name": "mathml",
      "url": "https://searchcode.com/codesearch/view/126636549/",
      "md5hash": "18d352710cae7ab1905c2140aa0754dc",
      "lines": {
        "4": "",
        "5": "public class SUMElement extends SumProductElement {",
        "23": "\t",
        "24": "//\tprotected Integer iterateResult(Integer result, Integer i, SumProductElement sumProduct) {",
        "28": "\t",
        "29": "\tprotected Number iterateResult(Number result, Integer i, SumProductElement sumProduct) {",
        "46": "\tprotected Number iterateResult(Number result, Object object, SumProductElement sumProduct) {",
        "45": "\t"
      },
      "id": 126636549,
      "filename": "SUMElement.java"
    },
    {
      "repo": "https://bitbucket.org/petermr/mathml",
      "language": "Java",
      "linescount": 172,
      "location": "/src/main/java/org/xmlcml/mathml",
      "name": "mathml",
      "url": "https://searchcode.com/codesearch/view/126636568/",
      "md5hash": "e0ab64041f72e65aa4d2189628841a24",
      "lines": {
        "168": "\tprotected abstract Number iterateResult(Number result, Integer i, SumProductElement sumProduct);",
        "21": "",
        "166": "",
        "7": "",
        "8": "public abstract class SumProductElement extends AbstractMathElement implements Operator {",
        "169": "\tprotected abstract Number iterateResult(Number result, Object object, SumProductElement sumProduct);",
        "22": "\tprotected SumProductElement(String tag) {",
        "167": "//\tprotected abstract Integer iterateResult(Integer result, Integer i, SumProductElement sumProduct);",
        "170": ""
      },
      "id": 126636568,
      "filename": "SumProductElement.java"
    },
    {
      "repo": "https://bitbucket.org/hugh_medal/facilitylocation",
      "language": "Java",
      "linescount": 96,
      "location": "/src/qap",
      "name": "facilitylocation",
      "url": "https://searchcode.com/codesearch/view/56352877/",
      "md5hash": "b6032072ccb2da3e0c80acb563cb8751",
      "lines": {
        "40": "    public static double sumProduct(Double[] a,Double[] b){",
        "21": "        Arrays.sort(distancesArray,new SmallestToLargest());",
        "22": "        return sumProduct(distancesArray, flowsArray);",
        "39": "    "
      },
      "id": 56352877,
      "filename": "QAP_LowerBounds.java"
    },
    {
      "repo": "https://bitbucket.org/hugh_medal/facilitylocation",
      "language": "Java",
      "linescount": 138,
      "location": "/src/qap",
      "name": "facilitylocation",
      "url": "https://searchcode.com/codesearch/view/56352879/",
      "md5hash": "c54caf2bbcd0efdcf48fad39cbc703de",
      "lines": {
        "86": "        double value = sumProduct(flowsRow, distancesRow)+sumProduct(flowsColumn,distancesColumn);",
        "45": "",
        "46": "    public double sumProduct(Double[] a,Double[] b){",
        "85": "        //System.out.println(Arrays.toString(distancesColumn));"
      },
      "id": 56352879,
      "filename": "BazarraElshafeiLB.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1430,
      "location": "/zssapp/src/org/zkoss/zss/app/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969892/",
      "md5hash": "a07bf1b4287ec51f4c6c5c920d857dd5",
      "lines": {
        "833": "\t\tmathAry.add(new FormulaMetaInfo(MATH_TRIG,",
        "834": "\t\t\t\t\t\"SUMPRODUCT\",",
        "835": "\t\t\t\t\t\"SUMPRODUCT(array1, array2, array3, ...)\",",
        "836": "\t\t\t\t\t\"Returns the sum of the products of corresponding array components\","
      },
      "id": 3969892,
      "filename": "Formulas.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260581/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "531": "    new Function(0xe3, \"median\", 0xff);",
        "532": "  public static final Function SUMPRODUCT =",
        "533": "    new Function(0xe4, \"sumproduct\", 0xff);",
        "534": "  public static final Function SINH ="
      },
      "id": 43260581,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124968/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "764": "\t\t\t{\"SUMPRODUCT\",String.valueOf(xlfSumproduct), String.valueOf(FTYPE_PTGFUNCVAR)},",
        "763": "\t\t\t{\"TREND\",String.valueOf(xlfTrend), String.valueOf(FTYPE_PTGFUNCVAR)},",
        "1116": "\t\t\tcase xlfMedian: return \"MEDIAN(\";",
        "269": "\tpublic static final int xlfMedian   = 227;",
        "270": "\tpublic static final int xlfSumproduct = 228;",
        "1117": "\t\t\tcase xlfSumproduct: return \"SUMPRODUCT(\";"
      },
      "id": 47124968,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 717,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff/formula",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201109/",
      "md5hash": "15b9307e10209bd7f14a819df4b60a44",
      "lines": {
        "531": "    new Function(0xe3, \"median\", 0xff);",
        "532": "  public static final Function SUMPRODUCT =",
        "533": "    new Function(0xe4, \"sumproduct\", 0xff);",
        "534": "  public static final Function SINH ="
      },
      "id": 49201109,
      "filename": "Function.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1451,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976592/",
      "md5hash": "994b1c012a7ddfa2eae1064001b4a2c3",
      "lines": {
        "764": "\t\t\t{\"SUMPRODUCT\",String.valueOf(xlfSumproduct), String.valueOf(FTYPE_PTGFUNCVAR)},",
        "763": "\t\t\t{\"TREND\",String.valueOf(xlfTrend), String.valueOf(FTYPE_PTGFUNCVAR)},",
        "1116": "\t\t\tcase xlfMedian: return \"MEDIAN(\";",
        "269": "\tpublic static final int xlfMedian   = 227;",
        "270": "\tpublic static final int xlfSumproduct = 228;",
        "1117": "\t\t\tcase xlfSumproduct: return \"SUMPRODUCT(\";"
      },
      "id": 50976592,
      "filename": "FunctionConstants.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100412065/",
      "md5hash": "97269efda67b1f67b152b3400030b364",
      "lines": {
        "984": "",
        "985": "    // Todo: SumProduct Multiplies corresponding components in the given arrays,"
      },
      "id": 100412065,
      "filename": "Excel.java"
    },
    {
      "repo": "https://bitbucket.org/tomers77/ontobuilder-research-environment",
      "language": "Java",
      "linescount": 49,
      "location": "/src/ac/technion/schemamatching/statistics",
      "name": "ontobuilder-research-environment",
      "url": "https://searchcode.com/codesearch/view/57237195/",
      "md5hash": "a1a9eee2d0eece6940ae41b190d0417b",
      "lines": {
        "38": "\t\tdouble lengthOfE = exactMatch.getOverallMatchConfidence()*mi.getTotalMatches();",
        "39": "\t\tdouble sumProduct = 0.0;",
        "41": "\t\t\tfor (int c=0;c<e[r].length;c++)",
        "42": "\t\t\t\tsumProduct+=m[r][c]*e[r][c];",
        "43": "\t\tDouble res = (lengthOfE*lengthOfM==0?0:sumProduct/(lengthOfE*lengthOfM));",
        "44": "\t\tdata.add(new String[] {instanceDescription, res.toString()});"
      },
      "id": 57237195,
      "filename": "L2similarity.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 15,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Google Code",
      "id": 1
    }
  ]
}