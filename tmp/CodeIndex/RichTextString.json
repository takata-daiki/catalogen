{
  "matchterm": "RichTextString",
  "previouspage": null,
  "searchterm": "RichTextString",
  "query": "RichTextString",
  "language_filters": [
    {
      "count": 64,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 64,
  "results": [
    {
      "repo": "https://github.com/johnulist/Price-Administration-for-Prestashop.git",
      "language": "Java",
      "linescount": 207,
      "location": "/src/main/java/ro/btanase/price/dao",
      "name": "Price-Administration-for-Prestashop",
      "url": "https://searchcode.com/codesearch/view/76084304/",
      "md5hash": "a5c0d3550dec29a0bfc9960fa61097e8",
      "lines": {
        "68": "",
        "69": "      RichTextString idProduct = ch.createRichTextString(\"id_product\");",
        "72": "",
        "73": "      RichTextString name = ch.createRichTextString(\"name\");",
        "76": "",
        "77": "      RichTextString price = ch.createRichTextString(\"price\");",
        "80": "",
        "81": "      RichTextString idCategory = ch.createRichTextString(\"id_category\");",
        "18": "import org.apache.poi.ss.usermodel.Font;",
        "19": "import org.apache.poi.ss.usermodel.RichTextString;",
        "84": "",
        "85": "      RichTextString categoryName = ch.createRichTextString(\"category_name\");"
      },
      "id": 76084304,
      "filename": "ExportDaoImpl.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 2096,
      "location": "/src/main/java/org/comsoft/juniprint",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212057/",
      "md5hash": "e9487002cf69dbd9246766c01c968b73",
      "lines": {
        "1691": "\t\t\t\tHSSFRichTextString rich = cell.getRichStringCellValue();",
        "1797": "\t\t\t\t\t\tposSer = 0; posSer1 = 0; posSer2 = 0; posSer3 = 0;",
        "1798": "\t\t\t\t\t\tHSSFRichTextString richTextString  = comment.getString();",
        "1799": "\t\t\t\t\t\tif (richTextString != null){",
        "38": "import org.apache.poi.hssf.usermodel.HSSFPrintSetup;",
        "1801": "\t\t\t\t\t\t\tposSer = textComment.indexOf(RESWORD_MultiHide.toUpperCase()+\"(\");",
        "39": "import org.apache.poi.hssf.usermodel.HSSFRichTextString;",
        "1800": "\t\t\t\t\t\t\tString textComment = richTextString.getString().toUpperCase();",
        "1843": "\t\t\t\t\t\tposSer = 0; posSer2 = 0; posSer3 = 0;",
        "1844": "\t\t\t\t\t\tHSSFRichTextString richTextString  = comment.getString();",
        "1845": "\t\t\t\t\t\tif (richTextString != null){",
        "1846": "\t\t\t\t\t\t\tString textComment = richTextString.getString().toUpperCase();",
        "1847": "\t\t\t\t\t\t\tposSer = textComment.indexOf(RESWORD_Series.toUpperCase());",
        "1721": "\t\t\t\t\t\tposSer = 0; posSer1 = 0; posSer2 = 0; posSer3 = 0;",
        "1690": "\t\t\tcase HSSFCell.CELL_TYPE_STRING:",
        "1723": "\t\t\t\t\t\tif (richTextString != null){",
        "1722": "\t\t\t\t\t\tHSSFRichTextString richTextString  = comment.getString();"
      },
      "id": 60212057,
      "filename": "JUniPrint.java"
    },
    {
      "repo": "https://bitbucket.org/yaytay/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 1187,
      "location": "/SpudSoft BIRT Excel Emitters/src/uk/co/spudsoft/birt/emitters/excel",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/122565151/",
      "md5hash": "fc8b005355e635293739c83d0119c6c9",
      "lines": {
        "82": "\t/**",
        "83": "\t * Create a RichTextString representing a given string.",
        "84": "\t * @param value",
        "37": "import org.apache.poi.ss.usermodel.RichTextString;",
        "86": "\t * @return",
        "87": "\t * A RichTextString representing value.",
        "88": "\t */",
        "36": "import org.apache.poi.ss.usermodel.PrintSetup;",
        "89": "\tpublic abstract RichTextString createRichTextString(String value);",
        "85": "\t * The string to represent in the RichTextString."
      },
      "id": 122565151,
      "filename": "StyleManagerUtils.java"
    },
    {
      "repo": "https://bitbucket.org/yaytay/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 600,
      "location": "/SpudSoft BIRT Excel Emitters/src/uk/co/spudsoft/birt/emitters/excel/handlers",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/122565172/",
      "md5hash": "5818a92dff5eace464c4d55af687922a",
      "lines": {
        "253": "\t\tif( ( ( colSpan > 1 ) || ( state.rowHasSpans( state.rowNum ) ) )  && ( ( lastValue instanceof String ) || ( lastValue instanceof RichTextString ) ) ) {",
        "30": "import org.apache.poi.ss.usermodel.RichTextString;",
        "360": "\t\t\tlastValue = value;",
        "361": "\t\t} else if( value instanceof RichTextString ) {",
        "362": "\t\t\t// cell.setCellType(Cell.CELL_TYPE_STRING);",
        "363": "\t\t\tcell.setCellValue((RichTextString)value);\t\t\t\t",
        "252": "\t\t// Excel auto calculates the row height (if it isn't specified) as long as the cell isn't merged - if it is merged I have to do it",
        "29": "import org.apache.poi.ss.usermodel.Hyperlink;",
        "190": "\t\t\t\t\tRichTextString rich = smu.createRichTextString( lastString );",
        "189": "\t\t\t\tif( ! richTextRuns.isEmpty() ) {"
      },
      "id": 122565172,
      "filename": "CellContentHandler.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 5111,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970697/",
      "md5hash": "f6740268ba4be4778508748ca1c3becc",
      "lines": {
        "992": "\t}",
        "993": "\tprivate static RichTextString newRichTextString(Cell cell, String str) {",
        "994": "\t\treturn cell instanceof HSSFCell ? new HSSFRichTextString(str) : new XSSFRichTextString(str);",
        "99": "import org.zkoss.poi.ss.usermodel.Picture;",
        "100": "import org.zkoss.poi.ss.usermodel.RichTextString;",
        "1125": "\tpublic static RichTextString getRichEditText(Cell cell) {",
        "1124": "    }",
        "551": "\t",
        "552": "\tpublic static String formatRichText(Book book, RichTextString rstr, List<int[]> indexes) {",
        "1033": "\t\tif (ft != null) {",
        "1034": "\t\t\tif (ft.isRichTextString()) {",
        "1035": "\t\t\t\tfinal RichTextString rstr = ft.getRichTextString();",
        "1036": "\t\t\t\treturn rstr == null ? \"\" : rstr.getString();",
        "995": "\t}",
        "53": "import org.zkoss.poi.hssf.usermodel.HSSFPalette;",
        "54": "import org.zkoss.poi.hssf.usermodel.HSSFRichTextString;",
        "996": "\tpublic static RichTextString getText(Cell cell) {"
      },
      "id": 3970697,
      "filename": "BookHelper.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1292,
      "location": "/zss/src/org/zkoss/zss/ui/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970623/",
      "md5hash": "5c2cb2ffa2267d589aa9be88980c96c0",
      "lines": {
        "963": "\t/**",
        "964": "\t * Returns the {@link RichTextString} for editing on the cell.",
        "37": "import org.zkoss.poi.ss.usermodel.Hyperlink;",
        "38": "import org.zkoss.poi.ss.usermodel.RichTextString;",
        "903": "\t * Returns the {@link RichTextString} to be shown on the specified cell. ",
        "904": "\t * @param cell the cell",
        "905": "\t * @return the {@link RichTextString} to be shown on the specified cell.",
        "906": "\t */",
        "907": "\tpublic static RichTextString getText(Cell cell) {",
        "936": "\tpublic static String getEditText(Cell cell) {",
        "902": "\t/**",
        "937": "\t\tfinal RichTextString rstr = cell == null ? null : getRichEditText(cell);",
        "923": "\t\t",
        "924": "\t\tfinal RichTextString rstr = ft != null && ft.isRichTextString() ? ft.getRichTextString() : null; ",
        "925": "\t\tString text = rstr != null ? Utils.formatRichTextString(sheet, rstr, wrap) : ft != null ? Utils.escapeCellText(ft.getCellFormatResult().text, wrap, true) : \"\";",
        "926": "\t\tif (hlink != null) {",
        "965": "\t * @param cell the cell"
      },
      "id": 3970623,
      "filename": "Utils.java"
    },
    {
      "repo": "https://bitbucket.org/xunchangguo/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 1106,
      "location": "/SpudSoft BIRT Excel Emitters/src/uk/co/spudsoft/birt/emitters/excel",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/64530859/",
      "md5hash": "df825ddde093d8c3fe3a9f52eb4945d0",
      "lines": {
        "96": "\t * A RichTextString representing value.",
        "97": "\t */",
        "98": "\tpublic abstract RichTextString createRichTextString(String value);",
        "94": "\t * The string to represent in the RichTextString.",
        "95": "\t * @return",
        "91": "\t/**",
        "92": "\t * Create a RichTextString representing a given string.",
        "45": "import org.apache.poi.ss.usermodel.PrintSetup;",
        "46": "import org.apache.poi.ss.usermodel.RichTextString;",
        "93": "\t * @param value"
      },
      "id": 64530859,
      "filename": "StyleManagerUtils.java"
    },
    {
      "repo": "https://bitbucket.org/xunchangguo/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 560,
      "location": "/SpudSoft BIRT Excel Emitters/src/uk/co/spudsoft/birt/emitters/excel/handlers",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/64530894/",
      "md5hash": "3928e6dc7617540d4c67810e78758174",
      "lines": {
        "240": "\t\t// Excel auto calculates the row height (if it isn't specified) as long as the cell isn't merged - if it is merged I have to do it",
        "241": "\t\tif( ( ( colSpan > 1 ) || ( state.rowHasSpans( state.rowNum ) ) )  && ( ( lastValue instanceof String ) || ( lastValue instanceof RichTextString ) ) ) {",
        "338": "\t\t\tlastValue = value;",
        "339": "\t\t} else if( value instanceof RichTextString ) {",
        "340": "\t\t\t// cell.setCellType(Cell.CELL_TYPE_STRING);",
        "341": "\t\t\tcell.setCellValue((RichTextString)value);\t\t\t\t",
        "38": "import org.apache.poi.ss.usermodel.Hyperlink;",
        "183": "\t\t\t\tif( ! richTextRuns.isEmpty() ) {",
        "184": "\t\t\t\t\tRichTextString rich = smu.createRichTextString( lastString );",
        "39": "import org.apache.poi.ss.usermodel.RichTextString;"
      },
      "id": 64530894,
      "filename": "CellContentHandler.java"
    },
    {
      "repo": "https://github.com/leonate/poitest.git",
      "language": "Java",
      "linescount": 147,
      "location": "/src/test/java/org/poitest",
      "name": "poitest",
      "url": "https://searchcode.com/codesearch/view/65741366/",
      "md5hash": "1a6270b039e38db0d7f32d3ab5f0cd70",
      "lines": {
        "32": "    private RichTextString commentString;",
        "18": "",
        "19": "    RichTextString richTextString;",
        "120": "            case Cell.CELL_TYPE_STRING:",
        "121": "                cell.setCellValue( richTextString );",
        "59": "            case Cell.CELL_TYPE_STRING:",
        "60": "                richTextString = cell.getRichStringCellValue();",
        "31": "    private int colIndex;"
      },
      "id": 65741366,
      "filename": "XlsCellInfo.java"
    },
    {
      "repo": "https://bitbucket.org/ghooning/pentaho-kettle-4.3.0-stable.git",
      "language": "Java",
      "linescount": 936,
      "location": "/src/org/pentaho/di/trans/steps/excelwriter",
      "name": "pentaho-kettle-4.3.0-stable",
      "url": "https://searchcode.com/codesearch/view/42462258/",
      "md5hash": "b84f6536268cba938c4b3d41c46cab83",
      "lines": {
        "42": "import org.apache.poi.ss.usermodel.IndexedColors;",
        "43": "import org.apache.poi.ss.usermodel.RichTextString;",
        "325": "\t\t\tComment cmt = drawing.createCellComment(anchor);",
        "326": "\t\t\tRichTextString str = factory.createRichTextString(comment);"
      },
      "id": 42462258,
      "filename": "ExcelWriterStep.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 2438,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970693/",
      "md5hash": "440bc7eec80263e4ee2bfd222f4c5f7c",
      "lines": {
        "587": "\t\tprivate Set<Ref>[] setCellValue(int rowIndex, int colIndex, RefSheet refSheet, RichTextString value) {",
        "580": "\t",
        "581": "\tprivate class RichTextStringValueSetter extends ValueSetter {",
        "294": "\t@Override",
        "295": "\tpublic void setRichEditText(RichTextString rstr) {",
        "584": "\t\t\treturn setCellValue(row, col, refSheet, (RichTextString) value);",
        "583": "\t\tprotected Set<Ref>[] setCellValue(int row, int col, RefSheet refSheet, Object value) {",
        "43": "import org.zkoss.poi.ss.usermodel.Picture;",
        "44": "import org.zkoss.poi.ss.usermodel.RichTextString;",
        "277": "\t@Override",
        "278": "\tpublic RichTextString getRichEditText() {",
        "441": "\t",
        "442": "\t/*package*/ Set<Ref>[] setValue(RichTextString value) {",
        "443": "\t\treturn new RichTextStringValueSetter().setValue(value);",
        "444": "\t}",
        "586": "\t\t"
      },
      "id": 3970693,
      "filename": "RangeImpl.java"
    },
    {
      "repo": "https://github.com/nic9805/jeecg.git",
      "language": "Java",
      "linescount": 142,
      "location": "/jeecg-framework/src/main/java/org/jeecgframework/web/cgreport/service/impl/excel",
      "name": "jeecg",
      "url": "https://searchcode.com/codesearch/view/93181270/",
      "md5hash": "b64cdd978a3baa9b684ff43a25b2815f",
      "lines": {
        "16": "import org.apache.poi.ss.usermodel.RichTextString;",
        "72": "\t\t\t\t\tCell cell = row.createCell(cindex);",
        "73": "\t\t\t\t\tRichTextString text = new HSSFRichTextString(content);",
        "56": "\t\t\t\tCell cell = row.createCell(cindex);",
        "57": "\t\t\t\tRichTextString text = new HSSFRichTextString(titleContent);",
        "10": "import org.apache.poi.hssf.usermodel.HSSFCellStyle;",
        "11": "import org.apache.poi.hssf.usermodel.HSSFRichTextString;",
        "15": "import org.apache.poi.ss.usermodel.CellStyle;"
      },
      "id": 93181270,
      "filename": "CgReportExcelServiceImpl.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 357,
      "location": "/designer/datasource-editor-table/source/org/pentaho/reporting/ui/datasources/table",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100683243/",
      "md5hash": "a57ce6895f5a9d27a71976401114992a",
      "lines": {
        "32": "import org.apache.poi.ss.usermodel.RichTextString;",
        "131": "",
        "132": "              final RichTextString string = cell.getRichStringCellValue();",
        "168": "            {",
        "169": "              final RichTextString string = cell.getRichStringCellValue();",
        "31": "import org.apache.poi.ss.usermodel.CellStyle;"
      },
      "id": 100683243,
      "filename": "ImportFromFileTask.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/sqs-reader",
      "language": "Java",
      "linescount": 490,
      "location": "/src/main/java/net/sqs2/omr/result/export/spreadsheet",
      "name": "sqs-reader",
      "url": "https://searchcode.com/codesearch/view/128492345/",
      "md5hash": "2023e7effd1da6dbb8f83b0b638317a1",
      "lines": {
        "400": "\t\t\tcell.setCellValue(createRichTextString(value));",
        "386": "\t\t\t\tCell itemValueCell = this.spreadSheetWorkbook.getCell(sheet.getSheetName(), 5, columnIndex) ;",
        "387": "\t\t\t\titemLabelCell.setCellValue(createRichTextString(itemLabelString.toString()));",
        "388": "\t\t\t\titemValueCell.setCellValue(createRichTextString(itemValueString.toString()));",
        "389": "\t\t\t}",
        "70": "import org.apache.poi.ss.usermodel.Picture;",
        "71": "import org.apache.poi.ss.usermodel.RichTextString;",
        "296": "\t\tCell errorCell = cellArray[3];",
        "297": "\t\terrorCell.setCellValue(createRichTextString(errorMessage));",
        "397": "\t\t} catch (NullPointerException ex) {",
        "174": "\t\tString path = sourceDirectory.getRelativePath();",
        "175": "\t\tcellArray[1].setCellValue(createRichTextString(path));",
        "176": "\t\tString fileNames = rowEvent.createRowMemberFilenames(',');",
        "177": "\t\tcellArray[2].setCellValue(createRichTextString(fileNames));",
        "398": "\t\t\tcell.setCellValue(createRichTextString(value));",
        "399": "\t\t} catch (NumberFormatException ex) {"
      },
      "id": 128492345,
      "filename": "ExcelExportModule.java"
    },
    {
      "repo": "https://bitbucket.org/eleumik/sqs-reader",
      "language": "Java",
      "linescount": 528,
      "location": "/src/main/java/net/sqs2/omr/result/export/spreadsheet",
      "name": "sqs-reader",
      "url": "https://searchcode.com/codesearch/view/128647625/",
      "md5hash": "69d84831f4c2de84c85c54108b86c80c",
      "lines": {
        "416": "\t\tCell typeCell = this.spreadSheetWorkbook.getNorthHeaderCell(2, virtualColumnIndex);",
        "417": "\t\tRichTextString typeString = createRichTextString(primaryFormArea.getType());",
        "420": "\t\tCell hintsCell = this.spreadSheetWorkbook.getNorthHeaderCell(3, virtualColumnIndex);",
        "421": "\t\tRichTextString hintsString = createRichTextString(StringUtil.join(primaryFormArea.getHints(), \" \"));",
        "518": "\tprivate RichTextString createRichTextString(String value){",
        "60": "import org.apache.poi.ss.usermodel.CellStyle;",
        "426": "\t\tCell itemLabelCell = this.spreadSheetWorkbook.getNorthHeaderCell(4, virtualColumnIndex);",
        "427": "\t\tRichTextString itemLabelString = createRichTextString(formArea.getItemLabel());",
        "430": "\t\tCell itemValueCell = this.spreadSheetWorkbook.getNorthHeaderCell(5, virtualColumnIndex);",
        "413": "\t\tRichTextString qidString = createRichTextString(primaryFormArea.getQID());",
        "408": "\t\tCell pageCell = this.spreadSheetWorkbook.getNorthHeaderCell(0, virtualColumnIndex);",
        "409": "\t\tRichTextString pageString = createRichTextString(Integer.toString(primaryFormArea.getPage()));",
        "431": "\t\tRichTextString itemValueString = createRichTextString(formArea.getItemValue());",
        "412": "\t\tCell qidCell = this.spreadSheetWorkbook.getNorthHeaderCell(1, virtualColumnIndex);",
        "61": "import org.apache.poi.ss.usermodel.RichTextString;",
        "517": "\t"
      },
      "id": 128647625,
      "filename": "ExcelExportModule.java"
    },
    {
      "repo": "https://bitbucket.org/eleumik/sqs-reader-2",
      "language": "Java",
      "linescount": 528,
      "location": "/src/main/java/net/sqs2/omr/result/export/spreadsheet",
      "name": "sqs-reader-2",
      "url": "https://searchcode.com/codesearch/view/128768207/",
      "md5hash": "69d84831f4c2de84c85c54108b86c80c",
      "lines": {
        "416": "\t\tCell typeCell = this.spreadSheetWorkbook.getNorthHeaderCell(2, virtualColumnIndex);",
        "417": "\t\tRichTextString typeString = createRichTextString(primaryFormArea.getType());",
        "420": "\t\tCell hintsCell = this.spreadSheetWorkbook.getNorthHeaderCell(3, virtualColumnIndex);",
        "421": "\t\tRichTextString hintsString = createRichTextString(StringUtil.join(primaryFormArea.getHints(), \" \"));",
        "518": "\tprivate RichTextString createRichTextString(String value){",
        "60": "import org.apache.poi.ss.usermodel.CellStyle;",
        "426": "\t\tCell itemLabelCell = this.spreadSheetWorkbook.getNorthHeaderCell(4, virtualColumnIndex);",
        "427": "\t\tRichTextString itemLabelString = createRichTextString(formArea.getItemLabel());",
        "430": "\t\tCell itemValueCell = this.spreadSheetWorkbook.getNorthHeaderCell(5, virtualColumnIndex);",
        "413": "\t\tRichTextString qidString = createRichTextString(primaryFormArea.getQID());",
        "408": "\t\tCell pageCell = this.spreadSheetWorkbook.getNorthHeaderCell(0, virtualColumnIndex);",
        "409": "\t\tRichTextString pageString = createRichTextString(Integer.toString(primaryFormArea.getPage()));",
        "431": "\t\tRichTextString itemValueString = createRichTextString(formArea.getItemValue());",
        "412": "\t\tCell qidCell = this.spreadSheetWorkbook.getNorthHeaderCell(1, virtualColumnIndex);",
        "61": "import org.apache.poi.ss.usermodel.RichTextString;",
        "517": "\t"
      },
      "id": 128768207,
      "filename": "ExcelExportModule.java"
    },
    {
      "repo": "https://bitbucket.org/jcabemun/sqs-reader",
      "language": "Java",
      "linescount": 528,
      "location": "/src/main/java/net/sqs2/omr/result/export/spreadsheet",
      "name": "sqs-reader",
      "url": "https://searchcode.com/codesearch/view/137202442/",
      "md5hash": "69d84831f4c2de84c85c54108b86c80c",
      "lines": {
        "416": "\t\tCell typeCell = this.spreadSheetWorkbook.getNorthHeaderCell(2, virtualColumnIndex);",
        "417": "\t\tRichTextString typeString = createRichTextString(primaryFormArea.getType());",
        "420": "\t\tCell hintsCell = this.spreadSheetWorkbook.getNorthHeaderCell(3, virtualColumnIndex);",
        "421": "\t\tRichTextString hintsString = createRichTextString(StringUtil.join(primaryFormArea.getHints(), \" \"));",
        "518": "\tprivate RichTextString createRichTextString(String value){",
        "60": "import org.apache.poi.ss.usermodel.CellStyle;",
        "426": "\t\tCell itemLabelCell = this.spreadSheetWorkbook.getNorthHeaderCell(4, virtualColumnIndex);",
        "427": "\t\tRichTextString itemLabelString = createRichTextString(formArea.getItemLabel());",
        "430": "\t\tCell itemValueCell = this.spreadSheetWorkbook.getNorthHeaderCell(5, virtualColumnIndex);",
        "413": "\t\tRichTextString qidString = createRichTextString(primaryFormArea.getQID());",
        "408": "\t\tCell pageCell = this.spreadSheetWorkbook.getNorthHeaderCell(0, virtualColumnIndex);",
        "409": "\t\tRichTextString pageString = createRichTextString(Integer.toString(primaryFormArea.getPage()));",
        "431": "\t\tRichTextString itemValueString = createRichTextString(formArea.getItemValue());",
        "412": "\t\tCell qidCell = this.spreadSheetWorkbook.getNorthHeaderCell(1, virtualColumnIndex);",
        "61": "import org.apache.poi.ss.usermodel.RichTextString;",
        "517": "\t"
      },
      "id": 137202442,
      "filename": "ExcelExportModule.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 613,
      "location": "/zss/src/org/zkoss/zss/model",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970672/",
      "md5hash": "a8ec860f6feee3f2b5430923b2585bcc",
      "lines": {
        "160": "\t * Set {@link RichTextString} as input by the end user.",
        "161": "\t * @param txt the RichTextString object",
        "162": "\t */",
        "163": "\tpublic void setRichEditText(RichTextString txt);",
        "138": "\t */",
        "139": "\tpublic RichTextString getText();",
        "23": "import org.zkoss.poi.ss.usermodel.Picture;",
        "24": "import org.zkoss.poi.ss.usermodel.RichTextString;",
        "156": "\t */",
        "157": "\tpublic RichTextString getRichEditText();",
        "159": "\t/**"
      },
      "id": 3970672,
      "filename": "Range.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 49,
      "location": "/zss/src/org/zkoss/zss/model",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970679/",
      "md5hash": "b33fd77dd9db3f30fb93808e579c26c6",
      "lines": {
        "43": "\t/**",
        "44": "\t * Returns the RichTextString.",
        "45": "\t * @return the RichTextString.",
        "46": "\t */",
        "47": "\tpublic RichTextString getRichTextString();",
        "16": "import org.zkoss.poi.ss.format.CellFormatResult;",
        "17": "import org.zkoss.poi.ss.usermodel.RichTextString;",
        "25": "\t/**",
        "26": "\t * Returns whether the formatted text a RichTextString.",
        "27": "\t * @return whether a RichTextString.",
        "28": "\t */",
        "29": "\tpublic boolean isRichTextString();"
      },
      "id": 3970679,
      "filename": "FormatText.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 1375,
      "location": "/src/main/java/org/comsoft/juniprint/utils",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212069/",
      "md5hash": "c11a8c0e57714af4cf1eeffb5ef652f0",
      "lines": {
        "897": "\t\t\t\t\t\tcase HSSFCell.CELL_TYPE_STRING:",
        "834": "\t\t\t\t\t\t\t\t\t\t\tString res = strValue.replaceAll(strSearchValue, strReplaceValue);",
        "835": "\t\t\t\t\t\t\t\t\t\t\tcell.setCellValue(new HSSFRichTextString(res));",
        "934": "\t\t\t\t\t\tcase HSSFCell.CELL_TYPE_STRING:",
        "390": "\t\t\tif(nullValue != null){",
        "391": "\t\t\t\tcell.setCellValue(new HSSFRichTextString(nullValue.toString()));",
        "392": "\t\t\t}else{",
        "393": "\t\t\t\tcell.setCellValue((HSSFRichTextString)null);",
        "935": "\t\t\t\t\t\t\tHSSFRichTextString rich = cell.getRichStringCellValue();",
        "898": "\t\t\t\t\t\t\tHSSFRichTextString rich = cell.getRichStringCellValue();",
        "404": "\t\t\t\tcell.setCellValue(dateValue);",
        "405": "\t\t\t}else if(value instanceof HSSFRichTextString){",
        "406": "\t\t\t\tcell.setCellValue((HSSFRichTextString)value);",
        "407": "\t\t\t}else{",
        "408": "\t\t\t\tString strValue = value.toString();",
        "409": "\t\t\t\tcell.setCellValue(new HSSFRichTextString(strValue));"
      },
      "id": 60212069,
      "filename": "ExcelUtils.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 35,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 19,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    }
  ]
}