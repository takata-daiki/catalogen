{
  "matchterm": "DMin",
  "previouspage": null,
  "searchterm": "DMin",
  "query": "DMin",
  "language_filters": [
    {
      "count": 168,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 168,
  "results": [
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 299,
      "location": "/src-plugins/imagescience/imagescience/segment",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853357/",
      "md5hash": "fb75495dc795cc5677ef1724d104df0a",
      "lines": {
        "107": "\t\t\t\t\t\t\tif (c0.y == 0) { set(a0,DMIN); if (dimsyis1) set(a2,DMIN); }",
        "292": "\tprivate final static double DMIN = -Double.MAX_VALUE;",
        "108": "\t\t\t\t\t\t\telse if (c0.y == dimsym1) set(a2,DMIN);",
        "170": "\t\t\t\t\t\tif (maxima) {",
        "171": "\t\t\t\t\t\t\tif (c0.z == 0) set(a0,DMIN);",
        "172": "\t\t\t\t\t\t\telse if (c0.z == dimszm1) set(a2,DMIN);",
        "109": "\t\t\t\t\t\t\tborder(a0,DMIN); border(a1,DMIN); border(a2,DMIN);",
        "174": "\t\t\t\t\t\t\tfor (int y=1, ym1=0, yp1=2; y<dimsyp1; ++y, ++ym1, ++yp1) {",
        "173": "\t\t\t\t\t\t\tborder(a0,DMIN); border(a1,DMIN); border(a2,DMIN);",
        "291": "\tprivate final static double DMAX = Double.MAX_VALUE;",
        "110": "\t\t\t\t\t\t\tfor (int x=1, xm1=0, xp1=2; x<dimsxp1; ++x, ++xm1, ++xp1) {",
        "106": "\t\t\t\t\t\tif (maxima) {"
      },
      "id": 113853357,
      "filename": "Extremizer.java"
    },
    {
      "repo": "https://bitbucket.org/teamninjaneer/terramenta",
      "language": "Java",
      "linescount": 192,
      "location": "/terramenta-globe/src/main/java/com/terramenta/globe/utilities",
      "name": "terramenta",
      "url": "https://searchcode.com/codesearch/view/121194733/",
      "md5hash": "c9b3a91158333478b4c42f890b73b72d",
      "lines": {
        "37": "",
        "38": "        int[] dMin = new int[clusterableCount];",
        "44": "        for (int i = 0; i < clusterableCount; i++) {",
        "45": "            dMin[i] = 0;",
        "78": "            for (int i = 0; i < clusterableCount; i++) {",
        "79": "                if (distMatrix.get(i, dMin[i]) < distMatrix.get(c1, dMin[c1])) {",
        "120": "",
        "82": "            }",
        "83": "            int c2 = dMin[c1];",
        "53": "",
        "54": "                if (distMatrix.get(i, dMin[i]) > distMatrix.get(i, j)) {",
        "55": "                    dMin[i] = j;",
        "56": "                }",
        "121": "            // update dmin and replace ones that previous pointed to c2 to point to c1",
        "122": "            for (int j = 0; j < clusterableCount; j++) {"
      },
      "id": 121194733,
      "filename": "ClusterUtilities.java"
    },
    {
      "repo": "https://mona.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 281,
      "location": "/mona/projects/mox/src",
      "name": "mona",
      "url": "https://searchcode.com/codesearch/view/117182350/",
      "md5hash": "341cd3e713b21f3af918c839d7ae2f09",
      "lines": {
        "187": "               if (d < dmin) { d = dmin; }",
        "39": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "40": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "73": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "74": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "173": "         {",
        "174": "            dvalue = (randomizer.nextDouble() * (dmax - dmin)) + dmin;",
        "94": "      dvalue                  = value;",
        "54": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "55": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "186": "               d -= ddelta;",
        "95": "      dmin                    = min;",
        "92": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "93": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "30": "   float      fvalue, fmin, fmax, fdelta;",
        "31": "   double     dvalue, dmin, dmax, ddelta;"
      },
      "id": 117182350,
      "filename": "Gene.java"
    },
    {
      "repo": "https://bitbucket.org/nickgentoo/jlose",
      "language": "Java",
      "linescount": 935,
      "location": "/src/Jlose",
      "name": "jlose",
      "url": "https://searchcode.com/codesearch/view/53456700/",
      "md5hash": "59c032d86ee2b542f76d300dcde99f7a",
      "lines": {
        "161": "\t\t \t\tJlose.RRSHCSolver solver = new Jlose.RRSHCSolver();",
        "162": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "40": "\t\tint n_vars= 10;",
        "41": "\t\tint dmin=5;",
        "170": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "183": "\t\t\tif(test == 1){",
        "143": "\t\t \t\tJlose.HCSolver solver = new Jlose.HCSolver();",
        "144": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "177": "\t\t \t\tJlose.IJARBranchNBound solver = new Jlose.IJARBranchNBound();",
        "178": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "148": "\t\t \t\tJlose.HCPSolver solver = new Jlose.HCPSolver();",
        "149": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "169": "\t\t \t\tJlose.IJARSolver solver = new Jlose.IJARSolver();",
        "184": "\t\t\t\tt1(n_vars,dmin,dmax, n_problemi);",
        "153": "\t\t \t\tJlose.RRHCSolver solver = new Jlose.RRHCSolver();",
        "154": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);"
      },
      "id": 53456700,
      "filename": "Test.java"
    },
    {
      "repo": "https://github.com/kkckkc/joni.git",
      "language": "Java",
      "linescount": 431,
      "location": "/src/org/joni",
      "name": "joni",
      "url": "https://searchcode.com/codesearch/view/108674377/",
      "md5hash": "765c967f1616f31bfe806aca04a90119",
      "lines": {
        "75": "    int anchor;                             /* BEGIN_BUF, BEGIN_POS, (SEMI_)END_BUF */",
        "296": "        ",
        "297": "        dMin = e.mmd.min;",
        "330": "        anchorDmax = 0;",
        "299": "        ",
        "300": "        if (dMin != MinMaxLen.INFINITE_DISTANCE) {",
        "301": "            thresholdLength = dMin + (exactEnd - exactP);",
        "302": "        }",
        "76": "    int anchorDmin;                         /* (SEMI_)END_BUF anchor distance */",
        "331": "        anchorDmin = 0;",
        "313": "        searchAlgorithm = enc.isSingleByte() ? SearchAlgorithm.MAP_SB : SearchAlgorithm.MAP;",
        "314": "        dMin = m.mmd.min;",
        "316": "        ",
        "317": "        if (dMin != MinMaxLen.INFINITE_DISTANCE) {",
        "318": "            thresholdLength = dMin + 1;",
        "319": "        }"
      },
      "id": 108674377,
      "filename": "Regex.java"
    },
    {
      "repo": "https://bitbucket.org/JustinLloyd/blackjack",
      "language": "Java",
      "linescount": 3618,
      "location": "",
      "name": "blackjack",
      "url": "https://searchcode.com/codesearch/view/102535368/",
      "md5hash": "1143b9c64c91a69cb1d36ab800092c64",
      "lines": {
        "513": "\t\t\t}",
        "514": "\t\tdMIN = (double)dmin + (double)cmin / 100;",
        "2881": "\tvoid CashOut() {",
        "1544": "",
        "585": "\t\t\tg.drawString(\"Fatal Error\", 10,40);",
        "586": "\t\t\tg.drawString(\"Contact System Administrator\",10,70);",
        "2882": "\t\tif(m_balance < dMIN) {",
        "210": "\tImage butts[] = new Image[6];\t\t\t\t\t\t\t\t\t//Depressed button images",
        "211": "\tdouble dMIN;\t\t\t\t\t\t\t\t\t\t\t\t\t//Minimum bet value",
        "661": "\t\t\tg.setColor(Color.white);",
        "662": "\t\t\tg.drawString(doubleToDollar(dMIN), mincoords.x + 35, mincoords.y);",
        "1545": "\t\tif(m_balance < dMIN)",
        "1208": "\t\tm_balance -= chipValue[i];",
        "1209": "\t\tif(m_bet >= dMIN)",
        "1242": "\t\tm_balance += chipValue[i];",
        "1243": "\t\tif(m_bet < dMIN) pBlackJack.m_canDeal = false;"
      },
      "id": 102535368,
      "filename": "VVBjInt.java"
    },
    {
      "repo": "https://bitbucket.org/JustinLloyd/blackjack",
      "language": "Java",
      "linescount": 1022,
      "location": "",
      "name": "blackjack",
      "url": "https://searchcode.com/codesearch/view/102535376/",
      "md5hash": "15725033ebbfa66989ea97688da2daf9",
      "lines": {
        "928": "",
        "929": "\t\tint x, y, packetsize,dmin,cmin,dmax,cmax;",
        "901": "\t\t\tpublic void ResetTable(int tableNo, int clientIDMajor",
        "902": "\t\t\t\t\t\t, int clientIDMinor) throws Exception",
        "264": "\t{",
        "905": "\tpublic void ResetTable(int tableNo, int clientIDMajor, ",
        "906": "\t\t\t\tint clientIDMinor) throws Exception",
        "940": "\t\tfor(x=0; x<MAX_GAME_NO + 1; x++) {",
        "941": "\t\t\tdmin = (int) dTableMins[x]; ",
        "942": "\t\t\tcm = (dTableMins[x] * 100) - dmin * 100;",
        "911": "\t\t\t}",
        "912": "\t\tif(dMIN > m_balance) ",
        "265": "\t\tif((bet < dMIN) || (bet > dMAX)) {",
        "920": "",
        "921": "\t\tif(clientIDMinor != STANDALONE_CLIENT) "
      },
      "id": 102535376,
      "filename": "CBlackJack.java"
    },
    {
      "repo": "https://github.com/ncweiler/VIB.git",
      "language": "Java",
      "linescount": 989,
      "location": "/pal/math",
      "name": "VIB",
      "url": "https://searchcode.com/codesearch/view/107075622/",
      "md5hash": "10ca10a2045b12c746c11682b6e77ac8",
      "lines": {
        "128": "\t\tt = t2;",
        "129": "\t\tdmin = small;",
        "424": "\t\t\tsort();               /* the new eigenvalues and eigenvectors */",
        "425": "\t\t\tdmin = d[dim-1];",
        "426": "\t\t\tif (dmin < small)",
        "427": "\t\t\t\tdmin = small;",
        "460": "\tprivate int i, j, k, k2, nl, kl, kt;",
        "429": "\t\t\tif ((prin > 2) && (scbd > 1.0))",
        "461": "\tprivate double s, sl, dn, dmin,",
        "608": "\t\t\t\tMath.sqrt(Math.abs(fx)/dmin + s*ldt) +",
        "428": "\t\t\tillc = (MachineAccuracy.SQRT_EPSILON * d[0]) > dmin;",
        "607": "\t\t\tt2 = MachineAccuracy.SQRT_SQRT_EPSILON*"
      },
      "id": 107075622,
      "filename": "ConjugateDirectionSearch.java"
    },
    {
      "repo": "https://github.com/agilemobiledev/doppio.git",
      "language": "Java",
      "linescount": 897,
      "location": "/classes/demo",
      "name": "doppio",
      "url": "https://searchcode.com/codesearch/view/72356552/",
      "md5hash": "5efedb16a905b1329e884fb7715caf48",
      "lines": {
        "184": "        /* Similar extend the bottom-up search. */",
        "133": "    final int[] yv = yvec;                // And more and more . . .",
        "134": "    final int dmin = xoff - ylim;        // Minimum valid diagonal.",
        "185": "        if (bmin > dmin)",
        "152": "        /* Extend the top-down search by an edit step in each diagonal. */",
        "153": "        if (fmin > dmin)"
      },
      "id": 72356552,
      "filename": "Diff.java"
    },
    {
      "repo": "https://github.com/freehep/freehep-psviewer.git",
      "language": "Java",
      "linescount": 712,
      "location": "/ps/src/main/java/org/freehep/postscript/operators",
      "name": "freehep-psviewer",
      "url": "https://searchcode.com/codesearch/view/76780723/",
      "md5hash": "bf910d38a0bc4520ca1571ecb38de5a1",
      "lines": {
        "564": "\t\t\t\t\t\t\t\t& ((1 << bitsPerComponent) - 1);",
        "565": "\t\t\t\t\t\tfloat dMin = ((PSNumber) decode.get(c * 2 + 0))",
        "568": "\t\t\t\t\t\t\t\t.getFloat();",
        "569": "\t\t\t\t\t\tcolor[c] = dMin",
        "570": "\t\t\t\t\t\t\t\t+ (pixel * (dMax - dMin) / ((1 << bitsPerComponent) - 1));",
        "571": "\t\t\t\t\t\tc++;"
      },
      "id": 76780723,
      "filename": "PaintingOperator.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 1807,
      "location": "/src-plugins/IO_/io",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113852401/",
      "md5hash": "5e1a4f04f0c418345c158efedecca7f2",
      "lines": {
        "800": "         if (d < dmin) {",
        "769": "         \t\tint d = dr*dr + dg*dg + db*db;",
        "770": "         \t\tif (d < dmin) {",
        "771": "               \t\t\tdmin = d;",
        "772": "            \t\t\tminpos = i/3;",
        "801": "            dmin = d;",
        "802": "            minpos = i/3;",
        "792": "      int minpos = 0;",
        "793": "      int dmin = 256*256*256;",
        "762": "    \t\tminpos = 0;",
        "763": "   \t\tint dmin = 256*256*256;",
        "799": "         int d = dr*dr + dg*dg + db*db;"
      },
      "id": 113852401,
      "filename": "Gif_Stack_Writer.java"
    },
    {
      "repo": "https://bitbucket.org/filtercake/bodyextensions",
      "language": "Java",
      "linescount": 4265,
      "location": "/deps/hemesh2010/src/wblut/hemesh/core",
      "name": "bodyextensions",
      "url": "https://searchcode.com/codesearch/view/122644178/",
      "md5hash": "13eb13e1bb95916b982e725eaa14315f",
      "lines": {
        "4099": "\t\tdouble d;",
        "4132": "\t\t\td = WB_Distance.sqDistance(tmp, p);",
        "4133": "\t\t\tif (d < dmin) {",
        "4134": "\t\t\t\tdmin = d;",
        "4135": "\t\t\t\tface = faces.get(i);",
        "4105": "\t\t\td = WB_Distance.sqDistance(tmp, p);",
        "4106": "\t\t\tif (d < dmin) {",
        "4107": "\t\t\t\tdmin = d;",
        "4108": "\t\t\t\tresult = tmp;",
        "4100": "\t\tdouble dmin = Double.POSITIVE_INFINITY;",
        "4126": "\t\tdouble d;",
        "4127": "\t\tdouble dmin = Double.POSITIVE_INFINITY;"
      },
      "id": 122644178,
      "filename": "HE_Mesh.java"
    },
    {
      "repo": "https://bitbucket.org/joshareed/visualizer",
      "language": "Java",
      "linescount": 2018,
      "location": "/org.andrill.visualizer.app.cores/src/com/visutools/nav/bislider",
      "name": "visualizer",
      "url": "https://searchcode.com/codesearch/view/55029459/",
      "md5hash": "0a8fcb15ec05bae123511043919414a3",
      "lines": {
        "289": "\t\t\t\t\t\tdouble Val = Double.parseDouble(Text);",
        "290": "\t\t\t\t\t\tJTextFieldMin.setBackground(Color.WHITE);",
        "291": "\t\t\t\t\t} catch (NumberFormatException NumberFormatException_Arg) {",
        "266": "",
        "267": "\t\tJTextFieldMin.setVisible(false);",
        "269": "",
        "270": "\t\tJTextFieldMin.getDocument().addDocumentListener(new DocumentListener() {",
        "274": "\t\t\tpublic void insertUpdate(DocumentEvent DocumentEvent_Arg) {",
        "275": "\t\t\t\tString Text = JTextFieldMin.getText();",
        "278": "\t\t\t\t\t\tdouble Val = Double.parseDouble(Text);",
        "279": "\t\t\t\t\t\tJTextFieldMin.setBackground(Color.WHITE);",
        "280": "\t\t\t\t\t} catch (NumberFormatException NumberFormatException_Arg) {",
        "281": "\t\t\t\t\t\tJTextFieldMin.setBackground(new Color(255, 128, 128));",
        "285": "\t\t\tpublic void removeUpdate(DocumentEvent DocumentEvent_Arg) {",
        "286": "\t\t\t\tString Text = JTextFieldMin.getText();"
      },
      "id": 55029459,
      "filename": "BiSliderPresentation.java"
    },
    {
      "repo": "https://bitbucket.org/ppla09/sinodar-mobile-app.git",
      "language": "Java",
      "linescount": 457,
      "location": "/sinodar/src/com/ppl/sinodar/controllers",
      "name": "SiNoDar Mobile App",
      "url": "https://searchcode.com/codesearch/view/92084131/",
      "md5hash": "bcfbe884ee32fd90efcc0c2bc1cf5482",
      "lines": {
        "192": "\t\t\t\t\t\tdMin.getLatitude(), dMin.getLongitude());",
        "197": "\t\t\t\tif (dist2 < dist1) {",
        "198": "\t\t\t\t\tdMin = this.list.get(i);",
        "203": "\t\t\t",
        "204": "\t\t\tinfo[0] = dMin.getMainPhoneNumber()+\"\";",
        "205": "\t\t\tinfo[1] = dMin.getName()+\"\";",
        "206": "\t\t\treturn info;",
        "207": "\t\t\t//return dMin.getPhoneNumber();",
        "186": "\t\t} else {",
        "187": "\t\t\tInstanceModel dMin = this.list.get(0);",
        "191": "\t\t\t\tdouble dist1 = instDao.calculateGCD(Math.toRadians(latitude), Math.toRadians(longitude),"
      },
      "id": 92084131,
      "filename": "QuickDialController.java"
    },
    {
      "repo": "https://bitbucket.org/joshareed/visualizer",
      "language": "Java",
      "linescount": 1546,
      "location": "/org.andrill.visualizer.app.cores/src/com/visutools/nav/bislider",
      "name": "visualizer",
      "url": "https://searchcode.com/codesearch/view/55029457/",
      "md5hash": "e23da90ff68b791dd611f2af13ebb2aa",
      "lines": {
        "1047": "\t\t\twhile (Ctrl.getMinimumValue() + (Ctrl.getSegmentSize() * NewMin) < Ctrl.getMinimumValue()) {",
        "1046": "\t\t\tint NewMin = (int) Math.round(DMin / Ctrl.getSegmentSize());",
        "695": "\t\t\t}",
        "696": "\t\t\tJTextFieldMin.setVisible(false);",
        "690": "",
        "691": "\t\tif (JTextFieldMin.isVisible()) {",
        "692": "\t\t\tJTextFieldMin.postActionEvent();",
        "693": "\t\t\twhile (JTextFieldMin.getActionListeners().length > 0) {",
        "694": "\t\t\t\tJTextFieldMin.removeActionListener(JTextFieldMin.getActionListeners()[0]);",
        "663": "\t\t}",
        "664": "\t\tif (JTextFieldMin.isVisible()) {",
        "665": "\t\t\tJTextFieldMin.repaint();",
        "666": "\t\t}",
        "1044": "",
        "1045": "\t\t\tdouble DMin = ((MouseX - DeplBef - MARGIN_RULER_LEFT) * (Ctrl.getMaximumValue() - Ctrl.getMinimumValue())) / RulerWidth;"
      },
      "id": 55029457,
      "filename": "BiSlider_V_Presentation.java"
    },
    {
      "repo": "https://github.com/damencho/libjitsi.git",
      "language": "Java",
      "linescount": 436,
      "location": "/src/org/jitsi/impl/neomedia/codec/audio/g729",
      "name": "libjitsi",
      "url": "https://searchcode.com/codesearch/view/96713114/",
      "md5hash": "907230bf5873dc5103aefaff3ec99ba2",
      "lines": {
        "290": "   int index = 0;          /*output: selected codebook index     */",
        "291": "   dmin=FLT_MAX_G729;",
        "330": "   float[]        buf = new float[M];",
        "331": "   float        dist, dmin, tmp;",
        "300": "      if(dist<dmin) {",
        "301": "         dmin = dist;",
        "302": "         index = k1;",
        "337": "   int index = 0;          /*output: selected codebook index    */",
        "338": "   dmin= FLT_MAX_G729;",
        "345": "",
        "299": "",
        "346": "      if(dist<dmin) {",
        "347": "         dmin = dist;",
        "284": "   float[]        buf = new float[M];",
        "285": "   float        dist, dmin, tmp;"
      },
      "id": 96713114,
      "filename": "QuaLsp.java"
    },
    {
      "repo": "https://bitbucket.org/boltpride35/jdownloader.git",
      "language": "Java",
      "linescount": 479,
      "location": "/src/jd/captcha/specials",
      "name": "jdownloader",
      "url": "https://searchcode.com/codesearch/view/47608486/",
      "md5hash": "12d926b3de6f684cb61bd752dab4e9ae",
      "lines": {
        "258": "                    px.grid[x0][y0] = 0x000000;",
        "259": "                    // follow(x0, y0, px, captcha, dmin, dmax);",
        "324": "                                                        follow(x1, y1, px, captcha, dmin, dmax);",
        "325": "                                                    }",
        "266": "",
        "267": "    static void fill(PixelGrid captcha, double dmin, double dmax) {",
        "322": "                                                    if (f > 0 && fx > 0 && f < captcha.getHeight() && fx < captcha.getWidth() && captcha.grid[fx][f] != 0xffffff && checkLine(x1, x1 + x1add, y1, y1 + y1add, captcha, 0x000000)) {",
        "323": "                                                        follow(x, y, px, captcha, dmin, dmax);",
        "249": "",
        "313": "                                        // follow((x1-x)/2+x,(y1-y)/2+y, px,",
        "314": "                                        // captcha, dmin, dmax);",
        "250": "    static void follow(int x0, int y0, PixelGrid px, PixelGrid captcha, double dmin, double dmax) {",
        "286": "",
        "287": "                                if (diff > dmin && diff < dmax) {"
      },
      "id": 47608486,
      "filename": "NrDr.java"
    },
    {
      "repo": "https://github.com/EISALab/IMOGAgroundwater.git",
      "language": "Java",
      "linescount": 898,
      "location": "/d2k4_source/D2K_v4_0_2/src/core/ncsa/d2k/modules/core/optimize/ga/emo/gui",
      "name": "IMOGAgroundwater",
      "url": "https://searchcode.com/codesearch/view/69642023/",
      "md5hash": "e7f360175d0d30cfb96585e08c32e326",
      "lines": {
        "747": "      DecisionVariable var = new DecisionVariable(name, dmin, dmax, dprec, dstr);",
        "748": "      data.addDecisionVariable(var);",
        "713": "",
        "714": "        double dmin;",
        "715": "        try {",
        "716": "          dmin = Double.parseDouble(min);",
        "718": "        catch (Exception e) {",
        "719": "          dmin = 0;",
        "745": "",
        "185": "      try {",
        "216": "//      varTable.addVariable(name, dmin, dmax, dprec, dstr);",
        "217": "      DecisionVariable var = new DecisionVariable(name, dmin, dmax, dprec, dstr);",
        "186": "        dmin = Double.parseDouble(min);",
        "746": "      //  varTable.addVariable(name, dmin, dmax, dprec, dstr);",
        "215": ""
      },
      "id": 69642023,
      "filename": "DefineDecisionVariables.java"
    },
    {
      "repo": "http://alageospatialportal.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1001,
      "location": "/alaspatial/src/main/java/org/ala/spatial/analysis/index",
      "name": "alageospatialportal",
      "url": "https://searchcode.com/codesearch/view/256495/",
      "md5hash": "6dc99dd2369fdc9e5d372f62bd45540b",
      "lines": {
        "545": "        if (legend == null) {",
        "546": "            //double range = dMax - dMin;",
        "547": "            for (int i = 0; i < dArray.length; i++) {",
        "548": "                c[i] = Legend.getColour(dArray[i], dMin, dMax);",
        "549": "                //c[i] = 0xFFFFFFFF | (int) (((dArray[i] - dMin) / range) * 0x00FFFFFF);",
        "655": "",
        "656": "    private double getDMin() {",
        "657": "        return dMin;",
        "658": "    }",
        "404": "            case 0: //double",
        "405": "                dMin = sco.getDMin();",
        "667": "            case 0: //double",
        "668": "                legend.append(dMin).append(\",\").append(RGBcsv(Legend.getLinearColour(dMin, dMin, dMax, startColour, endColour))).append(\"\\n\");",
        "669": "                legend.append(dMax).append(\",\").append(RGBcsv(Legend.getLinearColour(dMax, dMin, dMax, startColour, endColour))).append(\"\\n\");",
        "670": "                legend.append(\"unknown\").append(\",\").append(RGBcsv(0xFFFFFFFF)).append(\"\\n\");"
      },
      "id": 256495,
      "filename": "SpeciesColourOption.java"
    },
    {
      "repo": "git://github.com/jeromerobert/jCAE.git",
      "language": "Java",
      "linescount": 1236,
      "location": "/amibe/src/org/jcae/mesh/amibe/projection",
      "name": "jCAE",
      "url": "https://searchcode.com/codesearch/view/17578420/",
      "md5hash": "0279b8e78c81fde3cd6e4403a3ec6142",
      "lines": {
        "420": "\t\t\tdouble dist = sqrDistanceVertexTriangle(pos, t, index);",
        "421": "\t\t\tif (dist < dmin)",
        "422": "\t\t\t{",
        "423": "\t\t\t\tdmin = dist;",
        "1111": "\t\t\t\tif (dist < dmin)",
        "1112": "\t\t\t\t{",
        "1076": "\t\t\t\tdouble dist = sqrDistanceVertexTriangle(target, t, index);",
        "1077": "\t\t\t\tif (dist >= dmin)",
        "1110": "\t\t\t\tdouble dist = sqrDistanceVertexTriangle(target, f, index);",
        "1079": "\t\t\t\tmodified = true;",
        "1080": "\t\t\t\tdmin = dist;",
        "410": "\t\tint[] index = new int[2];",
        "411": "\t\tdouble dmin = sqrDistanceVertexTriangle(pos, start, index);",
        "1175": "\t\t\tdouble dMin = Double.MAX_VALUE;",
        "1174": "\t\t\tdouble[] pos = v.getUV();"
      },
      "id": 17578420,
      "filename": "MeshLiaison.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 61,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 59,
      "source": "Github",
      "id": 2
    },
    {
      "count": 33,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 12,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 2,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    }
  ]
}