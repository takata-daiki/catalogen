{
  "matchterm": "org.apache.poi.hwpf.extractor.WordExtractor",
  "previouspage": null,
  "searchterm": "org.apache.poi.hwpf.extractor.WordExtractor",
  "query": "org.apache.poi.hwpf.extractor.WordExtractor",
  "language_filters": [
    {
      "count": 28,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 28,
  "results": [
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 139,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785561/",
      "md5hash": "dff73f83047fcc998beb71b2402c9412",
      "lines": {
        "32": "import org.apache.tika.sax.XHTMLContentHandler;",
        "33": "import org.xml.sax.SAXException;",
        "8": " *",
        "9": " *     http://www.apache.org/licenses/LICENSE-2.0",
        "16": " */",
        "17": "package org.apache.tika.parser.microsoft;",
        "22": "",
        "23": "import org.apache.poi.hwpf.HWPFDocument;",
        "24": "import org.apache.poi.hwpf.model.PicturesTable;",
        "25": "import org.apache.poi.hwpf.usermodel.Picture;",
        "26": "import org.apache.poi.poifs.filesystem.DirectoryEntry;",
        "27": "import org.apache.poi.poifs.filesystem.Entry;",
        "28": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "29": "import org.apache.tika.exception.TikaException;",
        "31": "import org.apache.tika.parser.ParseContext;"
      },
      "id": 111785561,
      "filename": "WordExtractor.java"
    },
    {
      "repo": "https://bitbucket.org/interactivemediamanagement/converge-1.x.git",
      "language": "Java",
      "linescount": 632,
      "location": "/converge-server/modules/converge-ejb/src/main/java/dk/i2m/converge/ejb/services",
      "name": "converge-1.x",
      "url": "https://searchcode.com/codesearch/view/39694366/",
      "md5hash": "b311db830b776f2d84011b89583da41d",
      "lines": {
        "40": "import net.sf.json.JSONObject;",
        "41": "import org.apache.commons.httpclient.HttpClient;",
        "42": "import org.apache.commons.httpclient.HttpStatus;",
        "43": "import org.apache.commons.httpclient.methods.PostMethod;",
        "44": "import org.apache.commons.httpclient.methods.StringRequestEntity;",
        "45": "import org.apache.pdfbox.cos.COSDocument;",
        "46": "import org.apache.pdfbox.pdfparser.PDFParser;",
        "47": "import org.apache.pdfbox.pdmodel.PDDocument;",
        "48": "import org.apache.pdfbox.util.PDFTextStripper;",
        "49": "import org.apache.poi.hwpf.HWPFDocument;",
        "50": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "51": "import org.apache.sanselan.ImageInfo;",
        "52": "import org.apache.sanselan.ImageReadException;",
        "53": "import org.apache.sanselan.Sanselan;",
        "54": "import org.apache.sanselan.common.IImageMetadata;"
      },
      "id": 39694366,
      "filename": "MetaDataService.java"
    },
    {
      "repo": "https://github.com/selmantayyar/LuceneImplementation.git",
      "language": "Java",
      "linescount": 161,
      "location": "/LuceneImplementation/src/com/selman",
      "name": "LuceneImplementation",
      "url": "https://searchcode.com/codesearch/view/73344562/",
      "md5hash": "73d1046bc856b0735907975ac4b800e0",
      "lines": {
        "2": "",
        "3": "import org.apache.poi.hwpf.HWPFDocument;",
        "4": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "5": "import org.apache.poi.poifs.filesystem.*;",
        "6": "",
        "71": "\t\t\tHWPFDocument doc = new HWPFDocument(fs);",
        "72": "",
        "73": "\t\t\tWordExtractor we = new WordExtractor(doc);",
        "70": "",
        "69": "\t\t\tfs = new POIFSFileSystem(new FileInputStream(filesname));",
        "68": "\t\ttry {",
        "27": "",
        "28": "\t\t\tWordExtractor we = new WordExtractor(doc);",
        "62": "\t\t",
        "63": "\t\tPOIFSFileSystem fs = null;"
      },
      "id": 73344562,
      "filename": "ReadMainFiles.java"
    },
    {
      "repo": "https://bitbucket.org/johnnywsd/java-extractemailfromdocdocxpdftxt.git",
      "language": "Java",
      "linescount": 30,
      "location": "/shoudaw/msword",
      "name": "java-extractemailfromdocdocxpdftxt",
      "url": "https://searchcode.com/codesearch/view/51905615/",
      "md5hash": "7dcf9a408bc424cfbaf5f91e7743265a",
      "lines": {
        "16": "\t\t\tString text = extractor.getText();",
        "17": "\t\t\treturn text;",
        "4": "",
        "5": "import org.apache.poi.hwpf.HWPFDocument;",
        "6": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "7": "",
        "13": "//\t\t\tSystem.out.println(\"Proceeding:\"+filePath);",
        "14": "\t\t\tHWPFDocument document=new HWPFDocument(new FileInputStream(filePath));",
        "15": "\t\t\tWordExtractor extractor = new WordExtractor(document);"
      },
      "id": 51905615,
      "filename": "MsWordDoc.java"
    },
    {
      "repo": "https://github.com/cheft/fast-reader.git",
      "language": "Java",
      "linescount": 288,
      "location": "/reader-server/src/com/topway/reader/server/lucene",
      "name": "fast-reader",
      "url": "https://searchcode.com/codesearch/view/94960725/",
      "md5hash": "8e716c0d4bbe4c605731725e169386b5",
      "lines": {
        "11": "",
        "12": "import org.apache.lucene.analysis.Analyzer;",
        "13": "import org.apache.lucene.document.Document;",
        "14": "import org.apache.lucene.document.Field;",
        "15": "import org.apache.lucene.index.IndexWriter;",
        "18": "import org.apache.pdfbox.util.PDFTextStripper;",
        "19": "import org.apache.poi.POIXMLDocument;",
        "20": "import org.apache.poi.hslf.HSLFSlideShow;",
        "21": "import org.apache.poi.hslf.model.Slide;",
        "22": "import org.apache.poi.hslf.model.TextRun;",
        "23": "import org.apache.poi.hslf.usermodel.SlideShow;",
        "24": "import org.apache.poi.hssf.extractor.ExcelExtractor;",
        "25": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "26": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "27": "import org.apache.poi.openxml4j.exceptions.OpenXML4JException;"
      },
      "id": 94960725,
      "filename": "IndexFiles.java"
    },
    {
      "repo": "https://github.com/SorinS/axiom-stack.git",
      "language": "Java",
      "linescount": 93,
      "location": "/src/java/axiom/util",
      "name": "axiom-stack",
      "url": "https://searchcode.com/codesearch/view/107461104/",
      "md5hash": "f15b52799630b1d8e39906fafdf7b9a8",
      "lines": {
        "32": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "33": "import org.pdfbox.pdmodel.PDDocument;",
        "59": "",
        "60": "\tpublic static String msWordExtractor(InputStream is) throws Exception {",
        "61": "\t    WordExtractor we = new WordExtractor(is);",
        "15": " * You should have received a copy of the GNU Affero General Public License",
        "16": " * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "62": "\t    return we.getText();",
        "25": "",
        "26": "import org.apache.poi.hslf.extractor.QuickButCruddyTextExtractor;",
        "27": "import org.apache.poi.hssf.usermodel.HSSFCell;",
        "28": "import org.apache.poi.hssf.usermodel.HSSFRow;",
        "29": "import org.apache.poi.hssf.usermodel.HSSFSheet;",
        "30": "import org.apache.poi.hssf.usermodel.HSSFWorkbook;",
        "31": "import org.apache.poi.hwpf.extractor.WordExtractor;"
      },
      "id": 107461104,
      "filename": "TextExtractor.java"
    },
    {
      "repo": "https://github.com/pperalta/recipe-index.git",
      "language": "Java",
      "linescount": 36,
      "location": "/src/test/java/org/blackbeanbag/recipe/poi",
      "name": "recipe-index",
      "url": "https://searchcode.com/codesearch/view/112538974/",
      "md5hash": "dc90b2b1ca11297965721e9231c845d0",
      "lines": {
        "1": "package org.blackbeanbag.recipe.poi;",
        "2": "",
        "3": "import static org.junit.Assert.*;",
        "8": "",
        "9": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "10": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "11": "import org.junit.Test;",
        "12": "",
        "13": "/**",
        "14": " * Test case for asserting the Apache POI functionality.",
        "18": " */",
        "19": "public class WordDocPoiTest {",
        "25": "",
        "26": "        WordExtractor extractor = new WordExtractor(fs);",
        "27": "        assertNotNull(extractor);"
      },
      "id": 112538974,
      "filename": "WordDocPoiTest.java"
    },
    {
      "repo": "https://github.com/aboutyang/infoglue.git",
      "language": "Java",
      "linescount": 2485,
      "location": "/src/java/org/infoglue/cms/controllers/kernel/impl/simple",
      "name": "infoglue",
      "url": "https://searchcode.com/codesearch/view/99552391/",
      "md5hash": "baa8a06ae9012cabef157e4c29ebfcab",
      "lines": {
        "46": "",
        "47": "import org.apache.log4j.Level;",
        "48": "import org.apache.log4j.Logger;",
        "49": "import org.apache.lucene.analysis.Analyzer;",
        "50": "import org.apache.lucene.analysis.standard.StandardAnalyzer;",
        "51": "import org.apache.lucene.document.DateTools;",
        "52": "import org.apache.lucene.document.Document;",
        "53": "import org.apache.lucene.document.Field;",
        "54": "import org.apache.lucene.document.NumericField;",
        "55": "import org.apache.lucene.index.IndexReader;",
        "56": "import org.apache.lucene.index.IndexWriter;",
        "57": "import org.apache.lucene.index.IndexWriterConfig;",
        "58": "import org.apache.lucene.index.Term;",
        "59": "import org.apache.lucene.queryParser.MultiFieldQueryParser;",
        "60": "import org.apache.lucene.queryParser.QueryParser;"
      },
      "id": 99552391,
      "filename": "LuceneController.java"
    },
    {
      "repo": "https://github.com/pperalta/recipe-index.git",
      "language": "Java",
      "linescount": 74,
      "location": "/src/main/java/org/blackbeanbag/recipe/scanners",
      "name": "recipe-index",
      "url": "https://searchcode.com/codesearch/view/112538995/",
      "md5hash": "38fa4d7e6bcf2ed73fc8de18900aa50f",
      "lines": {
        "1": "package org.blackbeanbag.recipe.scanners;",
        "2": "",
        "3": "import org.apache.log4j.Logger;",
        "4": "import org.apache.lucene.document.Document;",
        "5": "import org.apache.lucene.document.Field;",
        "6": "import org.apache.lucene.document.TextField;",
        "7": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "8": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "9": "",
        "34": "        try {",
        "35": "            POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream(file));",
        "36": "            WordExtractor extractor = new WordExtractor(fs);",
        "38": "",
        "37": "            String[] paragraphs = extractor.getParagraphText();"
      },
      "id": 112538995,
      "filename": "WordScanner.java"
    },
    {
      "repo": "git://github.com/evllabs/JGAAP.git",
      "language": "Java",
      "linescount": 204,
      "location": "/src/com/jgaap/generics",
      "name": "JGAAP",
      "url": "https://searchcode.com/codesearch/view/16973147/",
      "md5hash": "8bd2f482161cbb20b2fe2b3f678da332",
      "lines": {
        "32": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "33": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "34": "import org.apache.poi.xwpf.extractor.XWPFWordExtractor;",
        "35": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "36": "",
        "133": "\t *            An input stream pointing to the Word document to be read.",
        "139": "\t\tHWPFDocument doc = new HWPFDocument(fs);",
        "140": "\t\tWordExtractor we = new WordExtractor(doc);",
        "141": "\t\tchar[] origText = we.getText().toCharArray();",
        "132": "\t * @param inputStream",
        "27": "",
        "28": "import org.apache.log4j.Logger;",
        "29": "import org.apache.pdfbox.pdmodel.PDDocument;",
        "30": "import org.apache.pdfbox.util.PDFTextStripper;",
        "31": "import org.apache.poi.hwpf.HWPFDocument;"
      },
      "id": 16973147,
      "filename": "DocumentHelper.java"
    },
    {
      "repo": "http://filesearch.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 111,
      "location": "/filesearch/SearchLocalFile/src/com/searchlocal/filereader",
      "name": "filesearch",
      "url": "https://searchcode.com/codesearch/view/14046017/",
      "md5hash": "df1e61c6ce21120c34de9659095a05b9",
      "lines": {
        "9": "",
        "10": "import org.apache.poi.POIXMLDocument;",
        "11": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "12": "import org.apache.poi.xwpf.usermodel.XWPFDocument;",
        "13": "import org.apache.poi.xwpf.usermodel.XWPFParagraph;",
        "14": "",
        "82": "",
        "83": "\tprivate List getBeanList(WordExtractor extractor, WordFileBean file) {",
        "84": "\t\tString[] strs = extractor.getParagraphText();",
        "85": "\t\tList<WordFileBean> beanList = new ArrayList<WordFileBean>();",
        "88": "\t\tfor (int i = 0; i < strs.length; i++) {",
        "89": "\t\t\tString content = WordExtractor.stripFields(strs[i]);",
        "59": "\t\t\t} else {",
        "60": "\t\t\t\tWordExtractor extractor = new WordExtractor(inputStream);",
        "61": "\t\t\t\treturn getBeanList(extractor, file);"
      },
      "id": 14046017,
      "filename": "WordReader.java"
    },
    {
      "repo": "https://bitbucket.org/petermr/chemicaltagger",
      "language": "Java",
      "linescount": 177,
      "location": "/src/main/java/uk/ac/cam/ch/wwmm/chemicaltagger",
      "name": "chemicaltagger",
      "url": "https://searchcode.com/codesearch/view/54270182/",
      "md5hash": "a98bc0e3602dfaadbcb1c63cfa0df696",
      "lines": {
        "7": "",
        "8": "import org.apache.commons.lang.StringUtils;",
        "41": "\tpublic void readDocFile(String filesname) {",
        "10": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "11": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "12": "",
        "45": "\t\t{",
        "46": "\t\t\tfs = new POIFSFileSystem(new FileInputStream(filesname));",
        "49": "",
        "50": "\t\t\tHWPFDocument doc = new HWPFDocument(fs);",
        "51": "",
        "52": "\t\t\tWordExtractor we = new WordExtractor(doc);",
        "9": "import org.apache.poi.hwpf.HWPFDocument;",
        "42": "\t\tPOIFSFileSystem fs = null;"
      },
      "id": 54270182,
      "filename": "readDoc.java"
    },
    {
      "repo": "http://spatial-indexing.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 27,
      "location": "/InteligentSearch/src/file_parser",
      "name": "spatial-indexing",
      "url": "https://searchcode.com/codesearch/view/11485147/",
      "md5hash": "2373ee238eb2fc1c2cd38e10230ae0d0",
      "lines": {
        "4": "",
        "5": "import org.apache.poi.hwpf.HWPFDocument;",
        "6": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "7": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "8": "",
        "12": "\tpublic String parseFile(String fileName) {",
        "13": "\t\tPOIFSFileSystem filesystem = null;",
        "14": "\t\ttry{",
        "15": "\t\t\tfilesystem = new POIFSFileSystem(new FileInputStream(fileName));",
        "16": "\t\t\tHWPFDocument document = new HWPFDocument(filesystem);",
        "17": "\t\t\tWordExtractor extractor = new WordExtractor(document);",
        "18": "\t\t\treturn extractor.getText();",
        "19": "\t\t\t"
      },
      "id": 11485147,
      "filename": "WORDParserImpl.java"
    },
    {
      "repo": "https://github.com/GayanM/carbon-registry.git",
      "language": "Java",
      "linescount": 35,
      "location": "/components/registry/org.wso2.carbon.registry.indexing/src/main/java/org/wso2/carbon/registry/indexing/indexer",
      "name": "carbon-registry",
      "url": "https://searchcode.com/codesearch/view/95551277/",
      "md5hash": "332e838ed86180213afd01ca220ec2ed",
      "lines": {
        "1": "package org.wso2.carbon.registry.indexing.indexer;",
        "2": "",
        "5": "",
        "6": "import org.apache.commons.logging.Log;",
        "7": "import org.apache.commons.logging.LogFactory;",
        "8": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "9": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "10": "import org.apache.solr.common.SolrException;",
        "11": "import org.apache.solr.common.SolrException.ErrorCode;",
        "12": "import org.wso2.carbon.registry.indexing.AsyncIndexer.File2Index;",
        "13": "import org.wso2.carbon.registry.indexing.solr.IndexDocument;",
        "14": "",
        "22": "\t\t\tPOIFSFileSystem fs = new POIFSFileSystem(new ByteArrayInputStream(fileData.data));",
        "23": "\t\t\tWordExtractor extractor = new WordExtractor(fs);",
        "24": "\t\t\tString wordText = extractor.getText();"
      },
      "id": 95551277,
      "filename": "MSWordIndexer.java"
    },
    {
      "repo": "git://github.com/bogeblad/infoglue.git",
      "language": "Java",
      "linescount": 661,
      "location": "/src/java/org/infoglue/cms/controllers/kernel/impl/simple",
      "name": "infoglue",
      "url": "https://searchcode.com/codesearch/view/16908984/",
      "md5hash": "46bedf458490bb7bda956805b6146767",
      "lines": {
        "2": " *",
        "3": " * Part of the InfoGlue Content Management Platform (www.infoglue.org)",
        "39": "",
        "40": "import org.apache.log4j.Logger;",
        "41": "import org.apache.lucene.analysis.standard.StandardAnalyzer;",
        "42": "import org.apache.lucene.document.DateTools;",
        "43": "import org.apache.lucene.document.Document;",
        "44": "import org.apache.lucene.document.Field;",
        "45": "import org.apache.lucene.index.IndexReader;",
        "46": "import org.apache.lucene.index.IndexWriter;",
        "47": "import org.apache.lucene.index.Term;",
        "48": "import org.apache.poi.hwpf.HWPFDocument;",
        "49": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "50": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "51": "import org.exolab.castor.jdo.Database;"
      },
      "id": 16908984,
      "filename": "LuceneController.java"
    },
    {
      "repo": "https://bitbucket.org/leebeckman/ucmubcae",
      "language": "Java",
      "linescount": 340,
      "location": "/src/ucmsite/pagegeneration",
      "name": "ucmubcae",
      "url": "https://searchcode.com/codesearch/view/56511170/",
      "md5hash": "fa0b768402fdba053d025ca95b96adce",
      "lines": {
        "16": "",
        "17": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "190": "\t\t\t\tWordExtractor extractor = new WordExtractor(inStream);",
        "145": "\t\t\t\tString extractStr = extractor.getText().replaceAll(\"[^\\\\p{Print}]\", \"\");",
        "144": "\t\t\t\t",
        "191": "\t\t\t\t",
        "192": "\t\t\t\tString extractStr = extractor.getText().replaceAll(\"[^\\\\p{Print}]\", \"\");",
        "189": "\t\t",
        "142": "\t\t",
        "143": "\t\t\t\tWordExtractor extractor = new WordExtractor(inStream);"
      },
      "id": 56511170,
      "filename": "GoogleAccessor.java"
    },
    {
      "repo": "https://bitbucket.org/mg/olat",
      "language": "Java",
      "linescount": 118,
      "location": "/src/main/java/org/olat/search/service/document/file",
      "name": "olat",
      "url": "https://searchcode.com/codesearch/view/126168433/",
      "md5hash": "a0741c6028ba5ef174d2c349231de80a",
      "lines": {
        "32": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "33": "import org.olat.core.logging.OLog;",
        "2": " * OLAT - Online Learning and Training<br>",
        "3": " * http://www.olat.org",
        "4": " * <p>",
        "5": " * Licensed under the Apache License, Version 2.0 (the \"License\"); <br>",
        "8": " * <p>",
        "9": " * http://www.apache.org/licenses/LICENSE-2.0",
        "21": "",
        "22": "package org.olat.search.service.document.file;",
        "27": "",
        "28": "import org.apache.lucene.document.Document;",
        "29": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "30": "import org.apache.poi.poifs.filesystem.DocumentEntry;",
        "31": "import org.apache.poi.poifs.filesystem.Entry;"
      },
      "id": 126168433,
      "filename": "WordDocument.java"
    },
    {
      "repo": "http://ikube.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 34,
      "location": "/code/core/src/main/java/ikube/index/parse/word",
      "name": "ikube",
      "url": "https://searchcode.com/codesearch/view/7760074/",
      "md5hash": "f8ed981dfa49a5dccc83af1b3a277dd6",
      "lines": {
        "32": "\t\treturn outputStream;",
        "7": "",
        "8": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "9": "import org.apache.poi.poifs.filesystem.POIFSFileSystem;",
        "10": "",
        "19": " * @since 22.08.08<br>",
        "20": " *        Changed the access to the text from the classes from Ackly chap to the POI WordExtractor class.",
        "28": "\tpublic final OutputStream parse(final InputStream inputStream, final OutputStream outputStream) throws Exception {",
        "29": "\t\tPOIFSFileSystem fileSystem = new POIFSFileSystem(inputStream);",
        "30": "\t\tWordExtractor extractor = new WordExtractor(fileSystem);",
        "31": "\t\toutputStream.write(extractor.getText().trim().getBytes());"
      },
      "id": 7760074,
      "filename": "WordParser.java"
    },
    {
      "repo": "http://docdoku.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 231,
      "location": "/DocDoku-ear/DocDoku-ejb/src/main/java/com/docdoku/server",
      "name": "docdoku",
      "url": "https://searchcode.com/codesearch/view/8591933/",
      "md5hash": "f55fa907a1cca9f68137597a49c91ee7",
      "lines": {
        "44": "import javax.xml.parsers.SAXParserFactory;",
        "45": "import org.apache.lucene.analysis.standard.StandardAnalyzer;",
        "46": "import org.apache.lucene.document.Document;",
        "47": "import org.apache.lucene.document.Field;",
        "48": "import org.apache.lucene.index.CorruptIndexException;",
        "49": "import org.apache.lucene.index.IndexReader;",
        "50": "import org.apache.lucene.index.IndexWriter;",
        "51": "import org.apache.lucene.index.Term;",
        "52": "import org.apache.lucene.store.Directory;",
        "53": "import org.apache.lucene.store.FSDirectory;",
        "54": "import org.apache.lucene.store.LockObtainFailedException;",
        "55": "import org.apache.lucene.util.Version;",
        "56": "import org.apache.poi.hslf.extractor.PowerPointExtractor;",
        "57": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "58": "import org.xml.sax.SAXException;"
      },
      "id": 8591933,
      "filename": "IndexerBean.java"
    },
    {
      "repo": "https://github.com/SilverTeamWork/Silverpeas-Core.git",
      "language": "Java",
      "linescount": 65,
      "location": "/lib-core/src/main/java/org/silverpeas/search/indexEngine/parser/wordParser",
      "name": "Silverpeas-Core",
      "url": "https://searchcode.com/codesearch/view/93256528/",
      "md5hash": "bb9e9446d399b62730aec92919809350",
      "lines": {
        "32": " * A WordParser parse a Word file. Use an open source java library named textmining Class",
        "33": " * WordExtractor extracts the text from a Word 6.0/95/97/2000/XP word doc",
        "55": "      file = new FileInputStream(path);",
        "13": " * the FLOSS exception, and it is also available here:",
        "14": " * \"http://www.silverpeas.org/docs/core/legal/floss_exception.html\"",
        "56": "      WordExtractor extractor = new WordExtractor(file);",
        "57": "      String wordText = extractor.getText();",
        "23": " */",
        "24": "package org.silverpeas.search.indexEngine.parser.wordParser;",
        "25": "",
        "58": "      reader = new StringReader(wordText);",
        "27": "import java.io.*;",
        "28": "import org.apache.commons.io.IOUtils;",
        "29": "import org.apache.poi.hwpf.extractor.WordExtractor;",
        "30": ""
      },
      "id": 93256528,
      "filename": "WordParser.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 14,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 6,
      "source": "Google Code",
      "id": 1
    }
  ]
}