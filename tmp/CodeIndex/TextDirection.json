{
  "matchterm": "TextDirection",
  "previouspage": null,
  "searchterm": "TextDirection",
  "query": "TextDirection",
  "language_filters": [
    {
      "count": 120,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 120,
  "results": [
    {
      "repo": "http://smartgwt.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 9,
      "location": "/main/src/com/smartgwt/client/docs",
      "name": "smartgwt",
      "url": "https://searchcode.com/codesearch/view/2797733/",
      "md5hash": "75d54b7886cb8b792fe7d392973e66ed",
      "lines": {
        "4": "/**",
        "5": " * The following APIs are all related to TextDirection.",
        "6": " */",
        "7": "public interface TextDirection {"
      },
      "id": 2797733,
      "filename": "TextDirection.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 123,
      "location": "/src/main/java/org/docx4j/wml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642732/",
      "md5hash": "03600a7d5ebf3b5d8ab7de0cc4baf0e9",
      "lines": {
        "64": "    implements Child",
        "33": "/**",
        "34": " * <p>Java class for CT_TextDirection complex type.",
        "38": " * <pre>",
        "39": " * &lt;complexType name=\"CT_TextDirection\">",
        "61": "@XmlAccessorType(XmlAccessType.FIELD)",
        "62": "@XmlType(name = \"CT_TextDirection\")",
        "63": "public class TextDirection"
      },
      "id": 17642732,
      "filename": "TextDirection.java"
    },
    {
      "repo": "https://bitbucket.org/nkabir/jdk-6",
      "language": "Java",
      "linescount": 318,
      "location": "/jdk/src/solaris/classes/sun/awt",
      "name": "jdk-6",
      "url": "https://searchcode.com/codesearch/view/60696944/",
      "md5hash": "16dd800db29c8fd55a5ecd76baecac73",
      "lines": {
        "33": "import sun.security.action.GetIntegerAction;",
        "34": "import com.sun.java.swing.plaf.gtk.GTKConstants.TextDirection;",
        "148": "        // Direction.",
        "149": "        TextDirection dir = (\"ltr\".equals(str[4]) ? TextDirection.LTR :",
        "150": "                                                    TextDirection.RTL);",
        "151": "",
        "250": "    private native boolean load_stock_icon(int widget_type, String stock_id,",
        "193": "     * @param iconSize One of the GtkIconSize values defined in GTKConstants",
        "251": "            int iconSize, int textDirection, String detail);",
        "194": "     * @param textDirection One of the TextDirection values defined in"
      },
      "id": 60696944,
      "filename": "UNIXToolkit.java"
    },
    {
      "repo": "https://github.com/pmauduit/GeoBI.git",
      "language": "Java",
      "linescount": 346,
      "location": "/print/src/main/java/org/mapfish/print/config/layout",
      "name": "GeoBI",
      "url": "https://searchcode.com/codesearch/view/67686324/",
      "md5hash": "938a968f9e02478820092d297e491de4",
      "lines": {
        "273": "    public void setTextDirection(Direction textDirection) {",
        "329": "",
        "330": "    public Direction getTextDirection() {",
        "331": "        return textDirection;",
        "332": "    }",
        "274": "        this.textDirection = textDirection;",
        "272": "",
        "113": "                labels.add(new Label(intervalPaperWidth * i, labelText, baseFont, getFontSize(),",
        "114": "                        !barDirection.isSameOrientation(textDirection)));",
        "275": "    }",
        "57": "",
        "120": "            final Label label = new Label(intervalPaperWidth / 2.0f,",
        "121": "                    createLabelText(scaleUnit, intervalDistance, intervalUnit) + intervalUnit, baseFont, getFontSize(), !barDirection.isSameOrientation(textDirection));",
        "58": "    private Direction textDirection = Direction.UP;"
      },
      "id": 67686324,
      "filename": "ScalebarBlock.java"
    },
    {
      "repo": "https://bitbucket.org/kejar31/android_frameworks_base",
      "language": "Java",
      "linescount": 15000,
      "location": "/core/java/android/view",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/61782609/",
      "md5hash": "6aa4c75370bf1e083db69228b656f97a",
      "lines": {
        "9538": "        // Order is important here: LayoutDirection MUST be resolved before Padding",
        "9539": "        // and TextDirection",
        "2660": "    })",
        "2661": "    private int mTextDirection = DEFAULT_TEXT_DIRECTION;",
        "9542": "        resolveTextDirection();",
        "3060": "                case R.styleable.View_textDirection:",
        "3061": "                    mTextDirection = a.getInt(attr, DEFAULT_TEXT_DIRECTION);",
        "3062": "                    break;",
        "9559": "",
        "9560": "        // Reset also TextDirection as a change into LayoutDirection may impact the selected",
        "2649": "    /**",
        "2650": "     * The text direction that has been defined by {@link #setTextDirection(int)}.",
        "9563": "",
        "9562": "        resetResolvedTextDirection();",
        "9561": "        // TextDirectionHeuristic",
        "9541": "        resolvePadding();"
      },
      "id": 61782609,
      "filename": "View.java"
    },
    {
      "repo": "https://bitbucket.org/bjzrccf/jdk6-jdk-mips",
      "language": "Java",
      "linescount": 1141,
      "location": "/src/share/classes/com/sun/java/swing/plaf/gtk",
      "name": "jdk6-jdk-mips",
      "url": "https://searchcode.com/codesearch/view/61014691/",
      "md5hash": "152c5ea4663d0de7bde97d91cc3bbdde",
      "lines": {
        "864": "    private Icon getStockIcon(SynthContext context, String key, int type) {",
        "865": "        TextDirection direction = TextDirection.LTR;",
        "899": "    private Icon getStyleSpecificIcon(String key,",
        "900": "                                      TextDirection direction, int type)",
        "885": "        String propName = ICON_PROPERTY_PREFIX + key + '.' + type + '.' +",
        "886": "                          (direction == TextDirection.RTL ? \"rtl\" : \"ltr\");",
        "871": "            if (co != null && !co.isLeftToRight()) {",
        "872": "                direction = TextDirection.RTL;"
      },
      "id": 61014691,
      "filename": "GTKStyle.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 98,
      "location": "/demos/helloworld/gdx-helloworld/src/com/badlogic/gdx/helloworld",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/3608693/",
      "md5hash": "d6db556e589815f0a3fc830a6750ce3c",
      "lines": {
        "32": "\tVector2 textPosition = new Vector2(100, 100);",
        "33": "\tVector2 textDirection = new Vector2(1, 1);",
        "66": "\t\t\ttextDirection.y = -textDirection.y;",
        "65": "\t\tif (textPosition.y > Gdx.graphics.getHeight()) {",
        "48": "\t\t// more fun but confusing :)",
        "49": "\t\t//textPosition.add(textDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(60));",
        "50": "\t\ttextPosition.x += textDirection.x * Gdx.graphics.getDeltaTime() * 60;",
        "51": "\t\ttextPosition.y += textDirection.y * Gdx.graphics.getDeltaTime() * 60;",
        "52": "",
        "53": "\t\tif (textPosition.x < 0 ) {",
        "54": "\t\t\ttextDirection.x = -textDirection.x;",
        "57": "\t\tif(textPosition.x > Gdx.graphics.getWidth()) {",
        "58": "\t\t\ttextDirection.x = -textDirection.x;",
        "61": "\t\tif (textPosition.y < 0) {",
        "62": "\t\t\ttextDirection.y = -textDirection.y;"
      },
      "id": 3608693,
      "filename": "HelloWorld.java"
    },
    {
      "repo": "https://code.google.com/p/libgdx-users/",
      "language": "Java",
      "linescount": 103,
      "location": "/demos-3-tier-main/src/com/gdxuser/demos",
      "name": "libgdx-users",
      "url": "https://searchcode.com/codesearch/view/4890603/",
      "md5hash": "4b3613abced592301b5d8d66994e2520",
      "lines": {
        "66": "\t\tif (textPosition.y < 0) {",
        "67": "\t\t\ttextDirection.y = -textDirection.y;",
        "37": "\tVector2 textPosition = new Vector2(100, 100);",
        "38": "\tVector2 textDirection = new Vector2(1, 1);",
        "71": "\t\t\ttextDirection.y = -textDirection.y;",
        "53": "\t\t// more fun but confusing :)",
        "54": "\t\t//textPosition.add(textDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(60));",
        "55": "\t\ttextPosition.x += textDirection.x * Gdx.graphics.getDeltaTime() * 60;",
        "56": "\t\ttextPosition.y += textDirection.y * Gdx.graphics.getDeltaTime() * 60;",
        "57": "",
        "58": "\t\tif (textPosition.x < 0 ) {",
        "59": "\t\t\ttextDirection.x = -textDirection.x;",
        "70": "\t\tif (textPosition.y > Gdx.graphics.getHeight()) {",
        "62": "\t\tif(textPosition.x > Gdx.graphics.getWidth()) {",
        "63": "\t\t\ttextDirection.x = -textDirection.x;"
      },
      "id": 4890603,
      "filename": "SpriteTest.java"
    },
    {
      "repo": "https://code.google.com/p/libgdx-users/",
      "language": "Java",
      "linescount": 107,
      "location": "/demos-3-tier-main/src/com/badlogic/gdx/tests",
      "name": "libgdx-users",
      "url": "https://searchcode.com/codesearch/view/4890626/",
      "md5hash": "658064fd5d4e4c9b8d7e63f97619a091",
      "lines": {
        "34": "\tVector2 textPosition = new Vector2(100, 100);",
        "35": "\tVector2 textDirection = new Vector2(1, 1);",
        "70": "\t\tif (textPosition.y < 0) {",
        "71": "\t\t\ttextDirection.y = -textDirection.y;",
        "74": "\t\tif (textPosition.y > Gdx.graphics.getHeight()) {",
        "75": "\t\t\ttextDirection.y = -textDirection.y;",
        "66": "\t\tif(textPosition.x > Gdx.graphics.getWidth()) {",
        "67": "\t\t\ttextDirection.x = -textDirection.x;",
        "57": "\t\t// more fun but confusing :)",
        "58": "\t\t//textPosition.add(textDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(60));",
        "59": "\t\ttextPosition.x += textDirection.x * Gdx.graphics.getDeltaTime() * 60;",
        "60": "\t\ttextPosition.y += textDirection.y * Gdx.graphics.getDeltaTime() * 60;",
        "61": "",
        "62": "\t\tif (textPosition.x < 0 ) {",
        "63": "\t\t\ttextDirection.x = -textDirection.x;"
      },
      "id": 4890626,
      "filename": "HelloWorld.java"
    },
    {
      "repo": "http://libgdx.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 102,
      "location": "/demos/helloworld/gdx-helloworld/src/com/badlogic/gdx/helloworld",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/10131892/",
      "md5hash": "ac7b47b452f42a3f860892ba11057594",
      "lines": {
        "32": "\tVector2 textPosition = new Vector2(100, 100);",
        "33": "\tVector2 textDirection = new Vector2(1, 1);",
        "67": "\t\tif (textPosition.y > Gdx.graphics.getHeight()) {",
        "68": "\t\t\ttextDirection.y = -textDirection.y;",
        "64": "\t\t\ttextDirection.y = -textDirection.y;",
        "50": "\t\t// more fun but confusing :)",
        "51": "\t\t// textPosition.add(textDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(60));",
        "52": "\t\ttextPosition.x += textDirection.x * Gdx.graphics.getDeltaTime() * 60;",
        "53": "\t\ttextPosition.y += textDirection.y * Gdx.graphics.getDeltaTime() * 60;",
        "54": "",
        "55": "\t\tif (textPosition.x < 0) {",
        "56": "\t\t\ttextDirection.x = -textDirection.x;",
        "59": "\t\tif (textPosition.x > Gdx.graphics.getWidth()) {",
        "60": "\t\t\ttextDirection.x = -textDirection.x;",
        "63": "\t\tif (textPosition.y < 0) {"
      },
      "id": 10131892,
      "filename": "HelloWorld.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 2596,
      "location": "/src/main/java/org/docx4j/wml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642835/",
      "md5hash": "697b2da223ee5830f619bca4bd298993",
      "lines": {
        "288": "    protected Jc jc;",
        "289": "    protected TextDirection textDirection;",
        "962": "     *     allowed object is",
        "163": " *         &lt;element name=\"jc\" type=\"{http://schemas.openxmlformats.org/wordprocessingml/2006/main}CT_Jc\" minOccurs=\"0\"/>",
        "164": " *         &lt;element name=\"textDirection\" type=\"{http://schemas.openxmlformats.org/wordprocessingml/2006/main}CT_TextDirection\" minOccurs=\"0\"/>",
        "946": "    /**",
        "947": "     * Gets the value of the textDirection property.",
        "963": "     *     {@link TextDirection }",
        "950": "     *     possible object is",
        "951": "     *     {@link TextDirection }",
        "953": "     */",
        "954": "    public TextDirection getTextDirection() {",
        "955": "        return textDirection;",
        "956": "    }",
        "958": "    /**",
        "959": "     * Sets the value of the textDirection property."
      },
      "id": 17642835,
      "filename": "PPrBase.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 1117,
      "location": "/src/main/java/org/docx4j/wml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642920/",
      "md5hash": "ced71ded2782653c2810cbabe51ba226",
      "lines": {
        "385": "    /**",
        "386": "     * Gets the value of the textDirection property.",
        "389": "     *     possible object is",
        "390": "     *     {@link TextDirection }",
        "392": "     */",
        "393": "    public TextDirection getTextDirection() {",
        "138": "    \"textDirection\",",
        "397": "    /**",
        "398": "     * Sets the value of the textDirection property.",
        "401": "     *     allowed object is",
        "402": "     *     {@link TextDirection }",
        "404": "     */",
        "405": "    public void setTextDirection(TextDirection value) {",
        "406": "        this.textDirection = value;",
        "137": "    \"tcMar\",",
        "394": "        return textDirection;"
      },
      "id": 17642920,
      "filename": "TcPrInner.java"
    },
    {
      "repo": "https://bitbucket.org/nkabir/jdk-6",
      "language": "Java",
      "linescount": 636,
      "location": "/jdk/src/share/classes/com/sun/java/swing/plaf/gtk",
      "name": "jdk-6",
      "url": "https://searchcode.com/codesearch/view/60706136/",
      "md5hash": "6f3d61ce6e4a8a4b3ebe77f3b9ed2b62",
      "lines": {
        "491": "        int synthState = context.getComponentState();",
        "38": "import com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType;",
        "39": "import com.sun.java.swing.plaf.gtk.GTKConstants.TextDirection;",
        "492": "        int dir = getTextDirection(context);",
        "394": "        int synthState = context.getComponentState();",
        "395": "        int dir = getTextDirection(context);",
        "364": "",
        "365": "    private static int getTextDirection(SynthContext context) {",
        "366": "        TextDirection dir = TextDirection.NONE;",
        "367": "        JComponent comp = context.getComponent();",
        "371": "                dir = co.isLeftToRight() ?",
        "372": "                    TextDirection.LTR : TextDirection.RTL;"
      },
      "id": 60706136,
      "filename": "GTKEngine.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 688,
      "location": "/src/main/java/org/docx4j/wml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642624/",
      "md5hash": "b09466aac8a716e193d45ea93458a1cc",
      "lines": {
        "449": "     *     possible object is",
        "450": "     *     {@link TextDirection }",
        "452": "     */",
        "453": "    public TextDirection getTextDirection() {",
        "454": "        return textDirection;",
        "455": "    }",
        "457": "    /**",
        "458": "     * Sets the value of the textDirection property.",
        "461": "     *     allowed object is",
        "462": "     *     {@link TextDirection }",
        "464": "     */",
        "465": "    public void setTextDirection(TextDirection value) {",
        "466": "        this.textDirection = value;",
        "92": "    protected BooleanDefaultTrue titlePg;",
        "93": "    protected TextDirection textDirection;"
      },
      "id": 17642624,
      "filename": "SectPrBase.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 1502,
      "location": "/src/main/java/org/docx4j/wml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17642727/",
      "md5hash": "c12496156538ed1260c3587303544b64",
      "lines": {
        "512": "     */",
        "513": "    public void setTextDirection(TextDirection value) {",
        "514": "        this.textDirection = value;",
        "515": "    }",
        "109": "    protected BooleanDefaultTrue titlePg;",
        "110": "    protected TextDirection textDirection;",
        "493": "    /**",
        "497": "     *     possible object is",
        "498": "     *     {@link TextDirection }",
        "501": "    public TextDirection getTextDirection() {",
        "502": "        return textDirection;",
        "503": "    }",
        "505": "    /**",
        "506": "     * Sets the value of the textDirection property.",
        "494": "     * Gets the value of the textDirection property."
      },
      "id": 17642727,
      "filename": "SectPr.java"
    },
    {
      "repo": "https://github.com/Oyeniyi/mapfish-print.git",
      "language": "Java",
      "linescount": 389,
      "location": "/src/main/java/org/mapfish/print/config/layout",
      "name": "mapfish-print",
      "url": "https://searchcode.com/codesearch/view/95352167/",
      "md5hash": "d31930b699d9fee2a12b037af0b7d040",
      "lines": {
        "66": "",
        "131": "            final Label label = new Label(intervalPaperWidth / 2.0f,",
        "132": "                    createLabelText(scaleUnit, intervalDistance, intervalUnit) + intervalUnit, baseFont, getFontSize(), !barDirection.isSameOrientation(textDirection));",
        "362": "",
        "67": "    private Direction textDirection = Direction.UP;",
        "364": "        return textDirection;",
        "365": "    }",
        "305": "",
        "306": "    public void setTextDirection(Direction textDirection) {",
        "307": "        this.textDirection = textDirection;",
        "308": "    }",
        "363": "    public Direction getTextDirection() {",
        "124": "                labels.add(new Label(intervalPaperWidth * i, labelText, baseFont, getFontSize(),",
        "125": "                        !barDirection.isSameOrientation(textDirection)));"
      },
      "id": 95352167,
      "filename": "ScalebarBlock.java"
    },
    {
      "repo": "https://bitbucket.org/Prodes/smallgames",
      "language": "Java",
      "linescount": 138,
      "location": "/helloworld/gdx-helloworld/src/com/badlogic/gdx/helloworld",
      "name": "smallgames",
      "url": "https://searchcode.com/codesearch/view/127490185/",
      "md5hash": "e8117d607041bfb0b570ba07fbca70e9",
      "lines": {
        "64": "\t\tif (textPosition.x > Gdx.graphics.getWidth()) {",
        "65": "\t\t\ttextDirection.x = -textDirection.x;",
        "34": "\tVector2 textPosition = new Vector2(100, 100);",
        "35": "\tVector2 textDirection = new Vector2(1, 1);",
        "68": "\t\tif (textPosition.y < 0) {",
        "69": "\t\t\ttextDirection.y = -textDirection.y;",
        "72": "\t\tif (textPosition.y > Gdx.graphics.getHeight()) {",
        "73": "\t\t\ttextDirection.y = -textDirection.y;",
        "55": "\t\t// more fun but confusing :)",
        "56": "\t\t// textPosition.add(textDirection.tmp().mul(Gdx.graphics.getDeltaTime()).mul(60));",
        "57": "\t\ttextPosition.x += textDirection.x * Gdx.graphics.getDeltaTime() * 60;",
        "58": "\t\ttextPosition.y += textDirection.y * Gdx.graphics.getDeltaTime() * 60;",
        "59": "",
        "60": "\t\tif (textPosition.x < 0) {",
        "61": "\t\t\ttextDirection.x = -textDirection.x;"
      },
      "id": 127490185,
      "filename": "HelloWorld.java"
    },
    {
      "repo": "https://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 26488,
      "location": "/core/java/android/view",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/140979824/",
      "md5hash": "306803c6b96964a3fb6ea529daed7833",
      "lines": {
        "5057": "                    break;",
        "5058": "                case R.styleable.View_textDirection:",
        "5061": "                    // Set the text direction flags depending on the value of the attribute",
        "5062": "                    final int textDirection = a.getInt(attr, -1);",
        "5063": "                    if (textDirection != -1) {",
        "5064": "                        mPrivateFlags2 |= PFLAG2_TEXT_DIRECTION_FLAGS[textDirection];",
        "5065": "                    }",
        "759": " * @attr ref android.R.styleable#View_textAlignment",
        "760": " * @attr ref android.R.styleable#View_textDirection",
        "2553": "    /**",
        "2554": "     * Array of text direction flags for mapping attribute \"textDirection\" to correct"
      },
      "id": 140979824,
      "filename": "View.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 318,
      "location": "/MRI-J/jdk/src/solaris/classes/sun/awt",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17114474/",
      "md5hash": "442888f8f03a0e9b6ba3bb94b843e0e3",
      "lines": {
        "33": "import sun.security.action.GetIntegerAction;",
        "34": "import com.sun.java.swing.plaf.gtk.GTKConstants.TextDirection;",
        "148": "        // Direction.",
        "149": "        TextDirection dir = (\"ltr\".equals(str[4]) ? TextDirection.LTR :",
        "150": "                                                    TextDirection.RTL);",
        "151": "",
        "250": "    private native boolean load_stock_icon(int widget_type, String stock_id,",
        "193": "     * @param iconSize One of the GtkIconSize values defined in GTKConstants",
        "251": "            int iconSize, int textDirection, String detail);",
        "194": "     * @param textDirection One of the TextDirection values defined in"
      },
      "id": 17114474,
      "filename": "UNIXToolkit.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 2225,
      "location": "/src/main/java/org/docx4j/model/styles",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17641718/",
      "md5hash": "193a6744f6cc5b2b30e427f9bbf34250",
      "lines": {
        "1040": "\t\t\t\tisEmpty(pPrBase.getJc()) &&\t",
        "162": "\t\t\t\tareEqual(pPrBase1.getJc(), pPrBase2.getJc()) &&\t",
        "163": "\t\t\t\tareEqual(pPrBase1.getTextDirection(), pPrBase2.getTextDirection()) &&\t",
        "1041": "\t\t\t\tisEmpty(pPrBase.getTextDirection()) &&\t",
        "1160": "\t\t\t\t isEmpty(tcPr.getTextDirection()) &&",
        "1201": "\tpublic static boolean isEmpty(TextDirection textDirection) {",
        "1159": "\t\t\t\t isEmpty(tcPr.getTcMar()) &&",
        "80": "import org.docx4j.wml.TcPrInner.VMerge;",
        "81": "import org.docx4j.wml.TextDirection;",
        "1202": "\t\treturn (textDirection == null) || (textDirection.getVal() == null);",
        "1203": "\t}",
        "1585": "\t\t\tdestination.setTextDirection(apply(source.getTextDirection(), destination.getTextDirection()));\t",
        "1584": "\t\t\tdestination.setJc(apply(source.getJc(), destination.getJc()));\t",
        "1200": "",
        "285": "\t\t\t\t areEqual(tcPr1.getTcMar(), tcPr2.getTcMar()) &&",
        "286": "\t\t\t\t areEqual(tcPr1.getTextDirection(), tcPr2.getTextDirection()) &&"
      },
      "id": 17641718,
      "filename": "StyleUtil.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 80,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 35,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1,
      "source": "Google Android",
      "id": 12
    }
  ]
}