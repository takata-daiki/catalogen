{
  "matchterm": "Context",
  "previouspage": null,
  "searchterm": "Context",
  "query": "Context",
  "language_filters": [
    {
      "count": 422925,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 422925,
  "results": [
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 493,
      "location": "/gcc-4.2.1/libjava/classpath/javax/naming",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12729465/",
      "md5hash": "7f543b6672560ff29368ee2d9801922b",
      "lines": {
        "160": "   * Gets the previously named object by name. If the passed name is empty, the",
        "1": "/* Context.java -- A naming context",
        "2": "   Copyright (C) 2000, 2006 Free Software Foundation, Inc.",
        "131": "   * @param name the name that will be given to the object (in the scope of this",
        "132": "   *          context).",
        "163": "   * @param name the name of the object being searched in this context",
        "161": "   * method should return a cloned instance of this naming context.",
        "172": "   * ",
        "170": "   * Gets the previously named object by name. If the passed name is empty, the",
        "171": "   * method should return a cloned instance of this naming context.",
        "44": "",
        "45": "public interface Context",
        "173": "   * @param name the name of the object being searched in this context",
        "147": "   * @param name the name that will be given to the object (in the scope of this",
        "148": "   *          context).",
        "162": "   * "
      },
      "id": 12729465,
      "filename": "Context.java"
    },
    {
      "repo": "https://github.com/jortizcs/sfs_applications.git",
      "language": "Java",
      "linescount": 243,
      "location": "/energylens/sfs_transactions/lib/simple/org/simpleframework/http/resource",
      "name": "sfs_applications",
      "url": "https://searchcode.com/codesearch/view/67867065/",
      "md5hash": "b6a2eee50efcc3d8596e07aeb71980f6",
      "lines": {
        "1": "/*",
        "2": " * Context.java March 2002",
        "43": " * \"c:\\web\\html\\web\\pub\\README\". Also if this was a UNIX system ",
        "36": " * where the resources are gathered from. For example suppose that",
        "37": " * a <code>Context</code> implementation is rooted at the directory",
        "38": " * \"c:\\web\\html\\\" on a DOS system. Now if the target of the browser ",
        "33": " * engine to convert the HTTP request URI into OS system paths and",
        "40": " * consulted to convert \"/web/pub/README\" into the real path within",
        "41": " * the system. So <code>Context.getRealPath</code> is invoked with",
        "39": " * was \"http://some.host/web/pub/README\". The context needs to be",
        "44": " * with the same context rooted at \"/home/user/html\" then the same",
        "34": " * system objects such as the <code>File</code> object. A context",
        "25": "/**",
        "26": " * The <code>Context</code> interface is used to give a view of the",
        "59": " * So the <code>Context</code> object must be prepared to accept ",
        "58": " *"
      },
      "id": 67867065,
      "filename": "Context.java"
    },
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 608,
      "location": "/dspace-api/src/main/java/org/dspace/core",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109453927/",
      "md5hash": "ebb541ae4a98aeee9501deff8dda0b91",
      "lines": {
        "64": " * Typical use of the context object will involve constructing one, and setting",
        "1": "/*",
        "2": " * Context.java",
        "67": " * to commit the changes and free up any resources used by the context. If",
        "68": " * anything has gone wrong, <code>abort</code> is called to roll back any",
        "197": "     * Find out if the authorisation system should be ignored for this context.",
        "70": " * <P>",
        "65": " * the current user if one is authenticated. Several operations may be performed",
        "71": " * The context object is also used as a cache for CM API objects.",
        "66": " * using the context object. If all goes well, <code>complete</code> is called",
        "142": "     * Get the database connection associated with the context",
        "141": "    /**",
        "196": "    /**",
        "59": "/**",
        "60": " * Class representing the context of a particular DSpace operation. This stores",
        "63": " * <P>"
      },
      "id": 109453927,
      "filename": "Context.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 123,
      "location": "/gcc-4.2.1/libjava/classpath/org/omg/CORBA",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12726953/",
      "md5hash": "a35a9d002be73f352f9f1de59c22e5ea",
      "lines": {
        "1": "/* Context.java --",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "45": " * used to represent information about various circumstances of the",
        "46": " * invocation. A Context if first created by",
        "47": " * {@link org.omg.CORBA.ORB#get_default_context() } and then invoking",
        "48": " * {@link create_child(String)} of the default context.",
        "49": " *",
        "50": " * The contexts are named.",
        "54": " */",
        "55": "public abstract class Context",
        "56": "{",
        "57": "  public Context()",
        "61": "  /**",
        "62": "   * Get the context name.",
        "63": "   * @return the name of this context."
      },
      "id": 12726953,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 493,
      "location": "/libjava/classpath/javax/naming",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127598240/",
      "md5hash": "019e2e29f420be208c95e2aaee225ed5",
      "lines": {
        "160": "   * Gets the previously named object by name. If the passed name is empty, the",
        "1": "/* Context.java -- A naming context",
        "2": "   Copyright (C) 2000, 2006 Free Software Foundation, Inc.",
        "131": "   * @param name the name that will be given to the object (in the scope of this",
        "132": "   *          context).",
        "163": "   * @param name the name of the object being searched in this context",
        "161": "   * method should return a cloned instance of this naming context.",
        "172": "   *",
        "170": "   * Gets the previously named object by name. If the passed name is empty, the",
        "171": "   * method should return a cloned instance of this naming context.",
        "44": "",
        "45": "public interface Context",
        "173": "   * @param name the name of the object being searched in this context",
        "147": "   * @param name the name that will be given to the object (in the scope of this",
        "148": "   *          context).",
        "162": "   *"
      },
      "id": 127598240,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 493,
      "location": "/libjava/classpath/javax/naming",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130227565/",
      "md5hash": "019e2e29f420be208c95e2aaee225ed5",
      "lines": {
        "160": "   * Gets the previously named object by name. If the passed name is empty, the",
        "1": "/* Context.java -- A naming context",
        "2": "   Copyright (C) 2000, 2006 Free Software Foundation, Inc.",
        "131": "   * @param name the name that will be given to the object (in the scope of this",
        "132": "   *          context).",
        "163": "   * @param name the name of the object being searched in this context",
        "161": "   * method should return a cloned instance of this naming context.",
        "172": "   *",
        "170": "   * Gets the previously named object by name. If the passed name is empty, the",
        "171": "   * method should return a cloned instance of this naming context.",
        "44": "",
        "45": "public interface Context",
        "173": "   * @param name the name of the object being searched in this context",
        "147": "   * @param name the name that will be given to the object (in the scope of this",
        "148": "   *          context).",
        "162": "   *"
      },
      "id": 130227565,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 123,
      "location": "/libjava/classpath/org/omg/CORBA",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127599921/",
      "md5hash": "f2d4771f5de81ac7e4933b39218b0bb4",
      "lines": {
        "1": "/* Context.java --",
        "2": "   Copyright (C) 2005, 2006 Free Software Foundation, Inc.",
        "45": " * used to represent information about various circumstances of the",
        "46": " * invocation. A Context if first created by",
        "47": " * {@link org.omg.CORBA.ORB#get_default_context() } and then invoking",
        "48": " * {@link #create_child(String)} of the default context.",
        "49": " *",
        "50": " * The contexts are named.",
        "54": " */",
        "55": "public abstract class Context",
        "56": "{",
        "57": "  public Context()",
        "61": "  /**",
        "62": "   * Get the context name.",
        "63": "   * @return the name of this context."
      },
      "id": 127599921,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 123,
      "location": "/libjava/classpath/org/omg/CORBA",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130221398/",
      "md5hash": "f2d4771f5de81ac7e4933b39218b0bb4",
      "lines": {
        "1": "/* Context.java --",
        "2": "   Copyright (C) 2005, 2006 Free Software Foundation, Inc.",
        "45": " * used to represent information about various circumstances of the",
        "46": " * invocation. A Context if first created by",
        "47": " * {@link org.omg.CORBA.ORB#get_default_context() } and then invoking",
        "48": " * {@link #create_child(String)} of the default context.",
        "49": " *",
        "50": " * The contexts are named.",
        "54": " */",
        "55": "public abstract class Context",
        "56": "{",
        "57": "  public Context()",
        "61": "  /**",
        "62": "   * Get the context name.",
        "63": "   * @return the name of this context."
      },
      "id": 130221398,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/arnew/jakstab",
      "language": "Java",
      "linescount": 108,
      "location": "/src/org/jakstab/rtl",
      "name": "jakstab",
      "url": "https://searchcode.com/codesearch/view/130640189/",
      "md5hash": "26090a0019e5eccdd58431fccbc5e4c0",
      "lines": {
        "1": "/*",
        "2": " * Context.java - This file is part of the Jakstab project.",
        "35": "\tpublic Context() {",
        "80": "\t * in this context. If there is no substitute, returns the parameter.",
        "83": "\t * @return the substitute of w in this context",
        "44": "\t */",
        "45": "\tpublic Context(Context proto) {",
        "93": "\t * in this context.",
        "79": "\t * Returns the substitute for a specific variable or memory location ",
        "34": "",
        "82": "\t * @param w the variable or memory location to be queried",
        "51": "\t/**",
        "52": "\t * Substitutes a variable or memory location with another expression in this context.",
        "92": "\t * Returns the value assigned to a variable or memory location ",
        "29": " */",
        "30": "public class Context {"
      },
      "id": 130640189,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/smartin336/jakstabnovember",
      "language": "Java",
      "linescount": 108,
      "location": "/src/org/jakstab/rtl",
      "name": "jakstabnovember",
      "url": "https://searchcode.com/codesearch/view/136226595/",
      "md5hash": "26090a0019e5eccdd58431fccbc5e4c0",
      "lines": {
        "1": "/*",
        "2": " * Context.java - This file is part of the Jakstab project.",
        "35": "\tpublic Context() {",
        "80": "\t * in this context. If there is no substitute, returns the parameter.",
        "83": "\t * @return the substitute of w in this context",
        "44": "\t */",
        "45": "\tpublic Context(Context proto) {",
        "93": "\t * in this context.",
        "79": "\t * Returns the substitute for a specific variable or memory location ",
        "34": "",
        "82": "\t * @param w the variable or memory location to be queried",
        "51": "\t/**",
        "52": "\t * Substitutes a variable or memory location with another expression in this context.",
        "92": "\t * Returns the value assigned to a variable or memory location ",
        "29": " */",
        "30": "public class Context {"
      },
      "id": 136226595,
      "filename": "Context.java"
    },
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 193,
      "location": "/src/main/java/com/flagstone/transform/coder",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059633/",
      "md5hash": "b8d3ccf5af9f823adfd5057934d730e9",
      "lines": {
        "1": "/*",
        "2": " * Context.java",
        "164": "    /**",
        "165": "     * Delete the context variable.",
        "42": "/**",
        "43": " * Contexts are used to pass information between objects when they are being",
        "45": " */",
        "46": "public class Context {",
        "85": "    /**",
        "86": "     * Create a Context object.",
        "87": "     */",
        "88": "    public Context() {",
        "187": "     */",
        "188": "    public final Context put(final Integer key, final Integer value) {"
      },
      "id": 16059633,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/casval/opal",
      "language": "Java",
      "linescount": 253,
      "location": "/jessie-tls-psk/src/main/java/org/metastatic/jessie/provider",
      "name": "opal",
      "url": "https://searchcode.com/codesearch/view/63108749/",
      "md5hash": "7beb8f6c31a6e2761a232fc8b23ad10d",
      "lines": {
        "1": "/* Context.java -- SSLContext implementation.",
        "2": "   Copyright (C) 2003,2004  Casey Marshall <rsdio@metastatic.org>",
        "69": "",
        "70": "    public Context() {",
        "71": "        String codec = Util",
        "72": "                .getSecurityProperty(\"jessie.clientSessionContext.codec\");",
        "77": "        if (codec.equalsIgnoreCase(\"xml\")) {",
        "78": "            codecClass = \"org.metastatic.jessie.provider.XMLSessionContext\";",
        "79": "        } else if (codec.equalsIgnoreCase(\"jdbc\")) {",
        "50": "/**",
        "51": " * This is Jessie's implementation of a {@link javax.net.ssl.SSLContext} engine,",
        "54": " */",
        "55": "public final class Context extends SSLContextSpi {",
        "59": "",
        "60": "    private SessionContext clientSessions;",
        "61": "    private SessionContext serverSessions;",
        "62": "    private X509KeyManager keyManager;"
      },
      "id": 63108749,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 89,
      "location": "/libjava/classpath/gnu/java/beans/encoder",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127592073/",
      "md5hash": "58f894d107faf2653a290a3823171643",
      "lines": {
        "1": "/* Context.java -- Provides calling context information to ScannerStates.",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "74": "  {",
        "75": "    if (!(o instanceof Context))",
        "77": "",
        "78": "    Context that = (Context) o;",
        "51": " */",
        "52": "public class Context",
        "85": "  {",
        "86": "    return \"Context [state=\" + state + \", call=\" + call + \"]\";",
        "57": "",
        "58": "  Context(String newState, int newCall)"
      },
      "id": 127592073,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 89,
      "location": "/libjava/classpath/gnu/java/beans/encoder",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130221853/",
      "md5hash": "58f894d107faf2653a290a3823171643",
      "lines": {
        "1": "/* Context.java -- Provides calling context information to ScannerStates.",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "74": "  {",
        "75": "    if (!(o instanceof Context))",
        "77": "",
        "78": "    Context that = (Context) o;",
        "51": " */",
        "52": "public class Context",
        "85": "  {",
        "86": "    return \"Context [state=\" + state + \", call=\" + call + \"]\";",
        "57": "",
        "58": "  Context(String newState, int newCall)"
      },
      "id": 130221853,
      "filename": "Context.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 335,
      "location": "/gcc-4.2.1/libjava/classpath/gnu/javax/net/ssl/provider",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12730091/",
      "md5hash": "61e20d0a19d7c8ff5fc1f51ec222716b",
      "lines": {
        "1": "/* Context.java -- SSLContext implementation.",
        "2": "   Copyright (C) 2006  Free Software Foundation, Inc.",
        "67": "/**",
        "68": " * This is Jessie's implementation of a {@link javax.net.ssl.SSLContext}",
        "71": " */",
        "72": "public final class Context extends SSLContextSpi",
        "87": "",
        "77": "",
        "78": "  private SessionContext clientSessions;",
        "79": "  private SessionContext serverSessions;",
        "80": "  private X509KeyManager keyManager;",
        "88": "  public Context()",
        "89": "  {",
        "55": "import javax.net.ssl.KeyManagerFactory;",
        "56": "import javax.net.ssl.SSLContextSpi;",
        "57": "import javax.net.ssl.SSLSessionContext;",
        "58": "import javax.net.ssl.TrustManager;"
      },
      "id": 12730091,
      "filename": "Context.java"
    },
    {
      "repo": "git://github.com/DeuceSTM/DeuceSTM.git",
      "language": "Java",
      "linescount": 71,
      "location": "/src/java/org/deuce/transaction",
      "name": "DeuceSTM",
      "url": "https://searchcode.com/codesearch/view/16668087/",
      "md5hash": "f09cac5e532fe409e85487d8a2353499",
      "lines": {
        "1": "/*",
        "2": " * @(#)Context.java   05/01/2008",
        "13": " * All the STM implementations should implement this interface.",
        "14": " * Using the -Dorg.deuce.transaction.contextClass property one can",
        "20": "@Exclude",
        "21": "public interface Context",
        "22": "{",
        "23": "\tfinal static public Type CONTEXT_TYPE = Type.getType( Context.class);",
        "24": "\tfinal static public String CONTEXT_INTERNAL = Type.getInternalName(Context.class);",
        "25": "\tfinal static public String CONTEXT_DESC = Type.getDescriptor(Context.class);",
        "26": ""
      },
      "id": 16668087,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/captainpatate/opal-mq",
      "language": "Java",
      "linescount": 253,
      "location": "/jessie-tls-psk/src/main/java/org/metastatic/jessie/provider",
      "name": "opal-mq",
      "url": "https://searchcode.com/codesearch/view/102222426/",
      "md5hash": "7beb8f6c31a6e2761a232fc8b23ad10d",
      "lines": {
        "1": "/* Context.java -- SSLContext implementation.",
        "2": "   Copyright (C) 2003,2004  Casey Marshall <rsdio@metastatic.org>",
        "69": "",
        "70": "    public Context() {",
        "71": "        String codec = Util",
        "72": "                .getSecurityProperty(\"jessie.clientSessionContext.codec\");",
        "77": "        if (codec.equalsIgnoreCase(\"xml\")) {",
        "78": "            codecClass = \"org.metastatic.jessie.provider.XMLSessionContext\";",
        "79": "        } else if (codec.equalsIgnoreCase(\"jdbc\")) {",
        "50": "/**",
        "51": " * This is Jessie's implementation of a {@link javax.net.ssl.SSLContext} engine,",
        "54": " */",
        "55": "public final class Context extends SSLContextSpi {",
        "59": "",
        "60": "    private SessionContext clientSessions;",
        "61": "    private SessionContext serverSessions;",
        "62": "    private X509KeyManager keyManager;"
      },
      "id": 102222426,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/_Stroumph/opal-library-with-ram-over-http",
      "language": "Java",
      "linescount": 267,
      "location": "/src/main/java/org/metastatic/jessie/provider",
      "name": "opal-library-with-ram-over-http",
      "url": "https://searchcode.com/codesearch/view/119130707/",
      "md5hash": "123c36804460a383a91795677b7f9cc7",
      "lines": {
        "64": "/**",
        "1": "/* Context.java -- SSLContext implementation.",
        "2": "   Copyright (C) 2003,2004  Casey Marshall <rsdio@metastatic.org>",
        "68": " */",
        "69": "public final class Context extends SSLContextSpi {",
        "65": " * This is Jessie's implementation of a {@link javax.net.ssl.SSLContext} engine,",
        "73": "",
        "74": "\tprivate SessionContext clientSessions;",
        "75": "\tprivate SessionContext serverSessions;",
        "76": "\tprivate X509KeyManager keyManager;",
        "83": "",
        "52": "import javax.net.ssl.KeyManagerFactory;",
        "53": "import javax.net.ssl.SSLContextSpi;",
        "54": "import javax.net.ssl.SSLSessionContext;",
        "55": "import javax.net.ssl.TrustManager;",
        "84": "\tpublic Context() {",
        "85": "\t\tString codec = Util"
      },
      "id": 119130707,
      "filename": "Context.java"
    },
    {
      "repo": "https://bitbucket.org/talex/hyflow",
      "language": "Java",
      "linescount": 68,
      "location": "/src/java/org/deuce/transaction",
      "name": "hyflow",
      "url": "https://searchcode.com/codesearch/view/126531136/",
      "md5hash": "5b5fcb2c9f3ffa152db6ba3621fb08b1",
      "lines": {
        "1": "/*",
        "2": " * @(#)Context.java   05/01/2008",
        "13": " * All the STM implementations should implement this interface.",
        "14": " * Using the -Dorg.deuce.transaction.contextClass property one can",
        "20": "@Exclude",
        "21": "public interface Context",
        "22": "{",
        "23": "\tfinal static public Type CONTEXT_TYPE = Type.getType( Context.class);",
        "24": "\tfinal static public String CONTEXT_INTERNAL = Type.getInternalName(Context.class);",
        "25": "\tfinal static public String CONTEXT_DESC = Type.getDescriptor(Context.class);",
        "26": ""
      },
      "id": 126531136,
      "filename": "Context.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 194339,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 187027,
      "source": "Github",
      "id": 2
    },
    {
      "count": 32700,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 4267,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 2497,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 869,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 662,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 538,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 26,
      "source": "Gitorious",
      "id": 10
    }
  ]
}