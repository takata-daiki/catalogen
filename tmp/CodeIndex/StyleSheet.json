{
  "matchterm": "StyleSheet",
  "previouspage": null,
  "searchterm": "StyleSheet",
  "query": "StyleSheet",
  "language_filters": [
    {
      "count": 12779,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 12779,
  "results": [
    {
      "repo": "https://bitbucket.org/thelearninglabs/uclinux-distro-tll-public.git",
      "language": "Java",
      "linescount": 1460,
      "location": "/lib/classpath/javax/swing/text/html",
      "name": "uclinux-distro-tll-public",
      "url": "https://searchcode.com/codesearch/view/37722063/",
      "md5hash": "82db8a7d6ddac166aba40559a8968223",
      "lines": {
        "1": "/* StyleSheet.java -- ",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "131": "     */",
        "132": "    CSSStyleSheetParserCallback(int prec)",
        "263": "  /**",
        "264": "   * Constructs a StyleSheet.",
        "265": "   */",
        "266": "  public StyleSheet()",
        "455": "          {",
        "450": "",
        "456": "            StyleSheet ss = (StyleSheet) linked.get(i);",
        "451": "    // Add styles from linked stylesheets.",
        "89": " * views over the same model can be rendered differently. Each EditorPane has its ",
        "90": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "91": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS"
      },
      "id": 37722063,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 1457,
      "location": "/libjava/classpath/javax/swing/text/html",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37946244/",
      "md5hash": "e1c7786cb6a57363e39d74e41eaa71f4",
      "lines": {
        "1": "/* StyleSheet.java --",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "131": "     */",
        "132": "    CSSStyleSheetParserCallback(int prec)",
        "262": "  /**",
        "263": "   * Constructs a StyleSheet.",
        "264": "   */",
        "265": "  public StyleSheet()",
        "450": "    // Add styles from linked stylesheets.",
        "449": "",
        "89": " * views over the same model can be rendered differently. Each EditorPane has its",
        "248": "   */",
        "249": "  private ArrayList<StyleSheet> linked;",
        "90": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "91": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS"
      },
      "id": 37946244,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 1773,
      "location": "/libjava/classpath/gnu/xml/transform",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37948781/",
      "md5hash": "23f315a7721b23f34c46befb48281135",
      "lines": {
        "1": "/* Stylesheet.java --",
        "2": "   Copyright (C) 2004,2006 Free Software Foundation, Inc.",
        "196": "",
        "197": "  Stylesheet(TransformerFactoryImpl factory,",
        "198": "             Stylesheet parent,",
        "266": "      {",
        "267": "        System.err.println(\"Stylesheet: \" + doc.getDocumentURI());",
        "275": "",
        "276": "  Stylesheet getRootStylesheet()",
        "277": "  {",
        "278": "    Stylesheet stylesheet = this;",
        "279": "    while (stylesheet.parent != null)",
        "280": "      stylesheet = stylesheet.parent;",
        "281": "    return stylesheet;",
        "282": "  }"
      },
      "id": 37948781,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 1457,
      "location": "/libjava/classpath/javax/swing/text/html",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46811879/",
      "md5hash": "e1c7786cb6a57363e39d74e41eaa71f4",
      "lines": {
        "1": "/* StyleSheet.java --",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "131": "     */",
        "132": "    CSSStyleSheetParserCallback(int prec)",
        "262": "  /**",
        "263": "   * Constructs a StyleSheet.",
        "264": "   */",
        "265": "  public StyleSheet()",
        "450": "    // Add styles from linked stylesheets.",
        "449": "",
        "89": " * views over the same model can be rendered differently. Each EditorPane has its",
        "248": "   */",
        "249": "  private ArrayList<StyleSheet> linked;",
        "90": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "91": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS"
      },
      "id": 46811879,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 1773,
      "location": "/libjava/classpath/gnu/xml/transform",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46814418/",
      "md5hash": "23f315a7721b23f34c46befb48281135",
      "lines": {
        "1": "/* Stylesheet.java --",
        "2": "   Copyright (C) 2004,2006 Free Software Foundation, Inc.",
        "196": "",
        "197": "  Stylesheet(TransformerFactoryImpl factory,",
        "198": "             Stylesheet parent,",
        "266": "      {",
        "267": "        System.err.println(\"Stylesheet: \" + doc.getDocumentURI());",
        "275": "",
        "276": "  Stylesheet getRootStylesheet()",
        "277": "  {",
        "278": "    Stylesheet stylesheet = this;",
        "279": "    while (stylesheet.parent != null)",
        "280": "      stylesheet = stylesheet.parent;",
        "281": "    return stylesheet;",
        "282": "  }"
      },
      "id": 46814418,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://github.com/carrot-garden/carrot-jnlper.git",
      "language": "Java",
      "linescount": 144,
      "location": "/carrot-jdk6-jnlp-macosx/src/plugin/share/classes/sun/plugin/dom/stylesheets",
      "name": "carrot-jnlper",
      "url": "https://searchcode.com/codesearch/view/114338970/",
      "md5hash": "6fcc90aaa5b0f004371289a816bb14ee",
      "lines": {
        "32": " * with a structured document. In HTML, the StyleSheet interface represents ",
        "1": "/*",
        "2": " * @(#)StyleSheet.java\t1.11 10/03/24",
        "134": "     */",
        "38": " */",
        "39": "public class StyleSheet implements org.w3c.dom.stylesheets.StyleSheet ",
        "135": "    public org.w3c.dom.stylesheets.MediaList getMedia() {",
        "47": "    /**",
        "48": "     * Construct a HTML StyleSheet object.",
        "49": "     */",
        "20": "",
        "21": "package sun.plugin.dom.stylesheets;",
        "29": "/**",
        "30": " *  The <code>StyleSheet</code> interface is the abstract base interface for ",
        "31": " * any type of style sheet. It represents a single style sheet associated "
      },
      "id": 114338970,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 1773,
      "location": "/libjava/classpath/gnu/xml/transform",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127593084/",
      "md5hash": "23f315a7721b23f34c46befb48281135",
      "lines": {
        "1": "/* Stylesheet.java --",
        "2": "   Copyright (C) 2004,2006 Free Software Foundation, Inc.",
        "196": "",
        "197": "  Stylesheet(TransformerFactoryImpl factory,",
        "198": "             Stylesheet parent,",
        "266": "      {",
        "267": "        System.err.println(\"Stylesheet: \" + doc.getDocumentURI());",
        "275": "",
        "276": "  Stylesheet getRootStylesheet()",
        "277": "  {",
        "278": "    Stylesheet stylesheet = this;",
        "279": "    while (stylesheet.parent != null)",
        "280": "      stylesheet = stylesheet.parent;",
        "281": "    return stylesheet;",
        "282": "  }"
      },
      "id": 127593084,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 1457,
      "location": "/libjava/classpath/javax/swing/text/html",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127599472/",
      "md5hash": "e1c7786cb6a57363e39d74e41eaa71f4",
      "lines": {
        "1": "/* StyleSheet.java --",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "131": "     */",
        "132": "    CSSStyleSheetParserCallback(int prec)",
        "262": "  /**",
        "263": "   * Constructs a StyleSheet.",
        "264": "   */",
        "265": "  public StyleSheet()",
        "450": "    // Add styles from linked stylesheets.",
        "449": "",
        "89": " * views over the same model can be rendered differently. Each EditorPane has its",
        "248": "   */",
        "249": "  private ArrayList<StyleSheet> linked;",
        "90": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "91": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS"
      },
      "id": 127599472,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 1773,
      "location": "/libjava/classpath/gnu/xml/transform",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223607/",
      "md5hash": "23f315a7721b23f34c46befb48281135",
      "lines": {
        "1": "/* Stylesheet.java --",
        "2": "   Copyright (C) 2004,2006 Free Software Foundation, Inc.",
        "196": "",
        "197": "  Stylesheet(TransformerFactoryImpl factory,",
        "198": "             Stylesheet parent,",
        "266": "      {",
        "267": "        System.err.println(\"Stylesheet: \" + doc.getDocumentURI());",
        "275": "",
        "276": "  Stylesheet getRootStylesheet()",
        "277": "  {",
        "278": "    Stylesheet stylesheet = this;",
        "279": "    while (stylesheet.parent != null)",
        "280": "      stylesheet = stylesheet.parent;",
        "281": "    return stylesheet;",
        "282": "  }"
      },
      "id": 130223607,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 1457,
      "location": "/libjava/classpath/javax/swing/text/html",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130227269/",
      "md5hash": "e1c7786cb6a57363e39d74e41eaa71f4",
      "lines": {
        "1": "/* StyleSheet.java --",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "131": "     */",
        "132": "    CSSStyleSheetParserCallback(int prec)",
        "262": "  /**",
        "263": "   * Constructs a StyleSheet.",
        "264": "   */",
        "265": "  public StyleSheet()",
        "450": "    // Add styles from linked stylesheets.",
        "449": "",
        "89": " * views over the same model can be rendered differently. Each EditorPane has its",
        "248": "   */",
        "249": "  private ArrayList<StyleSheet> linked;",
        "90": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "91": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS"
      },
      "id": 130227269,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://github.com/jensrutschmann/flyingsaucer.git",
      "language": "Java",
      "linescount": 175,
      "location": "/flying-saucer-core/src/main/java/org/xhtmlrenderer/css/sheet",
      "name": "flyingsaucer",
      "url": "https://searchcode.com/codesearch/view/65780012/",
      "md5hash": "dc2b440052c7eff4ecc9a3a9d62a624b",
      "lines": {
        "1": "/*",
        "2": " * Stylesheet.java",
        "155": " * Now handles @import stylesheets",
        "145": " * Revision 1.8  2004/12/02 19:46:36  tobega",
        "146": " * Refactored handling of inline styles to fit with StylesheetInfo and media handling (is also now correct if there should be more than one style element)",
        "148": " * Revision 1.7  2004/11/29 23:25:39  tobega",
        "149": " * Had to redo thinking about Stylesheets and StylesheetInfos. Now StylesheetInfos are passed around instead of Stylesheets because any Stylesheet should only be linked to its URI. Bonus: the external sheets get lazy-loaded only if needed for the medium.",
        "154": " * Revision 1.5  2004/11/15 22:22:08  tobega",
        "151": " * Revision 1.6  2004/11/28 23:29:02  tobega",
        "152": " * Now handles media on Stylesheets, still need to handle at-media-rules. The media-type should be set in Context.media (set by default to \"screen\") before calling setContext on StyleReference.",
        "26": "/**",
        "27": " * A representation of a CSS style sheet. A Stylesheet has the sheet's rules in",
        "28": " * {@link Ruleset}, and has an origin--either user agent, user, or author. A",
        "29": " * Stylesheet can only be instantiated from a SAC CSSStyleSheet instance-- this",
        "30": " * would be the output of a SAC-compliant parser after parsing a CSS stream or",
        "31": " * source. A Stylesheet is immutable; after instantiation, you can query the"
      },
      "id": 65780012,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 908,
      "location": "/gcc-4.2.1/libjava/classpath/javax/swing/text/html",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12729048/",
      "md5hash": "8c5b3fa3d27b2987b3d343c20e664473",
      "lines": {
        "1": "/* StyleSheet.java -- ",
        "2": "   Copyright (C) 2005 Free Software Foundation, Inc.",
        "70": " * views over the same model can be rendered differently. Each EditorPane has its ",
        "71": " * own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit",
        "72": " * instances. An HTMLDocument can also have a StyleSheet, which holds specific CSS",
        "73": " * specs. ",
        "75": " *  In order for Views to store less state and therefore be more lightweight, ",
        "76": " *  the StyleSheet can act as a factory for painters that handle some of the ",
        "77": " *  rendering tasks. Since the StyleSheet may be used by views over multiple",
        "78": " *  documents the HTML attributes don't effect the selector being used.",
        "210": "   * Adds the rules from ss to those of the receiver. ss's rules will",
        "211": "   * override the old rules. An added StyleSheet will never override the rules",
        "84": " */",
        "85": "public class StyleSheet extends StyleContext",
        "214": "   * @param ss - the new StyleSheet.",
        "215": "   */",
        "213": "   * "
      },
      "id": 12729048,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1774,
      "location": "/gcc-4.2.1/libjava/classpath/gnu/xml/transform",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12731090/",
      "md5hash": "3002ebb7c1021b53881045c1291ec2ae",
      "lines": {
        "1": "/* Stylesheet.java -- ",
        "2": "   Copyright (C) 2004,2006 Free Software Foundation, Inc.",
        "195": "",
        "196": "  Stylesheet(TransformerFactoryImpl factory,",
        "197": "             Stylesheet parent,",
        "265": "      {",
        "266": "        System.err.println(\"Stylesheet: \" + doc.getDocumentURI());",
        "275": "",
        "276": "  Stylesheet getRootStylesheet()",
        "277": "  {",
        "278": "    Stylesheet stylesheet = this;",
        "279": "    while (stylesheet.parent != null)",
        "280": "      stylesheet = stylesheet.parent;",
        "281": "    return stylesheet;",
        "282": "  }"
      },
      "id": 12731090,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 175,
      "location": "/light_edit/src/java/thirdparty/xhtmlrenderer/src/java/org/xhtmlrenderer/css/sheet",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13731224/",
      "md5hash": "a50d25f12c34175ca6d6c472d790b7a4",
      "lines": {
        "1": "/*",
        "2": " * Stylesheet.java",
        "36": " */",
        "37": "public class Stylesheet implements RulesetContainer {",
        "38": "    /**",
        "145": " * Revision 1.8  2004/12/02 19:46:36  tobega",
        "146": " * Refactored handling of inline styles to fit with StylesheetInfo and media handling (is also now correct if there should be more than one style element)",
        "148": " * Revision 1.7  2004/11/29 23:25:39  tobega",
        "149": " * Had to redo thinking about Stylesheets and StylesheetInfos. Now StylesheetInfos are passed around instead of Stylesheets because any Stylesheet should only be linked to its URI. Bonus: the external sheets get lazy-loaded only if needed for the medium.",
        "26": "/**",
        "27": " * A representation of a CSS style sheet. A Stylesheet has the sheet's rules in",
        "28": " * {@link Ruleset}, and has an origin--either user agent, user, or author. A",
        "29": " * Stylesheet can only be instantiated from a SAC CSSStyleSheet instance-- this",
        "30": " * would be the output of a SAC-compliant parser after parsing a CSS stream or",
        "31": " * source. A Stylesheet is immutable; after instantiation, you can query the"
      },
      "id": 13731224,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "git://github.com/flyingsaucerproject/flyingsaucer.git",
      "language": "Java",
      "linescount": 175,
      "location": "/flying-saucer-core/src/main/java/org/xhtmlrenderer/css/sheet",
      "name": "flyingsaucer",
      "url": "https://searchcode.com/codesearch/view/17063238/",
      "md5hash": "dd1e5bcfdbf5556d792d219489dfe316",
      "lines": {
        "1": "/*",
        "2": " * Stylesheet.java",
        "155": " * Now handles @import stylesheets",
        "145": " * Revision 1.8  2004/12/02 19:46:36  tobega",
        "146": " * Refactored handling of inline styles to fit with StylesheetInfo and media handling (is also now correct if there should be more than one style element)",
        "148": " * Revision 1.7  2004/11/29 23:25:39  tobega",
        "149": " * Had to redo thinking about Stylesheets and StylesheetInfos. Now StylesheetInfos are passed around instead of Stylesheets because any Stylesheet should only be linked to its URI. Bonus: the external sheets get lazy-loaded only if needed for the medium.",
        "154": " * Revision 1.5  2004/11/15 22:22:08  tobega",
        "151": " * Revision 1.6  2004/11/28 23:29:02  tobega",
        "152": " * Now handles media on Stylesheets, still need to handle at-media-rules. The media-type should be set in Context.media (set by default to \"screen\") before calling setContext on StyleReference.",
        "26": "/**",
        "27": " * A representation of a CSS style sheet. A Stylesheet has the sheet's rules in",
        "28": " * {@link Ruleset}, and has an origin--either user agent, user, or author. A",
        "29": " * Stylesheet can only be instantiated from a SAC CSSStyleSheet instance-- this",
        "30": " * would be the output of a SAC-compliant parser after parsing a CSS stream or",
        "31": " * source. A Stylesheet is immutable; after instantiation, you can query the"
      },
      "id": 17063238,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 121,
      "location": "/zcommon/src/org/zkoss/html",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17658592/",
      "md5hash": "baa5fbce401ec4126e1e4b73d0765163",
      "lines": {
        "1": "/* StyleSheet.java",
        "2": "",
        "35": "\t */",
        "36": "\tpublic StyleSheet(String href, String type) {",
        "45": "\t */",
        "46": "\tpublic StyleSheet(String content, String type, boolean byContent) {",
        "111": "\t\tif (this == o) return true;",
        "112": "\t\tif (!(o instanceof StyleSheet))",
        "113": "\t\t\treturn false;",
        "114": "\t\tfinal StyleSheet ss = (StyleSheet)o;",
        "56": "\t */",
        "57": "\tpublic StyleSheet(String content, String type, String media, boolean byContent) {",
        "26": " */",
        "27": "public class StyleSheet implements java.io.Serializable, Cloneable {"
      },
      "id": 17658592,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 56,
      "location": "/zweb/srcdpc/org/zkoss/web/servlet",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17661440/",
      "md5hash": "1944aeb58146d7775752f8025080c35c",
      "lines": {
        "1": "/* StyleSheet.java",
        "2": "",
        "51": "\t */",
        "39": "\t */",
        "40": "\tpublic StyleSheet(String content, String type, boolean byContent) {",
        "18": "",
        "19": "/** @deprecated As of release 6.0.0, replaced with {@link org.zkoss.html.StyleSheet}.",
        "52": "\tpublic StyleSheet(String content, String type, String media, boolean byContent) {",
        "23": " */",
        "24": "public class StyleSheet extends org.zkoss.html.StyleSheet {",
        "29": "\t */",
        "30": "\tpublic StyleSheet(String href, String type) {"
      },
      "id": 17661440,
      "filename": "StyleSheet.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_external_apache-xml.git",
      "language": "Java",
      "linescount": 1517,
      "location": "/src/main/java/org/apache/xalan/templates",
      "name": "android_external_apache-xml",
      "url": "https://searchcode.com/codesearch/view/40448238/",
      "md5hash": "a1eef7ccf3bec19fa0fc2fb4e8d6518e",
      "lines": {
        "38": "/**",
        "71": " *",
        "72": " * <!ELEMENT xsl:stylesheet %top-level;>",
        "73": " * <!ATTLIST xsl:stylesheet %top-level-atts;>",
        "74": " *",
        "39": " * Represents a stylesheet element.",
        "78": " * </p></pre>",
        "79": " * @see <a href=\"http://www.w3.org/TR/xslt#section-Stylesheet-Structure\">section-Stylesheet-Structure in XSLT Specification</a>",
        "80": " */",
        "81": "public class Stylesheet extends ElemTemplateElement",
        "18": "/*",
        "19": " * $Id: Stylesheet.java 468643 2006-10-28 06:56:03Z minchau $",
        "86": "  /**",
        "87": "   * Constructor for a Stylesheet.",
        "88": "   * @param parent  The including or importing stylesheet."
      },
      "id": 40448238,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_libcore.git",
      "language": "Java",
      "linescount": 1517,
      "location": "/xml/src/main/java/org/apache/xalan/templates",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/41528520/",
      "md5hash": "a1eef7ccf3bec19fa0fc2fb4e8d6518e",
      "lines": {
        "38": "/**",
        "71": " *",
        "72": " * <!ELEMENT xsl:stylesheet %top-level;>",
        "73": " * <!ATTLIST xsl:stylesheet %top-level-atts;>",
        "74": " *",
        "39": " * Represents a stylesheet element.",
        "78": " * </p></pre>",
        "79": " * @see <a href=\"http://www.w3.org/TR/xslt#section-Stylesheet-Structure\">section-Stylesheet-Structure in XSLT Specification</a>",
        "80": " */",
        "81": "public class Stylesheet extends ElemTemplateElement",
        "18": "/*",
        "19": " * $Id: Stylesheet.java 468643 2006-10-28 06:56:03Z minchau $",
        "86": "  /**",
        "87": "   * Constructor for a Stylesheet.",
        "88": "   * @param parent  The including or importing stylesheet."
      },
      "id": 41528520,
      "filename": "Stylesheet.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/netbeans-soa.git",
      "language": "Java",
      "linescount": 256,
      "location": "/xslt.model/src/org/netbeans/modules/xslt/model",
      "name": "netbeans-soa",
      "url": "https://searchcode.com/codesearch/view/43326663/",
      "md5hash": "77954eb5a34738363a7e12b9183a22d9",
      "lines": {
        "32": " * &lt;xs:element name=\"stylesheet\" substitutionGroup=\"xsl:transform\"/>",
        "64": " * ",
        "66": " * So stylesheet object can have different tag names:",
        "67": " * <pre>",
        "68": " * stylesheet",
        "229": "    /**",
        "198": "    /**",
        "65": " * In reality transform is the same as stylesheet.",
        "72": " * ",
        "73": " * There is no methods for accessing to Template, Include, etc. child of stylesheet",
        "199": "     * @return imports children for this stylesheet.",
        "231": "     * @param child new StylesheetChild element.",
        "79": " */",
        "80": "public interface Stylesheet extends XslComponent {",
        "81": "    ",
        "230": "     * Add new <code>child</code> StylesheetChild element at <code>position</code>. ",
        "31": " * <pre>"
      },
      "id": 43326663,
      "filename": "Stylesheet.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 9895,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 2199,
      "source": "Github",
      "id": 2
    },
    {
      "count": 573,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 51,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 37,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 15,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 6,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 3,
      "source": "Google Android",
      "id": 12
    }
  ]
}