{
  "matchterm": "Cell",
  "previouspage": null,
  "searchterm": "Cell",
  "query": "Cell",
  "language_filters": [
    {
      "count": 31790,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 31790,
  "results": [
    {
      "repo": "https://github.com/snktagarwal/openafs.git",
      "language": "Java",
      "linescount": 1877,
      "location": "/src/JAVA/classes/org/openafs/jafs",
      "name": "openafs",
      "url": "https://searchcode.com/codesearch/view/111360923/",
      "md5hash": "2e2230c69817b9ae1ed59bb27e9b63b7",
      "lines": {
        "32": " * the cell, such as what users, groups, and servers exist in the cell.",
        "1": "/*",
        "2": " * @(#)Cell.java\t1.0 6/29/2001",
        "35": " * Constructing a <code>Cell</code> object does not mean a new cell is",
        "36": " * created in the AFS file system -- on the contrary, a <code>Cell</code>",
        "37": " * object must be a representation of an already existing AFS cell.  There",
        "38": " * is no way to create a new AFS cell through this API.  See ",
        "33": " * <BR><BR>",
        "40": " * to create a new cell.<BR><BR>",
        "41": " * ",
        "42": " * The construction of a <code>Cell</code> object acts as an entry point",
        "39": " * <a href=\"http://www.openafs.org\">OpenAFS.org</a> for information on how",
        "34": " *",
        "43": " * for authentication into the AFS system.  Thus, when you construct a ",
        "30": "/**",
        "31": " * An abstract representation of an AFS cell.  It holds information about "
      },
      "id": 111360923,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 193,
      "location": "/dspace-xmlui/dspace-xmlui-wing/src/main/java/org/dspace/app/xmlui/wing/element",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109449765/",
      "md5hash": "ab580a80cf548578139b1ae6170711b5",
      "lines": {
        "64": "    /** The name of the cell element */",
        "1": "/*",
        "2": " * Cell.java",
        "75": "",
        "66": "",
        "65": "    public static final String E_CELL = \"cell\";",
        "76": "    /** The name of this cell */",
        "43": "/**",
        "44": " * A class representing a table cell.",
        "45": " * ",
        "46": " * The cell element contained in a row of a table carries content for that",
        "79": "    /** The role of this cell, see ROLES below */",
        "78": "",
        "61": "",
        "62": "public class Cell extends RichTextContainer implements StructuralElement",
        "63": "{"
      },
      "id": 109449765,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/laurenyew/cOrcS.git",
      "language": "Java",
      "linescount": 141,
      "location": "/src/orc/lib/state",
      "name": "cOrcS",
      "url": "https://searchcode.com/codesearch/view/74131359/",
      "md5hash": "ed397765e79b70193bff83783e9541af",
      "lines": {
        "32": " * Write operatons fail once the cell is full.",
        "1": "//",
        "2": "// Cell.java -- Java class Cell",
        "35": " */",
        "4": "//",
        "5": "// $Id: Cell.java 2549 2011-03-15 02:04:37Z jthywissen $",
        "38": "\t/* (non-Javadoc)",
        "33": " *",
        "39": "\t * @see orc.values.sites.compatibility.SiteAdaptor#callSite(java.lang.Object[], orc.Handle, orc.runtime.values.GroupCell, orc.OrcRuntime)",
        "20": "import orc.error.runtime.TokenException;",
        "21": "import orc.lib.state.types.CellType;",
        "36": "public class Cell extends EvalSite implements TypedSite {",
        "29": "/**",
        "30": " * Write-once cell. ",
        "31": " * Read operations block while the cell is empty."
      },
      "id": 74131359,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/alexnicolaou/europa.git",
      "language": "Java",
      "linescount": 250,
      "location": "/src/games/Battle/shared/sys",
      "name": "europa",
      "url": "https://searchcode.com/codesearch/view/47631028/",
      "md5hash": "4103c15c64f682ae163457a212129e6c",
      "lines": {
        "1": "/*",
        "2": " * @(#)Cell.java",
        "36": "\t/**",
        "37": "\t * The number of troops in the cell.",
        "6": "/**",
        "7": " * A base class for an individual cell (square) in the game board. Both the",
        "8": " * client and server derive more specialized versions of cell to store the",
        "9": " * infomration that is of interest to them.",
        "44": "\t/**",
        "45": "\t * A flag that indicates if the contents of the cell have changed.",
        "15": "",
        "16": "public class Cell",
        "40": "\t/**",
        "18": "\t/**",
        "19": "\t * A symbols symbol is used to indicate who is in this cell.",
        "41": "\t * The row and column where this cell is located on the game board."
      },
      "id": 47631028,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/Spivey/geomlab",
      "language": "Java",
      "linescount": 83,
      "location": "/src/plugins",
      "name": "geomlab",
      "url": "https://searchcode.com/codesearch/view/66619311/",
      "md5hash": "26eabd38b1f97c746968494099f6ecf9",
      "lines": {
        "1": "/*",
        "2": " * Cell.java",
        "67": "\tEvaluator.countCons();",
        "68": "\treturn new Cell(x); ",
        "39": "",
        "40": "/** An assignable cell, as in ML.",
        "73": "\tCell x = prim.cast(Cell.class, v, \"a cell\");",
        "44": " *  Do as I day, not as I do! */",
        "45": "public class Cell extends Value {",
        "78": "    public static Value _set(Primitive prim, Value v, Value y) {",
        "47": "",
        "48": "    /** Contents of the cell */",
        "72": "    public static Value _get(Primitive prim, Value v) {",
        "50": "    ",
        "51": "    private Cell(Value val) { ",
        "79": "\tCell x = prim.cast(Cell.class, v, \"a cell\");"
      },
      "id": 66619311,
      "filename": "Cell.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 220,
      "location": "/zssapp.test/src/test/java/org/zkoss/test/zss",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/9943437/",
      "md5hash": "82a661b30415bb67215eb5b310d4c3c2",
      "lines": {
        "1": "/* Cell.java",
        "2": "",
        "35": " */",
        "36": "public class Cell extends Widget {",
        "37": "",
        "38": "\tpublic enum CellType {",
        "50": "\t",
        "51": "\tfinal Cell.Factory cellFactory;",
        "53": "\t@Inject",
        "54": "\t/*package*/ Cell(@Assisted(\"row\") Integer row, @Assisted(\"col\") Integer col,",
        "55": "\t\t\tMainBlock mainBlock, JQueryFactory jqFactory, Cell.Factory cellFactory,",
        "56": "\t\t\tConditionalTimeBlocker au, WebDriver webDriver) {",
        "57": "\t\tsuper(mainBlock.widgetScript() + \".getCell(\" + row + \",\" + col + \")\", ",
        "61": "\t\tthis.col = col;",
        "62": "\t\tthis.cellFactory = cellFactory;"
      },
      "id": 9943437,
      "filename": "Cell.java"
    },
    {
      "repo": "http://jnetwalk.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 278,
      "location": "/src/eu/easyedu/jnetwalk",
      "name": "jnetwalk",
      "url": "https://searchcode.com/codesearch/view/914991/",
      "md5hash": "13a92b14a07ecded1e37ab7f1a616d12",
      "lines": {
        "32": " */",
        "1": "/*",
        "2": " * Cell.java",
        "230": "    public void clear() {",
        "33": "public class Cell extends JComponent implements MouseListener {",
        "231": "        setDirections(Cell.NONE);",
        "52": "",
        "53": "    /** Creates a new instance of Cell */",
        "54": "    public Cell(Board board, final int index) {",
        "55": "        this(index);",
        "58": "",
        "59": "    /** Creates a new instance of Cell */",
        "60": "    public Cell(final int index) {",
        "61": "        this.angle = 0;"
      },
      "id": 914991,
      "filename": "Cell.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 149,
      "location": "/zul/src/org/zkoss/zul",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17657993/",
      "md5hash": "7a4ea6592453108dc57a45e701ec4845",
      "lines": {
        "1": "/* Cell.java",
        "2": "",
        "102": "\tpublic String getZclass() {",
        "103": "\t\treturn _zclass == null ? \"z-cell\" : _zclass;",
        "107": "\tpublic Object clone() {",
        "108": "\t\tfinal Cell clone = (Cell)super.clone();",
        "23": "/**",
        "24": " * The generic cell component to be embedded into {@link Row} or {@link Vbox}",
        "26": " * ",
        "27": " * <p>Default {@link #getZclass}: z-cell.",
        "30": " */",
        "31": "public class Cell extends XulElement {"
      },
      "id": 17657993,
      "filename": "Cell.java"
    },
    {
      "repo": "git://github.com/badlogic/libgdx.git",
      "language": "Java",
      "linescount": 1014,
      "location": "/gdx/src/com/badlogic/gdx/scenes/scene2d/ui",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/116108377/",
      "md5hash": "733a58a27a142b4d044a7efd8940d0ea",
      "lines": {
        "51": "\t/** Sets the actor in this cell and adds the actor to the cell's table. If null, removes any current actor. */",
        "11": "/** A cell for a {@link Table}.",
        "39": "\tint column, row;",
        "40": "\tint cellAboveIndex;",
        "42": "",
        "43": "\tpublic Cell () {",
        "12": " * @author Nathan Sweet */",
        "13": "public class Cell<T extends Actor> implements Poolable {",
        "50": "",
        "19": "\tstatic private Files files;",
        "20": "\tstatic private Cell defaults;",
        "53": "\t\tif (actor != newActor) {",
        "57": "\t\t}",
        "52": "\tpublic <A extends Actor> Cell<A> setActor (A newActor) {",
        "58": "\t\treturn (Cell<A>)this;",
        "10": ""
      },
      "id": 116108377,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/cungchoi/libgdx.git",
      "language": "Java",
      "linescount": 941,
      "location": "/gdx/src/com/badlogic/gdx/scenes/scene2d/ui",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/93167961/",
      "md5hash": "984edb28af1b791daa9f89426922d8bb",
      "lines": {
        "64": "\t\tif (cell.minWidth != null) minWidth = cell.minWidth;",
        "65": "\t\tif (cell.minHeight != null) minHeight = cell.minHeight;",
        "66": "\t\tif (cell.prefWidth != null) prefWidth = cell.prefWidth;",
        "67": "\t\tif (cell.prefHeight != null) prefHeight = cell.prefHeight;",
        "36": "",
        "37": "\tvoid set (Cell defaults) {",
        "70": "\t\tif (cell.spaceTop != null) spaceTop = cell.spaceTop;",
        "71": "\t\tif (cell.spaceLeft != null) spaceLeft = cell.spaceLeft;",
        "8": "",
        "9": "/** A cell for a {@link Table}.",
        "10": " * @author Nathan Sweet */",
        "72": "\t\tif (cell.spaceBottom != null) spaceBottom = cell.spaceBottom;",
        "73": "\t\tif (cell.spaceRight != null) spaceRight = cell.spaceRight;",
        "68": "\t\tif (cell.maxWidth != null) maxWidth = cell.maxWidth;",
        "69": "\t\tif (cell.maxHeight != null) maxHeight = cell.maxHeight;",
        "63": "\t\tif (cell == null) return;"
      },
      "id": 93167961,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 1015,
      "location": "/targets/itext/1.4.8/com/lowagie/text",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313661/",
      "md5hash": "bc907f91cfa3245676f3b7d194e40506",
      "lines": {
        "64": " * <P>",
        "1": "/*",
        "2": " * $Id: Cell.java,v 1.111 2006/11/09 19:03:49 xlv Exp $",
        "67": " * a <CODE>Row</CODE>.",
        "65": " * A <CODE>Cell</CODE> must be added to a <CODE>Table</CODE>.",
        "73": " * table.setBorderColor(new Color(0, 0, 255));",
        "74": " * table.setCellpadding(5);",
        "75": " * table.setCellspacing(5);",
        "76": " * <STRONG>Cell cell = new Cell(\"header\");</STRONG>",
        "66": " * The <CODE>Table</CODE> will place the <CODE>Cell</CODE> in",
        "77": " * <STRONG>cell.setHeader(true);</STRONG>",
        "58": "import com.lowagie.text.markup.MarkupParser;",
        "59": "import com.lowagie.text.pdf.PdfPCell;",
        "61": "/**",
        "62": " * A <CODE>Cell</CODE> is a <CODE>Rectangle</CODE> containing other"
      },
      "id": 120313661,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/shihuaxian/libgdx.git",
      "language": "Java",
      "linescount": 974,
      "location": "/gdx/src/com/esotericsoftware/tablelayout",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/75886567/",
      "md5hash": "35d590f6160b8ca455e8d6eae9d66043",
      "lines": {
        "33": "",
        "34": "/** A cell in a table.",
        "35": " * @author Nathan Sweet */",
        "36": "public class Cell<C> {",
        "65": "",
        "66": "\tvoid set (Cell defaults) {",
        "91": "",
        "55": "\tint column, row;",
        "56": "\tint cellAboveIndex = -1;",
        "58": "",
        "59": "\tpublic Cell () {",
        "92": "\tvoid merge (Cell cell) {",
        "93": "\t\tif (cell == null) return;",
        "94": "\t\tif (cell.minWidth != null) minWidth = cell.minWidth;",
        "95": "\t\tif (cell.minHeight != null) minHeight = cell.minHeight;"
      },
      "id": 75886567,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/baasio/cassandra.git",
      "language": "Java",
      "linescount": 309,
      "location": "/src/java/org/apache/cassandra/db",
      "name": "cassandra",
      "url": "https://searchcode.com/codesearch/view/92069722/",
      "md5hash": "1b5c8c919ea7925798d2267f7b809c2c",
      "lines": {
        "32": "import org.apache.cassandra.db.composites.CellNames;",
        "33": "import org.apache.cassandra.db.marshal.*;",
        "43": "/**",
        "44": " * Cell is immutable, which prevents all kinds of confusion in a multithreaded environment.",
        "45": " */",
        "46": "public class Cell implements OnDiskAtom",
        "61": "                                                      final CellNameType type)",
        "49": "",
        "50": "    private static final long EMPTY_SIZE = ObjectSizes.measure(new Cell(CellNames.simpleDense(ByteBuffer.allocate(1))));",
        "88": "",
        "89": "    protected final CellName name;",
        "60": "                                                      final Descriptor.Version version,",
        "29": "import org.apache.cassandra.config.CFMetaData;",
        "30": "import org.apache.cassandra.db.composites.CellName;",
        "31": "import org.apache.cassandra.db.composites.CellNameType;"
      },
      "id": 92069722,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/msandhudigg/digitalcoinj.git",
      "language": "Java",
      "linescount": 231,
      "location": "/orchid/src/com/subgraph/orchid",
      "name": "digitalcoinj",
      "url": "https://searchcode.com/codesearch/view/93589450/",
      "md5hash": "2b84b71249b7db9d252a62a187998a5d",
      "lines": {
        "3": "",
        "4": "public interface Cell {",
        "5": "\t/** Command constant for a PADDING type cell. */",
        "6": "\tfinal static int PADDING = 0;",
        "7": "",
        "8": "\t/** Command constant for a CREATE type cell. */",
        "10": "",
        "11": "\t/** Command constant for a CREATED type cell. */",
        "13": "",
        "14": "\t/** Command constant for a RELAY type cell. */",
        "16": "",
        "17": "\t/** Command constant for a DESTROY type cell. */",
        "19": "",
        "20": "\t/** Command constant for a CREATE_FAST type cell. */",
        "22": "",
        "23": "\t/** Command constant for a CREATED_FAST type cell. */"
      },
      "id": 93589450,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/mig_isep_work/lapr4_grupo_58",
      "language": "Java",
      "linescount": 153,
      "location": "/src/csheets/core",
      "name": "lapr4_grupo_58",
      "url": "https://searchcode.com/codesearch/view/102415322/",
      "md5hash": "e72f8f28dfc8516103b5fdd529147676",
      "lines": {
        "32": " * <p>The cell has content, which can be interpreted in",
        "33": " * different ways: <ul>",
        "35": " * expression, and begin with an assignment.",
        "36": " * <li>As a value - If the cell contains a formula, the formula is evaluated to",
        "37": " * produce a value, provided that the cell does not contain calculation errors",
        "38": " * (e.g. division by 0). Otherwise, the content is interpreted as the value.",
        "41": " */",
        "42": "public interface Cell extends Comparable<Cell>, Extensible<Cell>, Serializable {",
        "48": "\t/**",
        "49": "\t * Returns the spreadsheet to which the cell belongs.",
        "50": "\t * @return the spreadsheet to which the cell belongs",
        "51": "\t */",
        "54": "\t/**",
        "55": "\t * Returns the address of the cell.",
        "56": "\t * @return the address of the cell",
        "30": "/**",
        "31": " * A cell in a spreadsheet."
      },
      "id": 102415322,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/zootella/cheat.git",
      "language": "Java",
      "linescount": 113,
      "location": "/source/org/zootella/cheat/user/panel",
      "name": "cheat",
      "url": "https://searchcode.com/codesearch/view/105350693/",
      "md5hash": "31b3ad64d7c3920f6a12918d8e17c6c8",
      "lines": {
        "7": "",
        "8": "public class Cell {",
        "9": "",
        "10": "\t// -------- Wrap a button into a Cell object to add it to a Panel --------",
        "12": "\t/**",
        "13": "\t * Wrap a component, like a button or a label, into a new Cell object.",
        "14": "\t * It will have default position and resizing settings.",
        "15": "\t * Once your component is inside a Cell, you can add it to a Panel.",
        "17": "\t * @param component A JComponent object like a JButton or a JLabel",
        "18": "\t * @return          A new Cell object with the component inside",
        "19": "\t */",
        "20": "\tpublic static Cell wrap(JComponent component) {",
        "21": "\t\t",
        "22": "\t\t// Make a new Cell object to return, and keep the given JComponent inside",
        "23": "\t\tCell cell = new Cell();"
      },
      "id": 105350693,
      "filename": "Cell.java"
    },
    {
      "repo": "https://bitbucket.org/mirror/cassandra.git",
      "language": "Java",
      "linescount": 311,
      "location": "/src/java/org/apache/cassandra/db",
      "name": "cassandra",
      "url": "https://searchcode.com/codesearch/view/122241569/",
      "md5hash": "d61077cfd98d2018d877d3c10eeb9603",
      "lines": {
        "32": "import org.apache.cassandra.db.marshal.*;",
        "163": "",
        "164": "    public int serializedSize(CellNameType type, TypeSizes typeSizes)",
        "41": "/**",
        "42": " * Cell is immutable, which prevents all kinds of confusion in a multithreaded environment.",
        "43": " */",
        "44": "public class Cell implements OnDiskAtom",
        "88": "",
        "84": "",
        "85": "    protected final CellName name;",
        "89": "    Cell(CellName name)",
        "56": "                                                      final Descriptor.Version version,",
        "57": "                                                      final CellNameType type)",
        "29": "import org.apache.cassandra.config.CFMetaData;",
        "30": "import org.apache.cassandra.db.composites.CellName;",
        "31": "import org.apache.cassandra.db.composites.CellNameType;"
      },
      "id": 122241569,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/siva87in/hbase.git",
      "language": "Java",
      "linescount": 279,
      "location": "/src/java/org/apache/hadoop/hbase/io",
      "name": "hbase",
      "url": "https://searchcode.com/codesearch/view/92506527/",
      "md5hash": "03a277f7b9577e10c04803574f713306",
      "lines": {
        "64": "  /**",
        "65": "   * Create a new Cell with a given value and timestamp. Used by HStore.",
        "69": "   */",
        "70": "  public Cell(String value, long timestamp) {",
        "74": "  /**",
        "75": "   * Create a new Cell with a given value and timestamp. Used by HStore.",
        "44": "/**",
        "45": " * Cell - Used to transport a cell value (byte[]) and the timestamp it was",
        "46": " * stored with together as a result for get and getRow methods. This promotes",
        "47": " * the timestamp of a cell to a first-class value, making it easy to take note",
        "48": " * of temporal data. Cell is used all the way from HStore up to HTable.",
        "49": " */",
        "50": "public class Cell implements Writable, Iterable<Map.Entry<Long, byte[]>>,",
        "59": "  /** For Writable compatibility */",
        "60": "  public Cell() {"
      },
      "id": 92506527,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/sortega/parchis.git",
      "language": "Java",
      "linescount": 197,
      "location": "/ParchisLib/src/parchis",
      "name": "parchis",
      "url": "https://searchcode.com/codesearch/view/110707546/",
      "md5hash": "43fff9b490eb7807cb80e75d36d01008",
      "lines": {
        "12": " */",
        "13": "public class Cell implements Localizable {",
        "15": "    public static final int STAIRCASE_LENGTH = 8;",
        "16": "    public static final Map<Color, Cell> PLAYER_HOMES =",
        "17": "            new EnumMap<Color, Cell>(Color.class) {{",
        "18": "                put(yellow, new Cell(5));",
        "19": "                put(blue,   new Cell(22));",
        "20": "                put(red,    new Cell(39));",
        "21": "                put(green,  new Cell(56));",
        "22": "            }};",
        "23": "    public static final Cell[] ALL_CELLS = new Cell[MAIN_PATH_LENGTH +",
        "26": "        for (int number=0; number < MAIN_PATH_LENGTH; number++) {",
        "27": "            ALL_CELLS[number] = C(number + 1);",
        "29": "        for (int number=0; number < STAIRCASE_LENGTH; number++) {",
        "30": "            ALL_CELLS[MAIN_PATH_LENGTH + number] = C(yellow, number + 1);",
        "31": "            ALL_CELLS[MAIN_PATH_LENGTH + STAIRCASE_LENGTH + number] ="
      },
      "id": 110707546,
      "filename": "Cell.java"
    },
    {
      "repo": "https://github.com/kflorence/pathfinding-java.git",
      "language": "Java",
      "linescount": 126,
      "location": "/src/game/map",
      "name": "pathfinding-java",
      "url": "https://searchcode.com/codesearch/view/112912979/",
      "md5hash": "511fce4a53a712732c2339ddfbbcf9d8",
      "lines": {
        "5": "",
        "6": "// Grid cell class",
        "7": "public class Cell",
        "8": "{\t",
        "9": "\tprivate Point cell;\t\t\t\t\t\t// The location of this cell; Point (r, c)",
        "10": "    private Point location;\t\t\t\t\t// The location of this cell; Point (x, y)",
        "11": "    private Rectangle bounds;\t\t\t\t// The rectangle representing this cell",
        "12": "    ",
        "13": "    private boolean isGoal \t\t= false;\t// Whether or not this cell is a goal point",
        "14": "    private boolean isSpawn \t= false;\t// Whether or not this cell is a spawn point",
        "15": "    private boolean isPlayable \t= false;\t// Whether or not entities can enter this cell",
        "16": "  ",
        "17": "    // Constructor, creates a new cell for the grid",
        "18": "    public Cell(int r, int c)",
        "19": "    {"
      },
      "id": 112912979,
      "filename": "Cell.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 16281,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 9809,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4916,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 321,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 277,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 99,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 61,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 17,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 9,
      "source": "Gitorious",
      "id": 10
    }
  ]
}