{
  "matchterm": "Table",
  "previouspage": null,
  "searchterm": "Table",
  "query": "Table",
  "language_filters": [
    {
      "count": 185540,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 185540,
  "results": [
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 269,
      "location": "/dspace-xmlui/dspace-xmlui-wing/src/main/java/org/dspace/app/xmlui/wing/element",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109449839/",
      "md5hash": "3b194f10b9bcbd43d51edb51c55e71f1",
      "lines": {
        "64": "public class Table extends AbstractWingElement implements StructuralElement",
        "1": "/*",
        "2": " * Table.java",
        "67": "    public static final String E_TABLE = \"table\";",
        "68": "",
        "65": "{",
        "74": "",
        "43": "/**",
        "44": " * A class representing a table.",
        "66": "    /** The name of the table element */",
        "46": " * The table element is a container for information presented in tabular format.",
        "45": " * ",
        "75": "    /** The name assigned to this table */",
        "77": "",
        "78": "    /** Special rendering instructions for this table */",
        "63": ""
      },
      "id": 109449839,
      "filename": "Table.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 1175,
      "location": "/source/net/yacy/kelondro/table",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62351738/",
      "md5hash": "6bbabd11dc96ffcb4fbd35363e1da5b1",
      "lines": {
        "64": " * and a rare number of write IO operations must be done for a large number of table-writings (using the write buffer of EcoFS)",
        "1": "// Table.java",
        "2": "// (C) 2008 by Michael Peter Christen; mc@yacy.net, Frankfurt a. M., Germany",
        "75": "    private final static TreeMap<String, Table> tableTracker = new TreeMap<String, Table>();",
        "70": "",
        "65": " * To make the Table scalable in question of available RAM, there are two elements that must be scalable:",
        "73": "    // static tracker objects",
        "74": "    private final static ConcurrentLog log = new ConcurrentLog(\"TABLE\");",
        "71": "public class Table implements Index, Iterable<Row.Entry> {",
        "66": " * - the access index can be either completely in RAM (kelondroRAMIndex) or it is file-based (kelondroTree)",
        "24": "",
        "25": "package net.yacy.kelondro.table;",
        "61": "/*",
        "62": " * The Table builds upon the EcoFS and tries to reduce the number of IO requests that the",
        "63": " * EcoFS must do to a minimum. In best cases, no IO has to be done for read operations (complete database shadow in RAM)"
      },
      "id": 62351738,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/xxxzxxx/PrimitiveLibrary-for-Android.git",
      "language": "Java",
      "linescount": 122,
      "location": "/PrimitiveLibrary-Database/src/com/primitive/library/database",
      "name": "PrimitiveLibrary-for-Android",
      "url": "https://searchcode.com/codesearch/view/70157231/",
      "md5hash": "e9185c74560b50778a4cec3afa7da9ba",
      "lines": {
        "1": "/**",
        "2": "] * Table",
        "115": "\t * execute table upgrade process",
        "38": "\t/**",
        "70": "\t/**",
        "39": "\t * return defined table columns projection array",
        "73": "\t */",
        "74": "\tpublic String getCreateTableSQL() {",
        "71": "\t * create create table SQL",
        "76": "\t\tStringBuilder sqlpk = new StringBuilder();",
        "77": "\t\tsql.append(\"CREATE TABLE IF NOT EXISTS \");",
        "18": "public abstract class Table {",
        "19": "\t/**  table name */",
        "20": "\tprivate final String name;",
        "114": "\t/**"
      },
      "id": 70157231,
      "filename": "Table.java"
    },
    {
      "repo": "git://github.com/StuartMacKay/transform-swf.git",
      "language": "Java",
      "linescount": 206,
      "location": "/src/main/java/com/flagstone/transform/action",
      "name": "transform-swf",
      "url": "https://searchcode.com/codesearch/view/16059617/",
      "md5hash": "1decbd1c5a903839ee8f0b5500752e20",
      "lines": {
        "1": "/*",
        "2": " * Table.java",
        "43": "/**",
        "44": " * Table is used to create a table of string literals that can be referenced by",
        "48": " * <p>",
        "49": " * Variables and built-in functions are specified by their name and the Table",
        "50": " * class contains a table of the respective strings. References to a variable or",
        "51": " * function can then use its index in the table rather than the name resulting",
        "52": " * in a more compact representation when the actions are encoded into binary",
        "55": " *",
        "56": " * @see TableIndex",
        "58": " */",
        "59": "public final class Table implements Action {",
        "61": "    /** Format string used in toString() method. */",
        "62": "    private static final String FORMAT = \"Table: { values=%s}\";",
        "63": ""
      },
      "id": 16059617,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/mreillyorg/dbcopy",
      "language": "Java",
      "linescount": 150,
      "location": "/src/org/michaelreilly/dbcopy/filesystem",
      "name": "dbcopy",
      "url": "https://searchcode.com/codesearch/view/119552878/",
      "md5hash": "883e2b93c9c8eb0c7133aec3bf7b9d02",
      "lines": {
        "1": "/*",
        "2": " * @(#)Table.java   11/08/25",
        "28": " */",
        "29": "public class Table"
      },
      "id": 119552878,
      "filename": "Table.java"
    },
    {
      "repo": "http://go-engine-java-gtp.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 383,
      "location": "/GoGuiClienteTonto/src/net/sf/gogui/util",
      "name": "go-engine-java-gtp",
      "url": "https://searchcode.com/codesearch/view/11394499/",
      "md5hash": "5d45aa2021d64b9cce5994011f5f7192",
      "lines": {
        "1": "// Table.java",
        "2": "",
        "49": "",
        "39": "",
        "40": "    /** Error thrown if table element has not the expected type. */",
        "106": "        {",
        "107": "            throw new InvalidElement(\"Expected integer in table (column=\"",
        "50": "    public Table()",
        "16": "",
        "17": "/** Table of string elements. */",
        "18": "public class Table",
        "19": "{",
        "84": "            throw new InvalidElement(\"Expected floating point number in \"",
        "85": "                                     + \"table (column=\" + column + \", row=\"",
        "29": "",
        "30": "    /** Error thrown on invalid file format when reading a table. */"
      },
      "id": 11394499,
      "filename": "Table.java"
    },
    {
      "repo": "http://larozanam.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 204,
      "location": "/swingdk/src/com/celiosilva/swingDK/dataTable",
      "name": "larozanam",
      "url": "https://searchcode.com/codesearch/view/2031955/",
      "md5hash": "1f8ed412d42db1bfc9c1007291cd0dc0",
      "lines": {
        "32": "public class Table extends JTable{",
        "1": "/*",
        "2": " * Table.java",
        "35": "    private                 List<TableColumn>               columns;",
        "9": "",
        "10": "package com.celiosilva.swingDK.dataTable;",
        "44": "    ",
        "34": "    private                 FontMetrics                     fm;",
        "46": "    public Table() {",
        "45": "    /** Creates a new instance of Table */",
        "23": "import javax.swing.JOptionPane;",
        "24": "import javax.swing.JTable;",
        "25": "import javax.swing.ListSelectionModel;",
        "26": "import javax.swing.table.TableColumn;",
        "31": " */"
      },
      "id": 2031955,
      "filename": "Table.java"
    },
    {
      "repo": "http://larozanam.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 117,
      "location": "/swingdk/src/com/celiosilva/swingDK/dataTable",
      "name": "larozanam",
      "url": "https://searchcode.com/codesearch/view/2031952/",
      "md5hash": "21771360e995def9e10687e876b71405",
      "lines": {
        "1": "/*",
        "2": " * Table.java",
        "35": "    public TableModel(Collection<? extends ColumnFormat> rows) {",
        "36": "        super();",
        "37": "        lista = collectionToList(rows);        ",
        "38": "        this.initTableModel(collectionToList(rows));",
        "33": "    ",
        "9": "",
        "10": "package com.celiosilva.swingDK.dataTable;",
        "34": "    /** Creates a new instance of Table */",
        "17": "import java.util.Map;",
        "18": "import javax.swing.table.AbstractTableModel;",
        "25": " */",
        "26": "public class TableModel extends AbstractTableModel{",
        "27": "    private                 Object[][]                      tableData;",
        "28": "    private                 String[]                        columnNames;"
      },
      "id": 2031952,
      "filename": "TableModel.java"
    },
    {
      "repo": "https://github.com/Scorpion1122/libgdx.git",
      "language": "Java",
      "linescount": 476,
      "location": "/gdx/src/com/badlogic/gdx/scenes/scene2d/ui",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/73757925/",
      "md5hash": "66ec77ccc770c59af0c8f850fa0404eb",
      "lines": {
        "32": "import com.esotericsoftware.tablelayout.Toolkit;",
        "33": "import com.esotericsoftware.tablelayout.Value;",
        "34": "",
        "131": "\t/** Sets the background drawable and sets the table's padding to {@link Drawable#getBottomHeight()} ,",
        "160": "\t/** Causes the contents to be clipped if they exceed the table widget bounds. Enabling clipping will set",
        "130": "",
        "49": "",
        "50": "/** A group that sizes and positions children using table constraints. By default, {@link #getTouchable()} is",
        "54": " * @author Nathan Sweet */",
        "55": "public class Table extends WidgetGroup {",
        "56": "\tstatic {",
        "159": "",
        "29": "",
        "30": "import com.esotericsoftware.tablelayout.BaseTableLayout.Debug;",
        "31": "import com.esotericsoftware.tablelayout.Cell;"
      },
      "id": 73757925,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/shihuaxian/libgdx.git",
      "language": "Java",
      "linescount": 489,
      "location": "/gdx/src/com/badlogic/gdx/scenes/scene2d/ui",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/75886220/",
      "md5hash": "498a563a4ba1c3bb9ab12925ccad98cc",
      "lines": {
        "32": "import com.esotericsoftware.tablelayout.Toolkit;",
        "33": "import com.esotericsoftware.tablelayout.Value;",
        "34": "",
        "131": "\t/** Sets the background drawable from the skin. This may only be called if {@link Table#Table(Skin)} or {@link #setSkin(Skin)}",
        "136": "",
        "137": "\t/** Sets the background drawable and sets the table's padding to {@link Drawable#getBottomHeight()} ,",
        "130": "",
        "49": "",
        "50": "/** A group that sizes and positions children using table constraints. By default, {@link #getTouchable()} is",
        "54": " * @author Nathan Sweet */",
        "55": "public class Table extends WidgetGroup {",
        "56": "\tstatic {",
        "29": "",
        "30": "import com.esotericsoftware.tablelayout.BaseTableLayout.Debug;",
        "31": "import com.esotericsoftware.tablelayout.Cell;"
      },
      "id": 75886220,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/hanchensu/adrd.git",
      "language": "Java",
      "linescount": 250,
      "location": "/impala-fe/src/com/cloudera/impala/catalog",
      "name": "adrd",
      "url": "https://searchcode.com/codesearch/view/75862584/",
      "md5hash": "d9a5db6a70eee7939d21425426618526",
      "lines": {
        "32": "/**",
        "33": " * Base class for table metadata.",
        "34": " *",
        "35": " * This includes the concept of clustering columns, which are columns by which the table",
        "40": " */",
        "41": "public abstract class Table {",
        "42": "  protected final TableId id;",
        "43": "  private final org.apache.hadoop.hive.metastore.api.Table msTable;",
        "44": "  protected final Db db;",
        "50": "",
        "51": "  // estimated number of rows in table; -1: unknown",
        "22": "import org.apache.hadoop.hive.metastore.HiveMetaStoreClient;",
        "23": "import org.apache.hadoop.hive.metastore.TableType;",
        "27": "import com.cloudera.impala.planner.DataSink;",
        "28": "import com.cloudera.impala.thrift.TTableDescriptor;"
      },
      "id": 75862584,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/mkeesey/revori.git",
      "language": "Java",
      "linescount": 143,
      "location": "/server/src/main/java/com/readytalk/revori",
      "name": "revori",
      "url": "https://searchcode.com/codesearch/view/72891728/",
      "md5hash": "e75d23b769ff5a2347ebc5f58657e23b",
      "lines": {
        "32": "  /**",
        "33": "   * The order, to provide an absolute order on tables independent of id",
        "37": "  /**",
        "38": "   * The ID specified when this table was defined.",
        "42": "  /**",
        "43": "   * True if the contents of this table should be replicated to other",
        "14": "/**",
        "15": " * Class representing a table.  Instances of this class do not hold",
        "48": "  /**",
        "49": "   * Defines a table using the specified list of columns as the",
        "19": "@ThreadSafe",
        "20": "public class Table implements Comparable<Table> {",
        "23": "  public synchronized static String makeId() {",
        "24": "    return (nextId++) + \".\" + Table.class.getName() + \".id\";",
        "27": "  /**",
        "28": "   * The primary key specified when this table was defined."
      },
      "id": 72891728,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/mprabhuram/impala.git",
      "language": "Java",
      "linescount": 208,
      "location": "/fe/src/main/java/com/cloudera/impala/catalog",
      "name": "impala",
      "url": "https://searchcode.com/codesearch/view/73181139/",
      "md5hash": "1b6a255c37ebd3c2618818e3b3252d01",
      "lines": {
        "33": "/**",
        "34": " * Base class for table metadata.",
        "35": " *",
        "36": " * This includes the concept of clustering columns, which are columns by which the table",
        "41": " */",
        "42": "public abstract class Table {",
        "43": "  protected final TableId id;",
        "44": "  protected final Db db;",
        "60": "  protected Table(TableId id, Db db, String name, String owner) {",
        "59": "",
        "51": "  /**",
        "52": "   * colsByPos[i] refers to the ith column in the table. The first numClusteringCols are",
        "26": "import com.cloudera.impala.analysis.Expr;",
        "27": "import com.cloudera.impala.catalog.Db.TableLoadingException;",
        "28": "import com.cloudera.impala.planner.DataSink;",
        "29": "import com.cloudera.impala.thrift.TTableDescriptor;"
      },
      "id": 73181139,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/yixzhang/impala.git",
      "language": "Java",
      "linescount": 209,
      "location": "/fe/src/main/java/com/cloudera/impala/catalog",
      "name": "impala",
      "url": "https://searchcode.com/codesearch/view/73676447/",
      "md5hash": "788ad9ac96b18158e91b97a2ae0f5437",
      "lines": {
        "32": "/**",
        "33": " * Base class for table metadata.",
        "34": " *",
        "35": " * This includes the concept of clustering columns, which are columns by which the table",
        "68": "  public TableId getId() {",
        "40": " */",
        "41": "public abstract class Table {",
        "42": "  protected final TableId id;",
        "43": "  protected final Db db;",
        "59": "  protected Table(TableId id, Db db, String name, String owner) {",
        "50": "  /**",
        "51": "   * colsByPos[i] refers to the ith column in the table. The first numClusteringCols are",
        "67": "",
        "58": "",
        "27": "import com.cloudera.impala.planner.DataSink;",
        "28": "import com.cloudera.impala.thrift.TTableDescriptor;"
      },
      "id": 73676447,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/tadpolefordbtools/TadpoleForDBTools.git",
      "language": "Java",
      "linescount": 252,
      "location": "/com.hangum.tadpole.model/src/com/hangum/tadpole/model",
      "name": "TadpoleForDBTools",
      "url": "https://searchcode.com/codesearch/view/75370112/",
      "md5hash": "9b4ff4d9d419592fd80aa32c4752336a",
      "lines": {
        "33": " *",
        "34": " * @see com.hangum.tadpole.model.TadpolePackage#getTable()",
        "15": " * <!-- begin-user-doc -->",
        "16": " * A representation of the model object '<em><b>Table</b></em>'.",
        "21": " * <ul>",
        "22": " *   <li>{@link com.hangum.tadpole.model.Table#getColumns <em>Columns</em>}</li>",
        "23": " *   <li>{@link com.hangum.tadpole.model.Table#getDb <em>Db</em>}</li>",
        "24": " *   <li>{@link com.hangum.tadpole.model.Table#getName <em>Name</em>}</li>",
        "25": " *   <li>{@link com.hangum.tadpole.model.Table#getConstraints <em>Constraints</em>}</li>",
        "26": " *   <li>{@link com.hangum.tadpole.model.Table#getIncomingLinks <em>Incoming Links</em>}</li>",
        "27": " *   <li>{@link com.hangum.tadpole.model.Table#getOutgoingLinks <em>Outgoing Links</em>}</li>",
        "28": " *   <li>{@link com.hangum.tadpole.model.Table#getLogicalName <em>Logical Name</em>}</li>",
        "29": " *   <li>{@link com.hangum.tadpole.model.Table#getCommant <em>Commant</em>}</li>",
        "30": " *   <li>{@link com.hangum.tadpole.model.Table#getUserCommentReference <em>User Comment Reference</em>}</li>",
        "31": " * </ul>"
      },
      "id": 75370112,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/freenet/Thaw.git",
      "language": "Java",
      "linescount": 358,
      "location": "/src/thaw/gui",
      "name": "Thaw",
      "url": "https://searchcode.com/codesearch/view/76624100/",
      "md5hash": "1d142820d4f133295e7ab727ea4a5e07",
      "lines": {
        "32": " * Inherits from JTable:",
        "33": " *  Just add to usual JTable the capacity to store the columns sizes",
        "3": "",
        "4": "import javax.swing.table.TableModel;",
        "5": "import javax.swing.table.TableColumn;",
        "6": "import javax.swing.table.TableColumnModel;",
        "7": "import javax.swing.event.TableModelEvent;",
        "8": "import javax.swing.event.TableColumnModelListener;",
        "9": "import javax.swing.event.TableColumnModelEvent;",
        "10": "import javax.swing.event.ListSelectionEvent;",
        "11": "import javax.swing.event.ChangeEvent;",
        "12": "import javax.swing.table.DefaultTableCellRenderer;",
        "13": "import javax.swing.ListSelectionModel;",
        "14": "import javax.swing.JTable;",
        "31": "/**"
      },
      "id": 76624100,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/antiguru/h2database.git",
      "language": "Java",
      "linescount": 1135,
      "location": "/h2/src/main/org/h2/table",
      "name": "h2database",
      "url": "https://searchcode.com/codesearch/view/91929611/",
      "md5hash": "5f68ddacf2d4a0663f4037a92ae5979b",
      "lines": {
        "5": " */",
        "6": "package org.h2.table;",
        "42": "/**",
        "43": " * This is the base class for most tables.",
        "44": " * A table contains a list of columns and a list of rows.",
        "45": " */",
        "46": "public abstract class Table extends SchemaObjectBase {",
        "48": "    /**",
        "49": "     * The table type that means this table is a regular persistent table.",
        "53": "    /**",
        "54": "     * The table type that means this table is a regular persistent table.",
        "58": "    /**",
        "59": "     * The table type name for linked tables.",
        "60": "     */",
        "61": "    public static final String TABLE_LINK = \"TABLE LINK\";"
      },
      "id": 91929611,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/joel-costigliola/assertj-db.git",
      "language": "Java",
      "linescount": 351,
      "location": "/src/main/java/org/assertj/db/type",
      "name": "assertj-db",
      "url": "https://searchcode.com/codesearch/view/92523982/",
      "md5hash": "42c4b73d4c1cdc2410d5c0a41c87ac9f",
      "lines": {
        "32": " * <p>",
        "33": " * This {@link Table} point to a table called {@code movie} in a H2 database in memory like indicated in the",
        "39": " * Source source = new Source(&quot;jdbc:h2:mem:test&quot;, &quot;sa&quot;, &quot;&quot;);",
        "40": " * Table table = new Table(source, &quot;movie&quot;);",
        "46": " * <p>",
        "47": " * Below the {@link Table} {@code table1} point to a table called {@code song} (but only on the columns called",
        "48": " * {@code number} and {@code title}).<br>",
        "49": " * And the {@link Table} {@code table2} point to a table called {@code musician} (but ignore on the column called",
        "50": " * {@code birthday}).<br>",
        "51": " * The {@link Table} use a {@code DataSource} instead of a {@link Source} like above.",
        "56": " * DataSource dataSource = ...;",
        "21": "/**",
        "22": " * A table in the database to read to get the values.",
        "23": " * <p>",
        "24": " * The different informations of the table are {@link Source} or {@link DataSource}, name of the table and optionally",
        "57": " * Table table1 = new Table(dataSource, &quot;song&quot;, new String[] { &quot;number&quot;, &quot;title&quot; }, null);",
        "58": " * Table table2 = new Table(dataSource, &quot;musician&quot;, null, new String[] { &quot;birthday&quot; });"
      },
      "id": 92523982,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/mrbradparks/jOOQ.git",
      "language": "Java",
      "linescount": 1304,
      "location": "/jOOQ/src/main/java/org/jooq",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/92817333/",
      "md5hash": "ae957cbd7b74ee8167185bf359e5dbe1",
      "lines": {
        "72": "/**",
        "73": " * A table to be used in queries",
        "74": " *",
        "75": " * @param <R> The record type associated with this table",
        "78": "@State(",
        "79": "    name = \"Table\",",
        "80": "    aliases = {",
        "81": "        \"AliasedTable\",",
        "82": "        \"JoinedTable\",",
        "83": "        \"PivotTable\",",
        "84": "        \"DividedTable\",",
        "85": "        \"UnnestedTable\"",
        "86": "    },",
        "88": ")",
        "89": "public interface Table<R extends Record> extends TableLike<R> {"
      },
      "id": 92817333,
      "filename": "Table.java"
    },
    {
      "repo": "https://github.com/cungchoi/libgdx.git",
      "language": "Java",
      "linescount": 1219,
      "location": "/gdx/src/com/badlogic/gdx/scenes/scene2d/ui",
      "name": "libgdx",
      "url": "https://searchcode.com/codesearch/view/93168006/",
      "md5hash": "57c1e34b6ac0b0fe65527bccaedd1bf2",
      "lines": {
        "43": " * @author Nathan Sweet */",
        "164": "\t/** @see #setBackground(Drawable) */",
        "165": "\tpublic Table background (Drawable background) {",
        "38": "",
        "135": "",
        "136": "\t/** Sets the background drawable from the skin and adjusts the table's padding to match the background. This may only be called",
        "137": "\t * if {@link Table#Table(Skin)} or {@link #setSkin(Skin)} was used.",
        "138": "\t * @see #setBackground(Drawable, boolean) */",
        "39": "/** A group that sizes and positions children using table constraints. By default, {@link #getTouchable()} is",
        "44": "public class Table extends WidgetGroup {",
        "142": "",
        "143": "\t/** Sets the background drawable and adjusts the table's padding to match the background.",
        "171": "\tpublic Table background (String drawableName) {",
        "148": "",
        "149": "\t/** Sets the background drawable and, if adjustPadding is true, sets the table's padding to {@link Drawable#getBottomHeight()} ,",
        "170": "\t/** @see #setBackground(String) */"
      },
      "id": 93168006,
      "filename": "Table.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 100759,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 62289,
      "source": "Github",
      "id": 2
    },
    {
      "count": 18118,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1538,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1309,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 749,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 549,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 146,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 83,
      "source": "Gitorious",
      "id": 10
    }
  ]
}