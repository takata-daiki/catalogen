{
  "matchterm": "FuncPtg",
  "previouspage": null,
  "searchterm": "FuncPtg",
  "query": "FuncPtg",
  "language_filters": [
    {
      "count": 6,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 6,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 126,
      "location": "/components/forks/poi/src/loci/poi/hssf/record/formula",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642554/",
      "md5hash": "ca645a01ab0315dd4d6136cdceda6c78",
      "lines": {
        "64": "    ",
        "65": "    private FuncPtg() {",
        "50": " */",
        "51": "public class FuncPtg extends AbstractFunctionPtg{",
        "71": "     */",
        "72": "    public FuncPtg(RecordInputStream in) {",
        "57": "    /**",
        "58": "     * FuncPtgs are defined to be 4 bytes but the actual FuncPtg uses only 2 bytes.",
        "103": "    public Object clone() {",
        "104": "      FuncPtg ptg = new FuncPtg();"
      },
      "id": 15642554,
      "filename": "FuncPtg.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1669,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124969/",
      "md5hash": "e491d1b1e6089ccdcc05281b1359d8da",
      "lines": {
        "203": "\t\t\t\t\t\tStack s= parseFunctionPtg(form, funcName, fmla.substring(i+1, endparen), funcPtg);",
        "593": "    * Looks up a function string and returns a funcPtg if it is found",
        "202": "\t\t\t\t\t\t// parse function",
        "183": "\t\t\t  \t\tPtg funcPtg = null;",
        "592": "   /**",
        "433": "\t/**",
        "434": "\t * parse and add to Stack a valid Excel function represented by funcPtg and fmla string",
        "595": "    * @param\tfunc\tfunction string without parents i.e. SUM or DB",
        "596": "    * @returns\tPtg\t\tvalid funcPtg or null if not found ",
        "439": "\t * @param fmla\t\tfunction parameters in the form of (x, y, z)",
        "440": "\t * @param funcPtg\tfunction data for the formula represented by fmla",
        "185": "\t\t  \t\t\t  \t\t\t\t\t  \t\t",
        "442": "\t */",
        "184": "\t\t  \t\t\tfuncPtg=getFuncPtg(funcName, form);",
        "443": "\tprivate static Stack parseFunctionPtg(XLSRecord form, String func, String fmla, Ptg funcPtg) {"
      },
      "id": 47124969,
      "filename": "FormulaParser.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1669,
      "location": "/src/main/java/com/extentech/formats/XLS/formulas",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976593/",
      "md5hash": "e491d1b1e6089ccdcc05281b1359d8da",
      "lines": {
        "203": "\t\t\t\t\t\tStack s= parseFunctionPtg(form, funcName, fmla.substring(i+1, endparen), funcPtg);",
        "593": "    * Looks up a function string and returns a funcPtg if it is found",
        "202": "\t\t\t\t\t\t// parse function",
        "183": "\t\t\t  \t\tPtg funcPtg = null;",
        "592": "   /**",
        "433": "\t/**",
        "434": "\t * parse and add to Stack a valid Excel function represented by funcPtg and fmla string",
        "595": "    * @param\tfunc\tfunction string without parents i.e. SUM or DB",
        "596": "    * @returns\tPtg\t\tvalid funcPtg or null if not found ",
        "439": "\t * @param fmla\t\tfunction parameters in the form of (x, y, z)",
        "440": "\t * @param funcPtg\tfunction data for the formula represented by fmla",
        "185": "\t\t  \t\t\t  \t\t\t\t\t  \t\t",
        "442": "\t */",
        "184": "\t\t  \t\t\tfuncPtg=getFuncPtg(funcName, form);",
        "443": "\tprivate static Stack parseFunctionPtg(XLSRecord form, String func, String fmla, Ptg funcPtg) {"
      },
      "id": 50976593,
      "filename": "FormulaParser.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 485,
      "location": "/components/forks/poi/src/loci/poi/hssf/record/formula",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642564/",
      "md5hash": "a03fe68945d6947241c13705dd4cc5e3",
      "lines": {
        "326": "                 break;",
        "323": "        \t  ",
        "324": "             case MemFuncPtg.sid :              // 0x29",
        "261": "        \t  ",
        "262": "             case FuncPtg.sid :                 // 0x21",
        "263": "             case FuncPtg.sid + 0x20 :          // 0x41",
        "264": "             case FuncPtg.sid + 0x40 :          // 0x61",
        "265": "                 retval = new FuncPtg(in);",
        "266": "                 break;",
        "325": "                 retval = new MemFuncPtg(in);"
      },
      "id": 15642564,
      "filename": "Ptg.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 163,
      "location": "/zss/src/org/zkoss/poi/ss/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970569/",
      "md5hash": "6c4cf9a355470c2f624993f5b0758c74",
      "lines": {
        "121": "\t\t\t\tif (((FuncPtg)ptg).getFunctionIndex() == FunctionMetadataRegistry.FUNCTION_INDEX_INDIRECT) {",
        "120": "\t\t\tif (ptg instanceof FuncPtg) {",
        "25": "import org.zkoss.poi.ss.formula.ptg.AreaPtgBase;",
        "26": "import org.zkoss.poi.ss.formula.ptg.FuncPtg;",
        "119": "\t\t\tfinal Ptg ptg = ptgs[j];",
        "122": "\t\t\t\t\twithIndirect = true;"
      },
      "id": 3970569,
      "filename": "DefaultDependencyTracker.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 282,
      "location": "/components/forks/poi/src/loci/poi/hssf/dev",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642597/",
      "md5hash": "8c0f3f19688417e8138fee787add6462",
      "lines": {
        "120": "            if (token instanceof FuncPtg) {",
        "119": "            token = (Ptg) tokens.get(numptgs-1);"
      },
      "id": 15642597,
      "filename": "FormulaViewer.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 3,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1,
      "source": "Google Code",
      "id": 1
    }
  ]
}