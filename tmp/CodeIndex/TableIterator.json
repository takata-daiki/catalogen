{
  "matchterm": "TableIterator",
  "previouspage": null,
  "searchterm": "TableIterator",
  "query": "TableIterator",
  "language_filters": [
    {
      "count": 71,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 71,
  "results": [
    {
      "repo": "https://github.com/mkeesey/revori.git",
      "language": "Java",
      "linescount": 297,
      "location": "/server/src/main/java/com/readytalk/revori/imp",
      "name": "revori",
      "url": "https://searchcode.com/codesearch/view/72892473/",
      "md5hash": "eb473068fdabcfb81346797dc86a80b7",
      "lines": {
        "91": "  public TableIterator(TableReference tableReference,",
        "21": "",
        "38": "",
        "23": "  private static final Logger log = LoggerFactory.getLogger(TableIterator.class);",
        "24": "",
        "22": "class TableIterator implements SourceIterator {",
        "39": "  public TableIterator(TableReference tableReference,",
        "90": ""
      },
      "id": 72892473,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://bitbucket.org/m_eide/nav-3.10.x",
      "language": "Java",
      "linescount": 449,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data/util",
      "name": "nav-3.10.x",
      "url": "https://searchcode.com/codesearch/view/125767847/",
      "md5hash": "58910f81c86d3c202478786425bd24ec",
      "lines": {
        "448": "} // end of class TableIterator",
        "447": "    ",
        "23": "    /**",
        "24": "     * Create a new TableIterator using a given iterator over table rows.",
        "27": "     */",
        "28": "    public TableIterator(Table table, IntIterator rows) {",
        "14": " */",
        "15": "public class TableIterator extends IntIterator {"
      },
      "id": 125767847,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://bitbucket.org/m_eide/nav-status-3.10.x",
      "language": "Java",
      "linescount": 449,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data/util",
      "name": "nav-status-3.10.x",
      "url": "https://searchcode.com/codesearch/view/126951464/",
      "md5hash": "58910f81c86d3c202478786425bd24ec",
      "lines": {
        "448": "} // end of class TableIterator",
        "447": "    ",
        "23": "    /**",
        "24": "     * Create a new TableIterator using a given iterator over table rows.",
        "27": "     */",
        "28": "    public TableIterator(Table table, IntIterator rows) {",
        "14": " */",
        "15": "public class TableIterator extends IntIterator {"
      },
      "id": 126951464,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://bitbucket.org/kandal/nav-stable",
      "language": "Java",
      "linescount": 449,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data/util",
      "name": "nav-stable",
      "url": "https://searchcode.com/codesearch/view/59471541/",
      "md5hash": "58910f81c86d3c202478786425bd24ec",
      "lines": {
        "448": "} // end of class TableIterator",
        "447": "    ",
        "23": "    /**",
        "24": "     * Create a new TableIterator using a given iterator over table rows.",
        "27": "     */",
        "28": "    public TableIterator(Table table, IntIterator rows) {",
        "14": " */",
        "15": "public class TableIterator extends IntIterator {"
      },
      "id": 59471541,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://github.com/qmetric/qmg-utilities.git",
      "language": "Java",
      "linescount": 40,
      "location": "/poi/src/main/java/com/qmetric/utilities/poi",
      "name": "qmg-utilities",
      "url": "https://searchcode.com/codesearch/view/110658560/",
      "md5hash": "fa56e113850070b1f66a249542e227c6",
      "lines": {
        "8": "public class TableIterator implements Iterable<Row>, Iterator<Row>",
        "13": "",
        "14": "    public TableIterator(final Sheet worksheet, final int startingRow)",
        "7": ""
      },
      "id": 110658560,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://github.com/user1984/basex.git",
      "language": "Java",
      "linescount": 78,
      "location": "/src/main/java/org/basex/gui/view/table",
      "name": "basex",
      "url": "https://searchcode.com/codesearch/view/113722356/",
      "md5hash": "0d2e36e2dc33eaf3b9ae5b70de5b4e0a",
      "lines": {
        "35": "  TableIterator(final Data d, final TableData td) {",
        "10": " */",
        "11": "final class TableIterator {",
        "34": "   */"
      },
      "id": 113722356,
      "filename": "TableIterator.java"
    },
    {
      "repo": "git://github.com/prefuse/Prefuse.git",
      "language": "Java",
      "linescount": 449,
      "location": "/src/prefuse/data/util",
      "name": "Prefuse",
      "url": "https://searchcode.com/codesearch/view/15162667/",
      "md5hash": "58910f81c86d3c202478786425bd24ec",
      "lines": {
        "448": "} // end of class TableIterator",
        "447": "    ",
        "23": "    /**",
        "24": "     * Create a new TableIterator using a given iterator over table rows.",
        "27": "     */",
        "28": "    public TableIterator(Table table, IntIterator rows) {",
        "14": " */",
        "15": "public class TableIterator extends IntIterator {"
      },
      "id": 15162667,
      "filename": "TableIterator.java"
    },
    {
      "repo": "git://github.com/dain/leveldb.git",
      "language": "Java",
      "linescount": 99,
      "location": "/leveldb/src/main/java/org/iq80/leveldb/util",
      "name": "leveldb",
      "url": "https://searchcode.com/codesearch/view/14827328/",
      "md5hash": "7f12df41341a1d1aa80693ebabdb23c7",
      "lines": {
        "8": "",
        "9": "public final class TableIterator extends AbstractSeekingIterator<Slice, Slice>",
        "14": "",
        "15": "    public TableIterator(Table table, BlockIterator blockIterator)"
      },
      "id": 14827328,
      "filename": "TableIterator.java"
    },
    {
      "repo": "https://github.com/aaronwalker/undertow.git",
      "language": "Java",
      "linescount": 1117,
      "location": "/core/src/main/java/io/undertow/util",
      "name": "undertow",
      "url": "https://searchcode.com/codesearch/view/75731512/",
      "md5hash": "87983f655bc1e54f1bd57032c3768222",
      "lines": {
        "772": "",
        "773": "    abstract class TableIterator implements Iterator<Entry<K, V>> {",
        "903": "        private final Table<K, V> table = SecureHashMap.this.table;",
        "904": "        private TableIterator tableIterator;",
        "905": "        private TableIterator removeIterator;",
        "778": "",
        "779": "    final class RowIterator extends TableIterator {",
        "913": "                }",
        "914": "                if (tableIterator == null) {",
        "916": "                    if (table.array.get(rowIdx) != null) {",
        "917": "                        tableIterator = createRowIterator(table, rowIdx);",
        "919": "                }",
        "920": "                if (tableIterator != null) {",
        "921": "                    if (tableIterator.hasNext()) {",
        "906": "        private int tableIdx;"
      },
      "id": 75731512,
      "filename": "SecureHashMap.java"
    },
    {
      "repo": "https://github.com/toddkbarlow/hibernate-tools.git",
      "language": "Java",
      "linescount": 924,
      "location": "/src/java/org/hibernate/cfg/reveng",
      "name": "hibernate-tools",
      "url": "https://searchcode.com/codesearch/view/114430737/",
      "md5hash": "0292a49aaa0699b8ece533549e78dafc",
      "lines": {
        "512": "\t\t\t\t  if (tableIterator!=null) getMetaDataDialect().close(tableIterator);",
        "481": "\t\t     ",
        "482": "\t\t     while (tableIterator.hasNext() ) {",
        "483": "\t\t        tableRs = (Map) tableIterator.next();",
        "484": "\t\t        String tableName = (String) tableRs.get(\"TABLE_NAME\");",
        "518": "\t\t  List processedTables = new ArrayList();",
        "519": "\t\t  tableIterator = tables.iterator();",
        "520": "\t\t  while (tableIterator.hasNext() ) {",
        "521": "\t\t\t  tableRs = (Map) tableIterator.next();",
        "522": "\t\t\t  String tableName = (String) tableRs.get(\"TABLE_NAME\");",
        "468": "\t\tMap tableRs = null;",
        "469": "\t\tIterator tableIterator = null;",
        "475": "\t\t     ",
        "476": "\t\t     tableIterator = getMetaDataDialect().getTables(StringHelper.replace(schemaSelection.getMatchCatalog(),\".*\", \"%\"), ",
        "511": "\t\t\t  try {"
      },
      "id": 114430737,
      "filename": "JDBCReader.java"
    },
    {
      "repo": "https://github.com/jboss-remoting/jboss-remoting.git",
      "language": "Java",
      "linescount": 701,
      "location": "/src/main/java/org/jboss/remoting3/_private",
      "name": "jboss-remoting",
      "url": "https://searchcode.com/codesearch/view/112274255/",
      "md5hash": "919b90245149e4bbea1814eee828a946",
      "lines": {
        "642": "        private final Table<V> table = IntIndexHashMap.this.table;",
        "643": "        private Iterator<V> tableIterator;",
        "652": "                }",
        "653": "                if (tableIterator == null) {",
        "654": "                    tableIterator = createRowIterator(table, tableIdx++);",
        "655": "                }",
        "656": "                if (tableIterator.hasNext()) {",
        "657": "                    next = tableIterator.next();",
        "658": "                    return true;",
        "659": "                } else {",
        "660": "                    tableIterator = null;",
        "669": "            } finally {",
        "670": "                removeIterator = tableIterator;"
      },
      "id": 112274255,
      "filename": "IntIndexHashMap.java"
    },
    {
      "repo": "https://github.com/impetus-opensource/Kundera.git",
      "language": "Java",
      "linescount": 1588,
      "location": "/src/kundera-oracle-nosql/src/main/java/com/impetus/client/oraclenosql",
      "name": "Kundera",
      "url": "https://searchcode.com/codesearch/view/114296151/",
      "md5hash": "c3642e438708dda5537705bfa95bb474",
      "lines": {
        "513": "            // entityMetadata.getTableName(), showQuery);",
        "514": "            Iterator<Row> rowsIter = tableAPI.tableIterator(schemaTable.createPrimaryKey(), null, null);",
        "739": "            NoSqlDBUtils.add(schemaTable.getField(colName), indexKey, colValue, colName);",
        "740": "            rowsIter = tableAPI.tableIterator(indexKey, null, null);",
        "641": "                showQuery);",
        "232": "            Iterator<Row> rowsIter = tableAPI.tableIterator(rowKey, null, null);",
        "1481": "        Iterator<Row> rowsIter = tableAPI.tableIterator(indexKey, null, null);",
        "231": "        {",
        "642": "        Iterator<Row> rowsIter = tableAPI.tableIterator(indexKey, null, null);",
        "1480": "",
        "732": "            NoSqlDBUtils.add(schemaTable.getField(colName), rowKey, colValue, colName);",
        "733": "            rowsIter = tableAPI.tableIterator(rowKey, null, null);"
      },
      "id": 114296151,
      "filename": "OracleNoSQLClient.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/netbeans-soa.git",
      "language": "Java",
      "linescount": 280,
      "location": "/etl.editor/src/org/netbeans/modules/etl/codegen",
      "name": "netbeans-soa",
      "url": "https://searchcode.com/codesearch/view/43333698/",
      "md5hash": "59a4d54262898b3506d5b969964e4169",
      "lines": {
        "54": "        while (tableIterator.hasNext()) {",
        "247": "            DBConnectionDefinition newConDef = model.getConnectionDefinition(srcTable);",
        "242": "",
        "243": "    private static boolean isSameDBTables(Iterator tableIterator, ETLScriptBuilderModel model) throws BaseException {",
        "52": "",
        "53": "    public static boolean allDBTablesAreInternal(Iterator tableIterator) throws BaseException {",
        "246": "            DBTable srcTable = (DBTable) tableIterator.next();",
        "55": "            DBTable srcTable = (DBTable) tableIterator.next();",
        "56": "            // as soon as you find a non-axion db , return false.",
        "244": "        DBConnectionDefinition conDef = null;",
        "245": "        while (tableIterator.hasNext()) {"
      },
      "id": 43333698,
      "filename": "PatternFinder.java"
    },
    {
      "repo": "https://bitbucket.org/bkumar/displaytag-search",
      "language": "Java",
      "linescount": 1613,
      "location": "/displaytag-header-patch/src/main/java/org/displaytag/tags",
      "name": "displaytag-search",
      "url": "https://searchcode.com/codesearch/view/126775746/",
      "md5hash": "bd41e90cd5830d7ae3cbee6f0b5e84f1",
      "lines": {
        "800": "        if (this.tableIterator.hasNext()) {",
        "801": "",
        "258": "     */",
        "259": "    private Iterator tableIterator;",
        "1155": "            // other rows",
        "1157": "                Object iteratedObject = this.tableIterator.next();",
        "1158": "                this.rowNumber++;",
        "993": "            PaginationHelper paginationHelper = new PaginationHelper(pageNumber, pagesize);",
        "994": "            this.tableIterator = paginationHelper.getIterator(this.list);",
        "995": "        } else {",
        "821": "",
        "822": "            this.lastIteration = !this.tableIterator.hasNext();",
        "1156": "            while (this.tableIterator.hasNext()) {",
        "802": "            Object iteratedObject = this.tableIterator.next();",
        "799": ""
      },
      "id": 126775746,
      "filename": "TableTag.java"
    },
    {
      "repo": "https://github.com/user1984/basex.git",
      "language": "Java",
      "linescount": 323,
      "location": "/src/main/java/org/basex/gui/view/table",
      "name": "basex",
      "url": "https://searchcode.com/codesearch/view/113722362/",
      "md5hash": "bed6cd85ea1b10736345be14b6535409",
      "lines": {
        "209": "      final Context context = gui.context;",
        "210": "      final TableIterator it = new TableIterator(context.data, tdata);",
        "262": "      if(pre != -1) {",
        "263": "        final TableIterator it = new TableIterator(context.data, tdata);"
      },
      "id": 113722362,
      "filename": "TableView.java"
    },
    {
      "repo": "https://bitbucket.org/m_eide/nav-3.10.x",
      "language": "Java",
      "linescount": 1953,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data",
      "name": "nav-3.10.x",
      "url": "https://searchcode.com/codesearch/view/125767828/",
      "md5hash": "050f060b11f877f40fd7c35a7727d943",
      "lines": {
        "1571": "    /**",
        "1572": "     * Return a TableIterator over the rows of this table.",
        "1573": "     * @return a TableIterator over this table",
        "1574": "     */",
        "1575": "    public TableIterator iterator() {",
        "1579": "    /**",
        "1580": "     * Return a TableIterator over the given rows of this table.",
        "1581": "     * @param rows an iterator over the table rows to visit",
        "1582": "     * @return a TableIterator over this table",
        "1583": "     */",
        "1584": "    public TableIterator iterator(IntIterator rows) {",
        "1585": "        return new TableIterator(this, rows);",
        "1586": "    }",
        "25": "import prefuse.data.util.Sort;",
        "26": "import prefuse.data.util.TableIterator;"
      },
      "id": 125767828,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/m_eide/nav-status-3.10.x",
      "language": "Java",
      "linescount": 1953,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data",
      "name": "nav-status-3.10.x",
      "url": "https://searchcode.com/codesearch/view/126951445/",
      "md5hash": "050f060b11f877f40fd7c35a7727d943",
      "lines": {
        "1571": "    /**",
        "1572": "     * Return a TableIterator over the rows of this table.",
        "1573": "     * @return a TableIterator over this table",
        "1574": "     */",
        "1575": "    public TableIterator iterator() {",
        "1579": "    /**",
        "1580": "     * Return a TableIterator over the given rows of this table.",
        "1581": "     * @param rows an iterator over the table rows to visit",
        "1582": "     * @return a TableIterator over this table",
        "1583": "     */",
        "1584": "    public TableIterator iterator(IntIterator rows) {",
        "1585": "        return new TableIterator(this, rows);",
        "1586": "    }",
        "25": "import prefuse.data.util.Sort;",
        "26": "import prefuse.data.util.TableIterator;"
      },
      "id": 126951445,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/madhead_/restaurant.git",
      "language": "Java",
      "linescount": 90,
      "location": "/sources/restaurant-war/src/main/java/by/dev/ksergienya/restaurant/web/controllers",
      "name": "restaurant",
      "url": "https://searchcode.com/codesearch/view/46838980/",
      "md5hash": "036320f3ed8beafd810330a0b4cd1549",
      "lines": {
        "53": "",
        "54": "        Iterator<Table> tableIterator = tables.iterator();",
        "55": "        while (tableIterator.hasNext()) {",
        "56": "            Table table = tableIterator.next();",
        "57": "",
        "59": "                if (booking.getTable().getId().equals(table.getId())) {",
        "60": "                    tableIterator.remove();"
      },
      "id": 46838980,
      "filename": "BookingController.java"
    },
    {
      "repo": "https://bitbucket.org/kandal/nav-stable",
      "language": "Java",
      "linescount": 1953,
      "location": "/java/Netmap/lib/prefuse-beta/src/prefuse/data",
      "name": "nav-stable",
      "url": "https://searchcode.com/codesearch/view/59471526/",
      "md5hash": "050f060b11f877f40fd7c35a7727d943",
      "lines": {
        "1571": "    /**",
        "1572": "     * Return a TableIterator over the rows of this table.",
        "1573": "     * @return a TableIterator over this table",
        "1574": "     */",
        "1575": "    public TableIterator iterator() {",
        "1579": "    /**",
        "1580": "     * Return a TableIterator over the given rows of this table.",
        "1581": "     * @param rows an iterator over the table rows to visit",
        "1582": "     * @return a TableIterator over this table",
        "1583": "     */",
        "1584": "    public TableIterator iterator(IntIterator rows) {",
        "1585": "        return new TableIterator(this, rows);",
        "1586": "    }",
        "25": "import prefuse.data.util.Sort;",
        "26": "import prefuse.data.util.TableIterator;"
      },
      "id": 59471526,
      "filename": "Table.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 217,
      "location": "/test/java/org/apache/fop/fo/flow/table",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128943457/",
      "md5hash": "c3dddd65eca8de0187507e6a40d75611",
      "lines": {
        "161": "        int tableNum = 0;",
        "162": "        Iterator tableIterator = getTableIterator();",
        "165": "            int borderNum = 0;",
        "166": "            Table table = (Table) tableIterator.next();",
        "136": "        int tableNum = 0;",
        "137": "        Iterator tableIterator = getTableIterator();",
        "139": "            String baseErrorMsge = \"table \" + Integer.toString(tableNum) + \" (0-based), \";",
        "140": "            Table table = (Table) tableIterator.next();",
        "213": "            tableNum++;",
        "214": "        } while (tableIterator.hasNext());",
        "154": "            tableNum++;",
        "155": "        } while (tableIterator.hasNext());"
      },
      "id": 128943457,
      "filename": "CollapsedConditionalBorderTestCase.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 42,
      "source": "Github",
      "id": 2
    },
    {
      "count": 26,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    }
  ]
}