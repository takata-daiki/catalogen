{
  "matchterm": "XSSFReader.SheetIterator",
  "previouspage": null,
  "searchterm": "XSSFReader.SheetIterator",
  "query": "XSSFReader.SheetIterator",
  "language_filters": [
    {
      "count": 2,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 2,
  "results": [
    {
      "repo": "https://github.com/qmetric/qmg-utilities.git",
      "language": "Java",
      "linescount": 85,
      "location": "/poi/src/test/java/com/qmetric/utilities/poi/xssf",
      "name": "qmg-utilities",
      "url": "https://searchcode.com/codesearch/view/110658551/",
      "md5hash": "f8038c52cbb1ace5de7b05a9aa05e7bd",
      "lines": {
        "34": "",
        "35": "        final XSSFWorkBookProcessor xssfWorkBookProcessor = new XSSFWorkBookProcessor(xssfWorksheetParserFactory, fileUtils(location, inputStream), xssfReaderFactory);",
        "4": "import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
        "5": "import org.apache.poi.xssf.eventusermodel.XSSFReader;",
        "48": "",
        "49": "    private XSSFReaderFactory readerFactory(final InputStream inputStream, final String sheetName) throws IOException, InvalidFormatException",
        "50": "    {",
        "51": "        final XSSFReader.SheetIterator sheetIterator = mock(XSSFReader.SheetIterator.class);",
        "52": "        stub(sheetIterator.hasNext()).toReturn(true).toReturn(false);",
        "53": "        when(sheetIterator.next()).thenReturn(inputStream);",
        "58": "        final XSSFReader xssfReader = mock(XSSFReader.class);",
        "59": "        when(xssfReader.getSheetsData()).thenReturn(sheetIterator);",
        "60": "        when(xssfReader.getSharedStringsTable()).thenReturn(sharedStringsTable);",
        "29": "        final RowProcessor rowProcessor = mock(RowProcessor.class);",
        "30": "        final XSSFReaderFactory xssfReaderFactory = readerFactory(inputStream, sheetName);"
      },
      "id": 110658551,
      "filename": "XSSFWorkBookProcessorTest.java"
    },
    {
      "repo": "https://github.com/qmetric/qmg-utilities.git",
      "language": "Java",
      "linescount": 66,
      "location": "/poi/src/main/java/com/qmetric/utilities/poi/xssf",
      "name": "qmg-utilities",
      "url": "https://searchcode.com/codesearch/view/110658569/",
      "md5hash": "2a765e0855ac52a63fa667a22d438072",
      "lines": {
        "32": "    {",
        "33": "        final XSSFReader xssfReader = xssfReaderFactory.create(stream);",
        "4": "import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
        "5": "import org.apache.poi.xssf.eventusermodel.XSSFReader;",
        "38": "            processSheets(sheetsData, sheetProcessor, xssfReader.getSharedStringsTable());",
        "39": "        }",
        "50": "    private void processSheets(final XSSFReader.SheetIterator sheetsData, final SheetProcessor sheetProcessor, final SharedStringsTable sharedStringsTable)",
        "16": "",
        "17": "    private final XSSFReaderFactory xssfReaderFactory;",
        "18": "",
        "19": "    public XSSFWorkBookProcessor(final XSSFWorksheetParserFactory xssfWorksheetParserFactory, final FileUtils fileUtils, final XSSFReaderFactory xssfReaderFactory)",
        "22": "        this.fileUtils = fileUtils;",
        "23": "        this.xssfReaderFactory = xssfReaderFactory;",
        "36": "        {",
        "49": "",
        "37": "            XSSFReader.SheetIterator sheetsData = (XSSFReader.SheetIterator) xssfReader.getSheetsData();"
      },
      "id": 110658569,
      "filename": "XSSFWorkBookProcessor.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2,
      "source": "Github",
      "id": 2
    }
  ]
}