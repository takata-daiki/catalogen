{
  "matchterm": "ValueEval",
  "previouspage": null,
  "searchterm": "ValueEval",
  "query": "ValueEval",
  "language_filters": [
    {
      "count": 19,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 19,
  "results": [
    {
      "repo": "https://bitbucket.org/neilconway/hive-mqo",
      "language": "Java",
      "linescount": 233,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec",
      "name": "hive-mqo",
      "url": "https://searchcode.com/codesearch/view/53136711/",
      "md5hash": "fb53f405814a955a5b0b9ee070e77e20",
      "lines": {
        "193": "      if (cachedValues == null) {",
        "194": "        cachedValues = new Object[valueEval.length];",
        "195": "      }",
        "196": "      for (int i=0; i<valueEval.length; i++) {",
        "197": "        ExprNodeEvaluator e = valueEval[i];",
        "198": "        e.evaluate(row, rowInspector, tempInspectableObject);",
        "83": "",
        "84": "      valueEval = new ExprNodeEvaluator[conf.getValueCols().size()];",
        "86": "      for(exprNodeDesc e: conf.getValueCols()) {",
        "87": "        valueEval[i++] = ExprNodeEvaluatorFactory.get(e);",
        "59": "   */",
        "60": "  transient protected ExprNodeEvaluator[] valueEval;"
      },
      "id": 53136711,
      "filename": "ReduceSinkOperator.java"
    },
    {
      "repo": "https://github.com/mkgobaco/hive.git",
      "language": "Java",
      "linescount": 495,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec/vector",
      "name": "hive",
      "url": "https://searchcode.com/codesearch/view/98812309/",
      "md5hash": "83406fcb9c3cd65a1d0db00a520de6d0",
      "lines": {
        "480": "    return valueEval;",
        "482": "",
        "227": "          vrg.size,",
        "228": "          valueEval.length,",
        "69": "   */",
        "70": "  private VectorExpression[] valueEval;",
        "201": "      cachedKeys = new Object[numKeys][keyLen];",
        "202": "      cachedValues = new Object[valueEval.length];",
        "483": "  public void setValueEval(VectorExpression[] valueEval) {",
        "478": "",
        "484": "    this.valueEval = valueEval;",
        "479": "  public VectorExpression[] getValueEval() {",
        "412": "      throws HiveException, SerDeException {",
        "413": "    for (int i = 0; i < valueEval.length; i++) {",
        "414": "      int batchColumn = valueEval[i].getOutputColumn();",
        "415": "      ColumnVector vectorColumn = vrg.cols[batchColumn];"
      },
      "id": 98812309,
      "filename": "VectorReduceSinkOperator.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 66,
      "location": "/src/main/java/org/comsoft/juniprint/userfunction",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212073/",
      "md5hash": "5742c87b59893ee69331ec91c5176455",
      "lines": {
        "33": "\t",
        "34": "\tpublic ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {",
        "38": "\t\ttry {",
        "39": "\t\t\tValueEval res = null;",
        "61": "\t\treturn OperandResolver.coerceValueToString(ve);",
        "53": "\t}",
        "54": "\tprivate static double evaluateDoubleArg(ValueEval arg, int srcCellRow, int srcCellCol) throws EvaluationException {",
        "55": "\t\tValueEval ve = OperandResolver.getSingleValue(arg, srcCellRow, (short) srcCellCol);",
        "56": "\t\treturn OperandResolver.coerceValueToDouble(ve);",
        "25": "import org.apache.poi.hssf.record.formula.eval.StringEval;",
        "26": "import org.apache.poi.hssf.record.formula.eval.ValueEval;",
        "59": "\tprivate static String evaluateStringArg(ValueEval arg, int srcCellRow, int srcCellCol) throws EvaluationException {",
        "60": "\t\tValueEval ve = OperandResolver.getSingleValue(arg, srcCellRow, (short) srcCellCol);",
        "58": "\t"
      },
      "id": 60212073,
      "filename": "Sum_Prop.java"
    },
    {
      "repo": "https://github.com/mkgobaco/hive.git",
      "language": "Java",
      "linescount": 327,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec",
      "name": "hive",
      "url": "https://searchcode.com/codesearch/view/98811916/",
      "md5hash": "3ca17b12cf21472ace064b0e967439f8",
      "lines": {
        "147": "      for (int i = 0; i < valueEval.length; i++) {",
        "146": "      // Evaluate the value",
        "111": "",
        "112": "      valueEval = new ExprNodeEvaluator[valueCols.size()];",
        "114": "      for (ExprNodeDesc e: valueCols) {",
        "115": "        valueEval[i++] = ExprNodeEvaluatorFactory.get(e);",
        "116": "      }",
        "117": "      outputValue = new Object[valueEval.length];",
        "148": "        outputValue[i] = valueEval[i].evaluate(row);",
        "122": "          outputKeyColumnNames, inputObjInspector);",
        "123": "      ObjectInspector valueObjectInspector = initEvaluatorsAndReturnStruct(valueEval,",
        "92": "     */",
        "93": "    private final ExprNodeEvaluator[] valueEval;",
        "149": "      }"
      },
      "id": 98811916,
      "filename": "MuxOperator.java"
    },
    {
      "repo": "https://github.com/mkgobaco/hive.git",
      "language": "Java",
      "linescount": 492,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec",
      "name": "hive",
      "url": "https://searchcode.com/codesearch/view/98812205/",
      "md5hash": "ff23b1808f4dee38fd3aa6c040c661c1",
      "lines": {
        "133": "",
        "134": "      valueEval = new ExprNodeEvaluator[conf.getValueCols().size()];",
        "136": "      for (ExprNodeDesc e : conf.getValueCols()) {",
        "137": "        valueEval[i++] = ExprNodeEvaluatorFactory.get(e);",
        "75": "   */",
        "76": "  protected transient ExprNodeEvaluator[] valueEval;",
        "276": "            conf.getOutputKeyColumnNames(), numDistributionKeys, rowInspector);",
        "277": "        valueObjectInspector = initEvaluatorsAndReturnStruct(valueEval,",
        "441": "    // Evaluate the value",
        "442": "    for (int i = 0; i < valueEval.length; i++) {",
        "443": "      cachedValues[i] = valueEval[i].evaluate(row);",
        "444": "    }",
        "285": "        cachedKeys = new Object[numKeys][keyLen];",
        "286": "        cachedValues = new Object[valueEval.length];"
      },
      "id": 98812205,
      "filename": "ReduceSinkOperator.java"
    },
    {
      "repo": "git://github.com/apache/hive.git",
      "language": "Java",
      "linescount": 344,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec",
      "name": "hive",
      "url": "https://searchcode.com/codesearch/view/57825408/",
      "md5hash": "4ae2a8e3a58c9c6a5dccf57b09798eee",
      "lines": {
        "147": "      // Evaluate the value",
        "150": "      }",
        "112": "",
        "113": "      valueEval = new ExprNodeEvaluator[valueCols.size()];",
        "115": "      for (ExprNodeDesc e: valueCols) {",
        "116": "        valueEval[i++] = ExprNodeEvaluatorFactory.get(e);",
        "117": "      }",
        "118": "      outputValue = new Object[valueEval.length];",
        "148": "      for (int i = 0; i < valueEval.length; i++) {",
        "123": "          outputKeyColumnNames, inputObjInspector);",
        "124": "      ObjectInspector valueObjectInspector = initEvaluatorsAndReturnStruct(valueEval,",
        "93": "     */",
        "94": "    private final ExprNodeEvaluator[] valueEval;",
        "149": "        outputValue[i] = valueEval[i].evaluate(row);"
      },
      "id": 57825408,
      "filename": "MuxOperator.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 64,
      "location": "/src/main/java/org/comsoft/juniprint/userfunction",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212074/",
      "md5hash": "ff75604b3c2b39c7e444cf43781d773c",
      "lines": {
        "58": "\t\treturn OperandResolver.coerceValueToDouble(ve);",
        "35": "\t",
        "36": "\tpublic ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {",
        "57": "\t\tValueEval ve = OperandResolver.getSingleValue(arg, srcCellRow, (short) srcCellCol);",
        "55": "\t}",
        "56": "\tprivate static double evaluateDoubleArg(ValueEval arg, int srcCellRow, int srcCellCol) throws EvaluationException {",
        "41": "\t\t\tDouble paramValue = 0d; // default",
        "26": "import org.apache.poi.hssf.record.formula.eval.StringEval;",
        "27": "import org.apache.poi.hssf.record.formula.eval.ValueEval;",
        "42": "\t\t\tValueEval res = null;"
      },
      "id": 60212074,
      "filename": "Nmb_Prop.java"
    },
    {
      "repo": "https://bitbucket.org/openicar/juniprint",
      "language": "Java",
      "linescount": 79,
      "location": "/src/main/java/org/comsoft/juniprint/userfunction",
      "name": "juniprint",
      "url": "https://searchcode.com/codesearch/view/60212076/",
      "md5hash": "e44f8aeeefd407ea1a793bea5064c3c2",
      "lines": {
        "34": "",
        "35": "\tpublic ValueEval evaluate(ValueEval[] args, OperationEvaluationContext arg1) {",
        "68": "\tprivate static String evaluateStringArg(ValueEval arg, int srcCellRow, int srcCellCol) throws EvaluationException {",
        "69": "\t\tValueEval ve = OperandResolver.getSingleValue(arg, srcCellRow, (short) srcCellCol);",
        "70": "\t\treturn OperandResolver.coerceValueToString(ve);",
        "39": "\t\t\tString paramValue = \"\"; // default",
        "40": "\t\t\tValueEval res = null;",
        "25": "import org.apache.poi.hssf.record.formula.eval.StringEval;",
        "26": "import org.apache.poi.hssf.record.formula.eval.ValueEval;",
        "67": "\t"
      },
      "id": 60212076,
      "filename": "FML.java"
    },
    {
      "repo": "https://github.com/isdom/POI-Android.git",
      "language": "Java",
      "linescount": 33,
      "location": "/ppt/poi/org/apache/poi/ss/formula/functions",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/88638100/",
      "md5hash": "a992910ae80009b5772dc0b7c57eba94",
      "lines": {
        "19": "",
        "20": "import org.apache.poi.ss.formula.eval.ValueEval;",
        "28": "\t/**",
        "29": "\t * see {@link Function#evaluate(ValueEval[], int, int)}",
        "30": "\t */",
        "31": "\tValueEval evaluate(int srcRowIndex, int srcColumnIndex);"
      },
      "id": 88638100,
      "filename": "Function0Arg.java"
    },
    {
      "repo": "git://github.com/apache/hive.git",
      "language": "Java",
      "linescount": 640,
      "location": "/ql/src/java/org/apache/hadoop/hive/ql/exec",
      "name": "hive",
      "url": "https://searchcode.com/codesearch/view/2484263/",
      "md5hash": "c474af98b68505cc1d6d096f2d94fe00",
      "lines": {
        "96": "   */",
        "97": "  protected transient ExprNodeEvaluator[] valueEval;",
        "195": "      for (ExprNodeDesc e : conf.getValueCols()) {",
        "196": "        valueEval[i++] = ExprNodeEvaluatorFactory.get(e);",
        "193": "      valueEval = new ExprNodeEvaluator[conf.getValueCols().size()];",
        "556": "  private BytesWritable makeValueWritable(Object row) throws Exception {",
        "192": "",
        "557": "    int length = valueEval.length;",
        "336": "            conf.getOutputKeyColumnNames(), numDistributionKeys, rowInspector);",
        "337": "        valueObjectInspector = initEvaluatorsAndReturnStruct(valueEval,",
        "561": "      cachedValues[i] = valueEval[i].evaluate(row);",
        "560": "    for (int i = 0; i < length; i++) {",
        "345": "        cachedKeys = new Object[numKeys][keyLen];",
        "346": "        cachedValues = new Object[valueEval.length];"
      },
      "id": 2484263,
      "filename": "ReduceSinkOperator.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 68,
      "location": "/zssapp/src/org/zkoss/zss/app/test",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/9943449/",
      "md5hash": "f0068fc0099a4986417b233deadb0063",
      "lines": {
        "33": "\t",
        "34": "\tpublic static final ValueEval bar(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {",
        "19": "import org.zkoss.poi.ss.formula.eval.EvaluationException;",
        "20": "import org.zkoss.poi.ss.formula.eval.ValueEval;",
        "40": "//\t\t@Override",
        "41": "//\t\tpublic double eval(ValueEval[] args, int srcRowIndex, int srcColumnIndex) throws EvaluationException {",
        "29": "\t",
        "30": "//\tpublic static final ValueEval foo(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {"
      },
      "id": 9943449,
      "filename": "CustomizeFormula.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 5111,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970697/",
      "md5hash": "f6740268ba4be4778508748ca1c3becc",
      "lines": {
        "4835": "\t\t\tXelContextHolder.setXelContext(ctx);",
        "4836": "\t\t\treturn book.getFormulaEvaluator().evaluateFormulaValueEval(sheetIndex, formula, ignoreDereference);",
        "4965": "\t\t\t\t\t\tfor (int c = 0; c < cols; ++c) {",
        "70": "import org.zkoss.poi.ss.formula.eval.ArrayEval;",
        "4903": "\t\tBook book = sheet.getBook();",
        "4904": "\t\tfinal ValueEval ve = BookHelper.evaluateFormulaValueEval(book, book.getSheetIndex(sheet), txt, true);",
        "71": "import org.zkoss.poi.ss.formula.eval.ValueEval;",
        "4974": "\t\t\t} else {",
        "4975": "\t\t\t\tfinal CellValue candidate = book.getFormulaEvaluator().getCellValueByValueEval(ve);",
        "4968": "\t\t\t\t\t\t\tif (equalCellValue(target, candidate)) {",
        "4967": "\t\t\t\t\t\t\tfinal CellValue candidate = book.getFormulaEvaluator().getCellValueByValueEval(xve);",
        "4966": "\t\t\t\t\t\t\tValueEval xve = ae.getValue(r, c);",
        "4827": "",
        "4828": "\tprivate static ValueEval evaluateFormulaValueEval(Book book, int sheetIndex, String formula, boolean ignoreDereference) {",
        "4957": "\t\t\tBook book = sheet.getBook();",
        "4958": "\t\t\tfinal ValueEval ve = BookHelper.evaluateFormulaValueEval(book, book.getSheetIndex(sheet), txt, false);"
      },
      "id": 3970697,
      "filename": "BookHelper.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 163,
      "location": "/zss/src/org/zkoss/poi/ss/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970569/",
      "md5hash": "6c4cf9a355470c2f624993f5b0758c74",
      "lines": {
        "51": "\t@Override",
        "52": "\tpublic ValueEval postProcessValueEval(OperationEvaluationContext ec, ValueEval opResult, boolean eval) {",
        "21": "import org.zkoss.poi.ss.formula.eval.StringEval;",
        "22": "import org.zkoss.poi.ss.formula.eval.ValueEval;",
        "136": "\t\t\t\tfinal WorkbookEvaluator evaluator = ec.getWorkbookEvaluator();",
        "137": "\t\t\t\tfinal ValueEval opResult = evaluator.getEvalForPtg(ptg, ec);"
      },
      "id": 3970569,
      "filename": "DefaultDependencyTracker.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 6,
      "source": "Github",
      "id": 2
    },
    {
      "count": 6,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 4,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    }
  ]
}