{
  "matchterm": "Even",
  "previouspage": null,
  "searchterm": "Even",
  "query": "Even",
  "language_filters": [
    {
      "count": 993793,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 993793,
  "results": [
    {
      "repo": "https://github.com/iloveoottat/Euler-Project.git",
      "language": "Java",
      "linescount": 30,
      "location": "",
      "name": "Euler-Project",
      "url": "https://searchcode.com/codesearch/view/95309075/",
      "md5hash": "ffbdee31fa4fae9a0bcca5a8789b44a0",
      "lines": {
        "8": " *  million, find the sum of the even-valued terms.",
        "1": "/* Even Fibonacci numbers */",
        "2": "/*",
        "7": " *  Fibonacci sequence whose values do not exceed four "
      },
      "id": 95309075,
      "filename": "EulerProject002.java"
    },
    {
      "repo": "https://github.com/hariDasu/CS113.git",
      "language": "Java",
      "linescount": 22,
      "location": "",
      "name": "CS113",
      "url": "https://searchcode.com/codesearch/view/71968465/",
      "md5hash": "311b809a4fa612d7c63961c53b168dd5",
      "lines": {
        "2": "",
        "3": "public class Even",
        "14": "\t\t",
        "15": "\t\t\tSystem.out.println(\"Integer is an even number\");"
      },
      "id": 71968465,
      "filename": "Even.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 19,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398891/",
      "md5hash": "c35a69d3b3384ece1c182440ac2bbd64",
      "lines": {
        "5": "",
        "6": "public class EVEN extends DoubleInOutFunction"
      },
      "id": 105398891,
      "filename": "EVEN.java"
    },
    {
      "repo": "http://google-refine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 70,
      "location": "/main/src/com/google/refine/expr/functions/math",
      "name": "google-refine",
      "url": "https://searchcode.com/codesearch/view/2366120/",
      "md5hash": "c669e7eb1f585fd9f9468b2136660cb9",
      "lines": {
        "64": "        writer.object();",
        "65": "        writer.key(\"description\"); writer.value(\"Rounds the number up to the nearest even integer\");",
        "22": "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "55": "    public static double roundUpToEven(double d){",
        "44": "",
        "45": "public class Even implements Function {",
        "49": "        if (args.length == 1 && args[0] != null && args[0] instanceof Number) {",
        "50": "            return Even.roundUpToEven(((Number) args[0]).doubleValue());",
        "54": "",
        "23": "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "29": "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "30": "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      "id": 2366120,
      "filename": "Even.java"
    },
    {
      "repo": "https://bitbucket.org/wikier/google-refine",
      "language": "Java",
      "linescount": 70,
      "location": "/main/src/com/google/refine/expr/functions/math",
      "name": "google-refine",
      "url": "https://searchcode.com/codesearch/view/130339002/",
      "md5hash": "c669e7eb1f585fd9f9468b2136660cb9",
      "lines": {
        "64": "        writer.object();",
        "65": "        writer.key(\"description\"); writer.value(\"Rounds the number up to the nearest even integer\");",
        "22": "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "55": "    public static double roundUpToEven(double d){",
        "44": "",
        "45": "public class Even implements Function {",
        "49": "        if (args.length == 1 && args[0] != null && args[0] instanceof Number) {",
        "50": "            return Even.roundUpToEven(((Number) args[0]).doubleValue());",
        "54": "",
        "23": "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "29": "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "30": "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      "id": 130339002,
      "filename": "Even.java"
    },
    {
      "repo": "https://github.com/Domination-jb/android_packages_apps_Phone.git",
      "language": "Java",
      "linescount": 4661,
      "location": "/src/com/android/phone",
      "name": "android_packages_apps_Phone",
      "url": "https://searchcode.com/codesearch/view/74753165/",
      "md5hash": "8164c38cc8aeb211049bc5773d8909b0",
      "lines": {
        "162": "    private static final int REQUEST_CLOSE_OTA_FAILURE_NOTICE = 119;",
        "163": "    private static final int EVENT_PAUSE_DIALOG_COMPLETE = 120;",
        "164": "    private static final int EVENT_HIDE_PROVIDER_INFO = 121;  // Time to remove the info.",
        "165": "    private static final int REQUEST_UPDATE_SCREEN = 122;",
        "396": "",
        "299": "",
        "300": "                case EVENT_HEADSET_PLUG_STATE_CHANGED:",
        "397": "                case EVENT_PAUSE_DIALOG_COMPLETE:",
        "48": "import android.text.method.DialerKeyListener;",
        "49": "import android.util.EventLog;",
        "50": "import android.util.Log;",
        "150": "    private static final int PHONE_DISCONNECT = 102;",
        "151": "    private static final int EVENT_HEADSET_PLUG_STATE_CHANGED = 103;",
        "280": "                // Continue anyway; some of the messages below *want* to",
        "281": "                // be handled even if we're not the foreground activity"
      },
      "id": 74753165,
      "filename": "InCallScreen.java"
    },
    {
      "repo": "https://github.com/thefutureosp/android_packages_apps_Phone.git",
      "language": "Java",
      "linescount": 4801,
      "location": "/src/com/android/phone",
      "name": "android_packages_apps_Phone",
      "url": "https://searchcode.com/codesearch/view/76058731/",
      "md5hash": "ed1e6faf15f393a60a1953de6ed7ac30",
      "lines": {
        "395": "                    // single onscreen UI element.  (But even a full updateScreen()",
        "388": "",
        "165": "    private static final int REQUEST_CLOSE_OTA_FAILURE_NOTICE = 119;",
        "166": "    private static final int EVENT_PAUSE_DIALOG_COMPLETE = 120;",
        "39": "import android.hardware.Sensor;",
        "40": "import android.hardware.SensorEvent;",
        "41": "import android.hardware.SensorEventListener;",
        "42": "import android.hardware.SensorManager;",
        "167": "    private static final int EVENT_HIDE_PROVIDER_INFO = 121;  // Time to remove the info.",
        "56": "import android.util.Log;",
        "57": "import android.view.KeyEvent;",
        "154": "    private static final int PHONE_DISCONNECT = 102;",
        "155": "    private static final int EVENT_HEADSET_PLUG_STATE_CHANGED = 103;",
        "394": "                    // the value of PhoneApp.isHeadsetPlugged() only affects a",
        "389": "                case EVENT_HEADSET_PLUG_STATE_CHANGED:"
      },
      "id": 76058731,
      "filename": "InCallScreen.java"
    },
    {
      "repo": "https://github.com/MiniCMX/android_packages_apps_Phone.git",
      "language": "Java",
      "linescount": 5416,
      "location": "/src/com/android/phone",
      "name": "android_packages_apps_Phone",
      "url": "https://searchcode.com/codesearch/view/74457308/",
      "md5hash": "c0486edceae900a2f12daf273e4211e2",
      "lines": {
        "169": "    private static final int THREEWAY_CALLERINFO_DISPLAY_DONE = 116;",
        "170": "    private static final int EVENT_OTA_PROVISION_CHANGE = 117;",
        "172": "    private static final int REQUEST_CLOSE_OTA_FAILURE_NOTICE = 119;",
        "173": "    private static final int EVENT_PAUSE_DIALOG_COMPLETE = 120;",
        "174": "    private static final int EVENT_HIDE_PROVIDER_OVERLAY = 121;  // Time to remove the overlay.",
        "175": "    private static final int REQUEST_UPDATE_TOUCH_UI = 122;",
        "48": "import android.text.method.DialerKeyListener;",
        "49": "import android.util.EventLog;",
        "50": "import android.util.Log;",
        "51": "import android.view.KeyEvent;",
        "52": "import android.view.Menu;",
        "53": "import android.view.MotionEvent;",
        "439": "                    if (VDBG) log(\"ALLOW_SCREEN_ON message...\");",
        "440": "                    // Undo our previous call to preventScreenOn(true).",
        "156": "    private static final int PHONE_DISCONNECT = 102;",
        "157": "    private static final int EVENT_HEADSET_PLUG_STATE_CHANGED = 103;"
      },
      "id": 74457308,
      "filename": "InCallScreen.java"
    },
    {
      "repo": "https://github.com/PAmoto/android_libcore.git",
      "language": "Java",
      "linescount": 2015,
      "location": "/luni/src/main/java/java/util/concurrent",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/71756533/",
      "md5hash": "6047847e8d3695b9f6889abbf202cc72",
      "lines": {
        "681": "     * If this passes, additionally makes sure the caller is allowed",
        "682": "     * to interrupt each worker thread. This might not be true even if",
        "1067": "     * will be in effect even if task.run throws.",
        "157": " * <li><em>Bounded queues.</em> A bounded queue (for example, an",
        "1066": "     * die. According to JLS Sec 14.20, this exception is the one that",
        "1044": "     *",
        "158": " * {@link ArrayBlockingQueue}) helps prevent resource exhaustion when",
        "414": "     * queues such as DelayQueues for which poll() is allowed to",
        "55": " * than corePoolSize threads are running, a new thread is created to",
        "56": " * handle the request, even if other worker threads are idle.  If",
        "735": "     * interrupt only one idle worker, but shutdown() interrupts all",
        "1045": "     * 2. Before running any task, the lock is acquired to prevent",
        "733": "     * workers since shutdown began will also eventually exit.",
        "734": "     * To guarantee eventual termination, it suffices to always",
        "415": "     * return null even if it may later return non-null when delays"
      },
      "id": 71756533,
      "filename": "ThreadPoolExecutor.java"
    },
    {
      "repo": "https://github.com/elbeardmorez/BDSup2Sub.git",
      "language": "Java",
      "linescount": 415,
      "location": "/src/main/java/bdsup2sub/supstream/dvd",
      "name": "BDSup2Sub",
      "url": "https://searchcode.com/codesearch/view/72397252/",
      "md5hash": "fca042bbb4af920a2b35b8022586b35d",
      "lines": {
        "160": "        /* offset to end sequence - 22 is the offset of the end sequence */",
        "161": "        tmp = even.length + odd.length + 22 + (pic.isForced() ? 1 : 0) + 4;",
        "291": "            for (int i = ofsRLE; i < ofsRLE + rleSizeLeft; i++) {",
        "292": "                if (i < even.length) {",
        "293": "                    buf[ofs++] = even[i];",
        "294": "                } else {",
        "167": "        // subpicture size",
        "168": "        tmp = even.length + odd.length + 4 + controlHeaderLen;",
        "295": "                    buf[ofs++] = odd[i - even.length];",
        "172": "        /* offset to control buffer - 2 is the size of the offset */",
        "173": "        tmp = even.length + odd.length + 2;",
        "145": "",
        "146": "        /* offset to even lines in rle buffer */",
        "150": "        /* offset to odd lines in rle buffer */",
        "151": "        tmp = even.length + CONTROL_HEADER[1 + 18];"
      },
      "id": 72397252,
      "filename": "SubDvdWriter.java"
    },
    {
      "repo": "https://github.com/videmantay/gwtquery.git",
      "language": "Java",
      "linescount": 2424,
      "location": "/gwtquery-core/src/test/java/com/google/gwt/query/client",
      "name": "gwtquery",
      "url": "https://searchcode.com/codesearch/view/72505398/",
      "md5hash": "1c5e3a40dc05492d1f26465b045ee184",
      "lines": {
        "129": "    NodeList<Element> nThChild2nPlus1();",
        "130": "    @Selector(\"p:nth-child(even)\")",
        "131": "    NodeList<Element> nThChildEven();",
        "132": "    @Selector(\"p:nth-child(odd)\")",
        "417": "",
        "265": "    assertArrayContains(sel.nThChild2nPlus1().getLength(), 165);",
        "266": "    assertArrayContains(sel.nThChildEven().getLength(), 159);",
        "418": "\t  GQuery even = $(\"#parent > div:even\", e);",
        "527": "    assertArrayContains(selEng.select(\"p:nth-child(2n+1)\", e).getLength(), 165);",
        "528": "    assertArrayContains(selEng.select(\"p:nth-child(even)\", e).getLength(), 159);",
        "419": "\t  assertEquals(2, even.size());",
        "406": "",
        "407": "  public void testOddEvenNthChild(){",
        "409": "\t  $(e).append(",
        "410": "\t            \"<div id='parent'><div id='first' class='evenClass'>branchA target</div><div id='second' class='oddClass'>branchA target</div><div id='third'  class='evenClass'>branchA target</div><div id='fourth' class='oddClass'>branchA target</div></div>\");"
      },
      "id": 72505398,
      "filename": "GQuerySelectorsTestGwt.java"
    },
    {
      "repo": "https://github.com/eemi2010/ext4j.git",
      "language": "Java",
      "linescount": 292,
      "location": "/gwt4ext/src/com/ait/ext4j/client/chart/axis",
      "name": "ext4j",
      "url": "https://searchcode.com/codesearch/view/72954841/",
      "md5hash": "a3bab48a2ccb712c965072f2ceee42b4",
      "lines": {
        "128": "     * with { odd, even } properties where each property contains a sprite style",
        "162": "",
        "163": "        SpriteConfig even = new SpriteConfig();",
        "74": "     * You can set specific options for the grid configuration for odd and/or",
        "75": "     * even lines/rows. Since the rows being drawn are rectangle sprites, you",
        "76": "     * can set to an odd or even property all styles that apply to",
        "145": "     * You can set specific options for the grid configuration for odd and/or",
        "146": "     * even lines/rows. Since the rows being drawn are rectangle sprites, you",
        "147": "     * can set to an odd or even property all styles that apply to",
        "148": "     * Ext.draw.Sprite. For more information on all the style properties you can",
        "152": "     * The possible values for a grid option are then true, false, or an object",
        "153": "     * with { odd, even } properties where each property contains a sprite style",
        "159": "    public void setGrid(String oddStroke, String evenStroke) {",
        "156": "     * @param oddStroke",
        "157": "     * @param evenStroke",
        "158": "     */",
        "127": "     * The possible values for a grid option are then true, false, or an object"
      },
      "id": 72954841,
      "filename": "AbstractAxis.java"
    },
    {
      "repo": "https://github.com/mrmichalis/elasticsearch.git",
      "language": "Java",
      "linescount": 2889,
      "location": "/src/main/java/jsr166y",
      "name": "elasticsearch",
      "url": "https://searchcode.com/codesearch/view/73685049/",
      "md5hash": "b0ffc8853847969a448d2704b813ca30",
      "lines": {
        "256": "     * code is set up to work with other policies.  To ensure that we",
        "257": "     * do not hold on to worker references that would prevent GC, ALL",
        "35": " * execute tasks submitted to the pool and/or created by other active",
        "36": " * tasks (eventually blocking waiting for work if none exist). This",
        "40": " * when setting <em>asyncMode</em> to true in constructors, {@code",
        "41": " * ForkJoinPool}s may also be appropriate for use with event-style",
        "267": "     * case it is OK to give up.  All uses of the workQueues array",
        "268": "     * also check that it is non-null (even if previously",
        "47": " * available) threads by dynamically adding, suspending, or resuming",
        "48": " * internal worker threads, even if some tasks are stalled waiting to",
        "274": "     *",
        "275": "     * Event Queuing. Unlike HPC work-stealing frameworks, we cannot",
        "283": "     * allocation). So we try to streamline this as much as possible.",
        "284": "     * We park/unpark workers after placing in an event wait queue",
        "158": "     * we null out taken slots as soon as we can, to maintain as small",
        "159": "     * a footprint as possible even in programs generating huge"
      },
      "id": 73685049,
      "filename": "ForkJoinPool.java"
    },
    {
      "repo": "https://github.com/eob/Play20.git",
      "language": "Java",
      "linescount": 2871,
      "location": "/framework/src/play/src/main/scala/java/forkjoin",
      "name": "Play20",
      "url": "https://searchcode.com/codesearch/view/74837832/",
      "md5hash": "ebce0f200b8e9e8c78c9e098e7a87538",
      "lines": {
        "256": "     * code is set up to work with other policies.  To ensure that we",
        "257": "     * do not hold on to worker references that would prevent GC, ALL",
        "35": " * execute tasks submitted to the pool and/or created by other active",
        "36": " * tasks (eventually blocking waiting for work if none exist). This",
        "40": " * when setting <em>asyncMode</em> to true in constructors, {@code",
        "41": " * ForkJoinPool}s may also be appropriate for use with event-style",
        "267": "     * case it is OK to give up.  All uses of the workQueues array",
        "268": "     * also check that it is non-null (even if previously",
        "47": " * available) threads by dynamically adding, suspending, or resuming",
        "48": " * internal worker threads, even if some tasks are stalled waiting to",
        "274": "     *",
        "275": "     * Event Queuing. Unlike HPC work-stealing frameworks, we cannot",
        "283": "     * allocation). So we try to streamline this as much as possible.",
        "284": "     * We park/unpark workers after placing in an event wait queue",
        "158": "     * we null out taken slots as soon as we can, to maintain as small",
        "159": "     * a footprint as possible even in programs generating huge"
      },
      "id": 74837832,
      "filename": "ForkJoinPool.java"
    },
    {
      "repo": "https://github.com/mehiel/elasticsearch.git",
      "language": "Java",
      "linescount": 3343,
      "location": "/src/main/java/jsr166e",
      "name": "elasticsearch",
      "url": "https://searchcode.com/codesearch/view/74913795/",
      "md5hash": "a167a86468ab788c5a837fcf3f3816d8",
      "lines": {
        "171": "     * footprint as possible even in programs generating huge numbers",
        "292": "     * Event Queuing. Unlike HPC work-stealing frameworks, we cannot",
        "39": " * when setting <em>asyncMode</em> to true in constructors, {@code",
        "264": "     * tolerate null slots. Worker queues are at odd indices. Shared",
        "265": "     * (submission) queues are at even indices, up to a maximum of 64",
        "170": "     * null out taken slots as soon as we can, to maintain as small a",
        "267": "     * more workers. Grouping them together in this way simplifies and",
        "273": "     * code is set up to work with other policies.  To ensure that we",
        "301": "     * We park/unpark workers after placing in an event wait queue",
        "285": "     * also check that it is non-null (even if previously",
        "40": " * ForkJoinPool}s may also be appropriate for use with event-style",
        "274": "     * do not hold on to worker references that would prevent GC, ALL",
        "291": "     *",
        "300": "     * allocation). So we try to streamline this as much as possible.",
        "284": "     * case it is OK to give up.  All uses of the workQueues array",
        "266": "     * slots, to limit growth even if array needs to expand to add"
      },
      "id": 74913795,
      "filename": "ForkJoinPool.java"
    },
    {
      "repo": "https://github.com/thefutureosp/android_packages_apps_Phone.git",
      "language": "Java",
      "linescount": 1388,
      "location": "/src/com/android/phone",
      "name": "android_packages_apps_Phone",
      "url": "https://searchcode.com/codesearch/view/76058917/",
      "md5hash": "3bdfe2ee51a7803fa030076d4b4a9d72",
      "lines": {
        "672": "            Log.wtf(LOG_TAG, \"CDMA Merge button is null even after ViewStub being inflated.\");",
        "290": "            // stay up above all other screens.",
        "259": "",
        "260": "            // Watch out: even if the phone state is RINGING, it's",
        "389": "        //               a normal in-call state, even though the in-call",
        "905": "        if (mAudioModePopup != null) {",
        "906": "            mAudioModePopup.dismiss();  // safe even if already dismissed",
        "272": "            // (via onTrigger()), *don't* show the incoming call",
        "273": "            // UI even if the phone is still in the RINGING state.",
        "291": "            // In reality, we shouldn't even be showing incoming-call UI while we are",
        "917": "     *",
        "918": "     * This is safe to call even if the popup is already dismissed, or even if",
        "388": "        // - CALL_ENDED (which is intended to look mostly the same as",
        "923": "            // Dismiss the previous one",
        "924": "            mAudioModePopup.dismiss();  // safe even if already dismissed",
        "671": "        if (mCdmaMergeButton == null) {"
      },
      "id": 76058917,
      "filename": "InCallTouchUi.java"
    },
    {
      "repo": "https://github.com/traviswheeler/MesquiteCore.git",
      "language": "Java",
      "linescount": 1539,
      "location": "/Source/mesquite/trees/NodeLocsStandard",
      "name": "MesquiteCore",
      "url": "https://searchcode.com/codesearch/view/87769700/",
      "md5hash": "328a9f6b4d335365f939516fb44110d5",
      "lines": {
        "175": "\t\t\tparametersChanged();",
        "44": "\tMesquiteMenuItemSpec fixedScalingMenuItem, showScaleMenuItem, broadScaleMenuItem;",
        "172": "\t\t}",
        "45": "\tMesquiteMenuItemSpec offFixedScalingMenuItem, stretchMenuItem, evenMenuItem;",
        "174": "\t\t\teven.toggleValue(parser.getFirstToken(arguments));",
        "173": "\t\telse if (checker.compare(this.getClass(), \"Sets whether or not to space the nodes evenly from root to tips\", \"[on = space evenly; off]\", commandName, \"toggleEven\")) {",
        "48": "\tboolean[] fixedSettings = null;",
        "49": "\tMesquiteBoolean even;",
        "146": "\t\ttemp.addLine(\"toggleCenter \" + center.toOffOnString());",
        "147": "\t\ttemp.addLine(\"toggleEven \" + even.toOffOnString());",
        "180": "\t\t}",
        "181": "\t\telse if (checker.compare(this.getClass(), \"[no longer available; here to prevent warning given as old scripts are read]\", \"[]\", commandName, \"namesAngle\")) {",
        "59": "\t\tcenter = new MesquiteBoolean(false);",
        "60": "\t\teven = new MesquiteBoolean(false);",
        "61": "\t\tif (getEmployer()!=null && (\"Square Tree\".equalsIgnoreCase(getEmployer().getName()) || \"Square Line Tree\".equalsIgnoreCase(getEmployer().getName()))){ //a bit non-standard but a helpful service to use different defaults for square"
      },
      "id": 87769700,
      "filename": "NodeLocsStandard.java"
    },
    {
      "repo": "https://github.com/PAmoto/android_libcore.git",
      "language": "Java",
      "linescount": 1249,
      "location": "/luni/src/main/java/java/util/concurrent",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/71756834/",
      "md5hash": "476647ed9d031ea5cf24a0cc464b7116",
      "lines": {
        "578": "     * that {@link ThreadPoolExecutor#afterExecute afterExecute} is always",
        "579": "     * called with a null second {@code Throwable} argument, even if the",
        "774": "     * Specialized delay queue. To mesh with TPE declarations, this",
        "422": "     *",
        "423": "     * @param corePoolSize the number of threads to keep in the pool, even",
        "392": "     *",
        "393": "     * @param corePoolSize the number of threads to keep in the pool, even",
        "775": "     * class must be declared as a BlockingQueue<Runnable> even though",
        "653": "     * Sets the policy on whether to execute existing delayed",
        "654": "     * tasks even when this executor has been {@code shutdown}.",
        "405": "     *",
        "406": "     * @param corePoolSize the number of threads to keep in the pool, even",
        "439": "     *",
        "440": "     * @param corePoolSize the number of threads to keep in the pool, even",
        "670": "     * Gets the policy on whether to execute existing delayed",
        "671": "     * tasks even when this executor has been {@code shutdown}."
      },
      "id": 71756834,
      "filename": "ScheduledThreadPoolExecutor.java"
    },
    {
      "repo": "https://github.com/drakeg/elasticsearch.git",
      "language": "Java",
      "linescount": 3428,
      "location": "/src/main/java/jsr166e",
      "name": "elasticsearch",
      "url": "https://searchcode.com/codesearch/view/72030113/",
      "md5hash": "4b6d308ad32a555423ea52b1d2df9c36",
      "lines": {
        "288": "     * We park/unpark workers after placing in an event wait queue",
        "260": "     * code is set up to work with other policies.  To ensure that we",
        "37": " * ForkJoinPool}s may also be appropriate for use with event-style",
        "156": "     * we null out taken slots as soon as we can, to maintain as small",
        "189": "     * these factors.  (Further, even if we did try to use such",
        "272": "     * also check that it is non-null (even if previously",
        "287": "     * allocation). So we try to streamline this as much as possible.",
        "51": " * dynamically adding, suspending, or resuming internal worker",
        "52": " * threads, even if some tasks are stalled waiting to join",
        "278": "     *",
        "279": "     * Event Queuing. Unlike HPC work-stealing frameworks, we cannot",
        "36": " * when setting <em>asyncMode</em> to true in constructors, {@code",
        "271": "     * case it is OK to give up.  All uses of the workQueues array",
        "188": "     * machine, but portably provide good throughput by averaging over",
        "157": "     * a footprint as possible even in programs generating huge",
        "261": "     * do not hold on to worker references that would prevent GC, ALL"
      },
      "id": 72030113,
      "filename": "ForkJoinPool.java"
    },
    {
      "repo": "https://github.com/lun4rsoft/JJ25-Main.git",
      "language": "Java",
      "linescount": 175,
      "location": "/Eclipse/JJ25-Main/src/info/lun4rsoft/jj25/zlib",
      "name": "JJ25-Main",
      "url": "https://searchcode.com/codesearch/view/75505585/",
      "md5hash": "5ec781b115ebee19e9ababf0dbc288ea",
      "lines": {
        "96": "    // put operator for two zero bits in even",
        "97": "    gf2_matrix_square(even, odd);",
        "98": "",
        "99": "    // put operator for four zero bits in odd",
        "100": "    gf2_matrix_square(odd, even);",
        "102": "    // apply len2 zeros to crc1 (first square will put the operator for one",
        "103": "    // zero byte, eight zero bits, in even)",
        "105": "      // apply zeros operator for this bit of len2",
        "106": "      gf2_matrix_square(even, odd);",
        "107": "      if ((len2 & 1)!=0)",
        "80": "    long row;",
        "81": "    long[] even = new long[GF2_DIM];",
        "19": "INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND",
        "20": "FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,",
        "26": "NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,",
        "27": "EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "95": ""
      },
      "id": 75505585,
      "filename": "CRC32.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 563965,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 301147,
      "source": "Github",
      "id": 2
    },
    {
      "count": 107528,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 14377,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 2835,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 2131,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 944,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 729,
      "source": "Gitorious",
      "id": 10
    },
    {
      "count": 137,
      "source": "Google Android",
      "id": 12
    }
  ]
}