{
  "matchterm": "Column",
  "previouspage": null,
  "searchterm": "Column",
  "query": "Column",
  "language_filters": [
    {
      "count": 124175,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 124175,
  "results": [
    {
      "repo": "http://google-api-dfp-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 155,
      "location": "/src/com/google/api/ads/dfp/v201111",
      "name": "google-api-dfp-java",
      "url": "https://searchcode.com/codesearch/view/13400028/",
      "md5hash": "31a07aa47d2c2a594c7a19e57719987c",
      "lines": {
        "64": "    public static final Column AD_SERVER_IMPRESSIONS = new Column(_AD_SERVER_IMPRESSIONS);",
        "1": "/**",
        "2": " * Column.java",
        "67": "    public static final Column AD_SERVER_REVENUE = new Column(_AD_SERVER_REVENUE);",
        "68": "    public static final Column AD_SERVER_AVERAGE_ECPM = new Column(_AD_SERVER_AVERAGE_ECPM);",
        "69": "    public static final Column AD_SERVER_PERCENT_IMPRESSIONS = new Column(_AD_SERVER_PERCENT_IMPRESSIONS);",
        "70": "    public static final Column AD_SERVER_PERCENT_CLICKS = new Column(_AD_SERVER_PERCENT_CLICKS);",
        "65": "    public static final Column AD_SERVER_CLICKS = new Column(_AD_SERVER_CLICKS);",
        "72": "    public static final Column AD_SERVER_DELIVERY_INDICATOR = new Column(_AD_SERVER_DELIVERY_INDICATOR);",
        "9": "",
        "10": "public class Column implements java.io.Serializable {",
        "71": "    public static final Column AD_SERVER_PERCENT_REVENUE = new Column(_AD_SERVER_PERCENT_REVENUE);",
        "66": "    public static final Column AD_SERVER_CTR = new Column(_AD_SERVER_CTR);",
        "73": "    public static final Column ADSENSE_IMPRESSIONS = new Column(_ADSENSE_IMPRESSIONS);",
        "74": "    public static final Column ADSENSE_CLICKS = new Column(_ADSENSE_CLICKS);",
        "63": "    public static final java.lang.String _TOTAL_ACTIVITY_REVENUE = \"TOTAL_ACTIVITY_REVENUE\";"
      },
      "id": 13400028,
      "filename": "Column.java"
    },
    {
      "repo": "http://google-api-dfp-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 171,
      "location": "/src/com/google/api/ads/dfp/v201203",
      "name": "google-api-dfp-java",
      "url": "https://searchcode.com/codesearch/view/13400474/",
      "md5hash": "585a88bf2e53f411e27dec2a6ab8d3d3",
      "lines": {
        "1": "/**",
        "2": " * Column.java",
        "71": "    public static final java.lang.String _TOTAL_ACTIVITY_REVENUE = \"TOTAL_ACTIVITY_REVENUE\";",
        "72": "    public static final Column AD_SERVER_IMPRESSIONS = new Column(_AD_SERVER_IMPRESSIONS);",
        "73": "    public static final Column AD_SERVER_CLICKS = new Column(_AD_SERVER_CLICKS);",
        "74": "    public static final Column AD_SERVER_CTR = new Column(_AD_SERVER_CTR);",
        "75": "    public static final Column AD_SERVER_REVENUE = new Column(_AD_SERVER_REVENUE);",
        "76": "    public static final Column AD_SERVER_AVERAGE_ECPM = new Column(_AD_SERVER_AVERAGE_ECPM);",
        "77": "    public static final Column AD_SERVER_PERCENT_IMPRESSIONS = new Column(_AD_SERVER_PERCENT_IMPRESSIONS);",
        "14": "    // Constructor",
        "15": "    protected Column(java.lang.String value) {",
        "80": "    public static final Column AD_SERVER_DELIVERY_INDICATOR = new Column(_AD_SERVER_DELIVERY_INDICATOR);",
        "81": "    public static final Column ADSENSE_IMPRESSIONS = new Column(_ADSENSE_IMPRESSIONS);",
        "78": "    public static final Column AD_SERVER_PERCENT_CLICKS = new Column(_AD_SERVER_PERCENT_CLICKS);",
        "79": "    public static final Column AD_SERVER_PERCENT_REVENUE = new Column(_AD_SERVER_PERCENT_REVENUE);"
      },
      "id": 13400474,
      "filename": "Column.java"
    },
    {
      "repo": "http://google-api-dfp-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 139,
      "location": "/src/com/google/api/ads/dfp/v201108",
      "name": "google-api-dfp-java",
      "url": "https://searchcode.com/codesearch/view/13400936/",
      "md5hash": "42e11aebfda40935284ae2be56c05a80",
      "lines": {
        "64": "    public static final Column AD_SERVER_DELIVERY_INDICATOR = new Column(_AD_SERVER_DELIVERY_INDICATOR);",
        "1": "/**",
        "2": " * Column.java",
        "67": "    public static final Column ADSENSE_CTR = new Column(_ADSENSE_CTR);",
        "68": "    public static final Column ADSENSE_REVENUE = new Column(_ADSENSE_REVENUE);",
        "65": "    public static final Column ADSENSE_IMPRESSIONS = new Column(_ADSENSE_IMPRESSIONS);",
        "9": "",
        "10": "public class Column implements java.io.Serializable {",
        "66": "    public static final Column ADSENSE_CLICKS = new Column(_ADSENSE_CLICKS);",
        "14": "    // Constructor",
        "15": "    protected Column(java.lang.String value) {",
        "55": "    public static final java.lang.String _OPTIMIZATION_LIFT = \"OPTIMIZATION_LIFT\";",
        "56": "    public static final Column AD_SERVER_IMPRESSIONS = new Column(_AD_SERVER_IMPRESSIONS);",
        "57": "    public static final Column AD_SERVER_CLICKS = new Column(_AD_SERVER_CLICKS);",
        "63": "    public static final Column AD_SERVER_PERCENT_REVENUE = new Column(_AD_SERVER_PERCENT_REVENUE);"
      },
      "id": 13400936,
      "filename": "Column.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 737,
      "location": "/zul/src/org/zkoss/zul",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17657902/",
      "md5hash": "c4e8c57232b9bf13605b74dc6c8a844d",
      "lines": {
        "1": "/* Column.java",
        "2": "",
        "69": "\tstatic {",
        "70": "\t\taddClientEvent(Column.class, Events.ON_SORT, CE_DUPLICATE_IGNORE);",
        "71": "\t\taddClientEvent(Column.class, Events.ON_GROUP, CE_DUPLICATE_IGNORE);",
        "45": "/**",
        "46": " * A single column in a {@link Columns} element.",
        "47": " * Each child of the {@link Column} element is placed in each successive",
        "48": " * cell of the grid.",
        "49": " * The column with the most child elements determines the number of rows",
        "50": " * in each column.",
        "51": " *",
        "52": " * <p>The use of column is mainly to define attributes for each cell",
        "54": " * ",
        "55": " * <p>Default {@link #getZclass}: z-column. (since 3.5.0)",
        "58": " */",
        "59": "public class Column extends HeaderElement {"
      },
      "id": 17657902,
      "filename": "Column.java"
    },
    {
      "repo": "https://git.gitorious.org/yacy/rc1.git",
      "language": "Java",
      "linescount": 312,
      "location": "/source/net/yacy/kelondro/index",
      "name": "yacy",
      "url": "https://searchcode.com/codesearch/view/62351790/",
      "md5hash": "d4c014af110a29c6378eabb0fabb4b85",
      "lines": {
        "160": "            ((typename.equals(\"char\")) && (this.cellwidth > 1))",
        "1": "// Column.java",
        "2": "// (C) 2006 by Michael Peter Christen; mc@yacy.net, Frankfurt a. M., Germany",
        "35": "public final class Column implements Cloneable, Serializable {",
        "165": "            ((typename.equals(\"long\")) && (this.cellwidth <= 4))",
        "166": "           ) throw new kelondroException(\"kelondroColumn - cell width \" + this.cellwidth + \" not appropriate for type \" + typename);",
        "161": "           ) throw new kelondroException(\"kelondroColumn - cell width \" + this.cellwidth + \" too wide for type \" + typename);",
        "139": "                } catch (final NumberFormatException e) {",
        "140": "                    throw new kelondroException(\"kelondroColumn - cellwidth description wrong:\" + celldef.substring(p + 1));",
        "34": "",
        "146": "                } catch (final NumberFormatException e) {",
        "147": "                    throw new kelondroException(\"kelondroColumn - cellwidth description wrong:\" + celldef.substring(p + 1, q));",
        "180": "                else if (this.celltype == celltype_string)    this.encoder = encoder_bytes;",
        "181": "                else throw new kelondroException(\"kelondroColumn - encoder missing for cell '\" + this.nickname + \"'\");",
        "153": "        // check length constraints",
        "154": "        if (this.cellwidth < 0) throw new kelondroException(\"kelondroColumn - no cell width given for \" + this.nickname);"
      },
      "id": 62351790,
      "filename": "Column.java"
    },
    {
      "repo": "https://github.com/xxxzxxx/PrimitiveLibrary-for-Android.git",
      "language": "Java",
      "linescount": 131,
      "location": "/PrimitiveLibrary-Database/src/com/primitive/library/database",
      "name": "PrimitiveLibrary-for-Android",
      "url": "https://searchcode.com/codesearch/view/70157222/",
      "md5hash": "db86ee3045f94cd3d7d9c4d142e8f500",
      "lines": {
        "32": "\tprivate final boolean primaryKey;",
        "1": "/**",
        "2": " * Column",
        "33": "\t/** column is not null */",
        "42": "\t */",
        "43": "\tpublic Column(final Type type, final String name, final boolean primaryKey,",
        "17": " */",
        "18": "public class Column {",
        "54": "\tpublic String toString() {",
        "55": "\t\treturn \"Column \" + this.hashCode() + \"\\n name=\" + name + \"\\n type=\"",
        "26": "",
        "27": "\t/** column type */",
        "28": "\tprivate final Type type;",
        "29": "\t/** column name */",
        "30": "\tprivate final String name;"
      },
      "id": 70157222,
      "filename": "Column.java"
    },
    {
      "repo": "https://github.com/corydoras/DataMan.git",
      "language": "Java",
      "linescount": 84,
      "location": "/src/dataman/model",
      "name": "DataMan",
      "url": "https://searchcode.com/codesearch/view/105728000/",
      "md5hash": "26d791487dd348ab3fb20aeaa58527f9",
      "lines": {
        "1": "/*",
        "2": " * Column.java",
        "35": "    public Column() {",
        "36": "        type=Column.UNKNOWN;",
        "37": "        dateFormat=new DateAnalyser();",
        "33": "",
        "40": "    public void printInfo(PrintStream out) {",
        "41": "        if(type==Column.DATE) {",
        "43": "        }",
        "44": "        else if(type==Column.STRING) {",
        "34": "    /** Creates a new instance of Column */",
        "17": " */",
        "18": "public class Column {",
        "29": "    private int maxLength=0;",
        "30": "    private int type=Column.UNKNOWN;"
      },
      "id": 105728000,
      "filename": "Column.java"
    },
    {
      "repo": "http://gwittir.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 205,
      "location": "/gwittir-core/src/main/java/com/totsp/gwittir/client/ui/table",
      "name": "gwittir",
      "url": "https://searchcode.com/codesearch/view/1262938/",
      "md5hash": "c462b3541d7fdb66c41e125d5da05215",
      "lines": {
        "1": "/*",
        "2": " * Column.java",
        "45": "",
        "46": "    /** Creates a new instance of Column */"
      },
      "id": 1262938,
      "filename": "Field.java"
    },
    {
      "repo": "http://larozanam.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 64,
      "location": "/swingdk/src/com/celiosilva/swingDK/dataTable",
      "name": "larozanam",
      "url": "https://searchcode.com/codesearch/view/2031954/",
      "md5hash": "bee85b7154f6e906c2279c5612754b2e",
      "lines": {
        "1": "/*",
        "2": " * Column.java",
        "17": " */",
        "18": "public class ColumnData {",
        "19": "    ",
        "20": "    private                 Object                      columnValue;",
        "21": "    private                 int                         columnLength;",
        "22": "    private                 String                      columnName;",
        "23": "    private                 boolean                     resizable;",
        "24": "    /** Creates a new instance of Column */",
        "25": "    ColumnData() {",
        "26": "        this.setResizable(true);",
        "28": "",
        "29": "    public Object getColumnValue() {",
        "30": "        return columnValue;"
      },
      "id": 2031954,
      "filename": "ColumnData.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 228,
      "location": "/ojc-core/component-common/axiondb/src/org/axiondb",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43259589/",
      "md5hash": "005b79afd9aa64c0570a7f1d894b904a",
      "lines": {
        "68": "     * Key for setting and retrieving the {@link Selectable default value}in this",
        "69": "     * column's configuration",
        "73": "    /**",
        "74": "     * Key for setting and retrieving the name in this column's configuration",
        "78": "    /**",
        "47": "/**",
        "48": " * Describes a column within a {@link Table}.",
        "79": "     * Key for setting and retrieving the Identity column generation type",
        "54": " */",
        "55": "public class Column implements Serializable {",
        "57": "    /**",
        "58": "     * Key for setting and retrieving the sqlType in this column's configuration",
        "59": "     */",
        "60": "    public static final String COLUMN_SQL_TYPE_CONFIG_KEY = \"sqlType\";",
        "62": "    /**",
        "63": "     * Key for setting and retrieving the {@link DataType}in this column's configuration"
      },
      "id": 43259589,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 273,
      "location": "/nuclos-common/src/main/java/org/nuclos/common/database/query/definition",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46077876/",
      "md5hash": "7da28d6c704899cb80ceb3fd615f8aaf",
      "lines": {
        "33": "/**",
        "34": " * Column class for database queries.",
        "41": " */",
        "42": "public class Column implements Serializable {",
        "43": "",
        "44": "\tprivate static final Logger LOG = Logger.getLogger(Column.class);",
        "178": "\t\t\t\tEntityMeta<?> eMeta = SpringApplicationContextHolder.getBean(IMetaProvider.class).getByTablename(table.getName());",
        "179": "\t\t\t\tif (StringUtils.compareIgnoreCase(SF.VERSION.getDbColumn(), name) == 0) {",
        "181": "\t\t\t\t} else ",
        "182": "\t\t\t\tif (StringUtils.compareIgnoreCase(SF.PK_ID.getDbColumn(), name) == 0) {",
        "184": "\t\t\t\t} else ",
        "185": "\t\t\t\tif (StringUtils.compareIgnoreCase(SF.PK_UID.getDbColumn(), name) == 0) {",
        "60": "",
        "61": "\tpublic Column(Column column) {",
        "62": "\t\tthis(column.table, column.name, column.alias, column.type, column.length, column.precision, column.scale,"
      },
      "id": 46077876,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 228,
      "location": "/ojc-core/component-common/axiondb/src/org/axiondb",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200117/",
      "md5hash": "005b79afd9aa64c0570a7f1d894b904a",
      "lines": {
        "68": "     * Key for setting and retrieving the {@link Selectable default value}in this",
        "69": "     * column's configuration",
        "73": "    /**",
        "74": "     * Key for setting and retrieving the name in this column's configuration",
        "78": "    /**",
        "47": "/**",
        "48": " * Describes a column within a {@link Table}.",
        "79": "     * Key for setting and retrieving the Identity column generation type",
        "54": " */",
        "55": "public class Column implements Serializable {",
        "57": "    /**",
        "58": "     * Key for setting and retrieving the sqlType in this column's configuration",
        "59": "     */",
        "60": "    public static final String COLUMN_SQL_TYPE_CONFIG_KEY = \"sqlType\";",
        "62": "    /**",
        "63": "     * Key for setting and retrieving the {@link DataType}in this column's configuration"
      },
      "id": 49200117,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/jyukopla/gwt-bootstrap.git",
      "language": "Java",
      "linescount": 157,
      "location": "/src/main/java/com/github/gwtbootstrap/client/ui",
      "name": "gwt-bootstrap",
      "url": "https://searchcode.com/codesearch/view/47019639/",
      "md5hash": "0d89c2d54069b779148d4174a770cabf",
      "lines": {
        "66": "\t/**",
        "67": "\t * Creates a new Column of given size.",
        "39": " * {@code ",
        "40": " * <b:Column size=\"3\">",
        "41": " *     <b:Well />",
        "42": " * </b:Column>}",
        "62": "\t\t\t\"The offset of the Column has to be between \"",
        "61": "\tprivate static final String OFFSET_ERROR_MESSAGE =",
        "20": "import com.github.gwtbootstrap.client.ui.base.SizeHelper;",
        "21": "import com.github.gwtbootstrap.client.ui.config.ColumnSizeConfigurator;",
        "55": "//@formatter:on",
        "56": "public class Column extends DivWidget implements HasSize {",
        "58": "    ",
        "59": "    private static final ColumnSizeConfigurator CONFIGURATOR = GWT.create(ColumnSizeConfigurator.class);",
        "29": "/**",
        "30": " * Column of the Bootstrap grid system."
      },
      "id": 47019639,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/marvelution/jira-sonar-plugin.git",
      "language": "Java",
      "linescount": 124,
      "location": "/src/main/java/com/marvelution/jira/plugins/sonar/rest/model",
      "name": "jira-sonar-plugin",
      "url": "https://searchcode.com/codesearch/view/40154638/",
      "md5hash": "46d17b2b0ed372aab8c45b051afd4ce3",
      "lines": {
        "64": "\t * ",
        "65": "\t * @param column the {@link com.marvelution.jira.plugins.sonar.services.layout.Column}",
        "66": "\t */",
        "37": "/**",
        "38": " * Column rest resource",
        "42": "@XmlAccessorType(XmlAccessType.FIELD)",
        "43": "@XmlRootElement(name = \"column\")",
        "44": "public class Column {",
        "45": "",
        "48": "\t@XmlElement(required = true)",
        "49": "\tprivate int columnId;",
        "50": "\t@XmlElement(required = true)",
        "51": "\tprivate com.marvelution.jira.plugins.sonar.services.layout.Column.Type type;",
        "57": "\t */",
        "58": "\tpublic Column() {"
      },
      "id": 40154638,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/agconnor/ariadne.git",
      "language": "Java",
      "linescount": 86,
      "location": "/src/main/java/co/recloud/ariadne/model/logical",
      "name": "ariadne",
      "url": "https://searchcode.com/codesearch/view/44837823/",
      "md5hash": "e3d11a2e003528b3ad15fae7b1653b4e",
      "lines": {
        "66": "\t",
        "67": "\tpublic static Column parseColumn(String columnString, Table baseTable, Map<String, Table> aliasMap) {",
        "68": "\t\tColumn column = new Column();",
        "5": "",
        "6": "public class Column implements Serializable {",
        "13": "\t",
        "14": "\tpublic Column() {",
        "17": "\t}",
        "18": "\tpublic Column(Table table, String field) {",
        "55": "\tpublic boolean equals(Object thatObject) {",
        "56": "\t\tif(!(thatObject instanceof Column)) {",
        "58": "\t\t}",
        "59": "\t\tColumn that = (Column) thatObject;",
        "70": "\t\t\tString[] tokens = columnString.split(\"\\\\.\");",
        "69": "\t\tif(columnString.contains(\".\")) {"
      },
      "id": 44837823,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/leander_sabel/android-lab.git",
      "language": "Java",
      "linescount": 90,
      "location": "/exercise6_1/src/androidlab/exercise6_1/db",
      "name": "android-lab",
      "url": "https://searchcode.com/codesearch/view/43583225/",
      "md5hash": "2ffc7975ab67804e9c2c8a33e3a05905",
      "lines": {
        "33": "   * @param key",
        "34": "   * @param column",
        "36": "   */",
        "37": "  public Column(String key, int column, String type) {",
        "39": "\tthis.key = key;",
        "40": "\tthis.column = column;",
        "60": "   * @return the column",
        "61": "   */",
        "20": "/**",
        "21": " * This class stores information on a single column of a SQLite database.",
        "25": " */",
        "26": "public class Column {",
        "59": "  /**",
        "28": "  private String key;",
        "29": "  private int column;"
      },
      "id": 43583225,
      "filename": "Column.java"
    },
    {
      "repo": "https://github.com/gbarsky/OE.git",
      "language": "Java",
      "linescount": 187,
      "location": "/Json Builder/src/amdocs/iam/pd/webservices/referenceattributevalues/referenceattributevaluesoutput",
      "name": "OE",
      "url": "https://searchcode.com/codesearch/view/71115047/",
      "md5hash": "a113de5792e9d28f3e3d5b127f5431d9",
      "lines": {
        "1": "/*",
        "2": " * XML Type:  Column",
        "3": " * Namespace: http://amdocs/iam/pd/webservices/referenceAttributeValues/ReferenceAttributeValuesOutput",
        "4": " * Java type: amdocs.iam.pd.webservices.referenceattributevalues.referenceattributevaluesoutput.Column",
        "11": "/**",
        "12": " * An XML Column(@http://amdocs/iam/pd/webservices/referenceAttributeValues/ReferenceAttributeValuesOutput).",
        "15": " */",
        "16": "public interface Column extends org.apache.xmlbeans.XmlObject",
        "18": "    public static final org.apache.xmlbeans.SchemaType type = (org.apache.xmlbeans.SchemaType)",
        "19": "        org.apache.xmlbeans.XmlBeans.typeSystemForClassLoader(Column.class.getClassLoader(), \"schemaorg_apache_xmlbeans.system.sE25B6F354D94647D4D1C46716B4ED6D5\").resolveHandle(\"column8469type\");",
        "21": "    /**",
        "22": "     * Gets the \"columnName\" element",
        "23": "     */",
        "24": "    java.lang.String getColumnName();",
        "26": "    /**",
        "27": "     * Gets (as xml) the \"columnName\" element",
        "28": "     */"
      },
      "id": 71115047,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/netbeans-soa.git",
      "language": "Java",
      "linescount": 96,
      "location": "/xml.xam.ui/src/org/netbeans/modules/xml/xam/ui/column",
      "name": "netbeans-soa",
      "url": "https://searchcode.com/codesearch/view/43327137/",
      "md5hash": "9e8b0dcd30b2c6f0bc4dd23f8ecc275b",
      "lines": {
        "83": "     * Returns the title of this column.",
        "67": "    /**",
        "68": "     * Returns the visual component for this column.",
        "74": "    /**",
        "75": "     * Returns the description of this column. This may be used for setting",
        "44": "",
        "45": "package org.netbeans.modules.xml.xam.ui.column;",
        "78": "     * @return  column description.",
        "77": "     *",
        "50": "/**",
        "51": " * A Column repesents a visual component in a ColumnView.",
        "84": "     *",
        "82": "    /**",
        "55": " */",
        "56": "public interface Column {",
        "85": "     * @return  column title."
      },
      "id": 43327137,
      "filename": "Column.java"
    },
    {
      "repo": "https://github.com/chrbayer84/GoodData-CL.git",
      "language": "Java",
      "linescount": 159,
      "location": "/backend/src/main/java/com/gooddata/integration/model",
      "name": "GoodData-CL",
      "url": "https://searchcode.com/codesearch/view/74677941/",
      "md5hash": "45560ead1c8315881052ebd66da6b2e9",
      "lines": {
        "64": "     *",
        "65": "     * @param column the JSON object from the GoodData REST API",
        "34": " */",
        "35": "public class Column {",
        "62": "    /**",
        "66": "     */",
        "53": "    /**",
        "54": "     * Constructs a new SLI column",
        "55": "     *",
        "56": "     * @param name the column name",
        "57": "     */",
        "58": "    public Column(String name) {",
        "29": "/**",
        "30": " * GoodData SLI Column",
        "63": "     * Constructs a new SLI column"
      },
      "id": 74677941,
      "filename": "Column.java"
    },
    {
      "repo": "https://bitbucket.org/ngiger/elexis-base-playground",
      "language": "Java",
      "linescount": 1672,
      "location": "/elexis-importer/src/com/healthmarketscience/jackcess",
      "name": "elexis-base-playground",
      "url": "https://searchcode.com/codesearch/view/117573736/",
      "md5hash": "8287fd477d8c58fc9d34ef231754cfd8",
      "lines": {
        "132": "\tprivate final Table _table;",
        "133": "\t/** For text columns, whether or not they are compressed */",
        "134": "\tprivate boolean _compressedUnicode = false;",
        "135": "\t/** Whether or not the column is of variable length */",
        "136": "\tprivate boolean _variableLength;",
        "137": "\t/** Whether or not the column is an autonumber column */",
        "144": "\tprivate DataType _type;",
        "145": "\t/** Maximum column length */",
        "146": "\tprivate short _columnLength;",
        "147": "\t/** 0-based column number */",
        "148": "\tprivate short _columnNumber;",
        "149": "\t/** index of the data for this column within a list of row data */",
        "150": "\tprivate int _columnIndex;",
        "151": "\t/** Column name */",
        "152": "\tprivate String _name;"
      },
      "id": 117573736,
      "filename": "Column.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 69351,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 40225,
      "source": "Github",
      "id": 2
    },
    {
      "count": 10751,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1384,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 983,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 794,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 548,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 117,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 22,
      "source": "Gitorious",
      "id": 10
    }
  ]
}