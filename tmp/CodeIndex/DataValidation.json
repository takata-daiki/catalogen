{
  "matchterm": "DataValidation",
  "previouspage": null,
  "searchterm": "DataValidation",
  "query": "DataValidation",
  "language_filters": [
    {
      "count": 78,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 78,
  "results": [
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 321,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260517/",
      "md5hash": "f9496d97655524d5cfaef9d24b8d65a1",
      "lines": {
        "139": "    validitySettings.add(dvsr);",
        "37": " */",
        "38": "public class DataValidation",
        "42": "   */",
        "43": "  private static Logger logger = Logger.getLogger(DataValidation.class);",
        "140": "    dvsr.setDataValidation(this);",
        "110": "   */",
        "111": "  public DataValidation(DataValidation dv,",
        "275": "   */",
        "84": "   */",
        "85": "  public DataValidation(DataValidityListRecord dvlr)",
        "276": "  public void removeDataValidation (int col, int row)",
        "94": "   */",
        "95": "  public DataValidation(int objId,"
      },
      "id": 43260517,
      "filename": "DataValidation.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 321,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201045/",
      "md5hash": "f9496d97655524d5cfaef9d24b8d65a1",
      "lines": {
        "139": "    validitySettings.add(dvsr);",
        "37": " */",
        "38": "public class DataValidation",
        "42": "   */",
        "43": "  private static Logger logger = Logger.getLogger(DataValidation.class);",
        "140": "    dvsr.setDataValidation(this);",
        "110": "   */",
        "111": "  public DataValidation(DataValidation dv,",
        "275": "   */",
        "84": "   */",
        "85": "  public DataValidation(DataValidityListRecord dvlr)",
        "276": "  public void removeDataValidation (int col, int row)",
        "94": "   */",
        "95": "  public DataValidation(int objId,"
      },
      "id": 49201045,
      "filename": "DataValidation.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 321,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374692/",
      "md5hash": "44d39ec58f4dd92e78ed61e5877bf0cc",
      "lines": {
        "139": "    validitySettings.add(dvsr);",
        "37": " */",
        "38": "public class DataValidation",
        "42": "   */",
        "43": "  private static Logger logger = Logger.getLogger(DataValidation.class);",
        "140": "    dvsr.setDataValidation(this);",
        "110": "   */",
        "111": "  public DataValidation(DataValidation dv,",
        "275": "   */",
        "84": "   */",
        "85": "  public DataValidation(DataValidityListRecord dvlr)",
        "276": "  public void removeDataValidation (int col, int row)",
        "94": "   */",
        "95": "  public DataValidation(int objId,"
      },
      "id": 11374692,
      "filename": "DataValidation.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 321,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919878/",
      "md5hash": "49b7a94ad8394fd95d30b81d07ace0c1",
      "lines": {
        "139": "    validitySettings.add(dvsr);",
        "37": " */",
        "38": "public class DataValidation",
        "42": "   */",
        "43": "  private static Logger logger = Logger.getLogger(DataValidation.class);",
        "140": "    dvsr.setDataValidation(this);",
        "110": "   */",
        "111": "  public DataValidation(DataValidation dv,",
        "275": "   */",
        "84": "   */",
        "85": "  public DataValidation(DataValidityListRecord dvlr)",
        "276": "  public void removeDataValidation (int col, int row)",
        "94": "   */",
        "95": "  public DataValidation(int objId,"
      },
      "id": 13919878,
      "filename": "DataValidation.java"
    },
    {
      "repo": "https://bitbucket.org/ashwinbalegar/mars-assignment-2",
      "language": "Java",
      "linescount": 116,
      "location": "/src",
      "name": "mars-assignment-2",
      "url": "https://searchcode.com/codesearch/view/132382737/",
      "md5hash": "d74d32aeecdbca7ca7ca8c6b4465d1a5",
      "lines": {
        "5": "",
        "6": "public class DataValidation {"
      },
      "id": 132382737,
      "filename": "DataValidation.java"
    },
    {
      "repo": "https://github.com/Christian-B/FishLink.git",
      "language": "Java",
      "linescount": 384,
      "location": "/src/org/freshwaterlife/fishlink/metadatacreator",
      "name": "FishLink",
      "url": "https://searchcode.com/codesearch/view/114492726/",
      "md5hash": "8436fea159f7aa4220cdbbb59cb44742",
      "lines": {
        "327": "        DataValidationHelper dataValidationHelper = poiSheet.getDataValidationHelper();",
        "326": "        CellRangeAddressList addressList = new CellRangeAddressList(row - 1, row -1, columnNumber,  columnNumber);",
        "7": "import org.apache.poi.ss.usermodel.CreationHelper;",
        "8": "import org.apache.poi.ss.usermodel.DataValidation;",
        "9": "import org.apache.poi.ss.usermodel.DataValidationConstraint;",
        "10": "import org.apache.poi.ss.usermodel.DataValidationHelper;",
        "11": "import org.apache.poi.ss.usermodel.Font;",
        "269": "     * @param popupMessage The Text for the message of the popup",
        "270": "     * @param errorStyle The Style of the Error based on POI DataValidation.ErrorStyle",
        "328": "        DataValidationConstraint constraint;",
        "307": "     * <ul>",
        "308": "     *    <li>An Empty rule can be used to Set a DataValidation which does no checking but does provide a popup.",
        "310": "     *        and an Optional closing '}'   ",
        "311": "     *    <li>The Rule \"BLANK\" will create a DataValidation which forces the cell to be left Blank or empty.",
        "318": "     * @param popupMessage The Text for the message of the popup",
        "319": "     * @param errorStyle The Style of the Error based on POI DataValidation.ErrorStyle"
      },
      "id": 114492726,
      "filename": "FishLinkSheet.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/xssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854574/",
      "md5hash": "89d090836d344e0f32e8aeef1b00d9eb",
      "lines": {
        "8": "import org.apache.log4j.Logger;",
        "9": "import org.apache.poi.ss.usermodel.DataValidation;",
        "10": "import org.apache.poi.ss.usermodel.DataValidationConstraint;",
        "11": "import org.apache.poi.ss.usermodel.Row;",
        "14": "import org.apache.poi.xssf.usermodel.XSSFCell;",
        "207": "    \tCellRangeAddressList addressList = new CellRangeAddressList(firstRow, lastRow, firstCol, lastCol); ",
        "208": "    \tDataValidationConstraint constraint = sheet.getDataValidationHelper().createCustomConstraint(formula);",
        "209": "    \tDataValidation dataValidation = sheet.getDataValidationHelper().createValidation(constraint, addressList);",
        "210": "        sheet.addValidationData(dataValidation);",
        "211": "    }",
        "214": "        CellRangeAddressList addressList = new CellRangeAddressList(firstRow, lastRow, firstCol, lastCol);        ",
        "215": "        DataValidationConstraint constraint = sheet.getDataValidationHelper().createFormulaListConstraint(namedRange);",
        "216": "        DataValidation dataValidation = sheet.getDataValidationHelper().createValidation(constraint, addressList);",
        "217": "        sheet.addValidationData(dataValidation);",
        "15": "import org.apache.poi.xssf.usermodel.XSSFDataValidation;"
      },
      "id": 72854574,
      "filename": "SheetXSSFImpl.java"
    },
    {
      "repo": "https://github.com/Christian-B/FishLink.git",
      "language": "Java",
      "linescount": 519,
      "location": "/src/org/freshwaterlife/fishlink/metadatacreator",
      "name": "FishLink",
      "url": "https://searchcode.com/codesearch/view/114492728/",
      "md5hash": "e35296a65f80e0c898e8f49b2e455b90",
      "lines": {
        "176": "            if (errorStyleString.startsWith(\"W\")){",
        "177": "                errorStyle = DataValidation.ErrorStyle.WARNING;",
        "179": "            if (errorStyleString.startsWith(\"I\")){",
        "180": "                errorStyle = DataValidation.ErrorStyle.INFO;",
        "11": "import java.util.Date;",
        "12": "import org.apache.poi.ss.usermodel.DataValidation;",
        "174": "            String errorStyleString =  FishLinkUtils.getTextZeroBased(masterDropdownSheet, 5, zeroRow);",
        "175": "            int errorStyle = DataValidation.ErrorStyle.STOP;"
      },
      "id": 114492728,
      "filename": "MetaDataCreator.java"
    },
    {
      "repo": "https://bitbucket.org/yaytay/spudsoft-birt-excel-emitters",
      "language": "Java",
      "linescount": 599,
      "location": "/SpudSoft BIRT Excel Emitters/src/uk/co/spudsoft/birt/emitters/excel",
      "name": "spudsoft-birt-excel-emitters",
      "url": "https://searchcode.com/codesearch/view/122565138/",
      "md5hash": "e8ec25ba7cf4f1f996fb2cb840b6865e",
      "lines": {
        "578": "",
        "579": "\tpublic DataValidationHelper getDataValidationHelper() {",
        "580": "\t\treturn sheet.getDataValidationHelper();",
        "581": "\t}",
        "583": "",
        "584": "\tpublic void addValidationData(DataValidation dataValidation) {",
        "585": "\t\tsheet.addValidationData(dataValidation);",
        "586": "\t}",
        "23": "import org.apache.poi.ss.usermodel.Comment;",
        "24": "import org.apache.poi.ss.usermodel.DataValidation;",
        "25": "import org.apache.poi.ss.usermodel.DataValidationHelper;",
        "26": "import org.apache.poi.ss.usermodel.Drawing;"
      },
      "id": 122565138,
      "filename": "FilteredSheet.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 140,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model/hssf/impl",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854649/",
      "md5hash": "9b32ac4d62bd845be04702f4e7103178",
      "lines": {
        "102": "\t\t\t\t\t\t\t\t",
        "103": "\t\t\t\t\t\tHSSFDataValidation validation = new HSSFDataValidation(",
        "104": "\t\t\t\t\t\t\t\tcellRangeAddressList, dvConstraint);",
        "73": "\t\t\t\t\t\t\t\t.createFormulaListConstraint(formula1);",
        "74": "\t\t\t\t\t\tHSSFDataValidation validation = new HSSFDataValidation(",
        "75": "\t\t\t\t\t\t\t\tcellRangeAddressList, dvConstraint);",
        "76": "\t\t\t\t\t\tdataValidation.add(validation);",
        "110": "\t\t});",
        "111": "\t\treturn dataValidation;",
        "16": "import org.apache.poi.hssf.usermodel.DVConstraint;",
        "17": "import org.apache.poi.hssf.usermodel.HSSFDataValidation;",
        "50": "",
        "51": "\tpublic List<HSSFDataValidation> getValidationData(final HSSFSheet sheet,",
        "52": "\t\t\tfinal HSSFWorkbook workbook) {",
        "105": "\t\t\t\t\t\tdataValidation.add(validation);"
      },
      "id": 72854649,
      "filename": "PatchedPoi.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 5111,
      "location": "/zss/src/org/zkoss/zss/model/impl",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970697/",
      "md5hash": "f6740268ba4be4778508748ca1c3becc",
      "lines": {
        "1536": "\t\t\t\tCellRangeAddressList addrList = dataValidation.getRegions();",
        "1537": "\t\t\t\tboolean srcInRange = false;",
        "1561": "\t\t\t\tCellRangeAddressList addrList = dataValidation.getRegions();",
        "1559": "\t\t\tfinal DataValidationHelper helper = dstSheet.getDataValidationHelper();",
        "1554": "\t\t\t\tif (!dstInRange) { //so we shall copy this data validation to dst cell",
        "1555": "\t\t\t\t\tdataValidation.getRegions().addCellRangeAddress(dstRow, dstCol, dstRow, dstCol);",
        "1560": "\t\t\tfor(DataValidation dataValidation : dataValidations) {",
        "50": "import org.zkoss.poi.hssf.usermodel.HSSFDataFormat;",
        "51": "import org.zkoss.poi.hssf.usermodel.HSSFDataValidation;",
        "1558": "\t\t} else {",
        "87": "import org.zkoss.poi.ss.usermodel.DataFormatter;",
        "88": "import org.zkoss.poi.ss.usermodel.DataValidation;",
        "89": "import org.zkoss.poi.ss.usermodel.DataValidationConstraint;",
        "1562": "\t\t\t\tboolean srcInRange = false;",
        "1535": "\t\t\tfor(DataValidation dataValidation : dataValidations) {"
      },
      "id": 3970697,
      "filename": "BookHelper.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 2567,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260267/",
      "md5hash": "94346665312f1de078b1178fe96b915c",
      "lines": {
        "160": "  private DataValidation dataValidation;",
        "816": "    if (dataValidation != null)",
        "1458": "    dataValidation = si.getDataValidation();",
        "967": "    // Adjust any data validations",
        "968": "    if (dataValidation != null)",
        "969": "    {",
        "1426": "    sheetWriter.setButtonPropertySet(buttonPropertySet);",
        "815": "    // Adjust any data validations",
        "48": "import jxl.biff.ConditionalFormat;",
        "49": "import jxl.biff.DataValidation;",
        "818": "      dataValidation.removeColumn(col);",
        "1427": "    sheetWriter.setDataValidation(dataValidation, validatedCells);",
        "1457": "",
        "817": "    {",
        "159": "   */"
      },
      "id": 43260267,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 2567,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200795/",
      "md5hash": "94346665312f1de078b1178fe96b915c",
      "lines": {
        "160": "  private DataValidation dataValidation;",
        "816": "    if (dataValidation != null)",
        "1458": "    dataValidation = si.getDataValidation();",
        "967": "    // Adjust any data validations",
        "968": "    if (dataValidation != null)",
        "969": "    {",
        "1426": "    sheetWriter.setButtonPropertySet(buttonPropertySet);",
        "815": "    // Adjust any data validations",
        "48": "import jxl.biff.ConditionalFormat;",
        "49": "import jxl.biff.DataValidation;",
        "818": "      dataValidation.removeColumn(col);",
        "1427": "    sheetWriter.setDataValidation(dataValidation, validatedCells);",
        "1457": "",
        "817": "    {",
        "159": "   */"
      },
      "id": 49200795,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1148,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260286/",
      "md5hash": "ffa1236c86df17622a6a9299c36353c8",
      "lines": {
        "129": "   */",
        "130": "  private DataValidation dataValidation;",
        "579": "    {",
        "36": "import jxl.biff.ConditionalFormat;",
        "37": "import jxl.biff.DataValidation;",
        "577": "    // Write out the data validations",
        "578": "    if (dataValidation != null || validatedCells.size() > 0)",
        "1104": "   */",
        "1105": "  private void writeDataValidation() throws IOException",
        "1106": "  {",
        "1075": "   */",
        "1076": "  void setDataValidation(DataValidation dv, ArrayList vc)",
        "1077": "  {",
        "1078": "    dataValidation = dv;",
        "580": "      writeDataValidation();"
      },
      "id": 43260286,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1089,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260287/",
      "md5hash": "ad86f1c2070d28ba1714383f43bfc685",
      "lines": {
        "729": "    DataValidation rdv = fromSheet.getDataValidation();",
        "471": "    {",
        "468": "    // Copy the data validations",
        "47": "import jxl.biff.ConditionalFormat;",
        "48": "import jxl.biff.DataValidation;",
        "728": "    // Copy the data validations",
        "180": "",
        "469": "    DataValidation rdv = fromWritableSheet.dataValidation;",
        "182": "  {",
        "183": "    return dataValidation;",
        "472": "      dataValidation = new DataValidation(rdv, ",
        "345": "    // Copy the data validations",
        "346": "    DataValidation rdv = fromSheet.getDataValidation();",
        "731": "    {",
        "732": "      dataValidation = new DataValidation(rdv, ",
        "181": "  DataValidation getDataValidation()"
      },
      "id": 43260287,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1148,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200814/",
      "md5hash": "ffa1236c86df17622a6a9299c36353c8",
      "lines": {
        "129": "   */",
        "130": "  private DataValidation dataValidation;",
        "579": "    {",
        "36": "import jxl.biff.ConditionalFormat;",
        "37": "import jxl.biff.DataValidation;",
        "577": "    // Write out the data validations",
        "578": "    if (dataValidation != null || validatedCells.size() > 0)",
        "1104": "   */",
        "1105": "  private void writeDataValidation() throws IOException",
        "1106": "  {",
        "1075": "   */",
        "1076": "  void setDataValidation(DataValidation dv, ArrayList vc)",
        "1077": "  {",
        "1078": "    dataValidation = dv;",
        "580": "      writeDataValidation();"
      },
      "id": 49200814,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1089,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200815/",
      "md5hash": "ad86f1c2070d28ba1714383f43bfc685",
      "lines": {
        "729": "    DataValidation rdv = fromSheet.getDataValidation();",
        "471": "    {",
        "468": "    // Copy the data validations",
        "47": "import jxl.biff.ConditionalFormat;",
        "48": "import jxl.biff.DataValidation;",
        "728": "    // Copy the data validations",
        "180": "",
        "469": "    DataValidation rdv = fromWritableSheet.dataValidation;",
        "182": "  {",
        "183": "    return dataValidation;",
        "472": "      dataValidation = new DataValidation(rdv, ",
        "345": "    // Copy the data validations",
        "346": "    DataValidation rdv = fromSheet.getDataValidation();",
        "731": "    {",
        "732": "      dataValidation = new DataValidation(rdv, ",
        "181": "  DataValidation getDataValidation()"
      },
      "id": 49200815,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 2650,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919732/",
      "md5hash": "bd6bc164c6d1709ba683d42e991f8998",
      "lines": {
        "1568": "    sc.setDataValidation(si.dataValidation);",
        "1540": "",
        "1541": "    dataValidation = si.getDataValidation();",
        "777": "    // Handle any data validations",
        "778": "    if (dataValidation != null)",
        "779": "    {",
        "780": "      dataValidation.insertColumn(col);",
        "1037": "    // Adjust any data validations",
        "1038": "    if (dataValidation != null)",
        "1039": "    {",
        "1040": "      dataValidation.removeRow(row);",
        "659": "    // Adjust any data validations",
        "660": "    if (dataValidation != null)",
        "661": "    {",
        "662": "      dataValidation.insertRow(row);",
        "1567": "    sc.setColumnBreaks(si.columnBreaks, columnBreaks);"
      },
      "id": 13919732,
      "filename": "WritableSheetImpl.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1089,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374600/",
      "md5hash": "e8fdd2a2eacbfa79594f6635286c38af",
      "lines": {
        "729": "    DataValidation rdv = fromSheet.getDataValidation();",
        "471": "    {",
        "468": "    // Copy the data validations",
        "47": "import jxl.biff.ConditionalFormat;",
        "48": "import jxl.biff.DataValidation;",
        "728": "    // Copy the data validations",
        "180": "",
        "469": "    DataValidation rdv = fromWritableSheet.dataValidation;",
        "182": "  {",
        "183": "    return dataValidation;",
        "472": "      dataValidation = new DataValidation(rdv, ",
        "345": "    // Copy the data validations",
        "346": "    DataValidation rdv = fromSheet.getDataValidation();",
        "731": "    {",
        "732": "      dataValidation = new DataValidation(rdv, ",
        "181": "  DataValidation getDataValidation()"
      },
      "id": 11374600,
      "filename": "SheetCopier.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1148,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374608/",
      "md5hash": "d2bb3c01a6178871cd169bd35ec691ea",
      "lines": {
        "129": "   */",
        "130": "  private DataValidation dataValidation;",
        "579": "    {",
        "36": "import jxl.biff.ConditionalFormat;",
        "37": "import jxl.biff.DataValidation;",
        "577": "    // Write out the data validations",
        "578": "    if (dataValidation != null || validatedCells.size() > 0)",
        "1104": "   */",
        "1105": "  private void writeDataValidation() throws IOException",
        "1106": "  {",
        "1075": "   */",
        "1076": "  void setDataValidation(DataValidation dv, ArrayList vc)",
        "1077": "  {",
        "1078": "    dataValidation = dv;",
        "580": "      writeDataValidation();"
      },
      "id": 11374608,
      "filename": "SheetWriter.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 40,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 27,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1,
      "source": "Sourceforge",
      "id": 4
    }
  ]
}