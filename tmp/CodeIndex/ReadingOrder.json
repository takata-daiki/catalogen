{
  "matchterm": "ReadingOrder",
  "previouspage": null,
  "searchterm": "ReadingOrder",
  "query": "ReadingOrder",
  "language_filters": [
    {
      "count": 13,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 13,
  "results": [
    {
      "repo": "https://github.com/mjenki03/DailyBalanceSheetCreator.git",
      "language": "Java",
      "linescount": 251,
      "location": "/com/jacobgen/microsoft/excel",
      "name": "DailyBalanceSheetCreator",
      "url": "https://searchcode.com/codesearch/view/80605800/",
      "md5hash": "cc0004b70b577db31dc31ad0b1a44f22",
      "lines": {
        "160": "\t}",
        "163": "\t * Wrapper for calling the ActiveX-Method with input-parameter(s).",
        "164": "\t * @param readingOrder an input-parameter of type int",
        "165": "\t */",
        "166": "\tpublic void setReadingOrder(int readingOrder) {",
        "167": "\t\tDispatch.put(this, \"ReadingOrder\", new Variant(readingOrder));",
        "168": "\t}",
        "157": "\t */",
        "158": "\tpublic int getReadingOrder() {",
        "159": "\t\treturn Dispatch.get(this, \"ReadingOrder\").changeType(Variant.VariantInt).getInt();"
      },
      "id": 80605800,
      "filename": "TickLabels.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/examtool.git",
      "language": "Java",
      "linescount": 1067,
      "location": "/pripTool/src/at.tuwien.prip.core.model/src/at/tuwien/prip/core/model/graph",
      "name": "examtool",
      "url": "https://searchcode.com/codesearch/view/44026811/",
      "md5hash": "9e0e4ef3721230cf41407f3d14c7413c",
      "lines": {
        "1027": "// val = ((Node)textNL.item(0)).getNodeValue().trim();",
        "651": "//\t\tmatchReadingOrder = false;",
        "1028": "// matchReadingOrder = Boolean.parseBoolean(val);",
        "426": "",
        "427": "\tpublic int getReadingOrder() {",
        "428": "\t\treturn readingOrder;",
        "429": "\t}",
        "430": "",
        "431": "\tpublic void setReadingOrder(int readingOrder) {",
        "432": "\t\tthis.readingOrder = readingOrder;",
        "433": "\t}",
        "50": "\t",
        "51": "\tprotected int readingOrder = EdgeConstants.REL_NONE;",
        "52": "\tprotected boolean matchReadingOrder = false;",
        "650": "//\t\tmatchCrossesRulingLine = false;"
      },
      "id": 44026811,
      "filename": "DocEdge.java"
    },
    {
      "repo": "https://bitbucket.org/maxgoebel/tableannotator.git",
      "language": "Java",
      "linescount": 1098,
      "location": "/plugins/at.tuwien.prip.core.model/src/at/tuwien/prip/model/graph",
      "name": "tableannotator",
      "url": "https://searchcode.com/codesearch/view/50149646/",
      "md5hash": "fc52c8087704fd70b351ea26596c91c8",
      "lines": {
        "1058": "// val = ((Node)textNL.item(0)).getNodeValue().trim();",
        "1051": "// val = ((Node)textNL.item(0)).getNodeValue().trim();",
        "681": "//\t\tmatchCrossesRulingLine = false;",
        "682": "//\t\tmatchReadingOrder = false;",
        "652": "//\t \tnewAttribElement.appendChild",
        "653": "//     \t\t(resultDocument.createTextNode(Integer.toString(readingOrder)));",
        "1052": "// readingOrder = Integer.parseInt(val);",
        "657": "//\t \tnewAttribElement.appendChild",
        "658": "//     \t\t(resultDocument.createTextNode(Boolean.toString(matchReadingOrder)));",
        "1059": "// matchReadingOrder = Boolean.parseBoolean(val);",
        "438": "",
        "439": "\tpublic int getReadingOrder() {",
        "440": "\t\treturn readingOrder;",
        "441": "\t}",
        "442": "",
        "443": "\tpublic void setReadingOrder(int readingOrder) {",
        "444": "\t\tthis.readingOrder = readingOrder;"
      },
      "id": 50149646,
      "filename": "DocEdge.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 251,
      "location": "/src/main/java/com/commafeed/backend/dao",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607326/",
      "md5hash": "42a7394a0c1e1eac7dd99a32f47438ba",
      "lines": {
        "208": "\t\tif (order == ReadingOrder.asc) {",
        "134": "\tpublic List<FeedEntryStatus> findByFeed(Feed feed, User user,",
        "135": "\t\t\tboolean unreadOnly, ReadingOrder order, boolean includeContent) {",
        "169": "\t\t\tList<FeedCategory> categories, User user, boolean unreadOnly,",
        "170": "\t\t\tReadingOrder order, boolean includeContent) {",
        "139": "\tpublic List<FeedEntryStatus> findByFeed(Feed feed, User user,",
        "140": "\t\t\tboolean unreadOnly, int offset, int limit, ReadingOrder order,",
        "205": "\t\t\tRoot<FeedEntryStatus> root, ReadingOrder order) {",
        "207": "\t\t\t\tFeedEntry_.updated);",
        "176": "\t\t\tList<FeedCategory> categories, User user, boolean unreadOnly,",
        "177": "\t\t\tint offset, int limit, ReadingOrder order, boolean includeContent) {",
        "204": "\tprivate void orderBy(CriteriaQuery<FeedEntryStatus> query,",
        "217": "\t\tList<FeedEntryStatus> statuses = findByFeed(feed, user, true,",
        "25": "import com.commafeed.backend.model.User;",
        "26": "import com.commafeed.backend.model.UserSettings.ReadingOrder;",
        "218": "\t\t\t\tReadingOrder.desc, false);"
      },
      "id": 70607326,
      "filename": "FeedEntryStatusDAO.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 84,
      "location": "/src/main/java/com/commafeed/backend/model",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607054/",
      "md5hash": "fe33c9f0c15430b36b35b5a231269eac",
      "lines": {
        "66": "",
        "35": "\tprivate ReadingOrder readingOrder;",
        "68": "\t\treturn readingOrder;",
        "69": "\t}",
        "70": "",
        "71": "\tpublic void setReadingOrder(ReadingOrder readingOrder) {",
        "72": "\t\tthis.readingOrder = readingOrder;",
        "73": "\t}",
        "34": "\t@Column(nullable = false)",
        "67": "\tpublic ReadingOrder getReadingOrder() {",
        "20": "",
        "21": "\tpublic enum ReadingOrder {"
      },
      "id": 70607054,
      "filename": "UserSettings.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 63,
      "location": "/src/main/java/com/commafeed/frontend/model",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607512/",
      "md5hash": "aa206b5b9fb9a4358a76abe6fcda8d1a",
      "lines": {
        "48": "\t}",
        "49": "",
        "50": "\tpublic void setReadingOrder(String readingOrder) {",
        "51": "\t\tthis.readingOrder = readingOrder;",
        "52": "\t}",
        "21": "\t@ApiProperty(value = \"user reads entries in ascending or descending order\", allowableValues = \"asc,desc\", required = true)",
        "22": "\tprivate String readingOrder;",
        "45": "",
        "46": "\tpublic String getReadingOrder() {",
        "47": "\t\treturn readingOrder;"
      },
      "id": 70607512,
      "filename": "Settings.java"
    },
    {
      "repo": "git://github.com/plutext/docx4j.git",
      "language": "Java",
      "linescount": 299,
      "location": "/src/xlsx4j/java/org/xlsx4j/sml",
      "name": "docx4j",
      "url": "https://searchcode.com/codesearch/view/17643583/",
      "md5hash": "b9000f214fa8c911e0e4074176934348",
      "lines": {
        "80": "    protected Long readingOrder;",
        "293": "     */",
        "294": "    public void setReadingOrder(Long value) {",
        "295": "        this.readingOrder = value;",
        "296": "    }",
        "79": "    @XmlSchemaType(name = \"unsignedInt\")",
        "47": " *       &lt;attribute name=\"shrinkToFit\" type=\"{http://www.w3.org/2001/XMLSchema}boolean\" />",
        "48": " *       &lt;attribute name=\"readingOrder\" type=\"{http://www.w3.org/2001/XMLSchema}unsignedInt\" />",
        "274": "    /**",
        "275": "     * Gets the value of the readingOrder property.",
        "281": "     */",
        "282": "    public Long getReadingOrder() {",
        "283": "        return readingOrder;",
        "284": "    }",
        "286": "    /**",
        "287": "     * Sets the value of the readingOrder property."
      },
      "id": 17643583,
      "filename": "CTCellAlignment.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 106,
      "location": "/src/main/java/com/commafeed/frontend/rest/resources",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607739/",
      "md5hash": "be744dc89f0b2baa33bc8a00b96b180a",
      "lines": {
        "16": "import com.commafeed.backend.model.UserSettings.ReadingMode;",
        "17": "import com.commafeed.backend.model.UserSettings.ReadingOrder;",
        "37": "\t\t\ts.setReadingMode(settings.getReadingMode().name());",
        "38": "\t\t\ts.setReadingOrder(settings.getReadingOrder().name());",
        "42": "\t\t\ts.setReadingMode(ReadingMode.unread.name());",
        "43": "\t\t\ts.setReadingOrder(ReadingOrder.desc.name());",
        "60": "\t\ts.setReadingMode(ReadingMode.valueOf(settings.getReadingMode()));",
        "61": "\t\ts.setReadingOrder(ReadingOrder.valueOf(settings.getReadingOrder()));"
      },
      "id": 70607739,
      "filename": "UserREST.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 187,
      "location": "/src/main/java/com/commafeed/frontend/rest/resources",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607788/",
      "md5hash": "75b457ca1948f4dcf5242300f90a0f9e",
      "lines": {
        "153": "\t\tfeedEntryStatusDAO.delete(feedEntryStatusDAO.findAll(user, false,",
        "154": "\t\t\t\tReadingOrder.desc, false));",
        "20": "import com.commafeed.backend.model.UserRole.Role;",
        "21": "import com.commafeed.backend.model.UserSettings.ReadingOrder;"
      },
      "id": 70607788,
      "filename": "AdminREST.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 260,
      "location": "/src/main/java/com/commafeed/frontend/rest/resources",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607800/",
      "md5hash": "7bc4d567507ed1b9182ec2653915b12f",
      "lines": {
        "24": "import com.commafeed.backend.model.UserSettings.ReadingOrder;",
        "53": "\t\t\t@ApiParam(value = \"limit for paging\") @DefaultValue(\"-1\") @QueryParam(\"limit\") int limit,",
        "54": "\t\t\t@ApiParam(value = \"date ordering\", allowableValues = \"asc,desc\") @QueryParam(\"order\") @DefaultValue(\"desc\") ReadingOrder order) {",
        "23": "import com.commafeed.backend.model.FeedSubscription;"
      },
      "id": 70607800,
      "filename": "CategoryREST.java"
    },
    {
      "repo": "https://github.com/recampbell/commafeed.git",
      "language": "Java",
      "linescount": 206,
      "location": "/src/main/java/com/commafeed/frontend/rest/resources",
      "name": "commafeed",
      "url": "https://searchcode.com/codesearch/view/70607812/",
      "md5hash": "b92b304ce56508577b441bf8fa5e3168",
      "lines": {
        "28": "import com.commafeed.backend.model.FeedSubscription;",
        "29": "import com.commafeed.backend.model.UserSettings.ReadingOrder;",
        "54": "\t\t\t@ApiParam(value = \"date ordering\", allowableValues = \"asc,desc\") @QueryParam(\"order\") @DefaultValue(\"desc\") ReadingOrder order) {",
        "53": "\t\t\t@ApiParam(value = \"limit for paging\") @DefaultValue(\"-1\") @QueryParam(\"limit\") int limit,"
      },
      "id": 70607812,
      "filename": "FeedREST.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 1149,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124818/",
      "md5hash": "438b5536b475049ae7926d6b514acda3",
      "lines": {
        "776": "                     xf.setRightToLeftReadingOrder(Integer.valueOf(v).intValue());",
        "777": "             }",
        "774": "                     xf.setShrinkToFit(true);",
        "775": "                   else if (n.equals(\"readingOrder\"))"
      },
      "id": 47124818,
      "filename": "OOXMLReader.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 1149,
      "location": "/src/main/java/com/extentech/formats/XLS",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976442/",
      "md5hash": "438b5536b475049ae7926d6b514acda3",
      "lines": {
        "776": "                     xf.setRightToLeftReadingOrder(Integer.valueOf(v).intValue());",
        "777": "             }",
        "774": "                     xf.setShrinkToFit(true);",
        "775": "                   else if (n.equals(\"readingOrder\"))"
      },
      "id": 50976442,
      "filename": "OOXMLReader.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 9,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}