{
  "matchterm": "TextBox",
  "previouspage": null,
  "searchterm": "TextBox",
  "query": "TextBox",
  "language_filters": [
    {
      "count": 5533,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 5533,
  "results": [
    {
      "repo": "http://gwittir.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 383,
      "location": "/gwittir-core/src/main/java/com/totsp/gwittir/client/ui",
      "name": "gwittir",
      "url": "https://searchcode.com/codesearch/view/1262911/",
      "md5hash": "855777c86c749102925dc5f9d066b716",
      "lines": {
        "1": "/*",
        "2": " * TextBox.java",
        "33": "import com.google.gwt.user.client.ui.SourcesKeyboardEvents;",
        "42": " */",
        "43": "public class TextBox extends AbstractBoundWidget<String> implements HasFocus, HasEnabled, SourcesKeyboardEvents, SourcesClickEvents {",
        "44": "    private com.google.gwt.user.client.ui.TextBox base = new com.google.gwt.user.client.ui.TextBox();",
        "34": "import com.google.gwt.user.client.ui.TextBoxBase;",
        "47": "    private String old;",
        "48": "    public TextBox() {",
        "51": "    ",
        "52": "    /** Creates a new instance of TextBox */",
        "53": "    public TextBox(final boolean updateOnKeypress) {",
        "310": "    ",
        "311": "    public void setTextAlignment(TextBoxBase.TextAlignConstant align) {",
        "45": "    private ChangeListenerCollection changeListeners = new ChangeListenerCollection();",
        "58": "            public void onFocus(Widget sender) {",
        "59": "                focusListeners.fireFocus(TextBox.this);"
      },
      "id": 1262911,
      "filename": "TextBox.java"
    },
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 196,
      "location": "/zul/src/org/zkoss/zul",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17657965/",
      "md5hash": "3d2046243e66a21f74759e88e7571197",
      "lines": {
        "1": "/* Textbox.java",
        "2": "",
        "34": "\tpublic Textbox() {",
        "36": "\t}",
        "37": "\tpublic Textbox(String value) throws WrongValueException {",
        "33": "",
        "129": "\t/** Returns whether TAB is allowed.",
        "138": "\t/** Sets whether TAB is allowed.",
        "139": "\t * If true, the user can enter TAB in the textbox, rather than change",
        "172": "\t\treturn _zclass != null ? _zclass: \"z-textbox\";",
        "130": "\t * If true, the user can enter TAB in the textbox, rather than change",
        "152": "\tpublic Object clone() {",
        "171": "\tpublic String getZclass() {",
        "23": "/**",
        "24": " * A textbox.",
        "153": "\t\tfinal Textbox clone = (Textbox)super.clone();"
      },
      "id": 17657965,
      "filename": "Textbox.java"
    },
    {
      "repo": "http://mobile-rss-reader.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 92,
      "location": "/testpresrc/com/substanceofcode/testlcdui",
      "name": "mobile-rss-reader",
      "url": "https://searchcode.com/codesearch/view/11522757/",
      "md5hash": "1fc6ad030b680ec565f0e2fa953bc958",
      "lines": {
        "48": "public class TextBox extends javax.microedition.lcdui.TextBox",
        "1": "/*",
        "2": " * TextBox.java",
        "53": "",
        "54": "\tpublic TextBox(String title, String text,  int maxSize, int constraints) {",
        "40": "/**",
        "41": " * TextBox.",
        "42": " *",
        "43": " * Test GUI class to log methods on the TextBox class.",
        "47": " */"
      },
      "id": 11522757,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/zenghua1991/WiEngine-1.git",
      "language": "Java",
      "linescount": 310,
      "location": "/src/com/wiyun/engine/nodes",
      "name": "WiEngine-1",
      "url": "https://searchcode.com/codesearch/view/73698368/",
      "md5hash": "6597089113f7d47071191a993a362d23",
      "lines": {
        "64": "\t * \\link TextBox TextBox\\endlink \u7684\u56de\u8c03\u63a5\u53e3\u5b9a\u4e49",
        "66": "\t */",
        "67": "\tpublic static interface ITextBoxCallback {",
        "70": "\t\t *",
        "71": "\t\t * @param pointer TextBox\u7684\u5e95\u5c42\u6307\u9488",
        "44": "/**",
        "45": " * \u63d0\u4f9b\u4e00\u4e2a\u5355\u884c\u6587\u672c\u7f16\u8f91\u6846\u7ec4\u4ef6\uff0cwyTextBox\u662f\u4e00\u4e2a\u7ec4\u5408\u5f0f\u8282\u70b9\uff0c\u5b83\u662f\u75314\u4e2a\u72b6\u6001\u8282\u70b9\u548c\u4e00\u4e2a\u6807\u7b7e\u8282\u70b9\u7ec4\u5408",
        "78": "\t\t * @param pointer TextBox\u7684\u5e95\u5c42\u6307\u9488",
        "77": "\t\t *",
        "91": "\t\treturn new TextBox(normalSprite, selectedSprite, disabledSprite, focusedSprite, label);",
        "84": "\t\t *",
        "85": "\t\t * @param pointer TextBox\u7684\u5e95\u5c42\u6307\u9488",
        "89": "\t",
        "58": " */",
        "59": "public class TextBox extends Node {",
        "90": "\tpublic static TextBox make(Node normalSprite, Node selectedSprite, Node disabledSprite, Node focusedSprite, Node label) {",
        "63": "\t * \\else"
      },
      "id": 73698368,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/jyukopla/gwt-bootstrap.git",
      "language": "Java",
      "linescount": 131,
      "location": "/src/main/java/com/github/gwtbootstrap/client/ui",
      "name": "gwt-bootstrap",
      "url": "https://searchcode.com/codesearch/view/47019559/",
      "md5hash": "fe8c91cde6e04cf11c38fc326436cdb3",
      "lines": {
        "33": " */",
        "34": "public class TextBox extends TextBoxBase {",
        "36": "\t/**",
        "37": "\t * Creates a TextBox widget that wraps an existing &lt;input type='text'&gt;",
        "50": "",
        "46": "\t */",
        "47": "\tpublic static TextBox wrap(Element element) {",
        "17": "",
        "18": "import com.github.gwtbootstrap.client.ui.base.TextBoxBase;",
        "51": "\t\tTextBox textBox = new TextBox(element);",
        "53": "\t\t// Mark it attached and remember it for cleanup.",
        "54": "\t\ttextBox.onAttach();",
        "55": "\t\tRootPanel.detachOnWindowClose(textBox);",
        "25": "/**",
        "26": " * A TextBox for Bootstrap form."
      },
      "id": 47019559,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/geekrax/graph-lab.git",
      "language": "Java",
      "linescount": 105,
      "location": "/src/graphlab/plugins/commonplugin/reporter/actions",
      "name": "graph-lab",
      "url": "https://searchcode.com/codesearch/view/71053063/",
      "md5hash": "08fd3721092d22163ba8b17039e13d21",
      "lines": {
        "19": "    public TextBox() {",
        "18": "",
        "35": "    public static void showTextDialog(String dialogTitle, String text) {",
        "36": "        TextBox dialog = new TextBox();",
        "46": "        TextBox dialog = new TextBox();",
        "47": "        dialog.setTitle(title);",
        "44": "    }",
        "13": "",
        "14": "public class TextBox extends JFrame {",
        "45": "    public static TextBox editTextDialog(String title, String text) {"
      },
      "id": 71053063,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/jyukopla/gwt-bootstrap.git",
      "language": "Java",
      "linescount": 42,
      "location": "/src/main/java/com/github/gwtbootstrap/client/ui/base",
      "name": "gwt-bootstrap",
      "url": "https://searchcode.com/codesearch/view/47019766/",
      "md5hash": "70d25a933dfca224deb4d3d28b31a5c9",
      "lines": {
        "32": "\t */",
        "33": "\tpublic TextBox() {",
        "20": "/**",
        "21": " * {@link com.google.gwt.user.client.ui.TextBox TextBox} without the GWT CSS",
        "38": "\tprotected TextBox(Element elem) {",
        "27": " */",
        "28": "public class TextBox extends com.google.gwt.user.client.ui.TextBox {",
        "37": "\t",
        "30": "\t/**",
        "31": "\t * Creates an empty TextBox."
      },
      "id": 47019766,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/Yissu/blocklife.git",
      "language": "Java",
      "linescount": 144,
      "location": "/src/com/yissugames/gui",
      "name": "blocklife",
      "url": "https://searchcode.com/codesearch/view/50201641/",
      "md5hash": "bdce826f220e06922b66ad652834591a",
      "lines": {
        "130": "\t\t\tposY = Integer.parseInt(e.getAttributeValue(\"positionY\"));",
        "131": "\t\tTextBox result = new TextBox(posX, posY);",
        "122": "\t",
        "123": "\tpublic static TextBox createByXML(Element e)",
        "44": "\t",
        "45": "\tpublic TextBox(int posX, int posY)",
        "30": "",
        "31": "public class TextBox implements GUI, Inputable {"
      },
      "id": 50201641,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/AlexeyD/hibench.git",
      "language": "Java",
      "linescount": 89,
      "location": "/nutchindexing/nutch-1.2/src/plugin/parse-mspowerpoint/src/java/org/apache/nutch/parse/mspowerpoint",
      "name": "hibench",
      "url": "https://searchcode.com/codesearch/view/48925112/",
      "md5hash": "43051f6409c03c7b99acae70a40c1989",
      "lines": {
        "51": "   * ",
        "40": "   * ",
        "41": "   * @param textBoxId",
        "43": "   */",
        "44": "  public TextBox(final long textBoxId) {",
        "45": "    this.currentID = textBoxId;",
        "46": "    this.content = \"\";",
        "19": "/**",
        "20": " * Package protected class for the MS Powerpoint TextBox content",
        "57": "  public TextBox(final long textBoxId, final String content) {",
        "56": "   */",
        "25": " */",
        "26": "class TextBox {",
        "59": "    this.content = content;",
        "58": "    this.currentID = textBoxId;",
        "52": "   * @param textBoxId"
      },
      "id": 48925112,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/rpernavas/sshtools.git",
      "language": "Java",
      "linescount": 52,
      "location": "/common/ui",
      "name": "sshtools",
      "url": "https://searchcode.com/codesearch/view/74248550/",
      "md5hash": "ce7ee6a16d72aeacc49bb91f2a9536cb",
      "lines": {
        "32": "  public TextBox() {",
        "35": "  ",
        "36": "  public TextBox(String text) {",
        "39": "  ",
        "40": "  public TextBox(String text, int rows, int columns) {",
        "28": " */",
        "29": "public class TextBox extends JTextArea {",
        "31": ""
      },
      "id": 74248550,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/borman/phoneme-qtopia.git",
      "language": "Java",
      "linescount": 437,
      "location": "/midp/src/highlevelui/lcdui/reference/classes/javax/microedition/lcdui",
      "name": "phoneme-qtopia",
      "url": "https://searchcode.com/codesearch/view/104124778/",
      "md5hash": "e14f65e5e633cc4894f7753c3fc63bd2",
      "lines": {
        "64": " * <p><code>TextBox</code> has the concept of ",
        "33": " *",
        "34": " * <p>A <code>TextBox</code> has a maximum size, which is the maximum",
        "36": " * that can be stored in the object at any time (its capacity). This limit is",
        "37": " * enforced when the <code>TextBox</code> instance is constructed,",
        "38": " * when the user is editing text within the <code>TextBox</code>, as well as",
        "39": " * when the application program calls methods on the",
        "40": " * <code>TextBox</code> that modify its",
        "52": " *",
        "53": " * <p>The text contained within a <code>TextBox</code> may be more",
        "132": "",
        "133": "            displayableLF = textBoxLF = LFFactory.getFactory().getTextBoxFormLF(this);",
        "29": "/**",
        "30": " * The <code>TextBox</code> class is a <code>Screen</code> that allows",
        "63": " *"
      },
      "id": 104124778,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/burris/dwr.git",
      "language": "Java",
      "linescount": 1178,
      "location": "/ui/gi/generated/java/jsx3/gui",
      "name": "dwr",
      "url": "https://searchcode.com/codesearch/view/140248985/",
      "md5hash": "1e5b3496cf54078e82044e5a8f16409f",
      "lines": {
        "32": "     */",
        "33": "    public TextBox(Context context, String extension)",
        "64": "     * @param TYPE one of two valid types: jsx3.gui.TextBox.TYPETEXT, jsx3.gui.TextBox.TYPETEXTAREA. If null is passed, jsx3.gui.TextBox.DEFAULTTYPE is used",
        "44": "     * @param vntHeight either a number (i.e, 12, 30, etc) or a number and a unit value (i.e., \"25%\", \"36pt\", etc); if a number is passed, pixels will be the assumed unit when painted to screen",
        "45": "     * @param strValue this value to appear in the textbox/textarea. This value will be set as the defaultValue for the text box when it is initialized; if edits are made by the user, these edits can be accessed via [object].getValue(); if the initial value is needed, use [object].getDefaultValue();",
        "46": "     * @param TYPE one of two valid types: jsx3.gui.TextBox.TYPETEXT, jsx3.gui.TextBox.TYPETEXTAREA. If null is passed, jsx3.gui.TextBox.DEFAULTTYPE is used",
        "47": "     */",
        "48": "    public TextBox(String strName, String vntLeft, int vntTop, int vntWidth, String vntHeight, String strValue, String TYPE)",
        "51": "        ScriptBuffer script = new ScriptBuffer();",
        "52": "        script.appendCall(\"new TextBox\", strName, vntLeft, vntTop, vntWidth, vntHeight, strValue, TYPE);",
        "22": "/**",
        "23": " * This jsx3.gui.TextBox class allows integration of a standard HTML text input into the JSX DOM. This allows the text box to be treated like a JSX object, including positioning, serialization, updates, and data mapping/binding, etc.",
        "26": " */",
        "27": "public class TextBox extends jsx3.gui.Block",
        "62": "     * @param vntHeight either a number (i.e, 12, 30, etc) or a number and a unit value (i.e., \"25%\", \"36pt\", etc); if a number is passed, pixels will be the assumed unit when painted to screen",
        "63": "     * @param strValue this value to appear in the textbox/textarea. This value will be set as the defaultValue for the text box when it is initialized; if edits are made by the user, these edits can be accessed via [object].getValue(); if the initial value is needed, use [object].getDefaultValue();"
      },
      "id": 140248985,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/jwesonga/commcare",
      "language": "Java",
      "linescount": 426,
      "location": "/org.commcare.dtree.brac.chp/build/real/Nokia/6085/en/source/de/enough/polish/ui",
      "name": "commcare",
      "url": "https://searchcode.com/codesearch/view/53588039/",
      "md5hash": "7d8ef2baf3aa64f4a89bc26751a9f565",
      "lines": {
        "32": " * <p>A <code>TextBox</code> has a maximum size, which is the maximum",
        "34": " * that can be stored in the object at any time (its capacity). This limit is",
        "35": " * enforced when the <code>TextBox</code> instance is constructed,",
        "36": " * when the user is editing text within the <code>TextBox</code>, as well as",
        "37": " * when the application program calls methods on the",
        "38": " * <code>TextBox</code> that modify its",
        "61": " * ",
        "46": " * requested.  The value actually assigned will be reflected in the value",
        "47": " * returned by <A HREF=\"../../../javax/microedition/lcdui/TextBox.html#getMaxSize()\"><CODE>getMaxSize()</CODE></A>.  A defensively-written",
        "50": " * ",
        "51": " * <p>The text contained within a <code>TextBox</code> may be more",
        "62": " * <p><code>TextBox</code> has the concept of",
        "29": "/**",
        "30": " * The <code>TextBox</code> class is a <code>Screen</code> that allows the user to enter and edit text.",
        "31": " * "
      },
      "id": 53588039,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/ansgarkonermann/simpleodf",
      "language": "Java",
      "linescount": 270,
      "location": "/src/main/java/org/odftoolkit/simple/draw",
      "name": "simpleodf",
      "url": "https://searchcode.com/codesearch/view/60371791/",
      "md5hash": "a586942ac6bde198f51c2eaca86acb9c",
      "lines": {
        "96": "\t * @param element",
        "97": "\t *            - the instance of DrawTextBoxElement",
        "92": "\t/**",
        "82": "\tDrawTextBoxElement mTextboxElement;",
        "81": "\t */",
        "50": " */",
        "51": "public class Textbox extends Frame implements ListContainer, ParagraphContainer {",
        "85": "",
        "86": "\tprivate Textbox(DrawTextBoxElement textbox) {",
        "87": "\t\tsuper((DrawFrameElement) textbox.getParentNode());",
        "88": "\t\tmTextboxElement = textbox;",
        "89": "",
        "27": "import org.odftoolkit.odfdom.dom.element.draw.DrawFrameElement;",
        "28": "import org.odftoolkit.odfdom.dom.element.draw.DrawTextBoxElement;",
        "93": "\t * Get a text box instance by an instance of <code>DrawTextBoxElement</code>"
      },
      "id": 60371791,
      "filename": "Textbox.java"
    },
    {
      "repo": "https://bitbucket.org/pointcliki/hope.git",
      "language": "Java",
      "linescount": 316,
      "location": "/src/com/pointcliki/ui",
      "name": "hope",
      "url": "https://searchcode.com/codesearch/view/38881388/",
      "md5hash": "8802c32d45a512f1e2aa71dc5c9e5680",
      "lines": {
        "56": "\tpublic TextBox(String text, String def) {",
        "51": "\t",
        "52": "\tpublic TextBox(String text) {",
        "55": "\t",
        "24": "",
        "25": "public class TextBox extends UIEntity {"
      },
      "id": 38881388,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://bitbucket.org/elloyd/cnpvue",
      "language": "Java",
      "linescount": 1262,
      "location": "/src/tufts/vue",
      "name": "cnpvue",
      "url": "https://searchcode.com/codesearch/view/55212768/",
      "md5hash": "972dcba882e192e9ed2152773e2a0eaf",
      "lines": {
        "1184": "        tufts.vue.gui.DockWindow w = GUI.createDockWindow(\"TextBox Resize Test\", new TestPanel(box));",
        "1185": "        w.setVisible(true);",
        "1158": "    private void out(String s) {",
        "1159": "        System.out.println(\"TextBox@\" + id() + \" [\" + getText() + \"] \" + s);",
        "712": "        //System.out.println(\"TextBox: \" + e);",
        "1161": "    }",
        "135": "    ",
        "140": "",
        "141": "    TextBox(LWComponent lwc, String text)",
        "711": "        if (DEBUG.KEYS) out(e.toString());",
        "143": "        if (DEBUG.TEXT && DEBUG.LAYOUT) tufts.Util.printClassTrace(\"tufts.vue.\", \"NEW TextBox, txt=\" + text);",
        "136": "    TextBox(LWComponent lwc)",
        "142": "    {",
        "1160": "        //System.out.println(\"TextBox@\" + id() + \" \" + s);",
        "1182": "        LWComponent node = new LWNode(\"Foo\");",
        "1183": "        TextBox box = new TextBox(node, \"One Two Three Four Five Six Seven\");"
      },
      "id": 55212768,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/lilrooness/Justifiable.git",
      "language": "Java",
      "linescount": 72,
      "location": "/src/joe/game/drone",
      "name": "Justifiable",
      "url": "https://searchcode.com/codesearch/view/72658224/",
      "md5hash": "ec7185631343539abdf9eb0a13c7d574",
      "lines": {
        "8": "public class TextBox {",
        "61": "\t\tif(charactersOnScreen != null){",
        "62": "\t\t\tg.drawImage(ImageBank.getImage(\"textBox\"), 10, 10, 400, 50, 0, 0, 500, 200, null);",
        "7": ""
      },
      "id": 72658224,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/tisoft/microemu.git",
      "language": "Java",
      "linescount": 209,
      "location": "/microemulator/microemu-midp/src/main/java/javax/microedition/lcdui",
      "name": "microemu",
      "url": "https://searchcode.com/codesearch/view/106094148/",
      "md5hash": "7eb296072a572c2b335b6351d79b0e4f",
      "lines": {
        "64": "",
        "33": "//TODO implement pointer events",
        "34": "public class TextBox extends Screen {",
        "69": "\t\t",
        "70": "\t\tsuper.setUI(DeviceFactory.getDevice().getUIFactory().createTextBoxUI(this));",
        "65": "\tpublic TextBox(String title, String text, int maxSize, int constraints) {",
        "75": "\tpublic void delete(int offset, int length) {",
        "76": "\t\tif (ui != null && ui.getClass().getName().equals(\"org.microemu.android.device.ui.AndroidTextBoxUI\")) {",
        "77": "\t\t\t((TextBoxUI) ui).delete(offset, length);",
        "52": "\t\tpublic int getCaretPosition() {",
        "53": "\t\t\treturn TextBox.this.getCaretPosition();",
        "56": "\t\tpublic String getText() {",
        "57": "\t\t\treturn TextBox.this.getString();",
        "60": "\t\tpublic int getConstraints() {",
        "61": "\t\t\treturn TextBox.this.getConstraints();",
        "30": "import org.microemu.device.InputMethodListener;",
        "31": "import org.microemu.device.ui.TextBoxUI;"
      },
      "id": 106094148,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/johnlawrenceaspden/hobby-code.git",
      "language": "Java",
      "linescount": 82,
      "location": "/javapackages/com/aspden/graphwidget/misc/boxobjects",
      "name": "hobby-code",
      "url": "https://searchcode.com/codesearch/view/106141384/",
      "md5hash": "8bcd766c5467c9b218a2ed34dee69e4e",
      "lines": {
        "16": "    public TextBox()",
        "24": "    public TextBox(String s)",
        "30": "    /** Add another line to a TextBox.",
        "23": "     */",
        "8": " */",
        "9": "public class TextBox implements BoxObject",
        "29": "",
        "13": "",
        "14": "    /** Creates a new empty TextBox.",
        "15": "     */"
      },
      "id": 106141384,
      "filename": "TextBox.java"
    },
    {
      "repo": "https://github.com/adam704a/PatientView.git",
      "language": "Java",
      "linescount": 53,
      "location": "/src/main/java/net/frontlinesms/plugins/patientview/ui/helpers/thinletformfields",
      "name": "PatientView",
      "url": "https://searchcode.com/codesearch/view/112139142/",
      "md5hash": "ee6d47f3ef200e6775662a1ad8794793",
      "lines": {
        "32": "\tpublic void textBoxKeyPressed(String text) {",
        "43": "\t\treturn thinlet.getText(textBox);",
        "49": "\t\tthinlet.setText(textBox, response);",
        "9": " */",
        "10": "public abstract class TextBox<E> extends ThinletFormField<E> {",
        "11": "",
        "12": "\tprotected Object textBox;",
        "14": "",
        "15": "\tprotected TextBox(ExtendedThinlet thinlet, String label, FormFieldDelegate delegate) {",
        "48": "\tpublic void setStringResponse(String response) {",
        "17": "\t\t// create the text box",
        "18": "\t\ttextBox = thinlet.createTextfield(null, null);",
        "19": "\t\t// add the text box",
        "42": "\tpublic String getStringResponse() {",
        "31": "\t */"
      },
      "id": 112139142,
      "filename": "TextBox.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 2640,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1599,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1188,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 43,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 32,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 31,
      "source": "CodePlex",
      "id": 5
    }
  ]
}