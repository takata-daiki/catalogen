{
  "matchterm": "ArrayRecord",
  "previouspage": null,
  "searchterm": "ArrayRecord",
  "query": "ArrayRecord",
  "language_filters": [
    {
      "count": 37,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 37,
  "results": [
    {
      "repo": "https://code.google.com/p/brackit/",
      "language": "Java",
      "linescount": 131,
      "location": "/src/main/java/org/brackit/xquery/record",
      "name": "brackit",
      "url": "https://searchcode.com/codesearch/view/13220835/",
      "md5hash": "f1dfc6f6a12408bb7927723f0dc31325",
      "lines": {
        "52": "",
        "43": " */",
        "44": "public class ArrayRecord extends AbstractRecord {",
        "53": "\tpublic ArrayRecord(QNm[] fields, Sequence[] values) {"
      },
      "id": 13220835,
      "filename": "ArrayRecord.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 724,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71597221/",
      "md5hash": "09ba77af5d3cf0b5ca49399b7a38747c",
      "lines": {
        "320": "            }",
        "321": "            for ( DynamicRecord arrayRecord : block.getValueRecords() )",
        "322": "                arrayPropertyStore.ensureHeavy( arrayRecord );",
        "323": "        }",
        "513": "",
        "588": "            // Fall back to dynamic array store",
        "514": "    private Collection<DynamicRecord> allocateArrayRecords( Object array )",
        "590": "            setSingleBlockValue( block, keyId, PropertyType.ARRAY, first( arrayRecords ).getId() );",
        "589": "            Collection<DynamicRecord> arrayRecords = allocateArrayRecords( value );",
        "313": "            {",
        "314": "                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( block.getSingleValueLong() );",
        "315": "                for ( DynamicRecord arrayRecord : arrayRecords )",
        "316": "                {",
        "317": "                    arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "318": "                    block.addValueRecord( arrayRecord );",
        "319": "                }"
      },
      "id": 71597221,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/ruderphilipp/community.git",
      "language": "Java",
      "linescount": 717,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/75402992/",
      "md5hash": "153e4b6fe984674193591a0cd56ccb4c",
      "lines": {
        "331": "                record.addValueRecord( arrayRecord );",
        "326": "        {",
        "327": "            Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( record.getSingleValueLong() );",
        "328": "            for ( DynamicRecord arrayRecord : arrayRecords )",
        "329": "            {",
        "330": "                arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "363": "                for ( DynamicRecord arrayRecord : arrayRecords )",
        "332": "            }",
        "365": "                    arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "366": "                    block.addValueRecord( arrayRecord );",
        "367": "                }",
        "560": "            setSingleBlockValue( block, keyId, PropertyType.ARRAY, arrayBlockId );",
        "561": "            Collection<DynamicRecord> arrayRecords = allocateArrayRecords( arrayBlockId, value );",
        "562": "            for ( DynamicRecord valueRecord : arrayRecords )",
        "364": "                {",
        "362": "                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( block.getSingleValueLong() );"
      },
      "id": 75402992,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 703,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291374/",
      "md5hash": "0945a61035a80961e0bb7adf4630f1c7",
      "lines": {
        "322": "            {",
        "323": "                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( block.getSingleValueLong() );",
        "324": "                for ( DynamicRecord arrayRecord : arrayRecords )",
        "325": "                {",
        "326": "                    arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "327": "                    block.addValueRecord( arrayRecord );",
        "328": "                }",
        "329": "            }",
        "330": "            for ( DynamicRecord arrayRecord : block.getValueRecords() )",
        "331": "            {",
        "588": "            for ( DynamicRecord valueRecord : arrayRecords )",
        "589": "            {",
        "584": "            // Fall back to dynamic array store",
        "585": "            Collection<DynamicRecord> arrayRecords = new ArrayList<>();",
        "587": "            setSingleBlockValue( block, keyId, PropertyType.ARRAY, first( arrayRecords ).getId() );",
        "586": "            allocateArrayRecords( arrayRecords, value, arrayAllocator );"
      },
      "id": 94291374,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 737,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67764588/",
      "md5hash": "a533cac375cc14ec71888f1a6b96f28e",
      "lines": {
        "368": "                for ( DynamicRecord arrayRecord : arrayRecords )",
        "369": "                {",
        "520": "",
        "521": "    private Collection<DynamicRecord> allocateArrayRecords( long valueBlockId,",
        "331": "        {",
        "332": "            Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( record.getSingleValueLong() );",
        "333": "            for ( DynamicRecord arrayRecord : arrayRecords )",
        "366": "            {",
        "367": "                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( block.getSingleValueLong() );",
        "336": "                record.addValueRecord( arrayRecord );",
        "337": "            }",
        "370": "                    arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "371": "                    block.addValueRecord( arrayRecord );",
        "334": "            {",
        "335": "                arrayRecord.setType( PropertyType.ARRAY.intValue() );"
      },
      "id": 67764588,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/mrbradparks/jOOQ.git",
      "language": "Java",
      "linescount": 14055,
      "location": "/jOOQ/src/main/java/org/jooq/impl",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/92818667/",
      "md5hash": "98ecdf9ab129edfd018751024bbc298e",
      "lines": {
        "4835": "     * <p>",
        "4836": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only",
        "4876": "     * fields, typically fetched from stored functions or from nested tables</li>",
        "4813": "     * <p>",
        "4814": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only",
        "4877": "     * <li> {@link ArrayRecord}: For Oracle-style <code>VARRAY</code> types.</li>"
      },
      "id": 92818667,
      "filename": "DSL.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 12962,
      "location": "/jOOQ/src/main/java/org/jooq/impl",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/58673720/",
      "md5hash": "4e0a8142d04c42a57aef2e9d3493f455",
      "lines": {
        "4613": "     * fields, typically fetched from stored functions or from nested tables</li>",
        "4550": "     * <p>",
        "4551": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only",
        "4614": "     * <li> {@link ArrayRecord}: For Oracle-style <code>VARRAY</code> types.</li>",
        "4572": "     * <p>",
        "4573": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only"
      },
      "id": 58673720,
      "filename": "DSL.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 1214,
      "location": "/jOOQ/src/main/java/org/jooq/impl",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16957133/",
      "md5hash": "9acddf385de8e141a5793250dfbdc0f1",
      "lines": {
        "64": "",
        "65": "import org.jooq.ArrayRecord;",
        "822": "        else if (ArrayRecord.class.isAssignableFrom(type)) {",
        "536": "            // TODO: [#523] Use array record meta data instead",
        "823": "            return (T) getArrayRecord(ctx, stmt.getArray(index), (Class<? extends ArrayRecord<?>>) type);",
        "824": "        }",
        "528": "",
        "529": "    private static ArrayRecord<?> getArrayRecord(Configuration configuration, Array array, Class<? extends ArrayRecord<?>> type)",
        "1049": "        }",
        "821": "        }",
        "214": "        }",
        "215": "        else if (ArrayRecord.class.isAssignableFrom(type)) {",
        "216": "            return (T) getArrayRecord(configuration, stream.readArray(), (Class<? extends ArrayRecord<?>>) type);",
        "537": "            ArrayRecord<?> record = Util.newArrayRecord(type, configuration);",
        "1050": "        else if (ArrayRecord.class.isAssignableFrom(type)) {"
      },
      "id": 16957133,
      "filename": "FieldTypeHelper.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 5983,
      "location": "/jOOQ/src/main/java/org/jooq/impl",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16957197/",
      "md5hash": "7bfc86da11fee0da92c6fcd05ea90b24",
      "lines": {
        "576": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only",
        "592": "     * <p>",
        "610": "    @Support(ORACLE)",
        "611": "    public static Table<?> unnest(ArrayRecord<?> array) {",
        "550": "    /**",
        "551": "     * A synonym for {@link #unnest(ArrayRecord)}",
        "552": "     *",
        "553": "     * @see #unnest(ArrayRecord)",
        "652": "        // The field is an Oracle-style VARRAY field",
        "620": "     * fields, typically fetched from stored functions or from nested tables</li>",
        "621": "     * <li> {@link ArrayRecord}: For Oracle-style <code>VARRAY</code> types.</li>",
        "653": "        else if (ArrayRecord.class.isAssignableFrom(cursor.getDataType().getType())) {",
        "80": "import org.jooq.AggregateFunction;",
        "81": "import org.jooq.ArrayRecord;",
        "593": "     * For Oracle, use {@link #table(ArrayRecord)} instead, as Oracle knows only",
        "575": "     * <p>"
      },
      "id": 16957197,
      "filename": "Factory.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 764,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616537/",
      "md5hash": "ceef2e81ed4bfc31bb2d78a040b39bc0",
      "lines": {
        "384": "            for ( DynamicRecord arrayRecord : arrayRecords )",
        "385": "            {",
        "386": "                arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "387": "                record.addValueRecord( arrayRecord );",
        "388": "            }",
        "421": "                    arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "422": "                    block.addValueRecord( arrayRecord );",
        "417": "            {",
        "616": "            setSingleBlockValue( block, keyId, PropertyType.ARRAY, arrayBlockId );",
        "617": "            Collection<DynamicRecord> arrayRecords = allocateArrayRecords( arrayBlockId, value );",
        "618": "            for ( DynamicRecord valueRecord : arrayRecords )",
        "423": "                }",
        "418": "                Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( block.getSingleValueLong() );",
        "619": "            {",
        "419": "                for ( DynamicRecord arrayRecord : arrayRecords )",
        "420": "                {",
        "383": "            Collection<DynamicRecord> arrayRecords = arrayPropertyStore.getLightRecords( record.getSingleValueLong() );"
      },
      "id": 5616537,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 159,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/legacystore",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67766402/",
      "md5hash": "fc9e644e7f8bddf010b28794081574e5",
      "lines": {
        "64": "            List<LegacyDynamicRecord> arrayRecords =",
        "66": "                            record.getPropBlock() );",
        "67": "            for ( LegacyDynamicRecord arrayRecord : arrayRecords )",
        "68": "            {",
        "69": "                arrayRecord.setType( PropertyType.ARRAY.intValue() );",
        "70": "            }",
        "71": "            return arrayRecords;",
        "63": "        {"
      },
      "id": 67766402,
      "filename": "LegacyDynamicRecordFetcher.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 789,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955355/",
      "md5hash": "d5759ec332eb566a26fbaef528c34f2f",
      "lines": {
        "480": "    protected TableField<TArraysRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "675": "    @Override",
        "484": "    @Override",
        "485": "    protected TableField<TArraysRecord, ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "680": "    @Override",
        "681": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "50": "",
        "51": "import org.jooq.ArrayRecord;",
        "469": "    @Override",
        "470": "    protected TableField<TArraysRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "676": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "474": "    @Override",
        "475": "    protected TableField<TArraysRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "671": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "670": "    @Override",
        "479": "    @Override"
      },
      "id": 16955355,
      "filename": "jOOQH2Test.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 821,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955357/",
      "md5hash": "33812add468eea5324b5f4e63139ef22",
      "lines": {
        "64": "import org.jooq.ArrayRecord;",
        "670": "    @Override",
        "462": "    @Override",
        "463": "    protected TableField<TArraysRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "660": "    @Override",
        "467": "    @Override",
        "468": "    protected TableField<TArraysRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "661": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "665": "    @Override",
        "472": "    @Override",
        "473": "    protected TableField<TArraysRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "666": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "671": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "477": "    @Override",
        "478": "    protected TableField<TArraysRecord, ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "63": ""
      },
      "id": 16955357,
      "filename": "jOOQPostgresTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 740,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955359/",
      "md5hash": "e5653c2985ff41ba414bb69fdbaf9ade",
      "lines": {
        "450": "    @Override",
        "451": "    protected TableField<XUnusedRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "646": "    @Override",
        "455": "    @Override",
        "456": "    protected TableField<XUnusedRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "652": "    @Override",
        "647": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "460": "    @Override",
        "461": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "653": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "658": "    @Override",
        "659": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "54": "",
        "55": "import org.jooq.ArrayRecord;",
        "445": "    @Override",
        "446": "    protected TableField<XUnusedRecord, ArrayRecord<String>> TArrays_STRING_R() {"
      },
      "id": 16955359,
      "filename": "jOOQSybaseTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 759,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955360/",
      "md5hash": "3783ec224aeb3b505b31d8c0115fe80e",
      "lines": {
        "662": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "455": "    @Override",
        "456": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<String>> TArrays_STRING_R() {",
        "652": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "651": "    @Override",
        "460": "    @Override",
        "50": "",
        "461": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "656": "    @Override",
        "465": "    @Override",
        "466": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Date>> TArrays_DATE_R() {",
        "51": "import org.jooq.ArrayRecord;",
        "661": "    @Override",
        "470": "    @Override",
        "471": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "657": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {"
      },
      "id": 16955360,
      "filename": "jOOQIngresTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 742,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955362/",
      "md5hash": "4e966e5a088e2c3d9d2eeadeab23e7ef",
      "lines": {
        "672": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "463": "    @Override",
        "464": "    protected TableField<XUnusedRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "661": "    @Override",
        "50": "",
        "51": "import org.jooq.ArrayRecord;",
        "468": "    @Override",
        "469": "    protected TableField<XUnusedRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "662": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "473": "    @Override",
        "474": "    protected TableField<XUnusedRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "667": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "671": "    @Override",
        "666": "    @Override",
        "478": "    @Override",
        "479": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {"
      },
      "id": 16955362,
      "filename": "jOOQDB2Test.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 745,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955363/",
      "md5hash": "3c98d4fe7db9d5e678a6335685a6f20d",
      "lines": {
        "450": "    @Override",
        "451": "    protected TableField<XUnusedRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "455": "    @Override",
        "456": "    protected TableField<XUnusedRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "649": "    @Override",
        "650": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "460": "    @Override",
        "461": "    protected TableField<XUnusedRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "46": "",
        "47": "import org.jooq.ArrayRecord;",
        "656": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "465": "    @Override",
        "466": "    protected TableField<XUnusedRecord, ? extends ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "661": "    @Override",
        "662": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "655": "    @Override"
      },
      "id": 16955363,
      "filename": "jOOQCUBRIDTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 830,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955365/",
      "md5hash": "fea3a4400a1fc64e947b1c11da6d903d",
      "lines": {
        "692": "    @Override",
        "68": "",
        "69": "import org.jooq.ArrayRecord;",
        "489": "    @Override",
        "490": "    protected TableField<XUnusedRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "683": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "494": "    @Override",
        "495": "    protected TableField<XUnusedRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "688": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "499": "    @Override",
        "500": "    protected TableField<XUnusedRecord, ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "693": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "484": "    @Override",
        "687": "    @Override",
        "682": "    @Override",
        "485": "    protected TableField<XUnusedRecord, ArrayRecord<String>> TArrays_STRING_R() {"
      },
      "id": 16955365,
      "filename": "jOOQMySQLTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 743,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955366/",
      "md5hash": "b2e4594bcacce36881db4ea3ce015bf1",
      "lines": {
        "656": "    @Override",
        "651": "    @Override",
        "453": "    @Override",
        "454": "    protected TableField<TArraysRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "458": "    @Override",
        "459": "    protected TableField<TArraysRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "652": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "463": "    @Override",
        "464": "    protected TableField<TArraysRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "657": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "468": "    @Override",
        "469": "    protected TableField<TArraysRecord, ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "662": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "60": "",
        "61": "import org.jooq.ArrayRecord;",
        "661": "    @Override"
      },
      "id": 16955366,
      "filename": "jOOQHSQLDBTest.java"
    },
    {
      "repo": "git://github.com/jOOQ/jOOQ.git",
      "language": "Java",
      "linescount": 739,
      "location": "/jOOQ-test/src/org/jooq/test",
      "name": "jOOQ",
      "url": "https://searchcode.com/codesearch/view/16955368/",
      "md5hash": "c585fd756cfaf9fe54b68353f95ddc95",
      "lines": {
        "480": "    protected TableField<TArraysRecord, ArrayRecord<Date>> TArrays_DATE_R() {",
        "676": "    protected <T extends ArrayRecord<String>> Field<T> FArrays3Field_R(Field<T> array) {",
        "59": "",
        "484": "    @Override",
        "485": "    protected TableField<TArraysRecord, ArrayRecord<Long>> TArrays_NUMBER_LONG_R() {",
        "671": "    protected <T extends ArrayRecord<Long>> Field<T> FArrays2Field_R(Field<T> array) {",
        "675": "    @Override",
        "469": "    @Override",
        "470": "    protected TableField<TArraysRecord, ArrayRecord<String>> TArrays_STRING_R() {",
        "665": "    @Override",
        "474": "    @Override",
        "475": "    protected TableField<TArraysRecord, ArrayRecord<Integer>> TArrays_NUMBER_R() {",
        "60": "import org.jooq.ArrayRecord;",
        "666": "    protected <T extends ArrayRecord<Integer>> Field<T> FArrays1Field_R(Field<T> array) {",
        "670": "    @Override",
        "479": "    @Override"
      },
      "id": 16955368,
      "filename": "jOOQHSQLDBTest2.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 33,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Google Code",
      "id": 1
    }
  ]
}