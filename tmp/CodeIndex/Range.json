{
  "matchterm": "Range",
  "previouspage": null,
  "searchterm": "Range",
  "query": "Range",
  "language_filters": [
    {
      "count": 80465,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 80465,
  "results": [
    {
      "repo": "https://github.com/sanger-pathogens/Artemis.git",
      "language": "Java",
      "linescount": 247,
      "location": "/uk/ac/sanger/artemis/io",
      "name": "Artemis",
      "url": "https://searchcode.com/codesearch/view/105729351/",
      "md5hash": "45a0d7329b3527c9121b8e1d825f0ffb",
      "lines": {
        "32": "/**",
        "1": "/* Range.java",
        "2": " *",
        "35": " *  @author Kim Rutherford",
        "36": " *  @version $Id: Range.java,v 1.1 2004-06-09 09:50:18 tjc Exp $",
        "38": "",
        "33": " *  This class represents an inclusive range of integers.",
        "40": "  /**",
        "41": "   *  Create a new Range object.  The start must be less than or equal to the",
        "42": "   *  end.",
        "39": "public class Range {",
        "44": "   *  @param end the end of the range",
        "43": "   *  @param start the start of the range",
        "22": " *",
        "23": " * $Header: //tmp/pathsoft/artemis/uk/ac/sanger/artemis/io/Range.java,v 1.1 2004-06-09 09:50:18 tjc Exp $"
      },
      "id": 105729351,
      "filename": "Range.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 613,
      "location": "/zss/src/org/zkoss/zss/model",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3970672/",
      "md5hash": "a8ec860f6feee3f2b5430923b2585bcc",
      "lines": {
        "1": "/* Range.java",
        "2": "",
        "131": "\t * Diagno borders of a range.  See borderIndex parameter of {@link #setBorders(short borderIndex, BorderStyle, String)}",
        "97": "\t/**",
        "98": "\t * Left border of a range. See borderIndex parameter of {@link #setBorders(short borderIndex, BorderStyle, String)}",
        "38": " */",
        "33": "/**",
        "39": "public interface Range {",
        "34": " * Range that represents a cell, a row, a column, or selection of cells containing one or ",
        "85": "\t/**",
        "86": "\t * Bottom border of a range. See borderIndex parameter of {@link #setBorders(short borderIndex, BorderStyle, String)}",
        "89": "\t/**",
        "90": "\t * Right border of a range. See borderIndex parameter of {@link #setBorders(short borderIndex, BorderStyle, String)}",
        "93": "\t/**",
        "94": "\t * Top border of a range. See borderIndex parameter of {@link #setBorders(short borderIndex, BorderStyle, String)}",
        "130": "\t/**"
      },
      "id": 3970672,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/santoshainsight/googleads-java-lib.git",
      "language": "Java",
      "linescount": 163,
      "location": "/modules/adwords_axis/src/main/java/com/google/api/ads/adwords/axis/v201309/o",
      "name": "googleads-java-lib",
      "url": "https://searchcode.com/codesearch/view/97442122/",
      "md5hash": "7a2c3e3bdb5a293568efcd22167e3510",
      "lines": {
        "32": "     * Gets the min value for this Range.",
        "1": "/**",
        "2": " * Range.java",
        "51": "    /**",
        "41": "    /**",
        "42": "     * Sets the min value for this Range.",
        "11": "/**",
        "12": " * Represents a range of values that has either an upper or a lower",
        "14": " */",
        "15": "public class Range  implements java.io.Serializable {",
        "19": "",
        "20": "    public Range() {",
        "22": "",
        "23": "    public Range(",
        "52": "     * Gets the max value for this Range.",
        "31": "    /**"
      },
      "id": 97442122,
      "filename": "Range.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 99,
      "location": "/plugins/DirtyGutter/tags/release-0-2/src/lcm/providers/simple",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1366203/",
      "md5hash": "9c1912b489d1f8b9b8ea642480087b1c",
      "lines": {
        "32": "\tpublic Range(Range other)",
        "1": "/*",
        "2": " * Range - A range of changed lines.",
        "38": "\t{",
        "39": "\t\tRange other = (Range) arg0;",
        "40": "\t\t/* This check enables using TreeSet<Range>.contains() to find if:",
        "41": "\t\t * - a 1-line range is in the set (any overlapping range contains it).",
        "42": "\t\t * - a multi-line range overlaps with a range in the set.",
        "43": "\t\t */",
        "51": "\t}",
        "52": "\t// Returns true if this range overlaps with 'other'.",
        "53": "\tpublic boolean overlaps(Range other)",
        "23": "@SuppressWarnings(\"unchecked\")",
        "24": "public class Range implements Comparable",
        "26": "\tpublic int first, last;",
        "27": "\tpublic Range(int first, int num)",
        "31": "\t}"
      },
      "id": 1366203,
      "filename": "Range.java"
    },
    {
      "repo": "https://jedit.svn.sourceforge.net/svnroot/jedit",
      "language": "Java",
      "linescount": 70,
      "location": "/plugins/DirtyGutter/tags/release-0-2/src/lcm/providers/diff",
      "name": "jedit",
      "url": "https://searchcode.com/codesearch/view/1366199/",
      "md5hash": "427681b35cb4052a22bd7b1304e927a2",
      "lines": {
        "1": "/*",
        "2": " * Range - A range of changed lines.",
        "33": "\t}",
        "41": "\t{",
        "42": "\t\tRange other = (Range) arg0;",
        "43": "\t\t/* This check enables using TreeSet<Range>.contains() to find if:",
        "44": "\t\t * - a 1-line range is in the set (any overlapping range contains it).",
        "34": "\tpublic Range(int first, int num, ChangeType type)",
        "46": "\t\t */",
        "45": "\t\t * - a multi-line range overlaps with a range in the set.",
        "56": "\tpublic boolean overlaps(Range other)",
        "54": "\t}",
        "23": "@SuppressWarnings(\"unchecked\")",
        "24": "public class Range implements Comparable",
        "55": "\t// Returns true if this range overlaps with 'other'.",
        "29": "",
        "30": "\tpublic Range(int first, int num)"
      },
      "id": 1366199,
      "filename": "Range.java"
    },
    {
      "repo": "git://github.com/rstudio/rstudio.git",
      "language": "Java",
      "linescount": 106,
      "location": "/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ace",
      "name": "rstudio",
      "url": "https://searchcode.com/codesearch/view/7489708/",
      "md5hash": "6a159fb521dcf661f3a6a1e3a04a5ddc",
      "lines": {
        "32": "   public static native Range fromPoints(Position start, Position end) /*-{",
        "1": "/*",
        "2": " * Range.java",
        "33": "      var Range = $wnd.require('ace/range').Range;",
        "18": "",
        "19": "public class Range extends JavaScriptObject",
        "20": "{",
        "21": "   protected Range() {}",
        "22": "   ",
        "23": "   public static final native Range create(int startRow,",
        "27": "   /*-{",
        "28": "      var Range = $wnd.require('ace/range').Range;",
        "29": "      return new Range(startRow, startColumn, endRow, endColumn);",
        "30": "   }-*/;",
        "31": ""
      },
      "id": 7489708,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/slqin/rstudio.git",
      "language": "Java",
      "linescount": 44,
      "location": "/src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ace",
      "name": "rstudio",
      "url": "https://searchcode.com/codesearch/view/99396400/",
      "md5hash": "62ff4902c008c0c5ae3e9fabcc4b5825",
      "lines": {
        "1": "/*",
        "2": " * Range.java",
        "39": "",
        "40": "   public final native Range extend(int row, int column) /*-{",
        "18": "",
        "19": "public class Range extends JavaScriptObject",
        "20": "{",
        "21": "   protected Range() {}",
        "22": "",
        "23": "   public static native Range fromPoints(Position start, Position end) /*-{",
        "24": "      var Range = $wnd.require('ace/range').Range;",
        "25": "      return Range.fromPoints(start, end);",
        "26": "   }-*/;"
      },
      "id": 99396400,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/matthewoliver/SpyD.git",
      "language": "Java",
      "linescount": 56,
      "location": "/ext/src/inetlib-1.1.1/source/gnu/inet/nntp",
      "name": "SpyD",
      "url": "https://searchcode.com/codesearch/view/114607989/",
      "md5hash": "889e8c97d4aa65be21fa140c749b54c1",
      "lines": {
        "1": "/*",
        "2": " * Range.java",
        "50": "   * Indicates whether this range contains the specfied article number.",
        "49": "  /**",
        "41": "/**",
        "42": " * A range of article numbers.",
        "45": " */",
        "46": "public abstract class Range"
      },
      "id": 114607989,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/gdroc/Artemis.git",
      "language": "Java",
      "linescount": 228,
      "location": "/uk/ac/sanger/artemis/io",
      "name": "Artemis",
      "url": "https://searchcode.com/codesearch/view/66766963/",
      "md5hash": "3df3a2bbaca12989cbbad469c922c66e",
      "lines": {
        "32": "/**",
        "1": "/* Range.java",
        "2": " *",
        "35": " *  @author Kim Rutherford",
        "36": " *  @version $Id: Range.java,v 1.1 2004-06-09 09:50:18 tjc Exp $",
        "38": "",
        "33": " *  This class represents an inclusive range of integers.",
        "40": "  /**",
        "41": "   *  Create a new Range object.  The start must be less than or equal to the",
        "42": "   *  end.",
        "39": "public class Range {",
        "44": "   *  @param end the end of the range",
        "43": "   *  @param start the start of the range",
        "22": " *",
        "23": " * $Header: //tmp/pathsoft/artemis/uk/ac/sanger/artemis/io/Range.java,v 1.1 2004-06-09 09:50:18 tjc Exp $"
      },
      "id": 66766963,
      "filename": "Range.java"
    },
    {
      "repo": "https://bitbucket.org/gargdeendayal/procyon",
      "language": "Java",
      "linescount": 196,
      "location": "/Procyon.CompilerTools/src/main/java/com/strobel/decompiler/ast",
      "name": "Procyon",
      "url": "https://searchcode.com/codesearch/view/67347939/",
      "md5hash": "9c4983c54dc8a52b94e3bfadce9c7fcf",
      "lines": {
        "32": "    public Range(final int start, final int end) {",
        "1": "/*",
        "2": " * Range.java",
        "64": "        }",
        "60": "            final Range range = (Range) o;",
        "63": "                   range._start == _start;",
        "61": "",
        "24": "",
        "25": "public final class Range implements Comparable<Range> {",
        "58": "",
        "59": "        if (o instanceof Range) {",
        "28": "",
        "29": "    public Range() {",
        "62": "            return range._end == _end &&",
        "31": ""
      },
      "id": 67347939,
      "filename": "Range.java"
    },
    {
      "repo": "git://github.com/rstudio/rstudio.git",
      "language": "Java",
      "linescount": 128,
      "location": "/src/gwt/src/org/rstudio/core/client/dom/impl",
      "name": "rstudio",
      "url": "https://searchcode.com/codesearch/view/7490362/",
      "md5hash": "6f0c53c880ed02e50490d2f59d77fd68",
      "lines": {
        "1": "/*",
        "2": " * Range.java",
        "27": "   public static native Range create(Document doc) /*-{",
        "68": "                                                   Range sourceRange) /*-{",
        "69": "      return this.compareBoundaryPoints(how, sourceRange) ;",
        "70": "   }-*/;",
        "60": "      return this.cloneRange() ;",
        "67": "   public final native short compareBoundaryPoints(short how, ",
        "20": "",
        "21": "class Range extends JavaScriptObject",
        "22": "{",
        "58": "",
        "59": "   public final native Range cloneRange() /*-{",
        "28": "      return doc.createRange() ;",
        "29": "   }-*/; "
      },
      "id": 7490362,
      "filename": "Range.java"
    },
    {
      "repo": "git://github.com/rstudio/rstudio.git",
      "language": "Java",
      "linescount": 28,
      "location": "/src/gwt/src/org/rstudio/studio/client/workbench/views/vcs/common/diff",
      "name": "rstudio",
      "url": "https://searchcode.com/codesearch/view/7489872/",
      "md5hash": "ea0100a54dd05719b3264200f4086234",
      "lines": {
        "16": "",
        "1": "/*",
        "2": " * Range.java",
        "19": "   Range(int startRow, int rowCount)",
        "17": "public class Range",
        "18": "{"
      },
      "id": 7489872,
      "filename": "Range.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/sqs-util",
      "language": "Java",
      "linescount": 60,
      "location": "/src/main/java/net/sqs2/util",
      "name": "sqs-util",
      "url": "https://searchcode.com/codesearch/view/128490804/",
      "md5hash": "6210e07ba7819b7dade4e2584b994521",
      "lines": {
        "1": "/**",
        "2": " *  Range.java",
        "24": "",
        "25": "public class Range implements Serializable {",
        "29": "",
        "30": "\tpublic Range(int min, int max) {"
      },
      "id": 128490804,
      "filename": "Range.java"
    },
    {
      "repo": "https://bitbucket.org/eleumik/sqs-util",
      "language": "Java",
      "linescount": 60,
      "location": "/src/main/java/net/sqs2/util",
      "name": "sqs-util",
      "url": "https://searchcode.com/codesearch/view/128542537/",
      "md5hash": "6210e07ba7819b7dade4e2584b994521",
      "lines": {
        "1": "/**",
        "2": " *  Range.java",
        "24": "",
        "25": "public class Range implements Serializable {",
        "29": "",
        "30": "\tpublic Range(int min, int max) {"
      },
      "id": 128542537,
      "filename": "Range.java"
    },
    {
      "repo": "https://bitbucket.org/eleumik/sqs-util-16",
      "language": "Java",
      "linescount": 60,
      "location": "/src/main/java/net/sqs2/util",
      "name": "sqs-util-16",
      "url": "https://searchcode.com/codesearch/view/128758492/",
      "md5hash": "6210e07ba7819b7dade4e2584b994521",
      "lines": {
        "1": "/**",
        "2": " *  Range.java",
        "24": "",
        "25": "public class Range implements Serializable {",
        "29": "",
        "30": "\tpublic Range(int min, int max) {"
      },
      "id": 128758492,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/infinitegraph/IGLinkHunterSample.git",
      "language": "Java",
      "linescount": 236,
      "location": "/src/com/infinitegraph/samples/ighunter/util",
      "name": "IGLinkHunterSample",
      "url": "https://searchcode.com/codesearch/view/73790673/",
      "md5hash": "4bb49a4c626b30123f214ae07c128b8f",
      "lines": {
        "128": "\t * Checks whether the specified range is entirely contained in the range,",
        "130": "\t * ",
        "131": "\t * @param range",
        "132": "\t *            The range to be checked. Must not be {@code null}.",
        "133": "\t * @return {@code false} if {@code range} has a lower bound lower than the",
        "44": "/**",
        "45": " * A range is defined by a begin and an end. It allows checking whether a value",
        "46": " * is within the range or outside. A range can be open at one or both ends, i.",
        "47": " * e. the range is assumed to be endless in that direction.",
        "48": " * ",
        "51": " */",
        "52": "public final class Range<T extends Comparable<T>>",
        "58": "",
        "59": "\tpublic Range()",
        "127": "\t/**"
      },
      "id": 73790673,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 291,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/model",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72854198/",
      "md5hash": "38556d514cac9844a0eb01e72842c173",
      "lines": {
        "132": "",
        "37": "",
        "38": "    public Range(Sheet sheet, int fromColumn, int fromRow, int toCol, int toRow) {",
        "135": "            return false;",
        "136": "        }",
        "137": "        if(!sheet.equals(range.getSheet())) {",
        "76": "\t/**",
        "77": "\t * @return Collection of the cells contained in the range",
        "46": "    public Range(Sheet sheet, Cell cell) {",
        "45": "",
        "19": " */",
        "20": "public class Range implements Comparable<Range> {",
        "53": "",
        "54": "    public Range(Sheet sheet) {",
        "134": "        if(range == null) {",
        "133": "    public boolean containsRange(Range range) {"
      },
      "id": 72854198,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/julianhaslinger/titan.git",
      "language": "Java",
      "linescount": 180,
      "location": "/titan-core/src/main/java/com/thinkaurelius/titan/util/interval",
      "name": "titan",
      "url": "https://searchcode.com/codesearch/view/73090226/",
      "md5hash": "f86efa940da0021e492eff915ba2ad1c",
      "lines": {
        "7": "/**",
        "8": " * A Range is a proper {@link AtomicInterval} with different start and end points.",
        "9": " * <p/>",
        "10": " * Note that a range could also be defined with identical bounds. However, in that case it is preferable to use",
        "11": " * {@link PointInterval} for efficiency.",
        "12": " * The start and/or end point of a range can be null which denotes the open interval in the start and/or end direction.",
        "13": " *",
        "14": " * @param <V> Type of attribute for which the range is defined.",
        "16": " */",
        "17": "public class Range<V extends Comparable<V>> implements AtomicInterval<V> {",
        "24": "    /**",
        "25": "     * Constructs a new range. The start point is considered inclusive and the end point exclusive.",
        "26": "     *",
        "27": "     * @param start Starting attribute of range",
        "28": "     * @param end   Ending attribute of range"
      },
      "id": 73090226,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/tkyashiro/android_opencv_test.git",
      "language": "Java",
      "linescount": 100,
      "location": "/OpenCV-2.3.1/src/org/opencv/core",
      "name": "android_opencv_test",
      "url": "https://searchcode.com/codesearch/view/73715548/",
      "md5hash": "cbcaea096981eaa9b4c0e265c0c35077",
      "lines": {
        "6": " * The class is used to specify a row or a column span in a matrix (\"Mat\") and",
        "7": " * for many other purposes. \"Range(a,b)\" is basically the same as \"a:b\" in",
        "8": " * Matlab or \"a..b\" in Python. As in Python, \"start\" is an inclusive left",
        "9": " * boundary of the range and \"end\" is an exclusive right boundary of the range.",
        "11": " *",
        "12": " * The static method \"Range.all()\" returns a special variable that means \"the",
        "13": " * whole sequence\" or \"the whole range\", just like \" \":\" \" in Matlab or \" \"...\"",
        "14": " * \" in Python. All the methods and functions in OpenCV that take \"Range\"",
        "15": " * support this special \"Range.all()\" value. But, of course, in case of your",
        "16": " * own custom processing, you will probably have to check and handle it",
        "18": " *",
        "19": " * @see <a href=\"http://opencv.itseez.com/modules/core/doc/basic_structures.html#range\">org.opencv.core.Range</a>",
        "20": " */",
        "21": "public class Range {",
        "24": "",
        "25": "    public Range(int s, int e) {"
      },
      "id": 73715548,
      "filename": "Range.java"
    },
    {
      "repo": "https://github.com/flavoi/roboearth.git",
      "language": "Java",
      "linescount": 146,
      "location": "/re_comm/msg_gen/java/ros/pkg/sensor_msgs/msg",
      "name": "roboearth",
      "url": "https://searchcode.com/codesearch/view/73742371/",
      "md5hash": "ad25af088e6be29f4e2788eb6ec3a860",
      "lines": {
        "1": "/* Auto-generated by genmsg_java.py for file /opt/ros/fuerte/share/sensor_msgs/msg/Range.msg */",
        "2": "",
        "6": "",
        "7": "public class Range extends ros.communication.Message {",
        "13": "  public float field_of_view;",
        "14": "  public float min_range;",
        "15": "  public float max_range;",
        "16": "  public float range;",
        "17": "",
        "18": "  public Range() {",
        "20": "",
        "21": "  public static java.lang.String __s_getDataType() { return \"sensor_msgs/Range\"; }",
        "24": "  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }",
        "25": "  public static java.lang.String __s_getMessageDefinition() { return \"# Single range reading from an active ranger that emits energy and reports\\n\" +",
        "26": "\"# one range reading that is valid along an arc at the distance measured. \\n\" +"
      },
      "id": 73742371,
      "filename": "Range.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 39892,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 29984,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8575,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1180,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 380,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 183,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 176,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 70,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 25,
      "source": "Gitorious",
      "id": 10
    }
  ]
}