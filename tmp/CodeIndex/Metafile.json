{
  "matchterm": "Metafile",
  "previouspage": null,
  "searchterm": "Metafile",
  "query": "Metafile",
  "language_filters": [
    {
      "count": 509,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 509,
  "results": [
    {
      "repo": "https://github.com/dorefiend/pig.git",
      "language": "Java",
      "linescount": 257,
      "location": "/contrib/zebra/src/java/org/apache/hadoop/zebra/io",
      "name": "pig",
      "url": "https://searchcode.com/codesearch/view/59025649/",
      "md5hash": "c7838dea0be0024598e622f607073aaf",
      "lines": {
        "129": "      try {",
        "130": "        if (metaFile != null) {",
        "131": "          metaFile.close();",
        "132": "          metaFile = null;",
        "133": "        }",
        "140": "          try {",
        "138": "      } finally {",
        "43": " */",
        "44": "class MetaFile {",
        "45": "  // MetaFile is just a namespace object.",
        "46": "  private MetaFile() {",
        "141": "            metaFile.close();",
        "144": "          }",
        "145": "          metaFile = null;",
        "139": "        if (metaFile != null) {"
      },
      "id": 59025649,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://github.com/Toilal/bitlet.git",
      "language": "Java",
      "linescount": 235,
      "location": "/src/main/java/org/bitlet/wetorrent",
      "name": "bitlet",
      "url": "https://searchcode.com/codesearch/view/75025020/",
      "md5hash": "5018a792451b667ed6910c1e59abe51a",
      "lines": {
        "112": "",
        "113": "    public Metafile() {",
        "41": "",
        "42": "public class Metafile extends Bencode {",
        "59": "    /** ",
        "60": "     * Creates a new instance of Metafile  ",
        "61": "     */",
        "62": "    public Metafile(InputStream is) throws IOException, NoSuchAlgorithmException {"
      },
      "id": 75025020,
      "filename": "Metafile.java"
    },
    {
      "repo": "https://bitbucket.org/msladek/vaultage.git",
      "language": "Java",
      "linescount": 50,
      "location": "/src/main/java/org/vaultage/commons/file/meta",
      "name": "vaultage",
      "url": "https://searchcode.com/codesearch/view/45474483/",
      "md5hash": "b9f82d1c80a4da9aa822582291ca8b0c",
      "lines": {
        "33": "  public boolean equals(Object obj) {",
        "34": "    if (obj instanceof MetaFile) {",
        "35": "      MetaFile other = (MetaFile) obj;",
        "4": "",
        "5": "public final class MetaFile extends MetaFolder {",
        "36": "      return super.equals(other) && Objects.equals(hash, other.hash)",
        "11": "",
        "12": "  public MetaFile(String path, long changeDate, String hash, long size) {",
        "45": "    return \"MetaFile [path=\" + getPath() + \", changeDate=\" + getChangeDate() + \", hash=\"",
        "44": "  public String toString() {"
      },
      "id": 45474483,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://bitbucket.org/vaultage/vaultage-shared.git",
      "language": "Java",
      "linescount": 50,
      "location": "/src/main/java/org/vaultage/shared/file/meta",
      "name": "vaultage-shared",
      "url": "https://searchcode.com/codesearch/view/50071741/",
      "md5hash": "07656480453210fe96f7e0bc78d84376",
      "lines": {
        "33": "  public boolean equals(Object obj) {",
        "34": "    if (obj instanceof MetaFile) {",
        "35": "      MetaFile other = (MetaFile) obj;",
        "4": "",
        "5": "public final class MetaFile extends MetaFolder {",
        "36": "      return super.equals(other) && Objects.equals(hash, other.hash)",
        "11": "",
        "12": "  public MetaFile(String path, long changeDate, String hash, long size) {",
        "45": "    return \"MetaFile [path=\" + getPath() + \", changeDate=\" + getChangeDate() + \", hash=\"",
        "44": "  public String toString() {"
      },
      "id": 50071741,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://github.com/GunioRobot/hello.git",
      "language": "Java",
      "linescount": 33,
      "location": "/source/org/limewire/hello/bittorrent/meta",
      "name": "hello",
      "url": "https://searchcode.com/codesearch/view/67502553/",
      "md5hash": "a665c1ac398b273366a4ffb7bfa62428",
      "lines": {
        "24": "\t",
        "27": "\t\tthis.meta            = meta;",
        "7": "/** Information about one file listed in a .torrent file. */",
        "8": "public class MetaFile {",
        "25": "\t/** Make a new MetaFile object, grouping together the given information from a .torrent file about one file. */",
        "26": "\tpublic MetaFile(Meta meta, Stripe stripeInTorrent, PathName path) {",
        "11": "\t",
        "12": "\t/** A link up to the Meta object that represents the .torrent file this MetaFile holds information from. */"
      },
      "id": 67502553,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://bitbucket.org/vaultage/vaultage-shared.git",
      "language": "Java",
      "linescount": 44,
      "location": "/src/main/java/org/vaultage/shared/fs/meta",
      "name": "vaultage-shared",
      "url": "https://searchcode.com/codesearch/view/136446369/",
      "md5hash": "3b584923e2c1712c9a111aa01fb28d0b",
      "lines": {
        "5": "",
        "6": "public final class MetaFile extends MetaFolder {",
        "39": "    return \"MetaFile [path=\" + getPath() + \", changeDate=\" + getChangeDate() + \", hash=\" + hash",
        "38": "  public String toString() {",
        "12": "  public MetaFile(String path, Date changeDate, String hash) {",
        "11": "",
        "28": "  public boolean equals(Object obj) {",
        "29": "    if (obj instanceof MetaFile) {",
        "30": "      MetaFile other = (MetaFile) obj;",
        "31": "      return super.equals(other) && Objects.equals(hash, other.hash);"
      },
      "id": 136446369,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://github.com/bherrmann7/Car-Cast.git",
      "language": "Java",
      "linescount": 192,
      "location": "/cc/src/com/jadn/cc/services",
      "name": "Car-Cast",
      "url": "https://searchcode.com/codesearch/view/106962343/",
      "md5hash": "7b73976d0dfdfe0cb8b3678d085686d9",
      "lines": {
        "32": "\t\t\ttry {",
        "33": "\t\t\t\tproperties.load(new FileInputStream(metaFile));",
        "34": "\t\t\t\t// Log.i(\"metafile\", properties.toString());",
        "35": "\t\t\t} catch (Exception e) {",
        "93": "",
        "16": " */",
        "17": "public class MetaFile {",
        "94": "\tpublic MetaFile(MetaNet metaNet, File castFile) {",
        "154": "\t\t\tLog.e(\"MetaFile\", \"saving meta data\", e);",
        "153": "\t\t} catch (Throwable e) {",
        "26": "",
        "27": "\tMetaFile(File file) {",
        "29": "",
        "30": "\t\tFile metaFile = getMetaPropertiesFile();",
        "31": "\t\tif (metaFile.exists()) {"
      },
      "id": 106962343,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://gitlab.com/georgedorn/Car-Cast.git",
      "language": "Java",
      "linescount": 110,
      "location": "/src/com/jadn/cc/services",
      "name": "Car-Cast",
      "url": "https://searchcode.com/codesearch/view/115284136/",
      "md5hash": "4783fc923df2a19edf57accb9be291a2",
      "lines": {
        "36": "",
        "37": "\tpublic MetaFile(MetaNet metaNet, File castFile) {",
        "13": " */",
        "14": "public class MetaFile {",
        "18": "",
        "19": "\tMetaFile(File file) {",
        "21": "",
        "22": "\t\tFile metaFile = getMetaPropertiesFile();",
        "23": "\t\tif (metaFile.exists()) {",
        "24": "\t\t\ttry {",
        "25": "\t\t\t\tproperties.load(new FileInputStream(metaFile));",
        "26": "\t\t\t\t// Log.i(\"metafile\", properties.toString());",
        "27": "\t\t\t} catch (Exception e) {"
      },
      "id": 115284136,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://github.com/zootella/hello.git",
      "language": "Java",
      "linescount": 33,
      "location": "/source/org/limewire/hello/bittorrent/meta",
      "name": "hello",
      "url": "https://searchcode.com/codesearch/view/139650871/",
      "md5hash": "a665c1ac398b273366a4ffb7bfa62428",
      "lines": {
        "24": "\t",
        "27": "\t\tthis.meta            = meta;",
        "7": "/** Information about one file listed in a .torrent file. */",
        "8": "public class MetaFile {",
        "25": "\t/** Make a new MetaFile object, grouping together the given information from a .torrent file about one file. */",
        "26": "\tpublic MetaFile(Meta meta, Stripe stripeInTorrent, PathName path) {",
        "11": "\t",
        "12": "\t/** A link up to the Meta object that represents the .torrent file this MetaFile holds information from. */"
      },
      "id": 139650871,
      "filename": "MetaFile.java"
    },
    {
      "repo": "http://androjena.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 394,
      "location": "/tdboid/src/com/hp/hpl/jena/tdb/base/file",
      "name": "androjena",
      "url": "https://searchcode.com/codesearch/view/818471/",
      "md5hash": "e3b93563116ed5d14996583ebfe61e09",
      "lines": {
        "34": " */",
        "35": "public class MetaFile implements Sync, Closeable",
        "37": "    private static Comparator<String> comparator = new ComparatorKeys() ;",
        "38": "    private static Logger log = LoggerFactory.getLogger(MetaFile.class) ;",
        "39": "    private String metaFilename = null ;",
        "40": "    private Properties properties = null ;",
        "44": "    ",
        "45": "    /** Create a MetaFile",
        "272": "        if ( str == null )",
        "49": "     */",
        "50": "    public MetaFile(String label, String fn)",
        "52": "        this.label = label ;",
        "53": "        this.metaFilename = fn ;",
        "273": "            str = metaFilename ;",
        "134": "    /** Get property as a string and split on \",\", using the default string if not present in the MetaFile. */",
        "133": "    "
      },
      "id": 818471,
      "filename": "MetaFile.java"
    },
    {
      "repo": "https://github.com/lihuibng/hadoop-20.git",
      "language": "Java",
      "linescount": 2927,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/75370471/",
      "md5hash": "f9dd5ab47938be0f1bde84643bdffbf1",
      "lines": {
        "320": "      File metaFile = getMetaFile(blockFile , b);",
        "321": "      dfsUsage.incDfsUsed(b.getNumBytes()+metaFile.length());",
        "1218": "    return findMetaFile(blockFile, false);",
        "1217": "  public static File findMetaFile(final File blockFile) throws IOException {",
        "1216": "  /** Find the corresponding meta data file from a given block file */",
        "1203": "  ",
        "1204": "  static String getMetaFileName(String blockFileName, long genStamp) {",
        "1207": "",
        "1208": "  static File getMetaFile(File f , Block b) {",
        "1209": "    return new File(getMetaFileName(f.getAbsolutePath(),",
        "1210": "                                    b.getGenerationStamp())); ",
        "1211": "  }",
        "1212": "  protected File getMetaFile(int namespaceId, Block b) throws IOException {",
        "1213": "    return getMetaFile(getBlockFile(namespaceId, b), b);",
        "319": "      File blockFile = dataDir.addBlock(namespaceId, b, f);"
      },
      "id": 75370471,
      "filename": "FSDataset.java"
    },
    {
      "repo": "https://github.com/beauli/databus.git",
      "language": "Java",
      "linescount": 496,
      "location": "/databus-core/databus-core-impl/src/test/java/com/linkedin/databus/core",
      "name": "databus",
      "url": "https://searchcode.com/codesearch/view/71541151/",
      "md5hash": "183dac8c9ccaed3806006a9a538cd840",
      "lines": {
        "160": "  @Test",
        "129": "  @Test",
        "130": "  public void testMetaFileCreationMult() throws InvalidConfigException, IOException {",
        "179": "      // check that we don't have the files",
        "161": "  public void testMetaFileCloseMult() throws Exception",
        "177": "    for(DbusEventBuffer dbusBuf : bufMult.bufIterable()) {",
        "178": "      File metaFile = new File(_mmapDir, dbusBuf.metaFileName());",
        "145": "    for(DbusEventBuffer dbusBuf : bufMult.bufIterable()) {",
        "146": "      File metaFile = new File(_mmapDir, dbusBuf.metaFileName());",
        "147": "      // check that we don't have the files",
        "148": "      Assert.assertFalse(metaFile.exists());",
        "152": "    for(DbusEventBuffer dbusBuf : bufMult.bufIterable()) {",
        "153": "      File metaFile = new File(_mmapDir, dbusBuf.metaFileName());",
        "154": "      // check that we don't have the files",
        "155": "      Assert.assertTrue(metaFile.exists());",
        "156": "      validateFiles(metaFile, bufNum);",
        "157": "    }"
      },
      "id": 71541151,
      "filename": "TestDbusEventBufferPersistence.java"
    },
    {
      "repo": "https://github.com/YaoLin1/hadoop.git",
      "language": "Java",
      "linescount": 1623,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop",
      "url": "https://searchcode.com/codesearch/view/71657938/",
      "md5hash": "9fecf5f86694fea89d0def3893267f52",
      "lines": {
        "169": "      DataNode.LOG.warn(\"Block \" + blockFile + ",
        "170": "                        \" does not have a metafile!\");",
        "395": "      File blockFile = dataDir.addBlock(b, f);",
        "396": "      File metaFile = getMetaFile( blockFile , b);",
        "397": "      dfsUsage.incDfsUsed(b.getNumBytes()+metaFile.length());",
        "558": "  ",
        "559": "  static String getMetaFileName(String blockFileName, long genStamp) {",
        "562": "  ",
        "563": "  static File getMetaFile(File f , Block b) {",
        "564": "    return new File(getMetaFileName(f.getAbsolutePath(),",
        "398": "      return blockFile;",
        "566": "  }",
        "567": "  protected File getMetaFile(Block b) throws IOException {",
        "568": "    return getMetaFile(getBlockFile(b), b);",
        "154": "    /** Find the metadata file for the specified block file.",
        "155": "     * Return the generation stamp from the name of the metafile.",
        "565": "                                    b.getGenerationStamp())); "
      },
      "id": 71657938,
      "filename": "FSDataset.java"
    },
    {
      "repo": "https://github.com/jboulon/hadoop-20.git",
      "language": "Java",
      "linescount": 3255,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/74231800/",
      "md5hash": "51a6e7adaa4e3a4d268d2f7062977368",
      "lines": {
        "1920": "            oldMetaFile.getName() + \"_tmp\" + newblock.getGenerationStamp());",
        "1921": "        if (!oldMetaFile.renameTo(tmpMetaFile)) {",
        "1919": "        tmpMetaFile = new File(oldMetaFile.getParent(),",
        "1484": "        block.setGenerationStamp(BlockWithChecksumFileReader",
        "1485": "            .parseGenerationStampInMetaFile(blockfile, metafile));",
        "529": "          dest = new File(dir, b.getBlockName());",
        "530": "          File metaData = BlockWithChecksumFileWriter.getMetaFile( src, b );",
        "531": "          File newmeta = BlockWithChecksumFileWriter.getMetaFile(dest, b);",
        "532": "          if ( ! metaData.renameTo( newmeta )) {",
        "1466": "      ",
        "1467": "      File metafile = null;",
        "1468": "      if (!replica.isInlineChecksum()) {",
        "1469": "        metafile = BlockWithChecksumFileWriter.findMetaFile(blockfile, true);",
        "1470": "        if (metafile == null) {",
        "1471": "          return null;"
      },
      "id": 74231800,
      "filename": "FSDataset.java"
    },
    {
      "repo": "https://github.com/Toilal/bitlet.git",
      "language": "Java",
      "linescount": 397,
      "location": "/src/main/java/org/bitlet/wetorrent",
      "name": "bitlet",
      "url": "https://searchcode.com/codesearch/view/75025030/",
      "md5hash": "544037d909b88fdefd3baf4af719ca2a",
      "lines": {
        "137": "            List<Tracker> uninqueTracker = new LinkedList<Tracker>();",
        "138": "            Tracker tracker = new Tracker(metafile.getAnnounce());",
        "332": "    public boolean isCompleted() {",
        "77": "",
        "78": "    public Torrent(Metafile metafile, TorrentDisk torrentDisk, IncomingPeerListener incomingPeerListener) {",
        "79": "        this(metafile, torrentDisk, incomingPeerListener, null);",
        "333": "        return torrentDisk.getCompleted() == metafile.getLength();",
        "55": "    public static final short maxUnfulfilledRequestNumber = 6;",
        "56": "    private Metafile metafile;",
        "90": "        this.incomingPeerListener = incomingPeerListener;",
        "91": "        this.metafile = metafile;",
        "188": "",
        "189": "    public Metafile getMetafile() {",
        "190": "        return metafile;",
        "191": "    }"
      },
      "id": 75025030,
      "filename": "Torrent.java"
    },
    {
      "repo": "https://github.com/Toilal/bitlet.git",
      "language": "Java",
      "linescount": 280,
      "location": "/src/main/java/org/bitlet/wetorrent/disk",
      "name": "bitlet",
      "url": "https://searchcode.com/codesearch/view/75025075/",
      "md5hash": "00416de7d1ac1afc32c27128217c9e50",
      "lines": {
        "35": "import java.util.Map;",
        "36": "import org.bitlet.wetorrent.Metafile;",
        "39": "",
        "40": "    Metafile metafile;",
        "44": "",
        "45": "    public PlainFileSystemTorrentDisk(Metafile metafile, File saveDirectory) {",
        "46": "        this.metafile = metafile;",
        "47": "        this.saveDirectory = saveDirectory;",
        "81": "        Long pieceNumber = 0l;",
        "82": "        for (Object elem : metafile.getPieces()) {",
        "84": "            Piece piece = new Piece(sha1);",
        "85": "            if (pieceNumber < metafile.getPieces().size() - 1 && (metafile.getLength() % metafile.getPieceLength()) > 0) {",
        "86": "                piece.setLength(metafile.getPieceLength().intValue());",
        "87": "            } else {",
        "88": "                piece.setLength(new Long(metafile.getLength() % metafile.getPieceLength()).intValue());"
      },
      "id": 75025075,
      "filename": "PlainFileSystemTorrentDisk.java"
    },
    {
      "repo": "https://github.com/LorenzoBettini/buckminster.git",
      "language": "Java",
      "linescount": 325,
      "location": "/org.eclipse.buckminster.core/src/java/org/eclipse/buckminster/core/ctype",
      "name": "buckminster",
      "url": "https://searchcode.com/codesearch/view/72213460/",
      "md5hash": "dbccbb12d8a28640588b890eea975b8a",
      "lines": {
        "160": "\t}",
        "137": "",
        "138": "\tprivate IMetaFile[] metaFiles = noMetaFiles;",
        "267": "\t\tArrayList<IMetaFile> metaFileList = null;",
        "268": "\t\tfor (IConfigurationElement metaFile : config.getChildren(\"metaFile\")) //$NON-NLS-1$",
        "269": "\t\t{",
        "82": "",
        "83": "\tprivate static final IMetaFile[] noMetaFiles = new IMetaFile[0];",
        "52": "public abstract class AbstractComponentType extends AbstractExtension implements IComponentType {",
        "53": "\tstatic class MetaFile implements IMetaFile {",
        "266": "",
        "59": "",
        "60": "\t\tpublic MetaFile(IPath path, boolean optional, IPath[] aliases) {",
        "157": "\t@Override",
        "158": "\tpublic IMetaFile[] getMetaFiles() {",
        "159": "\t\treturn metaFiles;"
      },
      "id": 72213460,
      "filename": "AbstractComponentType.java"
    },
    {
      "repo": "https://github.com/YaoLin1/hadoop.git",
      "language": "Java",
      "linescount": 315,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop",
      "url": "https://searchcode.com/codesearch/view/71658002/",
      "md5hash": "6bbe38306b85c35f22e42691fdfa5026",
      "lines": {
        "144": "    missingMetaFile = 0;",
        "68": "",
        "69": "    ScanInfo(long blockId, File blockFile, File metaFile, FSVolume vol) {",
        "70": "      this.blockId = blockId;",
        "60": "    private final long blockId;",
        "266": "",
        "267": "  private static boolean isBlockMetaFile(String blockId, String metaFile) {",
        "268": "    return metaFile.startsWith(blockId)",
        "269": "        && metaFile.endsWith(Block.METADATA_EXTENSION);",
        "270": "  }",
        "143": "    totalBlocks = 0;",
        "48": "  long totalBlocks;",
        "49": "  long missingMetaFile;",
        "157": "          .getMetaFile(), info.getVolume());",
        "156": "      dataset.checkAndUpdate(info.getBlockId(), info.getBlockFile(), info",
        "61": "    private final File metaFile;"
      },
      "id": 71658002,
      "filename": "DirectoryScanner.java"
    },
    {
      "repo": "https://github.com/jboulon/hadoop-20.git",
      "language": "Java",
      "linescount": 460,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/74231786/",
      "md5hash": "565a80c07fcae563b372db3023851931",
      "lines": {
        "226": "        + \" block \" + block + \" offset in block \" + blkoff",
        "227": "        + \" offset in metafile \" + ckoff);",
        "324": "      }",
        "325": "      // update metaFile",
        "326": "      RandomAccessFile metaRAF = new RandomAccessFile(metafile, \"rw\");",
        "327": "      try {",
        "424": "",
        "425": "  public static File getMetaFile(File f , Block b) {",
        "426": "    return new File(getMetaFileName(f.getAbsolutePath(),",
        "427": "                                    b.getGenerationStamp())); ",
        "333": "    }",
        "334": "    DataChecksum dcs = BlockMetadataHeader.readHeader(metafile).getChecksum();",
        "79": "  File blockFile, metafile;",
        "78": "public class BlockWithChecksumFileWriter extends DatanodeBlockWriter {",
        "420": "",
        "421": "  static String getMetaFileName(String blockFileName, long genStamp) {"
      },
      "id": 74231786,
      "filename": "BlockWithChecksumFileWriter.java"
    },
    {
      "repo": "https://github.com/jboulon/hadoop-20.git",
      "language": "Java",
      "linescount": 279,
      "location": "/src/hdfs/org/apache/hadoop/hdfs/server/datanode",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/74231931/",
      "md5hash": "6df6ce21416632e6cb4dc688c370459f",
      "lines": {
        "160": "  void deleteAsync(FSDataset.FSVolume volume, File blockFile,",
        "161": "      File metaFile, String blockName, int namespaceId) {",
        "195": "      this.blockFile = blockFile;",
        "164": "    ReplicaFileDeleteTask deletionTask = new ReplicaFileDeleteTask(volume,",
        "165": "        blockFile, metaFile, blockName, namespaceId);",
        "193": "        File metaFile, String blockName, int namespaceId) {",
        "192": "    ReplicaFileDeleteTask(FSDataset.FSVolume volume, File blockFile,",
        "208": "      return \"deletion of block \" + blockName + \" with block file \" + blockFile",
        "209": "          + \" and meta file \" + metaFile + \" from volume \" + volume;",
        "214": "      long dfsBytes = blockFile.length();",
        "215": "      if (metaFile != null) {",
        "216": "        dfsBytes += metaFile.length();",
        "196": "      this.metaFile = metaFile;",
        "217": "      }",
        "219": "          || (metaFile != null && !metaFile.delete() && metaFile.exists())) {",
        "218": "      if (!blockFile.delete()"
      },
      "id": 74231931,
      "filename": "FSDatasetAsyncDiskService.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 235,
      "source": "Github",
      "id": 2
    },
    {
      "count": 220,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 44,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 5,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 4,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1,
      "source": "Google Android",
      "id": 12
    }
  ]
}