{
  "matchterm": "Choose",
  "previouspage": null,
  "searchterm": "Choose",
  "query": "Choose",
  "language_filters": [
    {
      "count": 72512,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 72511,
  "results": [
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 68,
      "location": "/zweb/src/org/zkoss/web/servlet/dsp/action",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17661497/",
      "md5hash": "d1df3dd18907db39245b6166f8acae2f",
      "lines": {
        "64": "\tpublic String toString() {",
        "1": "/* Choose.java",
        "2": "",
        "65": "\t\treturn \"choose\";",
        "28": " */",
        "29": "public class Choose extends AbstractAction {"
      },
      "id": 17661497,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/dmwelch/phdxnat_pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "phdxnat_pipeline",
      "url": "https://searchcode.com/codesearch/view/102289639/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 102289639,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/nrg/pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline",
      "url": "https://searchcode.com/codesearch/view/55666683/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 55666683,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/hcp/db_pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "db_pipeline",
      "url": "https://searchcode.com/codesearch/view/61290795/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 61290795,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/mohanar/pipeline_1_5dev_mr",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_5dev_mr",
      "url": "https://searchcode.com/codesearch/view/61308657/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 61308657,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/nrg/pipeline_1_6_m3",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_6_m3",
      "url": "https://searchcode.com/codesearch/view/125012166/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 125012166,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/radiologics_rick/pipeline_1_6_m3_patches",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_6_m3_patches",
      "url": "https://searchcode.com/codesearch/view/125350982/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 125350982,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/aharding/pipeline_1_5_predicthd",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_5_predicthd",
      "url": "https://searchcode.com/codesearch/view/125360940/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 125360940,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/lwallace/cnda_pipeline_deployed_1_5",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "cnda_pipeline_deployed_1_5",
      "url": "https://searchcode.com/codesearch/view/125644847/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 125644847,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/healthonrails/pipeline_predicthd",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_predicthd",
      "url": "https://searchcode.com/codesearch/view/127440962/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 127440962,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/healthonrails/pipeline_1_6_m3",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_6_m3",
      "url": "https://searchcode.com/codesearch/view/127981308/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 127981308,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/healthonrails/pipeline_1_5",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_5",
      "url": "https://searchcode.com/codesearch/view/127981906/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 127981906,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/healthonrails/pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline",
      "url": "https://searchcode.com/codesearch/view/129307721/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 129307721,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/healthonrails/pipeline_1_6dev",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_6dev",
      "url": "https://searchcode.com/codesearch/view/129311460/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 129311460,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/kalpert/nunda_pipeline_niacal",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "nunda_pipeline_niacal",
      "url": "https://searchcode.com/codesearch/view/130641826/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 130641826,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/mohanar/intradb_pipeline_1_6dev",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "intradb_pipeline_1_6dev",
      "url": "https://searchcode.com/codesearch/view/130877431/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 130877431,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/mohanar/intradb_pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "intradb_pipeline",
      "url": "https://searchcode.com/codesearch/view/132619584/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 132619584,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/rherrick/central_pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "central_pipeline",
      "url": "https://searchcode.com/codesearch/view/133697699/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 133697699,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/radiologics/pipeline_1_6dev",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "pipeline_1_6dev",
      "url": "https://searchcode.com/codesearch/view/134995670/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 134995670,
      "filename": "Choose.java"
    },
    {
      "repo": "https://bitbucket.org/mohanar/db_pipeline",
      "language": "Java",
      "linescount": 844,
      "location": "/lib/saxonB/net/sf/saxon/instruct",
      "name": "db_pipeline",
      "url": "https://searchcode.com/codesearch/view/136950512/",
      "md5hash": "dcf43ea64a47ce12a516c84790977150",
      "lines": {
        "66": "            Expression[] actions = new Expression[] {thenExp};",
        "67": "            return new Choose(conditions, actions);",
        "37": "    /**",
        "38": "    * Construct an xsl:choose instruction",
        "71": "            return new Choose(conditions, actions);",
        "42": "",
        "43": "    public Choose(Expression[] conditions, Expression[] actions) {",
        "46": "        if (conditions.length != actions.length) {",
        "47": "            throw new IllegalArgumentException(\"Choose: unequal length arguments\");",
        "19": "/**",
        "20": " * Compiled representation of an xsl:choose or xsl:if element in the stylesheet.",
        "23": "",
        "24": "public class Choose extends Instruction {",
        "25": "",
        "26": "    // The class implements both xsl:choose and xsl:if. There is a list of boolean",
        "70": "            Expression[] actions = new Expression[] {thenExp, elseExp};"
      },
      "id": 136950512,
      "filename": "Choose.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 35746,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 23877,
      "source": "Github",
      "id": 2
    },
    {
      "count": 11385,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 728,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 350,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 295,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 73,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 52,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 6,
      "source": "Gitorious",
      "id": 10
    }
  ]
}