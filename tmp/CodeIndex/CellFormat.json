{
  "matchterm": "CellFormat",
  "previouspage": null,
  "searchterm": "CellFormat",
  "query": "CellFormat",
  "language_filters": [
    {
      "count": 224,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 224,
  "results": [
    {
      "repo": "https://github.com/andreyvit/yoursway-commons.git",
      "language": "Java",
      "linescount": 103,
      "location": "/com.yoursway.commons.excelexport/src/com/yoursway/commons/excelexport",
      "name": "yoursway-commons",
      "url": "https://searchcode.com/codesearch/view/103564623/",
      "md5hash": "78cf0f9b22017ce7e8b9b6bde4a97d0d",
      "lines": {
        "43": "        return new CellFormat(fill, alignment, borderSet);",
        "37": "    ",
        "38": "    public CellFormat with(Fill fill) {",
        "7": "",
        "40": "    }",
        "9": "    ",
        "10": "    public static final CellFormat DEFAULT = new CellFormat(Fill.NONE, Alignment.LEFT, BorderSet.DEFAULT);",
        "39": "        return new CellFormat(fill, alignment, borderSet);",
        "44": "    }",
        "45": "    ",
        "46": "    public CellFormat with(BorderSet borderSet) {",
        "47": "        return new CellFormat(fill, alignment, borderSet);",
        "17": "    ",
        "18": "    public CellFormat(Fill fill, Alignment alignment, BorderSet borderSet) {",
        "8": "public class CellFormat {",
        "41": "    ",
        "42": "    public CellFormat with(Alignment alignment) {"
      },
      "id": 103564623,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://github.com/pombredanne/yoursway-commons.git",
      "language": "Java",
      "linescount": 103,
      "location": "/com.yoursway.commons.excelexport/src/com/yoursway/commons/excelexport",
      "name": "yoursway-commons",
      "url": "https://searchcode.com/codesearch/view/66151452/",
      "md5hash": "78cf0f9b22017ce7e8b9b6bde4a97d0d",
      "lines": {
        "43": "        return new CellFormat(fill, alignment, borderSet);",
        "37": "    ",
        "38": "    public CellFormat with(Fill fill) {",
        "7": "",
        "40": "    }",
        "9": "    ",
        "10": "    public static final CellFormat DEFAULT = new CellFormat(Fill.NONE, Alignment.LEFT, BorderSet.DEFAULT);",
        "39": "        return new CellFormat(fill, alignment, borderSet);",
        "44": "    }",
        "45": "    ",
        "46": "    public CellFormat with(BorderSet borderSet) {",
        "47": "        return new CellFormat(fill, alignment, borderSet);",
        "17": "    ",
        "18": "    public CellFormat(Fill fill, Alignment alignment, BorderSet borderSet) {",
        "8": "public class CellFormat {",
        "41": "    ",
        "42": "    public CellFormat with(Alignment alignment) {"
      },
      "id": 66151452,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://code.google.com/p/gwt-excel-import-export/",
      "language": "Java",
      "linescount": 357,
      "location": "/dk/lindhardt/gwt/geie/shared",
      "name": "gwt-excel-import-export",
      "url": "https://searchcode.com/codesearch/view/3263452/",
      "md5hash": "7423950e20eda3167255d54258585dcd",
      "lines": {
        "320": "      result.setFontSize(fontSize);",
        "339": "   public String toString() {",
        "340": "      return \"CellFormat{\" +",
        "85": "    */",
        "86": "   public CellFormat() {",
        "27": " */",
        "28": "public class CellFormat implements Serializable {",
        "317": "    */",
        "318": "   public CellFormat copy() {",
        "319": "      CellFormat result = new CellFormat();"
      },
      "id": 3263452,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 30,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260233/",
      "md5hash": "a92a2b425b4b4cdead529d733e4054b7",
      "lines": {
        "24": " *",
        "25": " * @deprecated Repackaged as jxl.format.CellFormat",
        "26": " */",
        "27": "public interface CellFormat extends jxl.format.CellFormat"
      },
      "id": 43260233,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 30,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200761/",
      "md5hash": "a92a2b425b4b4cdead529d733e4054b7",
      "lines": {
        "24": " *",
        "25": " * @deprecated Repackaged as jxl.format.CellFormat",
        "26": " */",
        "27": "public interface CellFormat extends jxl.format.CellFormat"
      },
      "id": 49200761,
      "filename": "CellFormat.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 30,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374371/",
      "md5hash": "88b542e09646a65f1e72ad8aba56bb93",
      "lines": {
        "24": " *",
        "25": " * @deprecated Repackaged as jxl.format.CellFormat",
        "26": " */",
        "27": "public interface CellFormat extends jxl.format.CellFormat"
      },
      "id": 11374371,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 31,
      "location": "/src/main/java/com/extentech/formats/cellformat",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47124728/",
      "md5hash": "a76b50b3488a19455f4bc2153b1e2e2d",
      "lines": {
        "26": "",
        "27": "public interface CellFormat {",
        "22": " */",
        "23": "package com.extentech.formats.cellformat;"
      },
      "id": 47124728,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 31,
      "location": "/src/main/java/com/extentech/formats/cellformat",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976352/",
      "md5hash": "a76b50b3488a19455f4bc2153b1e2e2d",
      "lines": {
        "26": "",
        "27": "public interface CellFormat {",
        "22": " */",
        "23": "package com.extentech.formats.cellformat;"
      },
      "id": 50976352,
      "filename": "CellFormat.java"
    },
    {
      "repo": "http://twiddling.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 91,
      "location": "/core/src/main/java/com/google/code/twiddling/core/io/text",
      "name": "twiddling",
      "url": "https://searchcode.com/codesearch/view/12648346/",
      "md5hash": "23db90806d8ed5d03ad164887e48f424",
      "lines": {
        "40": "    ",
        "41": "    public CellFormat() {",
        "35": " */",
        "36": "public class CellFormat {"
      },
      "id": 12648346,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 144,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/format",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260473/",
      "md5hash": "d1d98303191001e6934e3041ce62e254",
      "lines": {
        "24": " */",
        "25": "public interface CellFormat"
      },
      "id": 43260473,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 144,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/format",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49201001/",
      "md5hash": "d1d98303191001e6934e3041ce62e254",
      "lines": {
        "24": " */",
        "25": "public interface CellFormat"
      },
      "id": 49201001,
      "filename": "CellFormat.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 144,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/format",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374477/",
      "md5hash": "deab17676482cce34dc6c01b1b19fc92",
      "lines": {
        "24": " */",
        "25": "public interface CellFormat"
      },
      "id": 11374477,
      "filename": "CellFormat.java"
    },
    {
      "repo": "https://github.com/bpmc/errai.git",
      "language": "Java",
      "linescount": 1881,
      "location": "/errai-widgets/src/main/java/org/jboss/errai/widgets/client",
      "name": "errai",
      "url": "https://searchcode.com/codesearch/view/113232996/",
      "md5hash": "b825664d5ebd88672429e650bc96f40b",
      "lines": {
        "928": "",
        "929": "        public WSCellFormatter cellFmtAt(int row, int col) {",
        "930": "            return cellAt(row, col).cellFormat;",
        "931": "        }",
        "933": "        public String valueAt(int row, int col) {",
        "934": "            return tableIndex.get(row).get(col).cellFormat.getTextValue();",
        "940": "",
        "908": "        private void _sort_swap(int i, int j) {",
        "909": "            WSCellFormatter t;",
        "941": "        public void setValueAt(int row, int col, WSCellFormatter cellFmt) {",
        "914": "                c2 = cellAt(j, z);",
        "915": "                t = c1.getCellFormat();",
        "916": "",
        "917": "                c1.setValue(c2.getCellFormat());",
        "23": "import com.google.gwt.user.client.ui.*;",
        "24": "import org.jboss.errai.widgets.client.format.WSCellFormatter;"
      },
      "id": 113232996,
      "filename": "WSGrid.java"
    },
    {
      "repo": "https://bitbucket.org/seocam/kettle",
      "language": "Java",
      "linescount": 688,
      "location": "/src/org/pentaho/di/trans/steps/exceloutput",
      "name": "kettle",
      "url": "https://searchcode.com/codesearch/view/118419978/",
      "md5hash": "4820d8f754977ca4f9df86aba1353253",
      "lines": {
        "294": "                        if (cellFormat==null)",
        "261": "            ",
        "262": "            WritableCellFormat cellFormat=(WritableCellFormat) data.formats.get(hashName);",
        "264": "            // when template is used, take over the column format",
        "265": "            if (cellFormat==null && meta.isTemplateEnabled() && !isHeader)",
        "269": "            \t\t{",
        "270": "            \t\t    CellFormat format = data.sheet.getColumnView(column).getFormat();",
        "271": "            \t\t    if (format!=null) {",
        "272": "                \t\t\tcellFormat=new WritableCellFormat(format);",
        "273": "                \t\t\tdata.formats.put(hashName, cellFormat); // save for next time around...",
        "274": "            \t\t    }",
        "19": "import jxl.WorkbookSettings;",
        "20": "import jxl.format.CellFormat;",
        "25": "import jxl.write.NumberFormat;",
        "26": "import jxl.write.WritableCellFormat;",
        "293": "                    {"
      },
      "id": 118419978,
      "filename": "ExcelOutput.java"
    },
    {
      "repo": "https://github.com/wangwenan/myproject01.git",
      "language": "Java",
      "linescount": 383,
      "location": "/src/main/java/com/newland/beecode/service/impl",
      "name": "myproject01",
      "url": "https://searchcode.com/codesearch/view/114533602/",
      "md5hash": "570e3a94263985c3f578f86e63ce1583",
      "lines": {
        "288": "\t\t\t}",
        "289": "\t\t} else if (cd.getCellFormat() != null) {",
        "290": "\t\t\tcellFormat = cd.getCellFormat();",
        "291": "\t\t}",
        "277": "\t\tHSSFDataFormat format = book.createDataFormat();",
        "278": "\t\tString cellFormat = null;",
        "279": "\t\tif (cd.getStyleName() != null && cd.getCellFormat() == null) {",
        "280": "\t\t\tif (STYLE_TEXT.equalsIgnoreCase(cd.getStyleName())) {",
        "281": "\t\t\t\tcellFormat = \"text\";",
        "282": "\t\t\t} else if (STYLE_NUMBER.equalsIgnoreCase(cd.getStyleName())) {",
        "283": "\t\t\t\tcellFormat = \"#,##0.00\";",
        "284": "\t\t\t} else if (STYLE_DATE.equalsIgnoreCase(cd.getStyleName())) {",
        "285": "\t\t\t\tcellFormat = \"yyyy-MM-dd\";",
        "286": "\t\t\t} else if (STYLE_DATETIME.equalsIgnoreCase(cd.getStyleName())) {",
        "287": "\t\t\t\tcellFormat = \"yyyy-MM-dd HH:mm:ss\";"
      },
      "id": 114533602,
      "filename": "XPathExcelTemplateService.java"
    },
    {
      "repo": "https://bitbucket.org/pkhan/dhis",
      "language": "Java",
      "linescount": 376,
      "location": "/dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util",
      "name": "dhis",
      "url": "https://searchcode.com/codesearch/view/62655495/",
      "md5hash": "3585c37433796a280d1a6cb2d8282ce0",
      "lines": {
        "282": "                    // Color zero values as bold red",
        "68": "",
        "69": "    public static WritableCellFormat FORMAT_LABEL = new WritableCellFormat( new WritableFont( WritableFont.ARIAL, 13,",
        "262": "",
        "263": "            cellFormat = (i % 2 == 1) ? parFormat : oddFormat;",
        "41": "import jxl.write.Label;",
        "42": "import jxl.write.WritableCellFormat;",
        "267": "                sheet.addCell( new Label( column++, row, rowMeta.getName(), cellFormat ) );",
        "278": "                    {",
        "279": "                        cellFormat.setFont( zeroFont );",
        "283": "                    sheet.addCell( new Label( column++, row, temp, cellFormat ) );",
        "185": "",
        "186": "    public static void writeDataBrowserTitle( WritableSheet sheet, WritableCellFormat formatTitle,",
        "187": "        WritableCellFormat formatSubTitle, String dataBrowserTitleName, String dataBrowserFromDate,",
        "188": "        String dataBrowserToDate, String dataBrowserPeriodType, I18n i18n )",
        "266": "            {"
      },
      "id": 62655495,
      "filename": "ExcelUtils.java"
    },
    {
      "repo": "https://github.com/wangwenan/myproject01.git",
      "language": "Java",
      "linescount": 134,
      "location": "/src/main/java/com/newland/utils",
      "name": "myproject01",
      "url": "https://searchcode.com/codesearch/view/114533311/",
      "md5hash": "31f13e8be39d05f969167e6b351aa4dd",
      "lines": {
        "112": "        this.cellFormat = cellFormat;",
        "113": "    }",
        "102": "    /**",
        "103": "     * @return Returns the cellFormat.",
        "104": "     */",
        "105": "    public String getCellFormat() {",
        "106": "        return cellFormat;",
        "107": "    }",
        "108": "    /**",
        "109": "     * @param cellFormat The cellFormat to set.",
        "110": "     */",
        "111": "    public void setCellFormat(String cellFormat) {",
        "16": "    ",
        "17": "    String cellFormat;"
      },
      "id": 114533311,
      "filename": "CellDefine.java"
    },
    {
      "repo": "https://bitbucket.org/kmes/dhis",
      "language": "Java",
      "linescount": 375,
      "location": "/original/2.14/dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util",
      "name": "dhis",
      "url": "https://searchcode.com/codesearch/view/134024480/",
      "md5hash": "32953128718abf9a034bb898995cb843",
      "lines": {
        "67": "",
        "68": "    public static final WritableCellFormat FORMAT_LABEL = new WritableCellFormat( new WritableFont( WritableFont.ARIAL, 13,",
        "261": "",
        "262": "            cellFormat = (i % 2 == 1) ? parFormat : oddFormat;",
        "265": "            {",
        "42": "import jxl.write.Label;",
        "43": "import jxl.write.WritableCellFormat;",
        "282": "                    sheet.addCell( new Label( column++, row, temp, cellFormat ) );",
        "277": "                    {",
        "278": "                        cellFormat.setFont( zeroFont );",
        "281": "                    // Color zero values as bold red",
        "184": "",
        "185": "    public static void writeDataBrowserTitle( WritableSheet sheet, WritableCellFormat formatTitle,",
        "186": "        WritableCellFormat formatSubTitle, String dataBrowserTitleName, String dataBrowserFromDate,",
        "187": "        String dataBrowserToDate, String dataBrowserPeriodType, I18n i18n )",
        "266": "                sheet.addCell( new Label( column++, row, rowMeta.getName(), cellFormat ) );"
      },
      "id": 134024480,
      "filename": "ExcelUtils.java"
    },
    {
      "repo": "https://bitbucket.org/kmes/dhis",
      "language": "Java",
      "linescount": 375,
      "location": "/dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util",
      "name": "dhis",
      "url": "https://searchcode.com/codesearch/view/134030710/",
      "md5hash": "06029be4731c4f670aaf4bc926387cb3",
      "lines": {
        "67": "",
        "68": "    public static WritableCellFormat FORMAT_LABEL = new WritableCellFormat( new WritableFont( WritableFont.ARIAL, 13,",
        "261": "",
        "262": "            cellFormat = (i % 2 == 1) ? parFormat : oddFormat;",
        "265": "            {",
        "42": "import jxl.write.Label;",
        "43": "import jxl.write.WritableCellFormat;",
        "282": "                    sheet.addCell( new Label( column++, row, temp, cellFormat ) );",
        "277": "                    {",
        "278": "                        cellFormat.setFont( zeroFont );",
        "281": "                    // Color zero values as bold red",
        "184": "",
        "185": "    public static void writeDataBrowserTitle( WritableSheet sheet, WritableCellFormat formatTitle,",
        "186": "        WritableCellFormat formatSubTitle, String dataBrowserTitleName, String dataBrowserFromDate,",
        "187": "        String dataBrowserToDate, String dataBrowserPeriodType, I18n i18n )",
        "266": "                sheet.addCell( new Label( column++, row, rowMeta.getName(), cellFormat ) );"
      },
      "id": 134030710,
      "filename": "ExcelUtils.java"
    },
    {
      "repo": "https://bitbucket.org/bbanerjee/dhis-barnali",
      "language": "Java",
      "linescount": 376,
      "location": "/dhis-2/dhis-support/dhis-support-system/src/main/java/org/hisp/dhis/system/util",
      "name": "dhis-barnali",
      "url": "https://searchcode.com/codesearch/view/134903658/",
      "md5hash": "3585c37433796a280d1a6cb2d8282ce0",
      "lines": {
        "282": "                    // Color zero values as bold red",
        "68": "",
        "69": "    public static WritableCellFormat FORMAT_LABEL = new WritableCellFormat( new WritableFont( WritableFont.ARIAL, 13,",
        "262": "",
        "263": "            cellFormat = (i % 2 == 1) ? parFormat : oddFormat;",
        "41": "import jxl.write.Label;",
        "42": "import jxl.write.WritableCellFormat;",
        "267": "                sheet.addCell( new Label( column++, row, rowMeta.getName(), cellFormat ) );",
        "278": "                    {",
        "279": "                        cellFormat.setFont( zeroFont );",
        "283": "                    sheet.addCell( new Label( column++, row, temp, cellFormat ) );",
        "185": "",
        "186": "    public static void writeDataBrowserTitle( WritableSheet sheet, WritableCellFormat formatTitle,",
        "187": "        WritableCellFormat formatSubTitle, String dataBrowserTitleName, String dataBrowserFromDate,",
        "188": "        String dataBrowserToDate, String dataBrowserPeriodType, I18n i18n )",
        "266": "            {"
      },
      "id": 134903658,
      "filename": "ExcelUtils.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 115,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 93,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 16,
      "source": "Github",
      "id": 2
    }
  ]
}