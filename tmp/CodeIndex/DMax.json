{
  "matchterm": "DMax",
  "previouspage": null,
  "searchterm": "DMax",
  "query": "DMax",
  "language_filters": [
    {
      "count": 261,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 261,
  "results": [
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 13,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398940/",
      "md5hash": "20f8d6a67f09c71c2b40e39301e3208b",
      "lines": {
        "6": "",
        "7": "public class DMAX extends SimpleDatabaseFunction"
      },
      "id": 105398940,
      "filename": "DMAX.java"
    },
    {
      "repo": "https://github.com/achun2050/metrics.git",
      "language": "Java",
      "linescount": 332,
      "location": "/metrics-ganglia/src/main/java/com/codahale/metrics/ganglia",
      "name": "metrics",
      "url": "https://searchcode.com/codesearch/view/75685434/",
      "md5hash": "8c686c8228908e28f221fde08198c055",
      "lines": {
        "129": "        public GangliaReporter build(GMetric ganglia) {",
        "34": "     * A builder for {@link GangliaReporter} instances. Defaults to using a {@code tmax} of {@code 60},",
        "35": "     * a {@code dmax} of {@code 0}, converting rates to events/second, converting durations to",
        "273": "            ganglia.announce(name(prefix, name), String.valueOf(obj), detectType(obj), \"\",",
        "41": "        private int tMax;",
        "138": "    private final int tMax;",
        "139": "    private final int dMax;",
        "130": "            return new GangliaReporter(registry, ganglia, prefix, tMax, dMax, rateUnit, durationUnit, filter);",
        "144": "                            int tMax,",
        "145": "                            int dMax,",
        "274": "                             GMetricSlope.BOTH, tMax, dMax, group);",
        "152": "        this.tMax = tMax;",
        "153": "        this.dMax = dMax;",
        "42": "        private int dMax;",
        "286": "                         tMax,",
        "287": "                         dMax,"
      },
      "id": 75685434,
      "filename": "GangliaReporter.java"
    },
    {
      "repo": "https://github.com/billthefarmer/tuner.git",
      "language": "Java",
      "linescount": 1390,
      "location": "/src/org/billthefarmer/tuner",
      "name": "tuner",
      "url": "https://searchcode.com/codesearch/view/72204962/",
      "md5hash": "c7d2bfc1f884c5e722c13a72a19da6ec",
      "lines": {
        "900": "",
        "901": "\t\tif (dmax < 4096.0)",
        "902": "\t\t    dmax = 4096.0;",
        "903": "",
        "905": "",
        "842": "\t    double dmax = 0.0;",
        "907": "",
        "908": "\t\tdmax = 0.0;",
        "915": "",
        "916": "\t\t    if (dmax < Math.abs(buffer[i]))",
        "917": "\t\t\tdmax = Math.abs(buffer[i]);",
        "918": "",
        "841": "",
        "906": "\t\tdouble norm = dmax;"
      },
      "id": 72204962,
      "filename": "MainActivity.java"
    },
    {
      "repo": "https://github.com/arcatdmz/phybots.git",
      "language": "Java",
      "linescount": 294,
      "location": "/phybots/src.test/sample/test",
      "name": "phybots",
      "url": "https://searchcode.com/codesearch/view/73371790/",
      "md5hash": "9f84a10ff41db90d061531fc7598bc1a",
      "lines": {
        "224": "\t\t\t\t\t\tpx = (float) (x1+v.getX()*dmax/norm);",
        "225": "\t\t\t\t\t\tpy = (float) (y+v.getY()*dmax/norm);",
        "226": "\t\t\t\t\t\t// getDP(x1, y, &px, &py);",
        "118": "\t\tprivate float tmax = 640/(SCALE*NPN);",
        "119": "\t\tprivate float dmax = SCALE/640;",
        "234": "\t\t\t\t\t\tnorm = v.getNorm();",
        "235": "\t\t\t\t\t\tpx = (float) (x2+v.getX()*dmax/norm);",
        "236": "\t\t\t\t\t\tpy = (float) (y+v.getY()*dmax/norm);",
        "237": "\t\t\t\t\t\t// getDP(x2, y, &px, &py);",
        "223": "\t\t\t\t\t\tnorm = v.getNorm();"
      },
      "id": 73371790,
      "filename": "VisualizedClickAndRunGL.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 299,
      "location": "/src-plugins/imagescience/imagescience/segment",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853357/",
      "md5hash": "fb75495dc795cc5677ef1724d104df0a",
      "lines": {
        "290": "\t",
        "291": "\tprivate final static double DMAX = Double.MAX_VALUE;",
        "198": "\t\t\t\t\t\tif (minima) {",
        "199": "\t\t\t\t\t\t\tif (c0.z == 0) set(a0,DMAX);",
        "200": "\t\t\t\t\t\t\telse if (c0.z == dimszm1) set(a2,DMAX);",
        "201": "\t\t\t\t\t\t\tborder(a0,DMAX); border(a1,DMAX); border(a2,DMAX);",
        "202": "\t\t\t\t\t\t\tfor (int y=1, ym1=0, yp1=2; y<dimsyp1; ++y, ++ym1, ++yp1) {",
        "121": "\t\t\t\t\t\tif (minima) {",
        "122": "\t\t\t\t\t\t\tif (c0.y == 0) { set(a0,DMAX); if (dimsyis1) set(a2,DMAX); }",
        "123": "\t\t\t\t\t\t\telse if (c0.y == dimsym1) set(a2,DMAX);",
        "124": "\t\t\t\t\t\t\tborder(a0,DMAX); border(a1,DMAX); border(a2,DMAX);",
        "125": "\t\t\t\t\t\t\tfor (int x=1, xm1=0, xp1=2; x<dimsxp1; ++x, ++xm1, ++xp1) {"
      },
      "id": 113853357,
      "filename": "Extremizer.java"
    },
    {
      "repo": "https://mona.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 281,
      "location": "/mona/projects/mox/src",
      "name": "mona",
      "url": "https://searchcode.com/codesearch/view/117182350/",
      "md5hash": "341cd3e713b21f3af918c839d7ae2f09",
      "lines": {
        "96": "      dmax                    = max;",
        "182": "               if (d > dmax) { d = dmax; }",
        "39": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "40": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "73": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "74": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "173": "         {",
        "174": "            dvalue = (randomizer.nextDouble() * (dmax - dmin)) + dmin;",
        "181": "               d += ddelta;",
        "54": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "55": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "95": "      dmin                    = min;",
        "92": "      fvalue                  = fmin = fmax = fdelta = 0.0f;",
        "93": "      dvalue                  = dmin = dmax = ddelta = 0.0;",
        "30": "   float      fvalue, fmin, fmax, fdelta;",
        "31": "   double     dvalue, dmin, dmax, ddelta;"
      },
      "id": 117182350,
      "filename": "Gene.java"
    },
    {
      "repo": "https://github.com/eddasser/UrbanJungle.git",
      "language": "Java",
      "linescount": 98,
      "location": "/src/common/partie/unite",
      "name": "UrbanJungle",
      "url": "https://searchcode.com/codesearch/view/71633235/",
      "md5hash": "eef02c139ab9cfaccc913697a06c6662",
      "lines": {
        "91": "\t\tif (dTotal <= dMax){",
        "90": "\t\t",
        "73": "\t\t// on calcul la distance maximal que peut parcourrir l'unite ",
        "74": "\t\tdouble dMax;",
        "75": "\t\tif ( direction == 'h' ){//deplacement horizontal, calcul bas\u00e9 sur les x",
        "76": "\t\t\tdMax = deplacementRestant * Constante.LARGEUR_CASE;",
        "77": "\t\t}else{//deplacement vertical, calcul bas\u00e9 sur les y",
        "78": "\t\t\tdMax = deplacementRestant * Constante.HAUTEUR_CASE;"
      },
      "id": 71633235,
      "filename": "Unite.java"
    },
    {
      "repo": "https://github.com/bioclipse/bioclipse.joelib.git",
      "language": "Java",
      "linescount": 330,
      "location": "/externals/net.sourceforge.joelib/src/joelib2/algo/clique",
      "name": "bioclipse.joelib",
      "url": "https://searchcode.com/codesearch/view/111497066/",
      "md5hash": "a045206d31c93cd93939361650ee703f",
      "lines": {
        "165": "",
        "166": "                if (degree[i] > dmax)",
        "167": "                {",
        "168": "                    dmax = degree[i];",
        "138": "        // get max degree",
        "139": "        dmax = -1;",
        "142": "        {",
        "143": "            if (degree[i] > dmax)",
        "144": "            {",
        "145": "                dmax = degree[i];",
        "117": "        int newcand = 0;",
        "118": "        int dmax;",
        "156": "            // dummy values",
        "157": "            dmax = -1;"
      },
      "id": 111497066,
      "filename": "DFMax.java"
    },
    {
      "repo": "https://github.com/vionita/metrics.git",
      "language": "Java",
      "linescount": 346,
      "location": "/metrics-ganglia/src/main/java/com/codahale/metrics/ganglia",
      "name": "metrics",
      "url": "https://searchcode.com/codesearch/view/92614041/",
      "md5hash": "a59652035146749a1e0cd40b50954f82",
      "lines": {
        "288": "                    GMetricSlope.BOTH, tMax, dMax, group);",
        "131": "        public GangliaReporter build(GMetric gmetric) {",
        "132": "            return new GangliaReporter(registry, Arrays.asList(gmetric), prefix, tMax, dMax, rateUnit, durationUnit, filter);",
        "165": "        this.tMax = tMax;",
        "166": "        this.dMax = dMax;",
        "300": "                tMax, dMax, group);",
        "43": "        private int tMax;",
        "44": "        private int dMax;",
        "142": "        public GangliaReporter build(GMetric... gmetrics) {",
        "143": "            return new GangliaReporter(registry, Arrays.asList(gmetrics), prefix, tMax, dMax, rateUnit, durationUnit, filter);",
        "151": "    private final int tMax;",
        "152": "    private final int dMax;",
        "299": "            gmetric.announce(name, Double.toString(value), GMetricType.DOUBLE, units, GMetricSlope.BOTH,",
        "157": "                            int tMax,",
        "158": "                            int dMax,",
        "287": "                gmetric.announce(name(prefix, escapeSlashes(name)), String.valueOf(obj), detectType(obj), \"\","
      },
      "id": 92614041,
      "filename": "GangliaReporter.java"
    },
    {
      "repo": "https://github.com/YaoLin1/hadoop.git",
      "language": "Java",
      "linescount": 232,
      "location": "/src/core/org/apache/hadoop/metrics/ganglia",
      "name": "hadoop",
      "url": "https://searchcode.com/codesearch/view/71670129/",
      "md5hash": "56e1e396ea9366d57241b441da4db7f0",
      "lines": {
        "193": "    else {",
        "98": "    tmaxTable  = getAttributeTable(TMAX_PROPERTY);",
        "99": "    dmaxTable  = getAttributeTable(DMAX_PROPERTY);",
        "139": "    int tmax = getTmax(name);",
        "140": "    int dmax = getDmax(name);",
        "194": "      return Integer.parseInt(dmaxString);",
        "80": "  private Map<String,String> tmaxTable;",
        "81": "  private Map<String,String> dmaxTable;",
        "51": "  private static final String TMAX_PROPERTY = \"tmax\";",
        "52": "  private static final String DMAX_PROPERTY = \"dmax\";",
        "149": "    xdr_int(tmax);",
        "150": "    xdr_int(dmax);",
        "56": "  private static final int DEFAULT_TMAX = 60;",
        "57": "  private static final int DEFAULT_DMAX = 0;",
        "187": "    ",
        "188": "  private int getDmax(String metricName) {",
        "189": "    String dmaxString = dmaxTable.get(metricName);"
      },
      "id": 71670129,
      "filename": "GangliaContext.java"
    },
    {
      "repo": "https://github.com/agilemobiledev/doppio.git",
      "language": "Java",
      "linescount": 897,
      "location": "/classes/demo",
      "name": "doppio",
      "url": "https://searchcode.com/codesearch/view/72356552/",
      "md5hash": "5efedb16a905b1329e884fb7715caf48",
      "lines": {
        "134": "    final int dmin = xoff - ylim;        // Minimum valid diagonal.",
        "135": "    final int dmax = xlim - yoff;        // Maximum valid diagonal.",
        "156": "          ++fmin;",
        "188": "          ++bmin;",
        "157": "        if (fmax < dmax)",
        "189": "        if (bmax < dmax)"
      },
      "id": 72356552,
      "filename": "Diff.java"
    },
    {
      "repo": "https://github.com/atlasapi/atlas-model.git",
      "language": "Java",
      "linescount": 1178,
      "location": "/src/main/java/org/atlasapi/media/channel",
      "name": "atlas-model",
      "url": "https://searchcode.com/codesearch/view/109544432/",
      "md5hash": "3d6fb0eb452ead58081de12392bf0c38",
      "lines": {
        "417": "    public static final OldChannel TINY_POP = new OldChannel(\"Tiny Pop\", CHANNEL_URI_PREFIX + \"tinypop\", \"tinypop\");",
        "418": "    public static final OldChannel DMAX = new OldChannel(\"DMAX\", CHANNEL_URI_PREFIX + \"dmax\", \"dmax\");",
        "419": "    public static final OldChannel DMAX_PLUS1 = new OldChannel(\"DMAX +1\", CHANNEL_URI_PREFIX + \"dmaxplus1\", \"dmaxplus1\");",
        "420": "    public static final OldChannel DMAX_2 = new OldChannel(\"DMAX 2\", CHANNEL_URI_PREFIX + \"dmax2\", \"dmax2\");",
        "421": "    public static final OldChannel HORSE_AND_COUNTRY = new OldChannel(\"Horse And Country\", CHANNEL_URI_PREFIX + \"horseandcountry\", \"horseandcountry\");"
      },
      "id": 109544432,
      "filename": "OldChannel.java"
    },
    {
      "repo": "https://github.com/atlasapi/atlas-model.git",
      "language": "Java",
      "linescount": 1399,
      "location": "/src/main/java/org/atlasapi/media/entity",
      "name": "atlas-model",
      "url": "https://searchcode.com/codesearch/view/109544766/",
      "md5hash": "627ff619388670d8976ec5bc186f58ab",
      "lines": {
        "424": "    public static final Channel DMAX_2 = new Channel(\"DMAX 2\", CHANNEL_URI_PREFIX + \"dmax2\", \"dmax2\", false);",
        "425": "    public static final Channel HORSE_AND_COUNTRY = new Channel(\"Horse And Country\", CHANNEL_URI_PREFIX + \"horseandcountry\", \"horseandcountry\", false);",
        "421": "    public static final Channel TINY_POP = new Channel(\"Tiny Pop\", CHANNEL_URI_PREFIX + \"tinypop\", \"tinypop\", false);",
        "422": "    public static final Channel DMAX = new Channel(\"DMAX\", CHANNEL_URI_PREFIX + \"dmax\", \"dmax\", false);",
        "423": "    public static final Channel DMAX_PLUS1 = new Channel(\"DMAX +1\", CHANNEL_URI_PREFIX + \"dmaxplus1\", \"dmaxplus1\", false);"
      },
      "id": 109544766,
      "filename": "Channel.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 6525,
      "location": "/src-plugins/Color_Inspector_3D",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113853763/",
      "md5hash": "2b88ad6fad08d498bb7392db2701d069",
      "lines": {
        "3426": "",
        "3427": "\t\t\tfinal double dmax=255;",
        "3588": "\t\t\t// thus:",
        "3589": "\t\t\trgb[0] =(int)(Math.max(0.,Math.min(255.,dmax*r))+.5);",
        "3590": "\t\t\trgb[1] =(int)(Math.max(0.,Math.min(255.,dmax*g))+.5);",
        "3591": "\t\t\trgb[2] =(int)(Math.max(0.,Math.min(255.,dmax*b))+.5);",
        "3592": "",
        "3484": "\t\t\trgb[2] = (int)(dmax*b+0.5);",
        "3619": "",
        "3620": "//\t\t\tdouble dmax=(double)255;",
        "3482": "\t\t\trgb[0] = (int)(dmax*r+0.5);",
        "3515": "\t\t\tdouble dmax=255;",
        "3483": "\t\t\trgb[1] = (int)(dmax*g+0.5);",
        "3514": "\t\t\tdouble div2p4=1./2.4;",
        "3621": "//\t\t\tdouble dmaxdiv2=(double)(255./2.+1);"
      },
      "id": 113853763,
      "filename": "Color_Inspector_3D.java"
    },
    {
      "repo": "https://github.com/jruby/joni.git",
      "language": "Java",
      "linescount": 589,
      "location": "/src/org/joni",
      "name": "joni",
      "url": "https://searchcode.com/codesearch/view/105950675/",
      "md5hash": "c2c91b0e731b80dc3f170b6d19fd95a0",
      "lines": {
        "518": "                    int schStart = s;",
        "519": "                    if (regex.dMax != 0) {",
        "520": "                        if (regex.dMax == MinMaxLen.INFINITE_DISTANCE) {",
        "521": "                            schStart = end;",
        "522": "                        } else {",
        "523": "                            schStart += regex.dMax;",
        "269": "                /* no needs to adjust *high, *high is used as range check only */",
        "270": "                if (regex.dMax != MinMaxLen.INFINITE_DISTANCE) {",
        "271": "                    low = p - regex.dMax;",
        "272": "                    high = p - regex.dMin;",
        "438": "                int schRange = range;",
        "439": "                if (regex.dMax != 0) {",
        "440": "                    if (regex.dMax == MinMaxLen.INFINITE_DISTANCE) {",
        "441": "                        schRange = end;",
        "442": "                    } else {",
        "443": "                        schRange += regex.dMax;"
      },
      "id": 105950675,
      "filename": "Matcher.java"
    },
    {
      "repo": "https://github.com/uisleandro/org.eclipse.papyrus.git",
      "language": "Java",
      "linescount": 455,
      "location": "/extraplugins/robotml/org.eclipse.papyrus.robotml/src/org/eclipse/papyrus/RobotML",
      "name": "org.eclipse.papyrus",
      "url": "https://searchcode.com/codesearch/view/97908321/",
      "md5hash": "cfc3e53b80f6a2ccfbf28302dd865780",
      "lines": {
        "416": "\tfloat getWheelVelocityPIDmaxSum();",
        "418": "\t/**",
        "411": "\t * @see #setWheelVelocityPIDmaxSum(float)",
        "419": "\t * Sets the value of the '{@link org.eclipse.papyrus.RobotML.SteeredWheelSystem#getWheelVelocityPIDmaxSum <em>Wheel Velocity PI Dmax Sum</em>}' attribute.",
        "402": "\t/**",
        "403": "\t * Returns the value of the '<em><b>Wheel Velocity PI Dmax Sum</b></em>' attribute.",
        "405": "\t * <p>",
        "406": "\t * If the meaning of the '<em>Wheel Velocity PI Dmax Sum</em>' attribute isn't clear,",
        "409": "\t * <!-- end-user-doc -->",
        "410": "\t * @return the value of the '<em>Wheel Velocity PI Dmax Sum</em>' attribute.",
        "27": " *   <li>{@link org.eclipse.papyrus.RobotML.SteeredWheelSystem#getSuspensionCompression <em>Suspension Compression</em>}</li>",
        "28": " *   <li>{@link org.eclipse.papyrus.RobotML.SteeredWheelSystem#getWheelVelocityPIDmaxSum <em>Wheel Velocity PI Dmax Sum</em>}</li>",
        "29": " *   <li>{@link org.eclipse.papyrus.RobotML.SteeredWheelSystem#getWheelVelocityPIDmaxVal <em>Wheel Velocity PI Dmax Val</em>}</li>",
        "30": " * </ul>",
        "415": "\t */"
      },
      "id": 97908321,
      "filename": "SteeredWheelSystem.java"
    },
    {
      "repo": "git://github.com/dhale/jtk.git",
      "language": "Java",
      "linescount": 604,
      "location": "/src/main/java/edu/mines/jtk/interp",
      "name": "jtk",
      "url": "https://searchcode.com/codesearch/view/101748109/",
      "md5hash": "85fcec942101864010b409466dc87244",
      "lines": {
        "483": "        float dmin = min(abs(del1),abs(del2));",
        "484": "        float dmax = max(abs(del1),abs(del2));",
        "485": "        float drat1 = del1/dmax;",
        "486": "        float drat2 = del2/dmax;",
        "487": "        float hsum3 = hsum+hsum+hsum;",
        "556": "    else if (del1*del2<0.0f) {",
        "458": "    else if (del1*del2<0.0f) {",
        "459": "      float dmax = 3.0f*del1;",
        "460": "      if (abs(y[0][1])>abs(dmax)) y[0][1] = dmax;",
        "461": "    }",
        "558": "      if (abs(sright)>abs(dmax)) sright = dmax;",
        "557": "      float dmax = 3.0f*del2;",
        "500": "    else if (del1*del2<0.0f) {",
        "501": "      float dmax = 3.0f*del2;",
        "502": "      if (abs(y[n-1][1])>abs(dmax)) y[n-1][1] = dmax;",
        "559": "    }"
      },
      "id": 101748109,
      "filename": "CubicInterpolator.java"
    },
    {
      "repo": "https://github.com/YannickRobin/jmxtrans.git",
      "language": "Java",
      "linescount": 248,
      "location": "/src/com/googlecode/jmxtrans/model/output",
      "name": "jmxtrans",
      "url": "https://searchcode.com/codesearch/view/101329281/",
      "md5hash": "0cbdacd6fba0a73a594b201f99d732df",
      "lines": {
        "160": "                            tmax,",
        "161": "                            dmax,",
        "130": "                  TMAX + \": \" + tmax + \", \" +",
        "131": "                  DMAX + \": \" + dmax + \", \" +",
        "69": "    protected int tmax = DEFAULT_TMAX;",
        "70": "    protected int dmax = DEFAULT_DMAX;",
        "44": "    public static final String TMAX = \"tmax\";",
        "45": "    public static final String DMAX = \"dmax\";",
        "112": "",
        "113": "        // Parse and validate dmax setting",
        "114": "        dmax = getIntegerSetting(DMAX, DEFAULT_DMAX);",
        "115": "",
        "56": "    public static final GMetricSlope DEFAULT_SLOPE = GMetricSlope.BOTH;",
        "57": "    public static final int DEFAULT_DMAX = 0;"
      },
      "id": 101329281,
      "filename": "GangliaWriter.java"
    },
    {
      "repo": "https://bitbucket.org/nickgentoo/jlose",
      "language": "Java",
      "linescount": 935,
      "location": "/src/Jlose",
      "name": "jlose",
      "url": "https://searchcode.com/codesearch/view/53456700/",
      "md5hash": "59c032d86ee2b542f76d300dcde99f7a",
      "lines": {
        "161": "\t\t \t\tJlose.RRSHCSolver solver = new Jlose.RRSHCSolver();",
        "162": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "41": "\t\tint dmin=5;",
        "42": "\t\tint dmax=10;",
        "143": "\t\t \t\tJlose.HCSolver solver = new Jlose.HCSolver();",
        "144": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "177": "\t\t \t\tJlose.IJARBranchNBound solver = new Jlose.IJARBranchNBound();",
        "178": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "148": "\t\t \t\tJlose.HCPSolver solver = new Jlose.HCPSolver();",
        "149": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "183": "\t\t\tif(test == 1){",
        "184": "\t\t\t\tt1(n_vars,dmin,dmax, n_problemi);",
        "153": "\t\t \t\tJlose.RRHCSolver solver = new Jlose.RRHCSolver();",
        "154": "\t\t \t\tgenericAlgo(solver,n_vars,dmin, dmax,n_problemi);",
        "187": "\t\t\t\tt2(n_vars,dmin,dmax, n_problemi,rmin,rmax,step);",
        "186": "\t\t\tif(test == 2){"
      },
      "id": 53456700,
      "filename": "Test.java"
    },
    {
      "repo": "https://github.com/michalwarecki/jdk8_tl.git",
      "language": "Java",
      "linescount": 247,
      "location": "/jdk/test/javax/swing/regtesthelpers",
      "name": "jdk8_tl",
      "url": "https://searchcode.com/codesearch/view/72114842/",
      "md5hash": "c3b08e3260e0f0d35c4d898ac9f6ce07",
      "lines": {
        "164": "    public static void glide(Robot robot, int x0, int y0, int x1, int y1) throws AWTException {",
        "165": "        float dmax = (float) Math.max(Math.abs(x1 - x0), Math.abs(y1 - y0));",
        "166": "        float dx = (x1 - x0) / dmax;",
        "167": "        float dy = (y1 - y0) / dmax;",
        "168": "",
        "169": "        for (int i = 0; i <= dmax; i += 10) {"
      },
      "id": 72114842,
      "filename": "Util.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 116,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 110,
      "source": "Github",
      "id": 2
    },
    {
      "count": 24,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 8,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 2,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    }
  ]
}