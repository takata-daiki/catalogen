{
  "matchterm": "Bitmap",
  "previouspage": null,
  "searchterm": "Bitmap",
  "query": "Bitmap",
  "language_filters": [
    {
      "count": 22102,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 22101,
  "results": [
    {
      "repo": "http://enroscar.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 3,
      "location": "/eclipse-project/src/com/stanfy/images/decorator",
      "name": "enroscar",
      "url": "https://searchcode.com/codesearch/view/11439938/",
      "md5hash": "9cad8737608ca4bf4877885f1267d43e",
      "lines": {
        "1": "/** Bitmap decorators. */",
        "2": "package com.stanfy.images.decorator;"
      },
      "id": 11439938,
      "filename": "package-info.java"
    },
    {
      "repo": "https://github.com/elbeardmorez/BDSup2Sub.git",
      "language": "Java",
      "linescount": 771,
      "location": "/src/main/java/bdsup2sub/bitmap",
      "name": "BDSup2Sub",
      "url": "https://searchcode.com/codesearch/view/72396875/",
      "md5hash": "b6ba920ede7d8c7abf0a2ec34d929ac3",
      "lines": {
        "160": "    public Bitmap getBitmapWithNormalizedPalette(byte[] alphaValues, int alphaThreshold, byte[] lumaValues, int lumaThreshold[]) {",
        "161": "        Bitmap bm = new Bitmap(width, height);",
        "162": "        HashMap<Integer, Integer> p = new HashMap<Integer, Integer>();",
        "38": "",
        "39": "    public Bitmap(int width, int height) {",
        "15": " */",
        "16": "package bdsup2sub.bitmap;",
        "153": "     * to a Bitmap with N color palette, where:",
        "151": "    /**",
        "152": "     * Convert a palettized Bitmap (where each palette entry has individual alpha)",
        "25": "",
        "26": "import static bdsup2sub.bitmap.ColorSpaceUtils.RGB2YCbCr;",
        "28": "/**",
        "29": " * Class to handle byte based bitmaps with a separate palette up to 256 colors.",
        "30": " */",
        "159": "     */"
      },
      "id": 72396875,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 45,
      "location": "/community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/bitmaps",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71637009/",
      "md5hash": "8b4de4f64e12754b4f372577a4cbf61c",
      "lines": {
        "32": "        this.bitmap = bitmap;",
        "34": "",
        "35": "    public long bitmap()",
        "36": "    {",
        "37": "        return bitmap;",
        "41": "    {",
        "42": "        return bitmap != 0;",
        "19": " */",
        "20": "package org.neo4j.kernel.api.impl.index.bitmaps;",
        "21": "",
        "22": "public class Bitmap",
        "23": "{",
        "24": "    long bitmap;",
        "25": "",
        "31": "    {"
      },
      "id": 71637009,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/maglob/moonscapes.git",
      "language": "Java",
      "linescount": 248,
      "location": "/src/net/moonscapes/phys",
      "name": "moonscapes",
      "url": "https://searchcode.com/codesearch/view/73502472/",
      "md5hash": "275f6696838cc6dd05cdfcd38cbb6930",
      "lines": {
        "68": "     */",
        "5": "/**",
        "6": " * Utility class to represent and exit 1-bit bitmaps.",
        "8": " * @author Marko Aalto",
        "9": " * @version $Id: Bitmap.java,v 1.4 2001/11/02 00:46:45 mka Exp $",
        "10": " */",
        "11": "public class Bitmap {",
        "20": "    public static void main(String[] args) throws Exception {",
        "21": "\tBitmap bm = new Bitmap(33, 20);",
        "73": "     */",
        "74": "    public Bitmap(int width, int height) {",
        "69": "    private Bitmap() {"
      },
      "id": 73502472,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/zanglang/handwriting.git",
      "language": "Java",
      "linescount": 217,
      "location": "/src/bitmap",
      "name": "handwriting",
      "url": "https://searchcode.com/codesearch/view/105508875/",
      "md5hash": "63f78d86df07b04d894292e971959aab",
      "lines": {
        "1": "package bitmap;",
        "2": "",
        "165": "\t/**",
        "166": "\t * Reset the bitmap",
        "8": " * <p>",
        "9": " * A Bitmap holds a matrix of bits (true or false, on or off, 1 or 0).",
        "175": "\t * Prints out the bitmap as a text string",
        "44": "\t */",
        "45": "\tpublic Bitmap(String spec) {",
        "174": "\t/**",
        "15": "",
        "16": "public class Bitmap {",
        "177": "\t * @return the text string representing the bitmap",
        "176": "\t * ",
        "26": "\t */",
        "27": "\tpublic Bitmap(int nRows, int nCols) {"
      },
      "id": 105508875,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/evand/plugin-XMLSpider-staging.git",
      "language": "Java",
      "linescount": 118,
      "location": "/src/plugins/XMLSpider/org/garret/perst/impl",
      "name": "plugin-XMLSpider-staging",
      "url": "https://searchcode.com/codesearch/view/108461125/",
      "md5hash": "8436656b94f694921828d9b35d6cf9e7",
      "lines": {
        "64": "                    bitmap[i-1] |= (byte)~((1 << -(int)holeBitSize) - 1);",
        "2": "",
        "3": "public class Bitmap",
        "68": "                int holeBitOffset = maxHoleOffset[mask]; ",
        "67": "            } else if (Bitmap.maxHoleSize[mask] >= objBitSize) {",
        "66": "                return pos;",
        "51": "",
        "52": "    public static long allocate(byte[] bitmap, int begin, int end, long objBitSize) ",
        "55": "        for (int i = begin; i < end; i++) { ",
        "56": "            int mask = bitmap[i] & 0xFF; ",
        "57": "            if (holeBitSize + firstHoleSize[mask] >= objBitSize) { ",
        "58": "                bitmap[i] |= (byte)((1 << (int)(objBitSize - holeBitSize)) - 1); ",
        "61": "                    while ((holeBitSize -= 8) > 0) { ",
        "62": "                        bitmap[--i] = (byte)0xFF;",
        "63": "                    }"
      },
      "id": 108461125,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/ksclarke/sodbox.git",
      "language": "Java",
      "linescount": 118,
      "location": "/src/main/java/info/freelibrary/sodbox/impl",
      "name": "sodbox",
      "url": "https://searchcode.com/codesearch/view/110036306/",
      "md5hash": "966857ed7051e5ebc00787686de06638",
      "lines": {
        "64": "                    bitmap[i-1] |= (byte)~((1 << -(int)holeBitSize) - 1);",
        "2": "",
        "3": "public class Bitmap",
        "68": "                int holeBitOffset = maxHoleOffset[mask]; ",
        "67": "            } else if (Bitmap.maxHoleSize[mask] >= objBitSize) {",
        "66": "                return pos;",
        "51": "",
        "52": "    public static long allocate(byte[] bitmap, int begin, int end, long objBitSize) ",
        "55": "        for (int i = begin; i < end; i++) { ",
        "56": "            int mask = bitmap[i] & 0xFF; ",
        "57": "            if (holeBitSize + firstHoleSize[mask] >= objBitSize) { ",
        "58": "                bitmap[i] |= (byte)((1 << (int)(objBitSize - holeBitSize)) - 1); ",
        "61": "                    while ((holeBitSize -= 8) > 0) { ",
        "62": "                        bitmap[--i] = (byte)0xFF;",
        "63": "                    }"
      },
      "id": 110036306,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/kejar31/android_frameworks_base",
      "language": "Java",
      "linescount": 1226,
      "location": "/graphics/java/android/graphics",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/61777784/",
      "md5hash": "4453249a680c0feb894927db8a95e937",
      "lines": {
        "32": "     *",
        "33": "     * @see Bitmap#getDensity()",
        "34": "     * @see Bitmap#setDensity(int)",
        "35": "     */",
        "38": "    /**",
        "39": "     * Note:  mNativeBitmap is used by FaceDetector_jni.cpp",
        "43": "     */",
        "44": "    public final int mNativeBitmap;",
        "46": "    /**",
        "47": "     * Backing buffer for the Bitmap.",
        "55": "    @SuppressWarnings({\"FieldCanBeLocal\", \"UnusedDeclaration\"}) // Keep to finalize native resources",
        "56": "    private final BitmapFinalizer mFinalizer;",
        "27": "",
        "28": "public final class Bitmap implements Parcelable {",
        "30": "    /**",
        "31": "     * Indicates that the bitmap was created for an unknown pixel density."
      },
      "id": 61777784,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/xiaoqiangnk/hotspot-mips",
      "language": "Java",
      "linescount": 216,
      "location": "/agent/src/share/classes/sun/jvm/hotspot/utilities",
      "name": "hotspot-mips",
      "url": "https://searchcode.com/codesearch/view/118289299/",
      "md5hash": "b147855ed897439950698174da379a60",
      "lines": {
        "32": "    this.size = sizeInBits;",
        "130": "",
        "131": "  /** Sets this bitmap to the logical difference between it and the",
        "44": "      Assert.that(offset>=0 && offset < size(), \"BitMap index out of bounds\");",
        "43": "    if (Assert.ASSERTS_ENABLED) {",
        "76": "",
        "77": "  public void iterate(BitMapClosure blk) {",
        "28": "",
        "93": "  /** Sets this bitmap to the logical union of it and the",
        "94": "      argument. Both bitmaps must be the same size. Returns true if a",
        "95": "      change was caused in this bitmap. */",
        "92": "",
        "29": "/** Manages a bitmap of the specified bit size */",
        "30": "public class BitMap {",
        "31": "  public BitMap(int sizeInBits) {"
      },
      "id": 118289299,
      "filename": "BitMap.java"
    },
    {
      "repo": "https://github.com/Gilbert09/Catacombs-Snatch.git",
      "language": "Java",
      "linescount": 118,
      "location": "/Catacombs/src/com/mojang/mojam/screen",
      "name": "Catacombs-Snatch",
      "url": "https://searchcode.com/codesearch/view/67863164/",
      "md5hash": "1ebe94e2993ff60169d032f182355431",
      "lines": {
        "32": "            int sp = (yy - y) * bitmap.w + (x0 - x);",
        "34": "            for (int xx = sp; xx < sp + ww; xx++) {",
        "35": "                int col = bitmap.pixels[xx];",
        "4": "",
        "5": "public class Bitmap {",
        "8": "",
        "9": "    public Bitmap(int w, int h) {",
        "41": "    public void blit(Bitmap bitmap, int x, int y, int www, int hhh) {",
        "40": "",
        "18": "",
        "19": "    public void blit(Bitmap bitmap, int x, int y) {",
        "20": "        int x0 = x;",
        "21": "        int x1 = x + bitmap.w;",
        "22": "        int y0 = y;",
        "23": "        int y1 = y + bitmap.h;",
        "31": "            int tp = yy * w + x0;"
      },
      "id": 67863164,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/mrsamsh/VisualSliderPuzzle.git",
      "language": "Java",
      "linescount": 62,
      "location": "/src/com/mrsamsh/sliderPuzzle/game",
      "name": "VisualSliderPuzzle",
      "url": "https://searchcode.com/codesearch/view/93550307/",
      "md5hash": "c31ef7a55fc7c6f0e82695af4b7a5d7b",
      "lines": {
        "17": "\t",
        "18": "\tpublic Bitmap(int width, int height) {",
        "4": "",
        "5": "public class Bitmap implements Renderable {",
        "23": "\tpublic void render(Renderable renderable, int x, int y) {",
        "24": "\t\tBitmap canvas = (Bitmap) renderable;",
        "10": "",
        "11": "\tpublic Bitmap(BufferedImage image) {"
      },
      "id": 93550307,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 89,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/blip",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394490/",
      "md5hash": "f72f796e1feb235d8e01c9a94aa66ce6",
      "lines": {
        "33": "/**",
        "34": " * Represents a bitmap picture data:  JPEG or PNG.",
        "67": "//        options.inJustDecodeBounds = false;",
        "68": "//    \tBitmap bm = BitmapFactory.decodeByteArray(imgdata, 0, imgdata.length, options);",
        "69": "//    \tLog.d(\"BitmapPainter\", \"bm: \" + bm);",
        "38": " */",
        "39": "public abstract  class Bitmap extends PictureData {",
        "41": "    public byte[] getData(){",
        "42": "    \tLog.d(\"BitmapPainter\", \"Start Paint\");",
        "66": "//        // Decode bitmap with inSampleSize set",
        "46": "    \t\tif (rawdataPos > is.position()) {",
        "47": "    \t\t\tLog.d(\"Bitmap\", \"rawdataPos > is.position()\");",
        "23": "import and.awt.BufferedImage;",
        "24": "import android.graphics.BitmapFactory;",
        "70": "//    \timg = new BufferedImage(bm);",
        "65": "//"
      },
      "id": 97394490,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/btingle/voro",
      "language": "Java",
      "linescount": 126,
      "location": "/contentDM/code/classes/je-3.2.76/src/com/sleepycat/je/utilint",
      "name": "voro",
      "url": "https://searchcode.com/codesearch/view/118393157/",
      "md5hash": "3a46b17a27de951788d9d8cbf552d574",
      "lines": {
        "80": "     * Since the BitMap is implemented by a collection of BitSets, return",
        "27": " */",
        "5": " *",
        "6": " * $Id: BitMap.java,v 1.5.2.3 2008/01/07 15:14:18 cwl Exp $",
        "79": "    /*",
        "16": "/**",
        "17": " * Bitmap which supports indexing with long arguments. java.util.BitSet",
        "21": " * Long indexing is implemented by keeping a Map of java.util.BitSets, where",
        "22": " * each bitset covers 2^16 bits worth of values. The Bitmap may be sparse, in",
        "38": "    public BitMap() {",
        "28": "public class BitMap {",
        "37": ""
      },
      "id": 118393157,
      "filename": "BitMap.java"
    },
    {
      "repo": "https://github.com/MyOwnClone/apparat.git",
      "language": "Java",
      "linescount": 92,
      "location": "/apparat-playerglobal/src/main/java/flash/display",
      "name": "apparat",
      "url": "https://searchcode.com/codesearch/view/98307189/",
      "md5hash": "33a06c4968e1f878fdfdf2973d83dd1b",
      "lines": {
        "32": "\tprivate String _pixelSnapping;",
        "34": "",
        "35": "\tpublic Bitmap(final BitmapData bitmapData) {",
        "36": "\t\tthis(bitmapData, \"auto\");",
        "37": "\t}",
        "38": "",
        "39": "\tpublic Bitmap(final BitmapData bitmapData, final String pixelSnapping) {",
        "40": "\t\tthis(bitmapData, pixelSnapping, false);",
        "41": "\t}",
        "42": "",
        "43": "\tpublic Bitmap(final BitmapData bitmapData, final String pixelSnapping, final boolean smoothing) {",
        "44": "\t\t_bitmapData = bitmapData;",
        "29": " */",
        "30": "public class Bitmap extends DisplayObject {",
        "31": "\tprivate BitmapData _bitmapData;"
      },
      "id": 98307189,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/bigxie/android_frameworks_base",
      "language": "Java",
      "linescount": 1226,
      "location": "/graphics/java/android/graphics",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/124757168/",
      "md5hash": "4453249a680c0feb894927db8a95e937",
      "lines": {
        "32": "     *",
        "33": "     * @see Bitmap#getDensity()",
        "34": "     * @see Bitmap#setDensity(int)",
        "35": "     */",
        "38": "    /**",
        "39": "     * Note:  mNativeBitmap is used by FaceDetector_jni.cpp",
        "43": "     */",
        "44": "    public final int mNativeBitmap;",
        "46": "    /**",
        "47": "     * Backing buffer for the Bitmap.",
        "55": "    @SuppressWarnings({\"FieldCanBeLocal\", \"UnusedDeclaration\"}) // Keep to finalize native resources",
        "56": "    private final BitmapFinalizer mFinalizer;",
        "27": "",
        "28": "public final class Bitmap implements Parcelable {",
        "30": "    /**",
        "31": "     * Indicates that the bitmap was created for an unknown pixel density."
      },
      "id": 124757168,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/droidandy/derrick-spencer",
      "language": "Java",
      "linescount": 1226,
      "location": "/graphics/java/android/graphics",
      "name": "derrick-spencer",
      "url": "https://searchcode.com/codesearch/view/125596460/",
      "md5hash": "4453249a680c0feb894927db8a95e937",
      "lines": {
        "32": "     *",
        "33": "     * @see Bitmap#getDensity()",
        "34": "     * @see Bitmap#setDensity(int)",
        "35": "     */",
        "38": "    /**",
        "39": "     * Note:  mNativeBitmap is used by FaceDetector_jni.cpp",
        "43": "     */",
        "44": "    public final int mNativeBitmap;",
        "46": "    /**",
        "47": "     * Backing buffer for the Bitmap.",
        "55": "    @SuppressWarnings({\"FieldCanBeLocal\", \"UnusedDeclaration\"}) // Keep to finalize native resources",
        "56": "    private final BitmapFinalizer mFinalizer;",
        "27": "",
        "28": "public final class Bitmap implements Parcelable {",
        "30": "    /**",
        "31": "     * Indicates that the bitmap was created for an unknown pixel density."
      },
      "id": 125596460,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 1994,
      "location": "/graphics/java/android/graphics",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/140969360/",
      "md5hash": "66baa0e3b83cbffd141a674bfb66648f",
      "lines": {
        "38": "",
        "39": "public final class Bitmap implements Parcelable {",
        "40": "    private static final String TAG = \"Bitmap\";",
        "41": "",
        "42": "    /**",
        "43": "     * Indicates that the bitmap was created for an unknown pixel density.",
        "44": "     *",
        "45": "     * @see Bitmap#getDensity()",
        "46": "     * @see Bitmap#setDensity(int)",
        "47": "     */",
        "49": "",
        "50": "    // Estimated size of the Bitmap native allocation, not including",
        "59": "    /**",
        "60": "     * Represents whether the Bitmap's content is requested to be pre-multiplied.",
        "61": "     * Note that isPremultiplied() does not directly return this value, because"
      },
      "id": 140969360,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/cli/coredesigner",
      "language": "Java",
      "linescount": 241,
      "location": "/src/org/coredesigner/io",
      "name": "coredesigner",
      "url": "https://searchcode.com/codesearch/view/53644525/",
      "md5hash": "dd649f75d3a679de1b2bae9853e14cbd",
      "lines": {
        "32": " */",
        "33": "public class Bitmap",
        "68": "      ",
        "69": "      // BITMAP_INFO HEADER",
        "39": "  ",
        "40": "  public Bitmap(File file)",
        "41": "  {",
        "42": "    loadWindowsBitmap(file);",
        "44": "  ",
        "45": "  private void loadWindowsBitmap(File file) // TODO: Abstract this method to accept URLs",
        "77": "      // Height of the bitmap",
        "73": "      // Width of the bitmap",
        "76": "      ",
        "72": "      ",
        "53": "      ",
        "54": "      // Read file header (BITMAP_FILE HEADER)",
        "55": "      if(in.read() != 0x42 || in.read() != 0x4D)  // 'BM'"
      },
      "id": 53644525,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://bitbucket.org/cli/coredesigner-fd2009",
      "language": "Java",
      "linescount": 240,
      "location": "/fd/io",
      "name": "coredesigner-fd2009",
      "url": "https://searchcode.com/codesearch/view/53646214/",
      "md5hash": "7d64143bdf480ef2d5deb6756124b84c",
      "lines": {
        "32": "public class Bitmap",
        "67": "      ",
        "68": "      // BITMAP_INFO HEADER",
        "38": "  ",
        "39": "  public Bitmap(File file)",
        "40": "  {",
        "41": "    loadWindowsBitmap(file);",
        "43": "  ",
        "44": "  private void loadWindowsBitmap(File file) // TODO: Abstract this method to accept URLs",
        "76": "      // Height of the bitmap",
        "72": "      // Width of the bitmap",
        "75": "      ",
        "52": "      ",
        "53": "      // Read file header (BITMAP_FILE HEADER)",
        "54": "      if(in.read() != 0x42 || in.read() != 0x4D)  // 'BM'",
        "71": "      ",
        "31": ""
      },
      "id": 53646214,
      "filename": "Bitmap.java"
    },
    {
      "repo": "https://github.com/rcaa/BerkeleyDB-Increment1.git",
      "language": "Java",
      "linescount": 124,
      "location": "/src/com/sleepycat/je/utilint",
      "name": "BerkeleyDB-Increment1",
      "url": "https://searchcode.com/codesearch/view/70131558/",
      "md5hash": "294298696452809d5db54be8927e20dd",
      "lines": {
        "38": "",
        "6": " *",
        "7": " * $Id: BitMap.java,v 1.1.6.1 2006/07/28 09:02:53 ckaestne Exp $",
        "39": "\tpublic BitMap() {",
        "78": "\t/*",
        "79": "\t * Since the BitMap is implemented by a collection of BitSets, return the",
        "17": "/**",
        "18": " * Bitmap which supports indexing with long arguments. java.util.BitSet provides",
        "21": " * Long indexing is implemented by keeping a Map of java.util.BitSets, where",
        "22": " * each bitset covers 2^16 bits worth of values. The Bitmap may be sparse, in",
        "27": " */",
        "28": "public class BitMap {"
      },
      "id": 70131558,
      "filename": "BitMap.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 10070,
      "source": "Github",
      "id": 2
    },
    {
      "count": 9705,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 1921,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 354,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 31,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 12,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 4,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 4,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 1,
      "source": "Gitorious",
      "id": 10
    }
  ]
}