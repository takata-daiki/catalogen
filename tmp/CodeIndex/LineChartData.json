{
  "matchterm": "LineChartData",
  "previouspage": null,
  "searchterm": "LineChartData",
  "query": "LineChartData",
  "language_filters": [
    {
      "count": 52,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 52,
  "results": [
    {
      "repo": "http://googlechartwrapper.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 253,
      "location": "/googlechartwrapper/de/toolforge/googlechartwrapper/data",
      "name": "googlechartwrapper",
      "url": "https://searchcode.com/codesearch/view/13646974/",
      "md5hash": "6f50bab7bb467325d502344c5b1d5661",
      "lines": {
        "32": "\tpublic LineChartData(LineChartDataBuilder builder) {",
        "144": "\t\t * @return the new {@link LineChartData} instance.",
        "130": "\t\t * @param style",
        "131": "\t\t * @return {@link LineChartDataBuilder}",
        "134": "\t\t */",
        "135": "\t\tpublic LineChartDataBuilder lineStyle(LineStyle style){",
        "143": "\t\t * ",
        "47": "\t */",
        "48": "\tpublic static class LineChartDataBuilder {",
        "17": " */",
        "18": "public class LineChartData {",
        "25": "\t/**",
        "26": "\t * Use the {@link LineChartDataBuilder} to build an {@link LineChartData} object.",
        "27": "\t * ",
        "28": "\t * @param builder {@link LineChartDataBuilder}",
        "31": "\t */"
      },
      "id": 13646974,
      "filename": "LineChartData.java"
    },
    {
      "repo": "https://gitlab.com/madamovic-bg/hellocharts-android.git",
      "language": "Java",
      "linescount": 94,
      "location": "/hellocharts-library/src/lecho/lib/hellocharts/model",
      "name": "hellocharts-android",
      "url": "https://searchcode.com/codesearch/view/114959730/",
      "md5hash": "c6e72719ba0d22f99e613e42c736492f",
      "lines": {
        "79": "\tpublic static LineChartData generateDummyData() {",
        "80": "\t\tfinal int numValues = 4;",
        "9": " */",
        "10": "public class LineChartData extends AbstractChartData {",
        "78": "",
        "15": "",
        "16": "\tpublic LineChartData() {",
        "81": "\t\tLineChartData data = new LineChartData();",
        "19": "",
        "20": "\tpublic LineChartData(List<Line> lines) {",
        "53": "",
        "54": "\tpublic LineChartData setLines(List<Line> lines) {",
        "73": "\t */",
        "26": "\t */",
        "27": "\tpublic LineChartData(LineChartData data) {",
        "74": "\tpublic LineChartData setBaseValue(float baseValue) {"
      },
      "id": 114959730,
      "filename": "LineChartData.java"
    },
    {
      "repo": "git://github.com/willuhn/hibiscus.git",
      "language": "Java",
      "linescount": 46,
      "location": "/src/de/willuhn/jameica/hbci/gui/chart",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/17256548/",
      "md5hash": "a279cb69c2864c0e0a37e40221bb56b2",
      "lines": {
        "1": "/**********************************************************************",
        "2": " * $Source: /cvsroot/hibiscus/hibiscus/src/de/willuhn/jameica/hbci/gui/chart/LineChartData.java,v $",
        "21": " */",
        "22": "public interface LineChartData extends ChartData",
        "40": "/*********************************************************************",
        "41": " * $Log: LineChartData.java,v $"
      },
      "id": 17256548,
      "filename": "LineChartData.java"
    },
    {
      "repo": "https://github.com/ishaikovsky/blogbridge.git",
      "language": "Java",
      "linescount": 100,
      "location": "/src/com/salas/bb/utils/uif/charts",
      "name": "blogbridge",
      "url": "https://searchcode.com/codesearch/view/114075139/",
      "md5hash": "387b85ee2fc80694ee3f1ebc2d720068",
      "lines": {
        "52": "     */",
        "21": "//",
        "22": "// $Id: LineChartData.java,v 1.2 2007/09/20 13:21:03 spyromus Exp $",
        "41": "     */",
        "42": "    public LineChartData(int[] values)",
        "29": " */",
        "30": "public class LineChartData",
        "53": "    public LineChartData(int[] values, String[] labels)"
      },
      "id": 114075139,
      "filename": "LineChartData.java"
    },
    {
      "repo": "https://github.com/miracle2k/hibiscus.git",
      "language": "Java",
      "linescount": 45,
      "location": "/src/de/willuhn/jameica/hbci/gui/chart",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/66389324/",
      "md5hash": "5fa0ee031f19c765c3c892678e2337cf",
      "lines": {
        "1": "/**********************************************************************",
        "2": " * $Source: /cvsroot/hibiscus/hibiscus/src/de/willuhn/jameica/hbci/gui/chart/LineChartData.java,v $",
        "21": " */",
        "22": "public interface LineChartData extends ChartData"
      },
      "id": 66389324,
      "filename": "LineChartData.java"
    },
    {
      "repo": "http://googlechartwrapper.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 250,
      "location": "/googlechartwrapper/de/toolforge/googlechartwrapper",
      "name": "googlechartwrapper",
      "url": "https://searchcode.com/codesearch/view/13646916/",
      "md5hash": "36ecaf8c0b09800f682cdd1009a5c2ac",
      "lines": {
        "34": " * @version 03/24/09",
        "35": " * @see LineChartData",
        "70": "\t * @param chartDimension",
        "71": "\t * @param lineChartData {@link LineChartData}",
        "8": "import de.toolforge.googlechartwrapper.data.DataScalingSet;",
        "41": "",
        "10": "import de.toolforge.googlechartwrapper.data.LineChartDataAppender;",
        "11": "import de.toolforge.googlechartwrapper.interfaces.IEncodeable;",
        "72": "\t * ",
        "74": "\t * ",
        "73": "\t * @throws IllegalArgumentException if lineChartData is {@code null}",
        "9": "import de.toolforge.googlechartwrapper.data.LineChartData;",
        "24": " * ",
        "25": " * lineChart.addLineChartData(new LineChartData.LineChartDataBuilder(Arrays.asList(20f,30f,40f)).build());",
        "42": "\tprotected LineChartDataAppender lineChartDataAppender = new LineChartDataAppender();"
      },
      "id": 13646916,
      "filename": "LineChart.java"
    },
    {
      "repo": "http://googlechartwrapper.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 228,
      "location": "/googlechartwrapper/de/toolforge/googlechartwrapper/data",
      "name": "googlechartwrapper",
      "url": "https://searchcode.com/codesearch/view/13646971/",
      "md5hash": "492df6006f4a1d99476e3103212a0cbf",
      "lines": {
        "36": "    /**",
        "37": "     * The {@link LineChartData} will be added to the list.",
        "38": "     *",
        "39": "     * @param data {@link LineChartData}",
        "54": "    public void addLineChartData(List<? extends LineChartData> data) {",
        "41": "     */",
        "42": "    public void addLineChartData(LineChartData data) {",
        "50": "     *",
        "51": "     * @param data {@link LineChartData}",
        "21": " * @see LineChart",
        "22": " * @see LineChartData",
        "23": " */",
        "24": "public class LineChartDataAppender implements IExtendedFeatureAppender,",
        "27": "    private IEncoder encoder = new AutoEncoder();",
        "28": "    private List<LineChartData> data = new ArrayList<LineChartData>();",
        "53": "     */"
      },
      "id": 13646971,
      "filename": "LineChartDataAppender.java"
    },
    {
      "repo": "http://googlechartwrapper.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 119,
      "location": "/googlechartwrapper/unitTests",
      "name": "googlechartwrapper",
      "url": "https://searchcode.com/codesearch/view/13647065/",
      "md5hash": "459b982f7264c8f9e1fc4d991a347441",
      "lines": {
        "64": "        XYLineChartData data = new XYLineChartData.XYLineChartDataBuilder(values1).color(Color.BLACK).build();",
        "65": "        XYLineChartData data2 = new XYLineChartData.XYLineChartDataBuilder(values2).style(new LineStyle(5, 2, 2)).build();",
        "45": "        l.addLineChartData(new LineChartData.LineChartDataBuilder(Arrays.asList(40f, 30f, 10f)).build());",
        "11": "import de.toolforge.googlechartwrapper.data.LineChartData;",
        "38": "",
        "39": "        l.addLineChartData(new LineChartData.LineChartDataBuilder(Arrays.asList(20f, 30f, 40f)).build());",
        "40": "",
        "41": "        l.addLineChartData(new LineChartData.LineChartDataBuilder(Arrays.asList(40f, 50f, 60f)).build());",
        "42": "",
        "43": "        l.addLineChartData(new LineChartData.LineChartDataBuilder(Arrays.asList(60f, 40f, 30f)).build());",
        "12": "import de.toolforge.googlechartwrapper.data.XYLineChartData;",
        "13": "import de.toolforge.googlechartwrapper.label.*;",
        "44": "",
        "10": "import de.toolforge.googlechartwrapper.data.DataScalingSet;",
        "63": ""
      },
      "id": 13647065,
      "filename": "LineChartTest.java"
    },
    {
      "repo": "https://gitlab.com/madamovic-bg/hellocharts-android.git",
      "language": "Java",
      "linescount": 73,
      "location": "/hellocharts-library/src/lecho/lib/hellocharts/model",
      "name": "hellocharts-android",
      "url": "https://searchcode.com/codesearch/view/114959710/",
      "md5hash": "a620b48d0050e1b67a592e952b5bae06",
      "lines": {
        "32": "\t\tlineChartData.update(scale);",
        "3": "/**",
        "4": " * Data model for combo line-column chart. It uses ColumnChartData and LineChartData internally.",
        "37": "\t\tcolumnChartData.finish();",
        "38": "\t\tlineChartData.finish();",
        "9": "\tprivate ColumnChartData columnChartData;",
        "10": "\tprivate LineChartData lineChartData;",
        "13": "\t\tthis.columnChartData = new ColumnChartData();",
        "14": "\t\tthis.lineChartData = new LineChartData();",
        "16": "",
        "17": "\tpublic ComboLineColumnChartData(ColumnChartData columnChartData, LineChartData lineChartData) {",
        "18": "\t\tsetColumnChartData(columnChartData);",
        "19": "\t\tsetLineChartData(lineChartData);",
        "25": "\t\tsetColumnChartData(new ColumnChartData(data.getColumnChartData()));",
        "26": "\t\tsetLineChartData(new LineChartData(data.getLineChartData()));",
        "31": "\t\tcolumnChartData.update(scale);"
      },
      "id": 114959710,
      "filename": "ComboLineColumnChartData.java"
    },
    {
      "repo": "https://bitbucket.org/frigus02/car-report.git",
      "language": "Java",
      "linescount": 356,
      "location": "/app/src/main/java/me/kuehle/carreport/data/report",
      "name": "car-report",
      "url": "https://searchcode.com/codesearch/view/129653537/",
      "md5hash": "afaf02b005362308a9c5a56f4a1175b9",
      "lines": {
        "280": "",
        "278": "        ColumnChartData columnChartData = new ColumnChartData(columns);",
        "279": "        LineChartData lineChartData = new LineChartData(lines);",
        "40": "import lecho.lib.hellocharts.model.Line;",
        "41": "import lecho.lib.hellocharts.model.LineChartData;",
        "281": "        ComboLineColumnChartData data = new ComboLineColumnChartData(columnChartData, lineChartData);"
      },
      "id": 129653537,
      "filename": "AbstractReport.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/javafx-gradle.git",
      "language": "Java",
      "linescount": 78,
      "location": "/samples/Ensemble2/src/main/java/ensemble/samples/charts/line",
      "name": "javafx-gradle",
      "url": "https://searchcode.com/codesearch/view/40161178/",
      "md5hash": "8344e841cae137768228e983ca5719f0",
      "lines": {
        "57": "        NumberAxis yAxis = new NumberAxis(\"Values for Y-Axis\", 0, 3, 1);",
        "58": "        ObservableList<XYChart.Series<Double,Double>> lineChartData = FXCollections.observableArrayList(",
        "74": "        LineChart chart = new LineChart(xAxis, yAxis, lineChartData);",
        "73": "        );"
      },
      "id": 40161178,
      "filename": "LineChartSample.java"
    },
    {
      "repo": "https://bitbucket.org/Undergrounder/javafx-gradle.git",
      "language": "Java",
      "linescount": 78,
      "location": "/samples/Ensemble2/src/main/java/ensemble/samples/charts/line",
      "name": "javafx-gradle",
      "url": "https://searchcode.com/codesearch/view/51602439/",
      "md5hash": "8344e841cae137768228e983ca5719f0",
      "lines": {
        "57": "        NumberAxis yAxis = new NumberAxis(\"Values for Y-Axis\", 0, 3, 1);",
        "58": "        ObservableList<XYChart.Series<Double,Double>> lineChartData = FXCollections.observableArrayList(",
        "74": "        LineChart chart = new LineChart(xAxis, yAxis, lineChartData);",
        "73": "        );"
      },
      "id": 51602439,
      "filename": "LineChartSample.java"
    },
    {
      "repo": "git://github.com/willuhn/hibiscus.git",
      "language": "Java",
      "linescount": 586,
      "location": "/src/de/willuhn/jameica/hbci/gui/parts",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/17256511/",
      "md5hash": "8d3c9ba4a0bba968546bf99c35e439bf",
      "lines": {
        "48": "import de.willuhn.jameica.hbci.gui.chart.LineChartData;",
        "496": "    /**",
        "452": "   */",
        "453": "  private class ChartDataSparQuote implements LineChartData",
        "497": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getColor()",
        "488": "    /**",
        "489": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "527": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "526": "    /**",
        "47": "import de.willuhn.jameica.hbci.gui.chart.LineChart;"
      },
      "id": 17256511,
      "filename": "SparQuote.java"
    },
    {
      "repo": "https://github.com/miracle2k/hibiscus.git",
      "language": "Java",
      "linescount": 551,
      "location": "/src/de/willuhn/jameica/hbci/gui/parts",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/66389442/",
      "md5hash": "fc285fa589e5667c96b34d2f4d00f574",
      "lines": {
        "512": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#isFilled()",
        "496": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "455": "   */",
        "456": "  private class ChartDataSparQuote implements LineChartData",
        "47": "import de.willuhn.jameica.hbci.gui.chart.LineChart;",
        "48": "import de.willuhn.jameica.hbci.gui.chart.LineChartData;",
        "503": "    /**",
        "504": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getColor()",
        "543": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "495": "    /**",
        "542": "    /**",
        "511": "    /**"
      },
      "id": 66389442,
      "filename": "SparQuote.java"
    },
    {
      "repo": "https://gitlab.com/madamovic-bg/hellocharts-android.git",
      "language": "Java",
      "linescount": 332,
      "location": "/hellocharts-samples/src/lecho/lib/hellocharts/samples",
      "name": "hellocharts-android",
      "url": "https://searchcode.com/codesearch/view/114959626/",
      "md5hash": "cc487ab7f316b90f13160ea0ba34acc1",
      "lines": {
        "293": "",
        "294": "\t\tprivate LineChartData generatePreviewLineChartData() {",
        "231": "",
        "232": "\t\tprivate LineChartData generateLineChartData() {",
        "204": "\t\t\t\tPreviewLineChartView previewLineChartView = new PreviewLineChartView(getActivity());",
        "205": "\t\t\t\tpreviewLineChartView.setLineChartData(generatePreviewLineChartData());",
        "174": "\t\t\t\tLineChartView lineChartView = new LineChartView(getActivity());",
        "15": "import lecho.lib.hellocharts.model.Line;",
        "16": "import lecho.lib.hellocharts.model.LineChartData;",
        "308": "",
        "245": "",
        "246": "\t\t\tLineChartData data = new LineChartData(lines);",
        "175": "\t\t\t\tlineChartView.setLineChartData(generateLineChartData());",
        "309": "\t\t\tLineChartData data = new LineChartData(lines);"
      },
      "id": 114959626,
      "filename": "ViewPagerChartsActivity.java"
    },
    {
      "repo": "https://gitlab.com/madamovic-bg/hellocharts-android.git",
      "language": "Java",
      "linescount": 96,
      "location": "/hellocharts-library/src/lecho/lib/hellocharts/view",
      "name": "hellocharts-android",
      "url": "https://searchcode.com/codesearch/view/114959766/",
      "md5hash": "4f192da1311ce6d73ed08a2ea167af40",
      "lines": {
        "64": "\tpublic LineChartData getLineChartData() {",
        "43": "\t@Override",
        "6": "import lecho.lib.hellocharts.model.ChartData;",
        "7": "import lecho.lib.hellocharts.model.LineChartData;",
        "40": "\t\tsetLineChartData(LineChartData.generateDummyData());",
        "9": "import lecho.lib.hellocharts.model.SelectedValue;",
        "10": "import lecho.lib.hellocharts.provider.LineChartDataProvider;",
        "39": "\t\tchartRenderer = new LineChartRenderer(context, this, this);",
        "44": "\tpublic void setLineChartData(LineChartData data) {",
        "50": "\t\t\tthis.data = LineChartData.generateDummyData();",
        "49": "\t\tif (null == data) {",
        "18": " * LineChart, supports cubic lines, filled lines, circle and square points. Point radius and stroke width can be",
        "19": " * adjusted using LineChartData attributes.",
        "23": " */",
        "24": "public class LineChartView extends AbstractChartView implements LineChartDataProvider {",
        "25": "\tprivate static final String TAG = \"LineChartView\";",
        "63": "\t@Override"
      },
      "id": 114959766,
      "filename": "LineChartView.java"
    },
    {
      "repo": "https://gitlab.com/madamovic-bg/hellocharts-android.git",
      "language": "Java",
      "linescount": 470,
      "location": "/hellocharts-library/src/lecho/lib/hellocharts/renderer",
      "name": "hellocharts-android",
      "url": "https://searchcode.com/codesearch/view/114959818/",
      "md5hash": "7a5c90113220732c3b035871fd55e79c",
      "lines": {
        "384": "\t\tint lineIndex = selectedValue.getFirstIndex();",
        "385": "\t\tLine line = dataProvider.getLineChartData().getLines().get(lineIndex);",
        "36": "",
        "37": "\tprivate LineChartDataProvider dataProvider;",
        "139": "\tpublic void drawUnclipped(Canvas canvas) {",
        "140": "\t\tfinal LineChartData data = dataProvider.getLineChartData();",
        "15": "import lecho.lib.hellocharts.model.Line;",
        "16": "import lecho.lib.hellocharts.model.LineChartData;",
        "177": "\t\ttempMaxViewport.set(Float.MAX_VALUE, Float.MIN_VALUE, Float.MIN_VALUE, Float.MAX_VALUE);",
        "178": "\t\tLineChartData data = dataProvider.getLineChartData();",
        "19": "import lecho.lib.hellocharts.model.ValueShape;",
        "20": "import lecho.lib.hellocharts.provider.LineChartDataProvider;",
        "57": "",
        "58": "\tpublic LineChartRenderer(Context context, Chart chart, LineChartDataProvider dataProvider) {",
        "156": "\t\tselectedValue.clear();",
        "157": "\t\tfinal LineChartData data = dataProvider.getLineChartData();"
      },
      "id": 114959818,
      "filename": "LineChartRenderer.java"
    },
    {
      "repo": "https://github.com/miracle2k/hibiscus.git",
      "language": "Java",
      "linescount": 351,
      "location": "/src/de/willuhn/jameica/hbci/gui/parts",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/66389479/",
      "md5hash": "b2d48893fea4ab34cd45b40fbd8e7d22",
      "lines": {
        "129": "   */",
        "130": "  private class ChartDataUmsatz implements LineChartData",
        "227": "    /**",
        "228": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getColor()",
        "244": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#isFilled()",
        "243": "    /**",
        "220": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "219": "    /**",
        "28": "import de.willuhn.jameica.hbci.gui.chart.LineChart;",
        "29": "import de.willuhn.jameica.hbci.gui.chart.LineChartData;"
      },
      "id": 66389479,
      "filename": "UmsatzTypVerlauf.java"
    },
    {
      "repo": "git://github.com/willuhn/hibiscus.git",
      "language": "Java",
      "linescount": 352,
      "location": "/src/de/willuhn/jameica/hbci/gui/parts",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/17256493/",
      "md5hash": "b9ed4527960fa9701726974af467388d",
      "lines": {
        "129": "   */",
        "130": "  private class ChartDataUmsatz implements LineChartData",
        "228": "    /**",
        "229": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "236": "    /**",
        "28": "import de.willuhn.jameica.hbci.gui.chart.LineChart;",
        "29": "import de.willuhn.jameica.hbci.gui.chart.LineChartData;",
        "237": "     * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getColor()"
      },
      "id": 17256493,
      "filename": "UmsatzTypVerlauf.java"
    },
    {
      "repo": "https://github.com/miracle2k/hibiscus.git",
      "language": "Java",
      "linescount": 69,
      "location": "/src/de/willuhn/jameica/hbci/gui/chart",
      "name": "hibiscus",
      "url": "https://searchcode.com/codesearch/view/66389286/",
      "md5hash": "51dbbaf88b1070027d2ebb8f750e07de",
      "lines": {
        "53": "  /**",
        "54": "   * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getColor()",
        "24": " */",
        "25": "public abstract class AbstractChartDataSaldo implements LineChartData",
        "62": "   * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#isFilled()",
        "45": "  /**",
        "46": "   * @see de.willuhn.jameica.hbci.gui.chart.LineChartData#getCurve()",
        "61": "  /**"
      },
      "id": 66389286,
      "filename": "AbstractChartDataSaldo.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 17,
      "source": "Github",
      "id": 2
    },
    {
      "count": 16,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 15,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 4,
      "source": "Google Code",
      "id": 1
    }
  ]
}