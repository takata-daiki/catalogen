{
  "matchterm": "ObjectData",
  "previouspage": null,
  "searchterm": "ObjectData",
  "query": "ObjectData",
  "language_filters": [
    {
      "count": 354,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 354,
  "results": [
    {
      "repo": "https://github.com/ScarfaceIII/Editor3D.git",
      "language": "Java",
      "linescount": 476,
      "location": "/src/it/polimi/aasi",
      "name": "Editor3D",
      "url": "https://searchcode.com/codesearch/view/94927957/",
      "md5hash": "dd75f2845093768e94c490f2f2e3d2e3",
      "lines": {
        "64": "",
        "65": "\tpublic ObjectData(BranchGroup bg){\t\t\t",
        "224": "\t\t\treturn ObjectData.SpotLight;",
        "211": "\t\tif (box!=null)",
        "212": "\t\t\treturn ObjectData.Box;",
        "213": "\t\telse if (cone!=null)",
        "214": "\t\t\treturn ObjectData.Cone;",
        "215": "\t\telse if (cylinder!=null)",
        "216": "\t\t\treturn ObjectData.Cylinder;",
        "217": "\t\telse if (sphere!=null)",
        "218": "\t\t\treturn ObjectData.Sphere;",
        "219": "\t\telse if (dirLight != null)",
        "29": " */",
        "30": "public class ObjectData {",
        "223": "\t\telse if (spotLight != null)"
      },
      "id": 94927957,
      "filename": "ObjectData.java"
    },
    {
      "repo": "http://chromedevtools.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 89,
      "location": "/plugins/org.chromium.sdk/src-dynamic-impl/parser/org/chromium/sdk/internal/protocolparser/dynamicimpl",
      "name": "chromedevtools",
      "url": "https://searchcode.com/codesearch/view/3672045/",
      "md5hash": "b23c628d43449f88b02e485a8acaa300",
      "lines": {
        "34": "   */",
        "35": "  private final ObjectData superObjectData;",
        "37": "",
        "38": "  ObjectData(TypeHandler<?> typeHandler, Object inputObject, int fieldArraySize,",
        "39": "      int volatileArraySize, ObjectData superObjectData) {",
        "40": "    this.superObjectData = superObjectData;",
        "41": "    this.typeHandler = typeHandler;",
        "75": "",
        "76": "  ObjectData getSuperObjectData() {",
        "13": " * Each implementation of json type interface is a java dynamic proxy, that holds reference",
        "14": " * to {@link JsonInvocationHandler} which holds reference to this structure. ObjectData points",
        "77": "    return superObjectData;",
        "16": " */",
        "17": "class ObjectData {",
        "78": "  }"
      },
      "id": 3672045,
      "filename": "ObjectData.java"
    },
    {
      "repo": "http://xcmis.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 310,
      "location": "/xcmis-spi/src/main/java/org/xcmis/spi",
      "name": "xcmis",
      "url": "https://searchcode.com/codesearch/view/4558055/",
      "md5hash": "b612bb637f23c079e4f4194397a81c2f",
      "lines": {
        "48": "    */",
        "49": "   void accept(ObjectDataVisitor visitor);",
        "37": " * @author <a href=\"mailto:andrey00x@gmail.com\">Andrey Parfonov</a>",
        "38": " * @version $Id: ObjectData.java 316 2010-03-09 15:20:28Z andrew00x $",
        "39": " */",
        "40": "public interface ObjectData",
        "43": "   /**",
        "44": "    * Accepts an <code>ObjectDataVisitor</code>. Calls the <code>visit</code>"
      },
      "id": 4558055,
      "filename": "ObjectData.java"
    },
    {
      "repo": "https://code.google.com/p/ocp/",
      "language": "Java",
      "linescount": 37,
      "location": "/prototypes/ocp-agent/src/main/java/org/ocpteam/protocol/ocp",
      "name": "ocp",
      "url": "https://searchcode.com/codesearch/view/12029187/",
      "md5hash": "98350719bc7242ecb21cf87b6117442b",
      "lines": {
        "8": "public class ObjectData extends Data {",
        "9": "",
        "10": "\tpublic ObjectData(OCPAgent agent, OCPUser user, Serializable serializable)",
        "7": ""
      },
      "id": 12029187,
      "filename": "ObjectData.java"
    },
    {
      "repo": "https://code.google.com/p/ocp/",
      "language": "Java",
      "linescount": 37,
      "location": "/prototypes/v1/OCP/src/org/ocpteam/ocp",
      "name": "ocp",
      "url": "https://searchcode.com/codesearch/view/12029427/",
      "md5hash": "ae1f24945e24d05f29a59a4b7ea7b33c",
      "lines": {
        "8": "public class ObjectData extends Data {",
        "9": "",
        "10": "\tpublic ObjectData(OCPAgent agent, OCPUser user, Serializable serializable)",
        "7": ""
      },
      "id": 12029427,
      "filename": "ObjectData.java"
    },
    {
      "repo": "https://bitbucket.org/ivertex/itext-fork",
      "language": "Java",
      "linescount": 85,
      "location": "/examples/src/questions/markedcontent",
      "name": "itext-fork",
      "url": "https://searchcode.com/codesearch/view/57657583/",
      "md5hash": "bf1e68328a22977c970c2a196c456ab3",
      "lines": {
        "28": "",
        "29": "public class ObjectData {",
        "30": "\t",
        "31": "\tpublic static final String RESULT = \"results/questions/markedcontent/objectdata.pdf\";"
      },
      "id": 57657583,
      "filename": "ObjectData.java"
    },
    {
      "repo": "https://github.com/allanz/otter.git",
      "language": "Java",
      "linescount": 26,
      "location": "/shared/etl/src/main/java/com/alibaba/otter/shared/etl/model",
      "name": "otter",
      "url": "https://searchcode.com/codesearch/view/93807610/",
      "md5hash": "20b94a20b7d230b65d9ac7e3fc3175ae",
      "lines": {
        "22": " */",
        "23": "public interface ObjectData {"
      },
      "id": 93807610,
      "filename": "ObjectData.java"
    },
    {
      "repo": "https://bitbucket.org/qubole/jets3t.git",
      "language": "Java",
      "linescount": 1325,
      "location": "/src/org/jets3t/tests",
      "name": "jets3t",
      "url": "https://searchcode.com/codesearch/view/47812866/",
      "md5hash": "3d3c911d1c79e09546c9e6f65f7627e1",
      "lines": {
        "1088": "                String objectData = ServiceUtils.readInputStreamToString(",
        "1089": "                    getObject.getDataInputStream(), Constants.DEFAULT_ENCODING);",
        "418": "                dataObject.getDataInputStream(), Constants.DEFAULT_ENCODING);",
        "419": "            dataExpected = objectData.substring(byteRangeStart.intValue());",
        "427": "                dataObject.getDataInputStream(), Constants.DEFAULT_ENCODING);",
        "428": "            dataExpected = objectData.substring(objectData.length() - byteRangeEnd.intValue());",
        "308": "            String contentType = \"text/plain\";",
        "309": "            String objectData = \"Just some rubbish text to include as data\";",
        "310": "            String dataMd5HashAsHex = ServiceUtils.toHex(",
        "311": "                ServiceUtils.computeMD5Hash(objectData.getBytes()));",
        "409": "                dataObject.getDataInputStream(), Constants.DEFAULT_ENCODING);",
        "410": "            String dataExpected = objectData.substring(byteRangeStart.intValue(), byteRangeEnd.intValue() + 1);",
        "316": "            object.setContentType(contentType);",
        "317": "            object.setDataInputStream(new ByteArrayInputStream(objectData.getBytes()));",
        "1087": "                }"
      },
      "id": 47812866,
      "filename": "BaseStorageServiceTests.java"
    },
    {
      "repo": "https://github.com/SELAB-AA/VaadinSessionManagement.git",
      "language": "Java",
      "linescount": 164,
      "location": "/SessionPersistenceProject/src/com/vaadin/server/sessionstorage",
      "name": "VaadinSessionManagement",
      "url": "https://searchcode.com/codesearch/view/70983411/",
      "md5hash": "8b7a58a5f90d666c671cd007e3386452",
      "lines": {
        "96": "\t\t\t\tInputStream objectData = s3object.getObjectContent();",
        "97": "\t\t    \tObjectInputStream obj_in = new ObjectInputStream (objectData);",
        "98": "\t\t    \tObject obj = (VaadinSession) obj_in.readObject();",
        "79": "\t\t\t\tVaadinSession obj = (VaadinSession) kryo.readClassAndObject(input);",
        "76": "\t\t\t\tS3Object s3object = client.getObject(new GetObjectRequest(bucketName, FileNameInBucket));",
        "77": "\t\t\t\tInputStream objectData = s3object.getObjectContent();",
        "78": "\t\t\t\tInput input = new Input(objectData);",
        "95": "\t\t\t\tlong startloadamazondeserialization = System.currentTimeMillis();"
      },
      "id": 70983411,
      "filename": "AmazonS3SessionStorageManager.java"
    },
    {
      "repo": "https://bitbucket.org/linzhixing/nemakiware.git",
      "language": "Java",
      "linescount": 598,
      "location": "/src/main/java/jp/aegif/nemaki/service",
      "name": "nemakiware",
      "url": "https://searchcode.com/codesearch/view/37563862/",
      "md5hash": "27ddd0e94f486945198cf4009b919948",
      "lines": {
        "336": "\tpublic ObjectData getObjectByPath(String repositoryId, String path,",
        "34": "import org.apache.chemistry.opencmis.commons.data.FailedToDeleteData;",
        "35": "import org.apache.chemistry.opencmis.commons.data.ObjectData;",
        "321": "\t@Override",
        "424": "\tpublic ObjectData getObjectOfLatestVersion(String repositoryId,",
        "423": "\t@Override",
        "322": "\tpublic ObjectData getObject(String repositoryId, String objectId,",
        "335": "\t@Override",
        "176": "\t\t\tExtensionsData extension) {",
        "177": "\t\tObjectData object = getRepository(repositoryId).create(",
        "114": "\t@Override",
        "115": "\tpublic ObjectData getFolderParent(String repositoryId, String folderId,",
        "442": "\t\t\tString filter, ExtensionsData extension) {",
        "443": "\t\tObjectData object = getRepository(repositoryId).getObject(",
        "412": "\t\t\tBoolean includeAllowableActions, ExtensionsData extension) {",
        "413": "\t\tObjectData theVersion = getRepository(repositoryId).getObject("
      },
      "id": 37563862,
      "filename": "NemakiCmisService.java"
    },
    {
      "repo": "https://bitbucket.org/linzhixing/nemakiware.git",
      "language": "Java",
      "linescount": 187,
      "location": "/src/main/java/jp/aegif/nemaki/query",
      "name": "nemakiware",
      "url": "https://searchcode.com/codesearch/view/37563888/",
      "md5hash": "014d74f8d65c81f214045fd5f1a3ad05",
      "lines": {
        "34": "",
        "35": "import org.apache.chemistry.opencmis.commons.data.ObjectData;",
        "133": "\t\t\tprops.addProperty(new PropertyStringImpl(\"name\", f.getName()));",
        "38": "import org.apache.chemistry.opencmis.commons.enums.IncludeRelationships;",
        "39": "import org.apache.chemistry.opencmis.commons.impl.dataobjects.ObjectDataImpl;",
        "140": "",
        "141": "\tprivate List<ObjectData> getGroups() {",
        "142": "\t\tList<Group> groups = userGroupService.getGroups();",
        "143": "\t\tList<ObjectData> dataList = new ArrayList<ObjectData>();",
        "147": "\t\t\tprops.addProperty(new PropertyStringImpl(\"id\", g.getId()));",
        "148": "\t\t\tObjectDataImpl data = new ObjectDataImpl();",
        "154": "",
        "155": "\tprivate List<ObjectData> getUsers() {",
        "156": "\t\tList<User> users = userGroupService.getUsers();",
        "157": "\t\tList<ObjectData> dataList = new ArrayList<ObjectData>();",
        "134": "\t\t\tObjectDataImpl data = new ObjectDataImpl();"
      },
      "id": 37563888,
      "filename": "NonQueryProcessor.java"
    },
    {
      "repo": "http://chromedevtools.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1753,
      "location": "/plugins/org.chromium.sdk/src-dynamic-impl/parser/org/chromium/sdk/internal/protocolparser/dynamicimpl",
      "name": "chromedevtools",
      "url": "https://searchcode.com/codesearch/view/3672039/",
      "md5hash": "2b60cd5f97e29b74317c03c91e8333e8",
      "lines": {
        "546": "            @Override",
        "547": "            ObjectData getSubtypeObjectData(ObjectData baseObjectData)",
        "548": "                throws JsonProtocolParseException {",
        "549": "              ObjectData objectData = baseObjectData;",
        "550": "              return handler.getSubtypeData(objectData);",
        "551": "            }",
        "690": "    Object handle(ObjectData objectData, Object[] args) {",
        "656": "    @Override",
        "657": "    void parseAllFields(ObjectData objectData) throws JsonProtocolParseException {",
        "658": "      for (LazyHandler handler : onDemandHandlers) {",
        "659": "        handler.parseEager(objectData);",
        "691": "      try {",
        "689": "    @Override",
        "670": "  private interface LazyHandler {",
        "671": "    void parseEager(ObjectData objectData) throws JsonProtocolParseException;"
      },
      "id": 3672039,
      "filename": "DynamicParserImpl.java"
    },
    {
      "repo": "https://github.com/ScarfaceIII/Editor3D.git",
      "language": "Java",
      "linescount": 2121,
      "location": "/src/it/polimi/aasi",
      "name": "Editor3D",
      "url": "https://searchcode.com/codesearch/view/94927953/",
      "md5hash": "4c7a1090fef44069f9610e106912a9ff",
      "lines": {
        "384": "\t\t\t\t\tif((mObj.getType()==ObjectData.PointLight)||(mObj.getType()==ObjectData.SpotLight)){",
        "673": "\t\t\tpublic void stateChanged(ChangeEvent e) {",
        "674": "\t\t\t\tObjectData mObj = new ObjectData(ObjectArray.get(lightnameField.getText())) ;",
        "388": "\t\t\t\telse if(lpzFieldString.equals(e.getActionCommand())){",
        "389": "\t\t\t\t\tif((mObj.getType()==ObjectData.PointLight)||(mObj.getType()==ObjectData.SpotLight)){",
        "393": "\t\t\t\telse if(laxFieldString.equals(e.getActionCommand())){",
        "394": "\t\t\t\t\tif((mObj.getType()==ObjectData.PointLight)||(mObj.getType()==ObjectData.SpotLight)){",
        "435": "\t\t\tpublic void stateChanged(ChangeEvent e) {",
        "398": "\t\t\t\telse if(layFieldString.equals(e.getActionCommand())){",
        "399": "\t\t\t\t\tif((mObj.getType()==ObjectData.PointLight)||(mObj.getType()==ObjectData.SpotLight)){",
        "403": "\t\t\t\telse if(lazFieldString.equals(e.getActionCommand())){",
        "404": "\t\t\t\t\tif((mObj.getType()==ObjectData.PointLight)||(mObj.getType()==ObjectData.SpotLight)){",
        "436": "\t\t\t\t\tObjectData mObj = new ObjectData(ObjectArray.get(lightnameField.getText())) ;",
        "698": "\t\t\tpublic void stateChanged(ChangeEvent e) {",
        "699": "\t\t\t\tObjectData mObj = new ObjectData(ObjectArray.get(lightnameField.getText())) ;",
        "383": "\t\t\t\telse if(lpyFieldString.equals(e.getActionCommand())){"
      },
      "id": 94927953,
      "filename": "Editor3D.java"
    },
    {
      "repo": "http://xcmis.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 3527,
      "location": "/xcmis-spi/src/main/java/org/xcmis/spi",
      "name": "xcmis",
      "url": "https://searchcode.com/codesearch/view/4558044/",
      "md5hash": "78fc3e113fa91f9ee727a0cc220a2221",
      "lines": {
        "672": "",
        "673": "      ObjectData parent = null;",
        "547": "",
        "548": "      ObjectData parent = null;",
        "133": "",
        "134": "      ObjectData object = storage.getObjectById(objectId);",
        "135": "      ObjectData folder = storage.getObjectById(folderId);",
        "136": "",
        "270": "",
        "271": "      ObjectData object = storage.getObjectById(objectId);",
        "275": "      }",
        "276": "      ObjectData policy = storage.getObjectById(policyId);",
        "665": "",
        "666": "      ObjectData source = storage.getObjectById(sourceId);",
        "796": "",
        "797": "      ObjectData newFolder ="
      },
      "id": 4558044,
      "filename": "Connection.java"
    },
    {
      "repo": "https://bitbucket.org/crunchiness/vuze.git",
      "language": "Java",
      "linescount": 935,
      "location": "/AZ-SVN/azureus2/src/org/gudy/azureus2/ui/swt/progress",
      "name": "vuze",
      "url": "https://searchcode.com/codesearch/view/44079328/",
      "md5hash": "f0824b6966aacb3ee2af4d0def2adfab",
      "lines": {
        "923": "\t\t\treturn objectData;",
        "708": "\t * <p>",
        "613": "\t/* (non-Javadoc)",
        "614": "\t * @see org.gudy.azureus2.ui.swt.mainwindow.IProgressReporter#setObjectData(java.lang.Object)",
        "615": "\t */",
        "616": "\tpublic void setObjectData(Object objectData) {",
        "619": "\t\t}",
        "620": "\t\tthis.objectData = objectData;",
        "919": "\t\t/* (non-Javadoc)",
        "920": "\t\t * @see org.gudy.azureus2.ui.swt.progress.IProgressReport#getObjectData()",
        "921": "\t\t */",
        "922": "\t\tpublic Object getObjectData() {",
        "123": "\t */",
        "124": "\tprivate Object objectData = null;",
        "709": "\t * An exception to this insulation is the <code>objectData</code> variable; both the reporter"
      },
      "id": 44079328,
      "filename": "ProgressReporter.java"
    },
    {
      "repo": "http://xcmis.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 323,
      "location": "/xcmis-sp-inmemory/src/main/java/org/xcmis/sp/inmemory/query",
      "name": "xcmis",
      "url": "https://searchcode.com/codesearch/view/4558279/",
      "md5hash": "87a3ab9c4cfe33a5721aeb7cbe861f9a",
      "lines": {
        "136": "      /**",
        "137": "       * Convert {@link ObjectData} to {@link ContentEntry}.",
        "138": "       *",
        "139": "       * @param objectData ObjectData",
        "142": "       */",
        "143": "      public ContentEntry createEntry(ObjectData objectData) throws IOException",
        "144": "      {",
        "145": "         if (objectData != null)",
        "146": "         {",
        "147": "            switch (objectData.getBaseType())",
        "149": "               case DOCUMENT :",
        "150": "                  return createFromDocument((DocumentData)objectData);",
        "151": "               case FOLDER :",
        "152": "                  return createFromFolder((FolderData)objectData);",
        "153": "               case POLICY :"
      },
      "id": 4558279,
      "filename": "IndexListener.java"
    },
    {
      "repo": "https://github.com/aaronwalker/undertow.git",
      "language": "Java",
      "linescount": 179,
      "location": "/servlet/src/main/java/io/undertow/servlet/handlers",
      "name": "undertow",
      "url": "https://searchcode.com/codesearch/view/75729456/",
      "md5hash": "9397dd5ea86ee4bf3d5f0cae0a0f9f8d",
      "lines": {
        "84": "                    }",
        "85": "                    objectData.put(sessionId, sessionData);",
        "87": "            }",
        "88": "            sessionPersistenceManager.persistSessions(deploymentName, objectData);",
        "76": "            this.started = false;",
        "77": "            final Map<String, Map<String, Object>> objectData = new HashMap<String, Map<String, Object>>();"
      },
      "id": 75729456,
      "filename": "SessionRestoringHandler.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 256,
      "location": "/src/main/mondrian/calc/impl",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100410929/",
      "md5hash": "e2b10704bb39aabbdac3cb48a52d339c",
      "lines": {
        "172": "        System.arraycopy(members, 0, objectData, size * arity, arity);",
        "171": "        ensureCapacity(size * arity + arity);",
        "140": "        ensureCapacity((size + 1) + arity);",
        "141": "        System.arraycopy(objectData, n, objectData, n + arity, arity);",
        "142": "        for (Member member : members) {",
        "143": "            objectData[n++] = member;",
        "50": "        assert members.length % arity == 0;",
        "51": "        this.objectData = members;",
        "181": "        // List<Member> previous = get(index);",
        "182": "        System.arraycopy(objectData, n + arity, objectData, n, arity);",
        "24": "{",
        "25": "    private transient Member[] objectData;",
        "154": "        System.arraycopy(",
        "155": "            objectData, n, objectData, n + size1 * arity, size * arity - n);",
        "157": "            for (Member member : members) {",
        "158": "                objectData[n++] = member;"
      },
      "id": 100410929,
      "filename": "ArrayTupleList.java"
    },
    {
      "repo": "http://chromedevtools.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 572,
      "location": "/plugins/org.chromium.sdk/src-dynamic-impl/parser/org/chromium/sdk/internal/protocolparser/dynamicimpl",
      "name": "chromedevtools",
      "url": "https://searchcode.com/codesearch/view/3672048/",
      "md5hash": "6c795765a2c9ca8f33e922e0a255fbdf",
      "lines": {
        "129": "",
        "130": "      parseObjectSubtype(objectData, jsonProperties, input);",
        "132": "      if (checkLazyParsedFields) {",
        "133": "        eagerFieldParser.parseAllFields(objectData);",
        "134": "      }",
        "135": "      wrapInProxy(objectData, methodHandlerMap);",
        "136": "      return objectData;",
        "137": "    } catch (JsonProtocolParseException e) {",
        "142": "  public T parseRoot(Object input) throws JsonProtocolParseException {",
        "143": "    ObjectData baseData = parseRootImpl(input);",
        "146": "",
        "147": "  public ObjectData parseRootImpl(Object input) throws JsonProtocolParseException {",
        "213": "",
        "214": "  private void parseObjectSubtype(ObjectData objectData, Map<?, ?> jsonProperties, Object input)",
        "29": " * The instance of this class corresponds to a particular json type. Primarily it serves",
        "30": " * as a factory for dynamic proxy/{@link ObjectData}, but also plays a role of type"
      },
      "id": 3672048,
      "filename": "TypeHandler.java"
    },
    {
      "repo": "https://bitbucket.org/linzhixing/nemakiware.git",
      "language": "Java",
      "linescount": 817,
      "location": "/src/main/java/jp/aegif/nemaki/service/impl",
      "name": "nemakiware",
      "url": "https://searchcode.com/codesearch/view/37563871/",
      "md5hash": "b928703b6fcd297a19e2093593086ab0",
      "lines": {
        "474": "\tprivate void setAspects(ObjectDataImpl result, List<Aspect> exsistingAspects) {",
        "441": "\tpublic ObjectData compileObjectType(CallContext context, Content content,",
        "473": "\t */",
        "42": "import org.apache.chemistry.opencmis.commons.data.FailedToDeleteData;",
        "43": "import org.apache.chemistry.opencmis.commons.data.ObjectData;",
        "206": "",
        "207": "\tpublic ObjectData getObjectByPath(CallContext callContext, String path,",
        "498": "\t */",
        "499": "\tprivate void setPastVersions(ObjectDataImpl result,",
        "438": "\t/**",
        "439": "\t * Builds a CMIS ObjectData from the given CouchDB content.",
        "440": "\t */",
        "89": "",
        "90": "\tpublic ObjectData create(CallContext callContext, Properties properties,",
        "59": "import org.apache.chemistry.opencmis.commons.impl.dataobjects.ObjectDataImpl;",
        "58": "import org.apache.chemistry.opencmis.commons.impl.dataobjects.ContentStreamImpl;"
      },
      "id": 37563871,
      "filename": "ObjectServiceImpl.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 161,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 97,
      "source": "Github",
      "id": 2
    },
    {
      "count": 89,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 6,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    }
  ]
}