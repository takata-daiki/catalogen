{
  "matchterm": "DocumentProperties",
  "previouspage": null,
  "searchterm": "DocumentProperties",
  "query": "DocumentProperties",
  "language_filters": [
    {
      "count": 124,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 124,
  "results": [
    {
      "repo": "https://bitbucket.org/markjenkins/libreoffice_ubuntu-debian-fixes.git",
      "language": "Java",
      "linescount": 552,
      "location": "/sfx2/qa/complex/sfx2",
      "name": "libreoffice_ubuntu-debian-fixes",
      "url": "https://searchcode.com/codesearch/view/45015852/",
      "md5hash": "d618503813feab89c5ff875912d5c0c1",
      "lines": {
        "331": "            // but maybe the DocumentProperties service will be implemented",
        "534": "        System.out.println( \"starting class: \" + DocumentProperties.class.getName() );",
        "330": "            // actually, this tests the PropertyBag service",
        "43": "",
        "44": "import com.sun.star.document.XDocumentProperties;",
        "110": "",
        "111": "            System.out.println(\"Creating service DocumentProperties...\");",
        "114": "//                xMSF.createInstanceWithContext(",
        "115": "//                    \"com.sun.star.document.DocumentProperties\", xContext);",
        "116": "                xMSF.createInstance(\"com.sun.star.document.DocumentProperties\");",
        "53": "/**",
        "54": " * Test case for the service com.sun.star.document.DocumentProperties.",
        "58": " */",
        "59": "public class DocumentProperties",
        "533": "        System.out.println( \"------------------------------------------------------------\" );"
      },
      "id": 45015852,
      "filename": "DocumentProperties.java"
    },
    {
      "repo": "https://bitbucket.org/mst/ooo340",
      "language": "Java",
      "linescount": 270,
      "location": "/sfx2/qa/complex/docinfo",
      "name": "ooo340",
      "url": "https://searchcode.com/codesearch/view/122062258/",
      "md5hash": "b9878c5877576e583fcb00577fed3060",
      "lines": {
        "48": "",
        "49": "public class DocumentProperties extends ComplexTestCase {"
      },
      "id": 122062258,
      "filename": "DocumentProperties.java"
    },
    {
      "repo": "https://github.com/rbparson/TouchDB-Android.git",
      "language": "Java",
      "linescount": 137,
      "location": "/TouchDB-Android-TestApp/src/com/couchbase/touchdb/testapp/tests",
      "name": "TouchDB-Android",
      "url": "https://searchcode.com/codesearch/view/71365271/",
      "md5hash": "7c74bcb6a624d467488594103e2a43f7",
      "lines": {
        "32": "        documentProperties.put(\"bar\", false);",
        "33": "",
        "34": "        TDBody body = new TDBody(documentProperties);",
        "40": "",
        "41": "        documentProperties.put(\"_rev\", rev1.getRevId());",
        "42": "        documentProperties.put(\"UPDATED\", true);",
        "43": "",
        "44": "        @SuppressWarnings(\"unused\")",
        "45": "        TDRevision rev2 = database.putRevision(new TDRevision(documentProperties), rev1.getRevId(), false, status);",
        "47": "",
        "48": "        documentProperties = new HashMap<String, Object>();",
        "49": "        documentProperties.put(\"_id\", \"doc2\");",
        "50": "        documentProperties.put(\"baz\", 666);",
        "51": "        documentProperties.put(\"fnord\", true);",
        "31": "        documentProperties.put(\"foo\", 1);"
      },
      "id": 71365271,
      "filename": "Replicator.java"
    },
    {
      "repo": "https://github.com/rbparson/TouchDB-Android.git",
      "language": "Java",
      "linescount": 166,
      "location": "/TouchDB-Android-TestApp/src/com/couchbase/touchdb/testapp/tests",
      "name": "TouchDB-Android",
      "url": "https://searchcode.com/codesearch/view/71365284/",
      "md5hash": "8c97b8c459966b557f8dbcec1f56144e",
      "lines": {
        "74": "        //now update it",
        "75": "        documentProperties = readRev.getProperties();",
        "76": "        documentProperties.put(\"status\", \"updated!\");",
        "77": "        body = new TDBody(documentProperties);",
        "78": "        TDRevision rev2 = new TDRevision(body);",
        "51": "        //create a document",
        "52": "        Map<String, Object> documentProperties = new HashMap<String, Object>();",
        "53": "        documentProperties.put(\"foo\", 1);",
        "54": "        documentProperties.put(\"bar\", false);",
        "55": "        documentProperties.put(\"baz\", \"touch\");",
        "56": "",
        "57": "        TDBody body = new TDBody(documentProperties);"
      },
      "id": 71365284,
      "filename": "CRUDOperations.java"
    },
    {
      "repo": "https://github.com/rbparson/TouchDB-Android.git",
      "language": "Java",
      "linescount": 84,
      "location": "/TouchDB-Android-TestApp/src/com/couchbase/touchdb/testapp/tests",
      "name": "TouchDB-Android",
      "url": "https://searchcode.com/codesearch/view/71365488/",
      "md5hash": "1faed36afe3a0005c1e0be7d116a161e",
      "lines": {
        "44": "        //now update it",
        "45": "        documentProperties = readRev.getProperties();",
        "46": "        documentProperties.put(\"status\", \"updated!\");",
        "47": "        body = new TDBody(documentProperties);",
        "48": "        TDRevision rev2 = new TDRevision(body);",
        "19": "        //create a document",
        "20": "        Map<String, Object> documentProperties = new HashMap<String, Object>();",
        "21": "        documentProperties.put(\"_id\", \"_local/doc1\");",
        "22": "        documentProperties.put(\"foo\", 1);",
        "23": "        documentProperties.put(\"bar\", false);",
        "24": "",
        "25": "        TDBody body = new TDBody(documentProperties);"
      },
      "id": 71365488,
      "filename": "LocalDocs.java"
    },
    {
      "repo": "https://github.com/dlvenable/TouchDB-Android.git",
      "language": "Java",
      "linescount": 166,
      "location": "/TouchDB-Android-TestApp/src/com/couchbase/touchdb/testapp/tests",
      "name": "TouchDB-Android",
      "url": "https://searchcode.com/codesearch/view/82844600/",
      "md5hash": "8c97b8c459966b557f8dbcec1f56144e",
      "lines": {
        "74": "        //now update it",
        "75": "        documentProperties = readRev.getProperties();",
        "76": "        documentProperties.put(\"status\", \"updated!\");",
        "77": "        body = new TDBody(documentProperties);",
        "78": "        TDRevision rev2 = new TDRevision(body);",
        "51": "        //create a document",
        "52": "        Map<String, Object> documentProperties = new HashMap<String, Object>();",
        "53": "        documentProperties.put(\"foo\", 1);",
        "54": "        documentProperties.put(\"bar\", false);",
        "55": "        documentProperties.put(\"baz\", \"touch\");",
        "56": "",
        "57": "        TDBody body = new TDBody(documentProperties);"
      },
      "id": 82844600,
      "filename": "CRUDOperations.java"
    },
    {
      "repo": "https://github.com/rbparson/TouchDB-Android.git",
      "language": "Java",
      "linescount": 49,
      "location": "/TouchDB-Android-TestApp/src/com/couchbase/touchdb/testapp/tests",
      "name": "TouchDB-Android",
      "url": "https://searchcode.com/codesearch/view/71365445/",
      "md5hash": "2eb78e11a00efb1192433997b5255993",
      "lines": {
        "33": "        // create a document",
        "34": "        Map<String, Object> documentProperties = new HashMap<String, Object>();",
        "35": "        documentProperties.put(\"foo\", 1);",
        "36": "        documentProperties.put(\"bar\", false);",
        "37": "        documentProperties.put(\"baz\", \"touch\");",
        "38": "",
        "39": "        TDBody body = new TDBody(documentProperties);"
      },
      "id": 71365445,
      "filename": "Changes.java"
    },
    {
      "repo": "https://bitbucket.org/tcolar/fantomsap",
      "language": "Java",
      "linescount": 1595,
      "location": "/netColarCrmCat/resources",
      "name": "fantomsap",
      "url": "https://searchcode.com/codesearch/view/55522142/",
      "md5hash": "760589816a119d664c0f6159c3e49320",
      "lines": {
        "64": "        ",
        "65": "        protected RfcDefaultIPCDocument(DefaultIPCSession session, DefaultIPCDocumentProperties attr) throws IPCException {",
        "196": "\t\t\t\t\tSpcGetDocumentAttrInfo.DOCUMENT_CURRENCY_UNIT);",
        "197": "\t\t\tdocumentProperties.setDocumentCurrency(documentCurrencyUnit);",
        "161": "\t\t\tdocumentProperties.setApplication(application);",
        "201": "\t\t\t\t\tSpcGetDocumentAttrInfo.LOCAL_CURRENCY_UNIT);",
        "202": "\t\t\tdocumentProperties.setLocalCurrency(localCurrencyUnit);",
        "160": "\t\t\t\t\tSpcGetDocumentAttrInfo.APPLICATION);",
        "206": "\t\t\t\t\tSpcGetDocumentAttrInfo.BUSINESS_OBJECT_TYPE);",
        "207": "\t\t\tdocumentProperties.setBusinessObjectType(businessObjectType);",
        "184": "\t\t\tdocumentProperties.setPricingProcedure(procedur);",
        "146": "\t\t\t\t\tSpcGetDocumentAttrInfo.DOCUMENT_ID_EXT);",
        "147": "\t\t\tdocumentProperties.setExternalId(new String(documentIdExt));",
        "23": "import com.sap.spc.remote.client.object.imp.DefaultIPCDocument;",
        "24": "import com.sap.spc.remote.client.object.imp.DefaultIPCDocumentProperties;",
        "183": "\t\t\t\t\tSpcGetDocumentAttrInfo.PROCEDUR);"
      },
      "id": 55522142,
      "filename": "RfcDefaultIPCDocument.java"
    },
    {
      "repo": "git://github.com/liferay/liferay-portal.git",
      "language": "Java",
      "linescount": 777,
      "location": "/modules/apps/foundation/portal-store/portal-store-cmis/src/main/java/com/liferay/portal/store/cmis",
      "name": "liferay-portal",
      "url": "https://searchcode.com/codesearch/view/116060613/",
      "md5hash": "98b0bc13ba84a7160498101ba77576ee",
      "lines": {
        "491": "",
        "493": "",
        "492": "\t\tMap<String, Object> documentProperties = new HashMap<>();",
        "458": "",
        "459": "\t\tMap<String, Object> documentProperties = new HashMap<>();",
        "460": "",
        "461": "\t\tdocumentProperties.put(PropertyIds.NAME, toVersionLabel);",
        "142": "",
        "143": "\t\tMap<String, Object> documentProperties = new HashMap<>();",
        "144": "",
        "145": "\t\tdocumentProperties.put(PropertyIds.NAME, toVersionLabel);",
        "146": "",
        "147": "\t\tdocumentProperties.put(",
        "462": "",
        "153": "\t\tdocument.copy(",
        "154": "\t\t\tversioningFolderObjectId, documentProperties, null,",
        "463": "\t\tdocument.updateProperties(documentProperties);"
      },
      "id": 116060613,
      "filename": "CMISStore.java"
    },
    {
      "repo": "https://bitbucket.org/keithb/tdd",
      "language": "Java",
      "linescount": 2805,
      "location": "/targets/itext/1.4.8/com/lowagie/text/pdf",
      "name": "tdd",
      "url": "https://searchcode.com/codesearch/view/120313745/",
      "md5hash": "3f3bd800eb13477a077d860a2e726118",
      "lines": {
        "1705": "    PdfObject[] addSimpleProperty(Object prop, PdfIndirectReference refi) {",
        "746": "    protected HashMap documentProperties = new HashMap();",
        "1708": "                checkPDFXConformance(this, PDFXKEY_LAYER, null);",
        "1709": "            documentProperties.put(prop, new PdfObject[]{new PdfName(\"Pr\" + (documentProperties.size() + 1)), refi});",
        "1710": "        }",
        "1711": "        return (PdfObject[])documentProperties.get(prop);",
        "1265": "        // add the properties",
        "1266": "        for (Iterator it = documentProperties.entrySet().iterator(); it.hasNext();) {",
        "1715": "        return documentProperties.containsKey(prop);",
        "1714": "    boolean propertyExists(Object prop) {",
        "745": "    ",
        "1706": "        if (!documentProperties.containsKey(prop)) {"
      },
      "id": 120313745,
      "filename": "PdfWriter.java"
    },
    {
      "repo": "https://bitbucket.org/slabrams/jhove2-working",
      "language": "Java",
      "linescount": 275,
      "location": "/src/main/java/org/jhove2/module/format/sgml",
      "name": "jhove2-working",
      "url": "https://searchcode.com/codesearch/view/56473299/",
      "md5hash": "ed812aa2b399b3aa607626d718ebfc0a",
      "lines": {
        "129": "\t{",
        "130": "\t\tthis.documentProperties = sgmlParser.parseFile(this, jhove2, source);",
        "131": "\t\tif (this.documentProperties != null){",
        "132": "\t\t\tif (this.isShouldFindDoctype()){",
        "169": "\t\t\t\t}",
        "170": "\t\t\t\telse if (this.getDocumentProperties().isSgmlValid()){",
        "226": "\t/**",
        "227": "\t * @return the documentProperties",
        "152": "\t{",
        "153": "\t\tif (this.getDocumentProperties() != null){",
        "154": "\t\t\tif (this.getDocumentProperties().getParseErrors() != null &&",
        "155": "\t\t\t\t    this.getDocumentProperties().getParseErrors().size() > 0){",
        "156": "\t\t\t\t\tthis.validity = Validity.Undetermined;",
        "93": "\t/** Container for SGML document properties extracted by parser */",
        "94": "\tprotected SgmlDocumentProperties documentProperties;"
      },
      "id": 56473299,
      "filename": "SgmlModule.java"
    },
    {
      "repo": "https://bitbucket.org/mst/ooo340",
      "language": "Java",
      "linescount": 543,
      "location": "/sfx2/qa/complex",
      "name": "ooo340",
      "url": "https://searchcode.com/codesearch/view/122062255/",
      "md5hash": "53f5e8167e8c7f55282441ca3f1bf8b8",
      "lines": {
        "128": "                xMSF.createInstance(\"com.sun.star.document.DocumentProperties\");",
        "129": "            XDocumentProperties xDP = (XDocumentProperties)",
        "130": "                UnoRuntime.queryInterface(XDocumentProperties.class, oDP);",
        "59": "/**",
        "136": "",
        "137": "            XDocumentProperties xDP2 = (XDocumentProperties)",
        "138": "                UnoRuntime.queryInterface(XDocumentProperties.class,",
        "139": "                    xMSF.createInstance(",
        "140": "                        \"com.sun.star.document.DocumentProperties\"));",
        "131": "",
        "55": "import com.sun.star.io.XInputStream;",
        "56": "import com.sun.star.document.XDocumentProperties;",
        "122": "",
        "123": "            log.println(\"Creating service DocumentProperties...\");",
        "60": " * Test case for the service com.sun.star.document.DocumentProperties.",
        "127": "//                    \"com.sun.star.document.DocumentProperties\", xContext);"
      },
      "id": 122062255,
      "filename": "DocumentMetaData.java"
    },
    {
      "repo": "https://github.com/idega/com.idega.block.pdf.git",
      "language": "Java",
      "linescount": 135,
      "location": "/src/java/com/idega/block/pdf/business",
      "name": "com.idega.block.pdf",
      "url": "https://searchcode.com/codesearch/view/105016052/",
      "md5hash": "15cca22bc428c05083b2ce0d817a980f",
      "lines": {
        "64": "\t\ttry {",
        "65": "\t\t\tMap documentProperties = pcx.getDocumentProperties();",
        "66": "\t\t\tif (pcx.getBundle() == null) {",
        "67": "\t\t\t\tObject o = documentProperties.get(PrintingContext.IW_BUNDLE_ROPERTY_NAME);",
        "74": "\t\t\t",
        "75": "\t\t\tDocumentPrinter documentPrinter = new DocumentPrinter(is, documentProperties);",
        "42": "\t * // defining the document properties, this map is used for dynamical content",
        "43": "\t * evaluation. Map documentProperties = new HashMap(); ... // instantiating",
        "45": "\t * FileInputStream(\"your-template-file.xml\"); DocumentPrinter documentPrinter =",
        "46": "\t * new DocumentPrinter(templateStream, documentProperties); // in case you'd"
      },
      "id": 105016052,
      "filename": "PrintingServiceBean.java"
    },
    {
      "repo": "https://github.com/benzen/Ulysse.git",
      "language": "Java",
      "linescount": 955,
      "location": "/factory/factory-service-collaboration-wsclient/src/main/java/org/qualipso/factory/collaboration/ws",
      "name": "Ulysse",
      "url": "https://searchcode.com/codesearch/view/106258922/",
      "md5hash": "31d3cf20f0330c221f8175e34a47d488",
      "lines": {
        "673": "\tmethod.addChild(pwdElement);",
        "674": "\t// documentProperties",
        "139": "\t    options.setAction(\"urn:getDocumentProperties\");",
        "676": "\tOMElement idElement = fac.createOMElement(\"documentID\", omNs);",
        "108": "     * org.qualipso.factory.collaboration.ws.DocumentWService#readDocumentProperties",
        "138": "\tif (!getContent) {",
        "587": "\t}",
        "588": "\t// documentProperties",
        "589": "\tOMElement docElement = fac.createOMElement(\"documentProperties\", omNs);",
        "590": "\tif (isUpdate && documentID != null) {",
        "111": "    @Override",
        "112": "    public HashMap<String, Object> readDocumentProperties(String docId)",
        "107": "     * @see",
        "675": "\tOMElement docElement = fac.createOMElement(\"documentProperties\", omNs);",
        "727": "\tif (!getContent) {",
        "728": "\t    method = fac.createOMElement(\"getDocumentProperties\", omNs);"
      },
      "id": 106258922,
      "filename": "DocumentWSBean.java"
    },
    {
      "repo": "https://bitbucket.org/ivertex/itext-fork",
      "language": "Java",
      "linescount": 3166,
      "location": "/src/core/com/itextpdf/text/pdf",
      "name": "itext-fork",
      "url": "https://searchcode.com/codesearch/view/57657094/",
      "md5hash": "015de5db823946181507a75d57a47088",
      "lines": {
        "2372": "",
        "2373": "    protected HashMap documentProperties = new HashMap();",
        "2374": "    PdfObject[] addSimpleProperty(Object prop, PdfIndirectReference refi) {",
        "2375": "        if (!documentProperties.containsKey(prop)) {",
        "1288": "        // [F11] add the properties",
        "1289": "        for (Iterator it = documentProperties.entrySet().iterator(); it.hasNext();) {",
        "2378": "            documentProperties.put(prop, new PdfObject[]{new PdfName(\"Pr\" + (documentProperties.size() + 1)), refi});",
        "2379": "        }",
        "2380": "        return (PdfObject[])documentProperties.get(prop);",
        "2383": "    boolean propertyExists(Object prop) {",
        "2384": "        return documentProperties.containsKey(prop);",
        "2377": "            \tPdfXConformanceImp.checkPDFXConformance(this, PdfXConformanceImp.PDFXKEY_LAYER, null);"
      },
      "id": 57657094,
      "filename": "PdfWriter.java"
    },
    {
      "repo": "https://github.com/faquino/iText-4.2.0.git",
      "language": "Java",
      "linescount": 3198,
      "location": "/src/core/com/lowagie/text/pdf",
      "name": "iText-4.2.0",
      "url": "https://searchcode.com/codesearch/view/70296733/",
      "md5hash": "3db012ef4553f79ac7369fc42d3e625d",
      "lines": {
        "2385": "            \tPdfXConformanceImp.checkPDFXConformance(this, PdfXConformanceImp.PDFXKEY_LAYER, null);",
        "2380": "",
        "2381": "    protected HashMap documentProperties = new HashMap();",
        "2382": "    PdfObject[] addSimpleProperty(Object prop, PdfIndirectReference refi) {",
        "2383": "        if (!documentProperties.containsKey(prop)) {",
        "1296": "        // [F11] add the properties",
        "1297": "        for (Iterator it = documentProperties.entrySet().iterator(); it.hasNext();) {",
        "2386": "            documentProperties.put(prop, new PdfObject[]{new PdfName(\"Pr\" + (documentProperties.size() + 1)), refi});",
        "2387": "        }",
        "2388": "        return (PdfObject[])documentProperties.get(prop);",
        "2391": "    boolean propertyExists(Object prop) {",
        "2392": "        return documentProperties.containsKey(prop);"
      },
      "id": 70296733,
      "filename": "PdfWriter.java"
    },
    {
      "repo": "https://bitbucket.org/smitdevel/delta.git",
      "language": "Java",
      "linescount": 1196,
      "location": "/source/java/ee/webmedia/alfresco/document/bootstrap",
      "name": "delta",
      "url": "https://searchcode.com/codesearch/view/50611679/",
      "md5hash": "60eed33ad9ea308b6a2c4c51dc4fa0c7",
      "lines": {
        "422": "        Set<QName> originalDocumentAspects = new HashSet<QName>(documentAspects);",
        "423": "        Map<QName, Serializable> documentProperties = RepoUtil.toQNameProperties(document.getProperties());",
        "424": "        Map<QName, Serializable> newDocumentProperties = new HashMap<QName, Serializable>();",
        "425": "",
        "426": "        DocumentTypeVersion documentTypeVersion = dynamicDocumentTypes.get(dynamicDocTypeId);",
        "427": "        setTypeProps(DocAdminUtil.getDocTypeIdAndVersionNr(documentTypeVersion), newDocumentProperties);",
        "435": "        boolean isVacationOrderV1 = originalDocumentAspects.contains(DocumentSpecificModel.Aspects.VACATION_ORDER_COMMON);",
        "436": "        convertVacationOrderV1ToV2(documentProperties, isVacationOrderV1);",
        "438": "                || DocumentSubtypeModel.Types.VACATION_ORDER_SMIT.equals(staticDocType);",
        "439": "        addConvertedProperties(documentProperties, newDocumentProperties, unknownDocspecProperties, propConversionErrors, nodeTypeFields,",
        "441": "",
        "442": "        if (StringUtils.isBlank((String) newDocumentProperties.get(DocumentCommonModel.Props.STORAGE_TYPE))) {",
        "443": "            newDocumentProperties.put(DocumentCommonModel.Props.STORAGE_TYPE, StorageType.DIGITAL.getValueName());",
        "444": "        }",
        "446": "        // DocumentAccessRestrictionUpdater functionality",
        "447": "        clearAccessRestrictionHiddenFields(newDocumentProperties);"
      },
      "id": 50611679,
      "filename": "ConvertToDynamicDocumentsUpdater.java"
    },
    {
      "repo": "https://github.com/minstrelsy/SimpleAndroidDocView.git",
      "language": "Java",
      "linescount": 1043,
      "location": "/src/org/apache/poi/hwpf",
      "name": "SimpleAndroidDocView",
      "url": "https://searchcode.com/codesearch/view/97383956/",
      "md5hash": "677c332698819342ff2ece2baf93a4ed",
      "lines": {
        "32": "import org.apache.poi.hwpf.model.DocumentProperties;",
        "97": "  /** Document wide Properties*/",
        "98": "  protected DocumentProperties _dop;",
        "689": "    // write out the DocumentProperties.",
        "688": "",
        "266": "    // Start to load up our standard structures.",
        "267": "    _dop = new DocumentProperties(_tableStream, _fib.getFcDop(), _fib.getLcbDop() );",
        "396": "",
        "397": "  public DocumentProperties getDocProperties()",
        "31": "import org.apache.poi.hwpf.model.ComplexFileTable;"
      },
      "id": 97383956,
      "filename": "HWPFDocument.java"
    },
    {
      "repo": "git://github.com/liferay/liferay-portal.git",
      "language": "Java",
      "linescount": 601,
      "location": "/portal-impl/src/com/liferay/portlet/documentlibrary/store",
      "name": "liferay-portal",
      "url": "https://searchcode.com/codesearch/view/4123954/",
      "md5hash": "503ef5d03cac10ab30e71d6c5831a4bd",
      "lines": {
        "128": "\t\tdocument.copy(",
        "129": "\t\t\tversioningFolderObjectId, documentProperties, null,",
        "418": "",
        "419": "\t\tMap<String, Object> documentProperties = new HashMap<String, Object>();",
        "420": "",
        "421": "\t\tdocumentProperties.put(PropertyIds.NAME, title);",
        "422": "\t\tdocumentProperties.put(",
        "423": "\t\t\tPropertyIds.OBJECT_TYPE_ID, BaseTypeId.CMIS_DOCUMENT.value());",
        "428": "\t\treturn versioningFolder.createDocument(",
        "429": "\t\t\tdocumentProperties, contentStream, null);",
        "408": "",
        "409": "\t\tMap<String, Object> documentProperties = new HashMap<String, Object>();",
        "410": "",
        "411": "\t\tdocumentProperties.put(PropertyIds.NAME, title);",
        "412": "",
        "413": "\t\tdocument.updateProperties(documentProperties);"
      },
      "id": 4123954,
      "filename": "CMISStore.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 434,
      "location": "/ojc-core/component-common/xmlbeans/xbean-src/2.3.0/xmlbeans/test/src/compile/scomp/incr/schemaCompile/detailed",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43255647/",
      "md5hash": "54fba7f93cc863751766b8d05152dfa7",
      "lines": {
        "83": "        schemas[0].documentProperties().setSourceName(\"obj1\");",
        "197": "        XmlObject[] schemas2 = new XmlObject[]{obj2};",
        "198": "        schemas[0].documentProperties().setSourceName(\"obj1\");",
        "199": "        schemas2[0].documentProperties().setSourceName(\"obj2\");",
        "200": "",
        "172": "        XmlObject[] schemas2 = new XmlObject[]{obj2};",
        "146": "        XmlObject[] schemas2 = new XmlObject[]{obj2};",
        "174": "        schemas2[0].documentProperties().setSourceName(\"obj2\");",
        "173": "        schemas[0].documentProperties().setSourceName(\"obj1\");",
        "82": "        XmlObject[] schemas2 = new XmlObject[]{obj2};",
        "147": "        schemas[0].documentProperties().setSourceName(\"obj1\");",
        "84": "        schemas2[0].documentProperties().setSourceName(\"obj2\");",
        "149": "",
        "279": "        // the source name should be set the same for incremental compile",
        "280": "        schemas[0].documentProperties().setSourceName(\"obj1\");",
        "148": "        schemas2[0].documentProperties().setSourceName(\"obj2\");",
        "175": ""
      },
      "id": 43255647,
      "filename": "IncrCompilationTests.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 94,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 23,
      "source": "Github",
      "id": 2
    },
    {
      "count": 6,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1,
      "source": "CodePlex",
      "id": 5
    }
  ]
}