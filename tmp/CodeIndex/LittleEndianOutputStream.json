{
  "matchterm": "LittleEndianOutputStream",
  "previouspage": null,
  "searchterm": "LittleEndianOutputStream",
  "query": "LittleEndianOutputStream",
  "language_filters": [
    {
      "count": 36,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 36,
  "results": [
    {
      "repo": "https://bitbucket.org/david_finlayson/binarystreamtools",
      "language": "Java",
      "linescount": 277,
      "location": "/src/gov/usgs/wr/io",
      "name": "binarystreamtools",
      "url": "https://searchcode.com/codesearch/view/53531436/",
      "md5hash": "ea324ede238200f31bc49ea915878f32",
      "lines": {
        "1": "/**",
        "2": " * LittleEndianOutputStream",
        "21": "/**",
        "22": " * A LittleEndianOutputStream writes 8-, 16-, 24-, 32-, and 64-bit",
        "44": "    public LittleEndianOutputStream(OutputStream out) {",
        "43": "     */",
        "28": " */",
        "29": "public class LittleEndianOutputStream extends BinaryOutputStream {"
      },
      "id": 53531436,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 254,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37950739/",
      "md5hash": "1cfe1595de16c8c656b5aff303fc6dc1",
      "lines": {
        "1": "/* LittleEndianOutputStream.java --",
        "2": "   Copyright (C) 1998, 2001, 2003, 2005  Free Software Foundation, Inc.",
        "67": "  public LittleEndianOutputStream(OutputStream out)",
        "55": " */",
        "56": "public class LittleEndianOutputStream",
        "66": "   */"
      },
      "id": 37950739,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 254,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46816376/",
      "md5hash": "1cfe1595de16c8c656b5aff303fc6dc1",
      "lines": {
        "1": "/* LittleEndianOutputStream.java --",
        "2": "   Copyright (C) 1998, 2001, 2003, 2005  Free Software Foundation, Inc.",
        "67": "  public LittleEndianOutputStream(OutputStream out)",
        "55": " */",
        "56": "public class LittleEndianOutputStream",
        "66": "   */"
      },
      "id": 46816376,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "http://pescuma.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 109,
      "location": "/MirIcoGen/lib/image4j-core-0.7/src/net/sf/image4j/io",
      "name": "pescuma",
      "url": "https://searchcode.com/codesearch/view/3598518/",
      "md5hash": "1c6abe01cb75981d6a196adac21f38b4",
      "lines": {
        "1": "/*",
        "2": " * LittleEndianOutputStream.java",
        "19": "public class LittleEndianOutputStream extends DataOutputStream {",
        "21": "  /**",
        "22": "   * Creates a new instance of <tt>LittleEndianOutputStream</tt>, which will write to the specified target.",
        "24": "   */",
        "25": "  public LittleEndianOutputStream(java.io.OutputStream out) {",
        "18": " */"
      },
      "id": 3598518,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 254,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127591923/",
      "md5hash": "1cfe1595de16c8c656b5aff303fc6dc1",
      "lines": {
        "1": "/* LittleEndianOutputStream.java --",
        "2": "   Copyright (C) 1998, 2001, 2003, 2005  Free Software Foundation, Inc.",
        "67": "  public LittleEndianOutputStream(OutputStream out)",
        "55": " */",
        "56": "public class LittleEndianOutputStream",
        "66": "   */"
      },
      "id": 127591923,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 254,
      "location": "/libjava/classpath/gnu/CORBA/CDR",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130223350/",
      "md5hash": "1cfe1595de16c8c656b5aff303fc6dc1",
      "lines": {
        "1": "/* LittleEndianOutputStream.java --",
        "2": "   Copyright (C) 1998, 2001, 2003, 2005  Free Software Foundation, Inc.",
        "67": "  public LittleEndianOutputStream(OutputStream out)",
        "55": " */",
        "56": "public class LittleEndianOutputStream",
        "66": "   */"
      },
      "id": 130223350,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 121,
      "location": "/src/java/org/broad/tribble/util",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424348/",
      "md5hash": "d3e8b0b13dddbb48c9dd409e880f4a34",
      "lines": {
        "120": "}// end LittleEndianOutputStream",
        "19": "",
        "20": "public final class LittleEndianOutputStream extends FilterOutputStream {",
        "119": "    }",
        "24": "    public LittleEndianOutputStream(OutputStream out) {",
        "23": ""
      },
      "id": 58424348,
      "filename": "LittleEndianOutputStream.java"
    },
    {
      "repo": "https://github.com/hgrecco/fiji.git",
      "language": "Java",
      "linescount": 454,
      "location": "/src-plugins/IO_/net/sf/image4j/codec/ico",
      "name": "fiji",
      "url": "https://searchcode.com/codesearch/view/113852420/",
      "md5hash": "52a6c60406eeaa5c6ee2f1b921d44ad9",
      "lines": {
        "144": "  public static void write(List<BufferedImage> images, int[] bpp, boolean[] compress, java.io.OutputStream os) throws IOException {",
        "145": "    LittleEndianOutputStream out = new LittleEndianOutputStream(os);",
        "18": "import javax.imageio.ImageWriter;",
        "19": "import net.sf.image4j.io.LittleEndianOutputStream;",
        "285": "   */",
        "368": "  private static void writeXorBitmap(BufferedImage img, InfoHeader ih, LittleEndianOutputStream out) throws IOException {",
        "367": "  ",
        "240": "  public static void writeFileHeader(int count, int type, LittleEndianOutputStream out) throws IOException {",
        "286": "  public static void writeAndBitmap(BufferedImage img, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "239": "   */"
      },
      "id": 113852420,
      "filename": "ICOEncoder.java"
    },
    {
      "repo": "https://bitbucket.org/david_finlayson/binarystreamtools",
      "language": "Java",
      "linescount": 498,
      "location": "/test/gov/usgs/wr/io",
      "name": "binarystreamtools",
      "url": "https://searchcode.com/codesearch/view/53531434/",
      "md5hash": "e99b8d7aef87d69db71b12e98b3097a1",
      "lines": {
        "33": "    /**",
        "34": "     * Test of writeUInt8 method, of class LittleEndianOutputStream.",
        "54": "            out = new LittleEndianOutputStream(byteStream);",
        "40": "        ByteArrayOutputStream byteStream = new ByteArrayOutputStream(256);",
        "41": "        LittleEndianOutputStream out = new LittleEndianOutputStream(byteStream);",
        "15": " */",
        "16": "public class LittleEndianOutputStreamTest {",
        "17": "",
        "18": "    public LittleEndianOutputStreamTest() {",
        "21": "    /**",
        "22": "     * Test of isBigEndian method, of class LittleEndianOutputStream.",
        "63": "     * Test of writeUInt16 method, of class LittleEndianOutputStream.",
        "28": "        ByteArrayOutputStream byteStream = new ByteArrayOutputStream();",
        "29": "        LittleEndianOutputStream out = new LittleEndianOutputStream(byteStream);",
        "62": "    /**",
        "53": "            byteStream = new ByteArrayOutputStream(1);"
      },
      "id": 53531434,
      "filename": "LittleEndianOutputStreamTest.java"
    },
    {
      "repo": "http://pescuma.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 509,
      "location": "/MirIcoGen/lib/image4j-core-0.7/src/net/sf/image4j/codec/bmp",
      "name": "pescuma",
      "url": "https://searchcode.com/codesearch/view/3598522/",
      "md5hash": "0398432496601a2986578044de7ccb55",
      "lines": {
        "161": "  public static void writeFileHeader(int fileSize, int dataOffset,",
        "162": "      net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "440": "  public static void write32(Raster raster, Raster alpha, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "102": "    ",
        "103": "    LittleEndianOutputStream out = new LittleEndianOutputStream(os);",
        "365": "   */",
        "366": "  public static void write8(Raster raster, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "15": "import java.io.IOException;",
        "16": "import net.sf.image4j.io.LittleEndianOutputStream;",
        "401": "  public static void write24(Raster raster, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "400": "   */",
        "179": "   */",
        "180": "  public static void writeColorMap(IndexColorModel icm, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {",
        "439": "   */",
        "312": "   */",
        "313": "  public static void write4(Raster raster, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException {"
      },
      "id": 3598522,
      "filename": "BMPEncoder.java"
    },
    {
      "repo": "http://pescuma.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 542,
      "location": "/MirIcoGen/lib/image4j-core-0.7/src/net/sf/image4j/codec/ico",
      "name": "pescuma",
      "url": "https://searchcode.com/codesearch/view/3598530/",
      "md5hash": "b9faa5bd3a369901eb030980491320da",
      "lines": {
        "192": "\t{",
        "193": "\t\tLittleEndianOutputStream out = new LittleEndianOutputStream(os);",
        "21": "import net.sf.image4j.codec.bmp.InfoHeader;",
        "22": "import net.sf.image4j.io.LittleEndianOutputStream;",
        "441": "\t",
        "348": "\t */",
        "442": "\tprivate static void writeXorBitmap(BufferedImage img, InfoHeader ih, LittleEndianOutputStream out) throws IOException",
        "299": "\t */",
        "300": "\tpublic static void writeFileHeader(int count, int type, LittleEndianOutputStream out) throws IOException",
        "349": "\tpublic static void writeAndBitmap(BufferedImage img, net.sf.image4j.io.LittleEndianOutputStream out) throws IOException"
      },
      "id": 3598530,
      "filename": "ICOEncoder.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 225,
      "location": "/src/tests/java/org/broad/tribble/bed",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424159/",
      "md5hash": "dd6bea7dbf86f77824e244b8d77da222",
      "lines": {
        "33": "import org.broad.tribble.index.linear.LinearIndex;",
        "34": "import org.broad.tribble.util.LittleEndianOutputStream;",
        "212": "",
        "213": "        LittleEndianOutputStream stream = null;",
        "214": "        try {",
        "215": "            stream = new LittleEndianOutputStream(new BufferedOutputStream(new FileOutputStream(idxFile)));"
      },
      "id": 58424159,
      "filename": "BEDCodecTest.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 181,
      "location": "/src/java/org/broadinstitute/variant/variantcontext/writer",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424315/",
      "md5hash": "1549435aa9c440e2f3da04b71c733255",
      "lines": {
        "64": "                idxStream = new LittleEndianOutputStream(new FileOutputStream(Tribble.indexFile(location)));",
        "35": "import org.broad.tribble.index.IndexFactory;",
        "51": "    private DynamicIndexCreator indexer = null;",
        "36": "import org.broad.tribble.util.LittleEndianOutputStream;",
        "52": "    private LittleEndianOutputStream idxStream = null;",
        "63": "            try {"
      },
      "id": 58424315,
      "filename": "IndexingVariantContextWriter.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 406,
      "location": "/src/java/org/broad/tribble/index",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424359/",
      "md5hash": "3f2fc8edade6092d05771799c0b2bf65",
      "lines": {
        "32": "import org.broad.tribble.util.LittleEndianInputStream;",
        "33": "import org.broad.tribble.util.LittleEndianOutputStream;",
        "235": "    public static void writeIndex(final Index idx, final File idxFile) throws IOException {",
        "236": "        LittleEndianOutputStream stream = null;",
        "237": "        try {",
        "238": "            stream = new LittleEndianOutputStream(new BufferedOutputStream(new FileOutputStream(idxFile)));"
      },
      "id": 58424359,
      "filename": "IndexFactory.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 448,
      "location": "/src/java/org/broad/tribble/index",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424365/",
      "md5hash": "5be37069d3b0847d15795c87f05c8984",
      "lines": {
        "336": "    public void write(LittleEndianOutputStream stream) throws IOException {",
        "228": "     */",
        "229": "    private void writeHeader(LittleEndianOutputStream dos) throws IOException {",
        "22": "import org.broad.tribble.util.LittleEndianInputStream;",
        "23": "import org.broad.tribble.util.LittleEndianOutputStream;",
        "335": "     */"
      },
      "id": 58424365,
      "filename": "AbstractIndex.java"
    },
    {
      "repo": "https://bitbucket.org/dakl/picard-tools",
      "language": "Java",
      "linescount": 189,
      "location": "/src/java/org/broad/tribble/example",
      "name": "picard-tools",
      "url": "https://searchcode.com/codesearch/view/58424381/",
      "md5hash": "6a8f0595782690ae7da8c1cdfc486522",
      "lines": {
        "164": "            LittleEndianOutputStream stream = new LittleEndianOutputStream(new FileOutputStream(indexFile));",
        "35": "import org.broad.tribble.index.linear.LinearIndex;",
        "36": "import org.broad.tribble.util.LittleEndianOutputStream;",
        "163": "            // try to write it to disk"
      },
      "id": 58424381,
      "filename": "CountRecords.java"
    },
    {
      "repo": "https://github.com/llvm-djk/pfff.git",
      "language": "Java",
      "linescount": 113,
      "location": "/data/java_stdlib/classpath",
      "name": "pfff",
      "url": "https://searchcode.com/codesearch/view/100775961/",
      "md5hash": "fca4b8a6d98cf642a443386211a60967",
      "lines": {
        "34": "}",
        "35": "class LittleEndianOutputStream {"
      },
      "id": 100775961,
      "filename": "gnu.CORBA.CDR.java"
    },
    {
      "repo": "https://bitbucket.org/thelearninglabs/uclinux-distro-tll-public.git",
      "language": "Java",
      "linescount": 463,
      "location": "/lib/classpath/gnu/CORBA/GIOP",
      "name": "uclinux-distro-tll-public",
      "url": "https://searchcode.com/codesearch/view/37726487/",
      "md5hash": "c6284ec968c68b209d4587226f17af32",
      "lines": {
        "360": "        else",
        "361": "          dout = new LittleEndianOutputStream(out);",
        "45": "import gnu.CORBA.CDR.LittleEndianInputStream;",
        "46": "import gnu.CORBA.CDR.LittleEndianOutputStream;"
      },
      "id": 37726487,
      "filename": "MessageHeader.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 466,
      "location": "/libjava/classpath/gnu/CORBA/GIOP",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37950706/",
      "md5hash": "3c783b4d9d2b3fa24ec248b95b07e7c7",
      "lines": {
        "362": "        else",
        "363": "          dout = new LittleEndianOutputStream(out);",
        "45": "import gnu.CORBA.CDR.LittleEndianInputStream;",
        "46": "import gnu.CORBA.CDR.LittleEndianOutputStream;"
      },
      "id": 37950706,
      "filename": "MessageHeader.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 466,
      "location": "/libjava/classpath/gnu/CORBA/GIOP",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46816343/",
      "md5hash": "3c783b4d9d2b3fa24ec248b95b07e7c7",
      "lines": {
        "362": "        else",
        "363": "          dout = new LittleEndianOutputStream(out);",
        "45": "import gnu.CORBA.CDR.LittleEndianInputStream;",
        "46": "import gnu.CORBA.CDR.LittleEndianOutputStream;"
      },
      "id": 46816343,
      "filename": "MessageHeader.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 27,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 6,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 3,
      "source": "Github",
      "id": 2
    }
  ]
}