{
  "matchterm": "Value",
  "previouspage": null,
  "searchterm": "Value",
  "query": "Value",
  "language_filters": [
    {
      "count": 771350,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 771349,
  "results": [
    {
      "repo": "https://bitbucket.org/akaack/ttvp-aufgabe2-ws1415.git",
      "language": "Java",
      "linescount": 75,
      "location": "/src/de/uniba/wiai/lspi/chord/console/command/entry",
      "name": "TTVP-Aufgabe2-WS1415",
      "url": "https://searchcode.com/codesearch/view/92002952/",
      "md5hash": "31a039115798ffeaf569c5d618921432",
      "lines": {
        "33": "/**",
        "2": " *                                                                         *",
        "3": " *                                Value.java                               *",
        "39": " */",
        "40": "public final class Value implements Serializable {",
        "34": " * A Value to be stored within a chord network by a command issued from ",
        "48": "\t */",
        "49": "\tprivate String value;",
        "51": "\t/** ",
        "52": "\t * Creates a new instance of Value ",
        "53": "\t * @param value1 ",
        "54": "\t */",
        "55": "\tpublic Value(String value1) {",
        "56": "\t\tthis.value = value1;",
        "57": "\t}"
      },
      "id": 92002952,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/fvilla/imt.git",
      "language": "Java",
      "linescount": 391,
      "location": "/org.integratedmodelling.thinklab.core/src/main/java/org/integratedmodelling/thinklab/literals",
      "name": "imt",
      "url": "https://searchcode.com/codesearch/view/108980751/",
      "md5hash": "fd70bc40d7c46aa94a999494e975c154",
      "lines": {
        "1": "/**",
        "2": " * Value.java",
        "39": "import org.integratedmodelling.thinklab.exception.ThinklabValidationException;",
        "40": "import org.integratedmodelling.thinklab.exception.ThinklabValueConversionException;",
        "41": "import org.integratedmodelling.thinklab.interfaces.knowledge.IConcept;",
        "42": "import org.integratedmodelling.thinklab.interfaces.literals.IValue;",
        "45": "/**",
        "46": " * <p>A generalized container for a value that always has a concept associated. The value may be defined from a literal or a basic",
        "47": " * type, or be a concept or an instance in itself. It's the most general idea of a value, but it has an unbreakable",
        "48": " * association to the knowledge base.</p>",
        "49": " * ",
        "50": " * <p>The Value can have a value (oh yes), which simply means that a Java object",
        "54": " * ",
        "55": " * <p>The value may be as multiple as necessary, e.g. a Collection or a Polylist, as long as the associated concept is",
        "58": " *",
        "59": " * <p>The least a Value can do is to be a Concept, so the base Value class is exactly that, and even the trivial constructor"
      },
      "id": 108980751,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 234,
      "location": "/dspace-xmlui/dspace-xmlui-wing/src/main/java/org/dspace/app/xmlui/wing/element",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109449789/",
      "md5hash": "45a17d044a48069713e37c47f954a5aa",
      "lines": {
        "1": "/*",
        "2": " * Value.java",
        "72": "    ",
        "73": "    /** The possible value types */",
        "49": "/**",
        "50": " * This class represents field values.",
        "54": "",
        "55": "public class Value extends RichTextContainer",
        "56": "{",
        "57": "    /** The name of the value element */",
        "58": "    public static final String E_VALUE = \"value\";",
        "59": "",
        "60": "    /** The name of the value type attribute */",
        "62": "    ",
        "63": "    /** The name of the option value attribute */"
      },
      "id": 109449789,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/bigcloud/rstudio.git",
      "language": "Java",
      "linescount": 79,
      "location": "/src/gwt/src/org/rstudio/studio/client/common",
      "name": "rstudio",
      "url": "https://searchcode.com/codesearch/view/91710500/",
      "md5hash": "81b9a5ba884fc982de5e11f2fd468ab7",
      "lines": {
        "32": "   public T getValue()",
        "1": "/*",
        "2": " * Value.java",
        "33": "   {",
        "16": "",
        "17": "import com.google.gwt.event.logical.shared.ValueChangeEvent;",
        "18": "import com.google.gwt.event.logical.shared.ValueChangeHandler;",
        "19": "import com.google.gwt.event.shared.GwtEvent;",
        "21": "import com.google.gwt.event.shared.HandlerRegistration;",
        "22": "import com.google.gwt.user.client.ui.HasValue;",
        "23": "",
        "24": "public class Value<T> implements HasValue<T>, ReadOnlyValue<T>",
        "25": "{",
        "26": "   public Value(T initialValue)",
        "28": "      handlers_ = new HandlerManager(this);",
        "29": "      value_ = initialValue;",
        "31": ""
      },
      "id": 91710500,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/Spivey/geomlab",
      "language": "Java",
      "linescount": 420,
      "location": "/src/funbase",
      "name": "geomlab",
      "url": "https://searchcode.com/codesearch/view/66619148/",
      "md5hash": "383609e1fae33d0113103dbd6f8d6d5f",
      "lines": {
        "64": "    /** Print the value on a stream */",
        "1": "/*",
        "2": " * Value.java",
        "37": "",
        "38": "/** Abstract superclass of all values in GeomLab */",
        "39": "public abstract class Value implements Serializable {",
        "40": "    private static final long serialVersionUID = 1L;",
        "41": "\t",
        "42": "    /** Code to activate when calling this value as a function */",
        "44": "",
        "45": "    public Value() {",
        "48": "",
        "49": "    public Value(Function subr) {",
        "52": "",
        "53": "    public Value apply(Value args[]) {",
        "63": "    "
      },
      "id": 66619148,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/WurstWorks/pinto.git",
      "language": "Java",
      "linescount": 29,
      "location": "/src/main/java/org/wurstworks/tools/pinto",
      "name": "pinto",
      "url": "https://searchcode.com/codesearch/view/98512347/",
      "md5hash": "526c356de22fb13362223c5ada750eeb",
      "lines": {
        "1": "/**",
        "2": " * Value",
        "21": "@Retention(RUNTIME)",
        "22": "public @interface Value {",
        "24": "     * Specifies the short option for this command-line parameter.",
        "25": "     * @return The value of the short option.",
        "26": "     */",
        "27": "    public String value();"
      },
      "id": 98512347,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/irock/wam.git",
      "language": "Java",
      "linescount": 19,
      "location": "/src/wam/ast",
      "name": "wam",
      "url": "https://searchcode.com/codesearch/view/114093472/",
      "md5hash": "ecb12b5980c88569b962572322ad38cf",
      "lines": {
        "1": "/**",
        "2": " * Value.java",
        "3": " *",
        "4": " * Represents a boolean or integral value in the While language.",
        "8": "",
        "9": "public abstract class Value extends Expression{",
        "10": "    /**",
        "11": "     * Create a new Value.",
        "14": "     */",
        "15": "    public Value(int lineNumber) {"
      },
      "id": 114093472,
      "filename": "Value.java"
    },
    {
      "repo": "https://github.com/thingynet/thingynet.git",
      "language": "Java",
      "linescount": 31,
      "location": "/src/main/java/thingynet/value",
      "name": "thingynet",
      "url": "https://searchcode.com/codesearch/view/95570030/",
      "md5hash": "4ed5928146692c39541c810623cd418a",
      "lines": {
        "1": "/*",
        "2": " * Value.java",
        "19": "package thingynet.value;",
        "25": "@JsonTypeInfo(use = CLASS, property = \"_class\", visible = true)",
        "26": "public interface Value<T> {",
        "27": "    public T getValue();",
        "28": "",
        "18": "",
        "29": "    public void setValue(T value);"
      },
      "id": 95570030,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/rherrick/nrg_framework",
      "language": "Java",
      "linescount": 29,
      "location": "/src/main/java/org/nrg/framework/pinto",
      "name": "nrg_framework",
      "url": "https://searchcode.com/codesearch/view/121177206/",
      "md5hash": "cfcdc290fd513cf1e5488f771247aa37",
      "lines": {
        "1": "/**",
        "2": " * Value",
        "21": "@Retention(RUNTIME)",
        "22": "public @interface Value {",
        "24": "     * Specifies the short option for this command-line parameter.",
        "25": "     * @return The value of the short option.",
        "26": "     */",
        "27": "    public String value();"
      },
      "id": 121177206,
      "filename": "Value.java"
    },
    {
      "repo": "https://code.google.com/p/oscats/",
      "language": "Java",
      "linescount": 205,
      "location": "/bindings/java/oscats/glib",
      "name": "oscats",
      "url": "https://searchcode.com/codesearch/view/11644709/",
      "md5hash": "fef3cc5a3f05803af88e7c54bd2536b9",
      "lines": {
        "32": " * Ironically, Values are <i>not</i> actually type safe; if you happen to",
        "1": "/*",
        "2": " * Value.java",
        "39": " * <i>Complementing the object oriented system supplied by the GLib library is",
        "40": " * a set of foundation elements, <code>GType</code> and <code>GValue</code>,",
        "41": " * the latter being defined as \"a polymorphic type that can hold values of any",
        "42": " * other type\", which isn't much help, really.</i>",
        "45": " * <i>Since instances of Java classes are their own identity, we do not need",
        "46": " * to directly represent <code>GType</code> and <code>GValue</code> as",
        "47": " * separate classes. We implement <code>GType</code> as a characteristic that",
        "19": "/**",
        "20": " * A generic value that can be passed as a parameter to or returned from a",
        "21": " * method or function on an underlying entity in the GLib library and those",
        "22": " * built on it. Value is only used in setting or getting Object properties,",
        "31": " * <p>"
      },
      "id": 11644709,
      "filename": "Value.java"
    },
    {
      "repo": "http://metastudio.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 63,
      "location": "/metastudio/lib/src/jrman/src/org/jrman/sl",
      "name": "metastudio",
      "url": "https://searchcode.com/codesearch/view/11620887/",
      "md5hash": "8065e197bb4b6b2918f402f7cded3819",
      "lines": {
        "1": "/*",
        "2": " Value.java",
        "37": "    ",
        "38": "    public Value reverseSub(Value other, BooleanGrid cond) {",
        "33": "    ",
        "41": "    ",
        "42": "    public Value mul(Value other, BooleanGrid cond) {",
        "34": "    public Value sub(Value other, BooleanGrid cond) {",
        "46": "    public Value reverseMul(Value other, BooleanGrid cond) {",
        "45": "    ",
        "23": "",
        "24": "public abstract class Value {",
        "25": "    ",
        "26": "    public Value add(Value other, BooleanGrid cond) {",
        "29": "    ",
        "30": "    public Value reverseAdd(Value other, BooleanGrid cond) {"
      },
      "id": 11620887,
      "filename": "Value.java"
    },
    {
      "repo": "http://android-gcc-objc2-0.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 302,
      "location": "/gcc-4.2.1/libjava/classpath/gnu/classpath/jdwp/util",
      "name": "android-gcc-objc2-0",
      "url": "https://searchcode.com/codesearch/view/12731448/",
      "md5hash": "3edcc374b5ebaa3338aaafcd6784046c",
      "lines": {
        "1": "/* Value.java -- class to read/write JDWP tagged and untagged values",
        "2": "   Copyright (C) 2005, 2006, Free Software Foundation",
        "67": "   */  ",
        "68": "  public static void writeUntaggedValue(DataOutputStream os, Object obj)",
        "70": "  {",
        "71": "    writeValue(os, obj, false);",
        "74": "  /**",
        "75": "   * Will write the given object as a tagged value to the DataOutputStream.",
        "76": "   * ",
        "53": "/**",
        "54": " * A class to read/write JDWP tagged and untagged values.",
        "57": " */",
        "58": "public class Value",
        "60": "  /**",
        "61": "   * Will write the given object as an untagged value to the DataOutputStream.",
        "62": "   * ",
        "63": "   * @param os write the value here"
      },
      "id": 12731448,
      "filename": "Value.java"
    },
    {
      "repo": "http://google-api-dfp-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 135,
      "location": "/src/com/google/api/ads/dfp/v201111",
      "name": "google-api-dfp-java",
      "url": "https://searchcode.com/codesearch/view/13400047/",
      "md5hash": "11d776273d36e7bfd724dd720d6db073",
      "lines": {
        "1": "/**",
        "2": " * Value.java",
        "11": "/**",
        "12": " * {@code Value} represents a value.",
        "13": " */",
        "14": "public abstract class Value  implements java.io.Serializable {",
        "15": "    /* Indicates that this instance is a subtype of Value.",
        "16": "     *                 Although this field is returned in the response, it",
        "18": "     *                 and cannot be selected. Specify xsi:type instead. */",
        "19": "    private java.lang.String valueType;",
        "20": "",
        "21": "    public Value() {",
        "23": "",
        "24": "    public Value(",
        "25": "           java.lang.String valueType) {"
      },
      "id": 13400047,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec",
      "language": "Java",
      "linescount": 80,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/strategy",
      "name": "tec",
      "url": "https://searchcode.com/codesearch/view/125752675/",
      "md5hash": "685caa3df2217493b66992f0a327eac1",
      "lines": {
        "32": " */",
        "1": "/*",
        "2": " * Value.java January 2007",
        "36": "    * This method is used to acquire an instance of the type that",
        "37": "    * is defined by this object. If the value has not been set",
        "33": "public interface Value {",
        "41": "    */",
        "42": "   public Object getValue();",
        "44": "   /**",
        "45": "    * This method is used set the value within this object. Once",
        "46": "    * this is set then the <code>getValue</code> method will return",
        "21": "/**",
        "22": " * The <code>Value</code> object describes a type that is represented ",
        "26": " * object types to be described. When instantiated the instance should",
        "27": " * be set on the value object for use by the strategy to detect cycles."
      },
      "id": 125752675,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/lpimports/gcc.git",
      "language": "Java",
      "linescount": 156,
      "location": "/libjava/classpath/gnu/classpath/jdwp/value",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/127594991/",
      "md5hash": "6d4d05ba7feaad320bdbbfa8ae888d51",
      "lines": {
        "64": "   */",
        "1": "/* Value.java -- base class of JDWP values",
        "2": "   Copyright (C) 2007 Free Software Foundation",
        "38": "",
        "39": "package gnu.classpath.jdwp.value;",
        "50": "/**",
        "51": " * Superclass for all JDWP Values.",
        "54": " */",
        "55": "public abstract class Value",
        "56": "{",
        "57": "  // A Tag representing the type of this value",
        "60": "  /**",
        "61": "   * Create a new value of type tag.",
        "62": "   *",
        "63": "   * @param tag the type of the value"
      },
      "id": 127594991,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tecandorid",
      "language": "Java",
      "linescount": 80,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/strategy",
      "name": "tecandorid",
      "url": "https://searchcode.com/codesearch/view/129085101/",
      "md5hash": "685caa3df2217493b66992f0a327eac1",
      "lines": {
        "32": " */",
        "1": "/*",
        "2": " * Value.java January 2007",
        "36": "    * This method is used to acquire an instance of the type that",
        "37": "    * is defined by this object. If the value has not been set",
        "33": "public interface Value {",
        "41": "    */",
        "42": "   public Object getValue();",
        "44": "   /**",
        "45": "    * This method is used set the value within this object. Once",
        "46": "    * this is set then the <code>getValue</code> method will return",
        "21": "/**",
        "22": " * The <code>Value</code> object describes a type that is represented ",
        "26": " * object types to be described. When instantiated the instance should",
        "27": " * be set on the value object for use by the strategy to detect cycles."
      },
      "id": 129085101,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/vaporoid/gcc.git",
      "language": "Java",
      "linescount": 156,
      "location": "/libjava/classpath/gnu/classpath/jdwp/value",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/130221778/",
      "md5hash": "6d4d05ba7feaad320bdbbfa8ae888d51",
      "lines": {
        "64": "   */",
        "1": "/* Value.java -- base class of JDWP values",
        "2": "   Copyright (C) 2007 Free Software Foundation",
        "38": "",
        "39": "package gnu.classpath.jdwp.value;",
        "50": "/**",
        "51": " * Superclass for all JDWP Values.",
        "54": " */",
        "55": "public abstract class Value",
        "56": "{",
        "57": "  // A Tag representing the type of this value",
        "60": "  /**",
        "61": "   * Create a new value of type tag.",
        "62": "   *",
        "63": "   * @param tag the type of the value"
      },
      "id": 130221778,
      "filename": "Value.java"
    },
    {
      "repo": "https://bitbucket.org/xiangshen/tec_jgroups",
      "language": "Java",
      "linescount": 80,
      "location": "/TecAndroidCommon/src/org/simpleframework/xml/strategy",
      "name": "tec_jgroups",
      "url": "https://searchcode.com/codesearch/view/136470214/",
      "md5hash": "685caa3df2217493b66992f0a327eac1",
      "lines": {
        "32": " */",
        "1": "/*",
        "2": " * Value.java January 2007",
        "36": "    * This method is used to acquire an instance of the type that",
        "37": "    * is defined by this object. If the value has not been set",
        "33": "public interface Value {",
        "41": "    */",
        "42": "   public Object getValue();",
        "44": "   /**",
        "45": "    * This method is used set the value within this object. Once",
        "46": "    * this is set then the <code>getValue</code> method will return",
        "21": "/**",
        "22": " * The <code>Value</code> object describes a type that is represented ",
        "26": " * object types to be described. When instantiated the instance should",
        "27": " * be set on the value object for use by the strategy to detect cycles."
      },
      "id": 136470214,
      "filename": "Value.java"
    },
    {
      "repo": "https://openrpg.svn.sourceforge.net/svnroot/openrpg",
      "language": "Java",
      "linescount": 44,
      "location": "/trunk/src/openrpg2/common/dice",
      "name": "openrpg",
      "url": "https://searchcode.com/codesearch/view/9424152/",
      "md5hash": "4fd08d7d5e74f2496ed600861d1adba8",
      "lines": {
        "1": "/*",
        "2": " * Value.java",
        "35": "     * @return the number of elements in this value ( 0 means that the value is atomic )",
        "36": "     */",
        "38": "    /**",
        "33": "    /**",
        "40": "     * @return a base value that represents this value after it is fully evaluated",
        "41": "     */",
        "42": "    public Value getBaseValue();",
        "39": "     * Gets the base for this value (ie, all groups are evaluated to atomic values).",
        "34": "     * Gets the number of elements in this value. ",
        "23": "/**",
        "24": " * Base interface defining the api for all values used by the dice package",
        "26": " */",
        "27": "public interface Value {",
        "28": "    /**"
      },
      "id": 9424152,
      "filename": "Value.java"
    },
    {
      "repo": "http://ziggystardust.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 304,
      "location": "/src/com/wisc/VegaLibrary",
      "name": "ziggystardust",
      "url": "https://searchcode.com/codesearch/view/13769614/",
      "md5hash": "c7997f15efb3b1fdd44519088e8e610c",
      "lines": {
        "1": "/*",
        "2": " * value.java",
        "35": "    private double value;",
        "36": "    private int utcoffset;",
        "33": "    private AggSpan aggspan;",
        "41": "    //This is for some record keeping and some user feedback",
        "42": "    private static long newValues = 0;",
        "44": "    ",
        "34": "    private OffsetValue offsetvalue;",
        "46": "            ",
        "45": "    private static Logger logger = Logger.getLogger(Value.class.getName());",
        "16": "import java.sql.*;",
        "17": "import com.wisc.csvParser.ValueObject;",
        "24": " */",
        "25": "public class Value {"
      },
      "id": 13769614,
      "filename": "Value.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 377259,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 296035,
      "source": "Github",
      "id": 2
    },
    {
      "count": 80878,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 6863,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 4730,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 2780,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1752,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 870,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 183,
      "source": "Gitorious",
      "id": 10
    }
  ]
}