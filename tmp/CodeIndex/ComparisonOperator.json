{
  "matchterm": "ComparisonOperator",
  "previouspage": null,
  "searchterm": "ComparisonOperator",
  "query": "ComparisonOperator",
  "language_filters": [
    {
      "count": 410,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 410,
  "results": [
    {
      "repo": "https://github.com/eustimenko/izpack.git",
      "language": "Java",
      "linescount": 69,
      "location": "/izpack-api/src/main/java/com/izforge/izpack/api/rules",
      "name": "izpack",
      "url": "https://searchcode.com/codesearch/view/76101306/",
      "md5hash": "1ff0a831522e47004a4f57cfaacd5d17",
      "lines": {
        "36": "",
        "37": "    private static Map<String, ComparisonOperator> lookup;",
        "40": "",
        "41": "    ComparisonOperator(String attribute)",
        "47": "    {",
        "48": "        lookup = new HashMap<String, ComparisonOperator>();",
        "49": "        for (ComparisonOperator op : EnumSet.allOf(ComparisonOperator.class))",
        "50": "        {",
        "59": "",
        "60": "    public static ComparisonOperator getComparisonOperatorFromAttribute(String attribute)",
        "30": " */",
        "31": "public enum ComparisonOperator"
      },
      "id": 76101306,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/o42a/o42a",
      "language": "Java",
      "linescount": 88,
      "location": "/org.o42a.common/src/org/o42a/common/ref/cmp",
      "name": "o42a",
      "url": "https://searchcode.com/codesearch/view/126259316/",
      "md5hash": "a5aa65ec843f35b93c02a9d9ac49025e",
      "lines": {
        "32": "",
        "33": "\tpublic static final ComparisonOperator EQUALS = new EqualsOperator();",
        "34": "\tpublic static final ComparisonOperator NOT_EQUALS =",
        "35": "\t\t\tnew NotEqualsOperator();",
        "36": "\tpublic static final ComparisonOperator COMPARE_EQUAL =",
        "37": "\t\t\tnew CompareEqualOperator();",
        "38": "\tpublic static final ComparisonOperator COMPARE_NOT_EQUAL =",
        "39": "\t\t\tnew CompareNotEqualOperator();",
        "40": "\tpublic static final ComparisonOperator GREATER = new GreaterOperator();",
        "41": "\tpublic static final ComparisonOperator GREATER_OR_EQUAL =",
        "42": "\t\t\tnew GreaterOrEqualOperator();",
        "43": "\tpublic static final ComparisonOperator LESS = new LessOperator();",
        "44": "\tpublic static final ComparisonOperator LESS_OR_EQUAL =",
        "45": "\t\t\tnew LessOrEqualOperator();",
        "48": "",
        "49": "\tpublic ComparisonOperator(ClauseId clauseId) {"
      },
      "id": 126259316,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 81,
      "location": "/nuclos-common/src/main/java/org/nuclos/common/database/query/statement",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46077864/",
      "md5hash": "799a4d209d99005a4da3bfbf29f926ac",
      "lines": {
        "80": "}\t// class ComparisonOperator",
        "39": "",
        "40": "\tpublic static final ComparisonOperator EQUALS_OPERATOR = new ComparisonOperator(equals);",
        "41": "\tpublic static final ComparisonOperator NOT_EQUALS_OPERATOR = new ComparisonOperator(notEquals);",
        "42": "\tpublic static final ComparisonOperator LESS_THAN_OPERATOR = new ComparisonOperator(lessThan);",
        "43": "\tpublic static final ComparisonOperator GREATER_THAN_OPERATOR = new ComparisonOperator(greaterThan);",
        "44": "\tpublic static final ComparisonOperator LESS_THAN_OR_EQUALS_OPERATOR = new ComparisonOperator(lessThanOrEquals);",
        "45": "\tpublic static final ComparisonOperator GREATER_THAN_OR_EQUALS_OPERATOR = new ComparisonOperator(greaterThanOrEquals);",
        "46": "",
        "47": "\tpublic static final ComparisonOperator LEFT_OUTER_JOIN_OPERATOR = new ComparisonOperator(leftOuterJoin);",
        "48": "\tpublic static final ComparisonOperator RIGHT_OUTER_JOIN_OPERATOR = new ComparisonOperator(rightOuterJoin);",
        "49": "",
        "51": "",
        "52": "\tprivate ComparisonOperator(byte type) {",
        "79": ""
      },
      "id": 46077864,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/ehs/openmrs-1.6.x.git",
      "language": "Java",
      "linescount": 45,
      "location": "/src/api/org/openmrs/logic/op",
      "name": "openmrs-1.6.x",
      "url": "https://searchcode.com/codesearch/view/36247711/",
      "md5hash": "e49621463b18687abc2283cb933e362a",
      "lines": {
        "32": "\tpublic static final ComparisonOperator GTE = new GreaterThanEquals();",
        "33": "\t",
        "16": "/**",
        "17": " * Marker interface to keep track of the ComparisonOperator sub type",
        "20": " */",
        "21": "public interface ComparisonOperator extends Operator {",
        "23": "\t// comparison operators",
        "24": "\tpublic static final ComparisonOperator CONTAINS = new Contains();",
        "25": "\t",
        "26": "\tpublic static final ComparisonOperator EQUALS = new Equals();",
        "27": "\t",
        "28": "\tpublic static final ComparisonOperator WITHIN = new Within();",
        "29": "\t",
        "30": "\tpublic static final ComparisonOperator GT = new GreaterThan();",
        "31": "\t"
      },
      "id": 36247711,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/ehs/openmrs19.git",
      "language": "Java",
      "linescount": 45,
      "location": "/api/src/main/java/org/openmrs/logic/op",
      "name": "openmrs19",
      "url": "https://searchcode.com/codesearch/view/36620873/",
      "md5hash": "e49621463b18687abc2283cb933e362a",
      "lines": {
        "32": "\tpublic static final ComparisonOperator GTE = new GreaterThanEquals();",
        "33": "\t",
        "16": "/**",
        "17": " * Marker interface to keep track of the ComparisonOperator sub type",
        "20": " */",
        "21": "public interface ComparisonOperator extends Operator {",
        "23": "\t// comparison operators",
        "24": "\tpublic static final ComparisonOperator CONTAINS = new Contains();",
        "25": "\t",
        "26": "\tpublic static final ComparisonOperator EQUALS = new Equals();",
        "27": "\t",
        "28": "\tpublic static final ComparisonOperator WITHIN = new Within();",
        "29": "\t",
        "30": "\tpublic static final ComparisonOperator GT = new GreaterThan();",
        "31": "\t"
      },
      "id": 36620873,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 162,
      "location": "/nuclos-common/src/main/java/org/nuclos/common/collect/collectable/searchcondition",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46077977/",
      "md5hash": "c01083550990c7ddf2cdb24896e4086c",
      "lines": {
        "128": "\t * \u0e22\u0e07precondition compop != ComparisonOperator.NONE",
        "160": "",
        "132": "\t */",
        "133": "\tpublic static ComparisonOperator complement(ComparisonOperator compop) {",
        "161": "}\t// enum ComparisonOperator",
        "29": "public enum ComparisonOperator {",
        "61": "",
        "82": "\t@Deprecated",
        "83": "\tpublic static ComparisonOperator getInstance(int iIntValue) {",
        "62": "\tpublic static ComparisonOperator[] getComparisonOperators() {",
        "55": "",
        "56": "\tprivate ComparisonOperator(int iValue, int iOperandCount, String sSql) {",
        "127": "\t * \u0e22\u0e07precondition compop != null",
        "28": " */",
        "93": "\t * @param sName",
        "94": "\t * @return the operator name, as in ComparisonOperator.name().",
        "95": "\t */"
      },
      "id": 46077977,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/elloyd/cnpvue",
      "language": "Java",
      "linescount": 77,
      "location": "/src/tufts/vue/propertyeditor",
      "name": "cnpvue",
      "url": "https://searchcode.com/codesearch/view/55212968/",
      "md5hash": "62937279c639b1d4e2b6568fd834f935",
      "lines": {
        "32": "    public static ComparisonOperator fromValue(java.lang.String value)",
        "33": "          throws java.lang.IllegalArgumentException {",
        "2": "/**",
        "3": " * ComparisonOperator.java",
        "8": "",
        "9": "public class ComparisonOperator implements java.io.Serializable {",
        "13": "    // Constructor",
        "14": "    protected ComparisonOperator(java.lang.String value) {",
        "24": "    public static final java.lang.String _ge = \"ge\";",
        "25": "    public static final ComparisonOperator has = new ComparisonOperator(_has);",
        "26": "    public static final ComparisonOperator eq = new ComparisonOperator(_eq);",
        "27": "    public static final ComparisonOperator lt = new ComparisonOperator(_lt);",
        "28": "    public static final ComparisonOperator le = new ComparisonOperator(_le);",
        "29": "    public static final ComparisonOperator gt = new ComparisonOperator(_gt);",
        "30": "    public static final ComparisonOperator ge = new ComparisonOperator(_ge);",
        "31": "    public java.lang.String getValue() { return _value_;}"
      },
      "id": 55212968,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/asirnayeef22/nexj-express-json-integration-adapter",
      "language": "Java",
      "linescount": 862,
      "location": "/src/nexj/core/persistence/operator",
      "name": "nexj-express-json-integration-adapter",
      "url": "https://searchcode.com/codesearch/view/62979699/",
      "md5hash": "f7f83c00f599870ab6ab1e4c532e18dc",
      "lines": {
        "771": "    */",
        "68": "    */",
        "69": "   protected ComparisonOperator()",
        "135": "            {",
        "136": "               ComparisonOperator cmpOp = (ComparisonOperator)op;",
        "420": "                  {",
        "792": "    */",
        "786": "    */",
        "19": " */",
        "20": "public abstract class ComparisonOperator extends BinaryOperator",
        "793": "   public abstract ComparisonOperator createInverse();",
        "787": "   protected abstract ComparisonOperator createSame();",
        "772": "   protected abstract ComparisonOperator createSymmetric();",
        "797": "    */",
        "798": "   protected abstract ComparisonOperator createStrict();",
        "421": "                     ComparisonOperator cmp = createSame();"
      },
      "id": 62979699,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://github.com/keyanmca/aws-sdk-android.git",
      "language": "Java",
      "linescount": 90,
      "location": "/src/com/amazonaws/services/dynamodb/model",
      "name": "aws-sdk-android",
      "url": "https://searchcode.com/codesearch/view/96086006/",
      "md5hash": "3cb6207c6d695d4bf9548c52c2392c44",
      "lines": {
        "64": "            return ComparisonOperator.IN;",
        "65": "        } else if (\"LE\".equals(value)) {",
        "38": "",
        "39": "    private ComparisonOperator(String value) {",
        "63": "        } else if (\"IN\".equals(value)) {",
        "52": "     *            real value",
        "21": "public enum ComparisonOperator {",
        "54": "     */",
        "55": "    public static ComparisonOperator fromValue(String value) {",
        "20": "@Deprecated",
        "59": "        } else if (\"EQ\".equals(value)) {",
        "60": "            return ComparisonOperator.EQ;",
        "61": "        } else if (\"NE\".equals(value)) {",
        "62": "            return ComparisonOperator.NE;",
        "53": "     * @return ComparisonOperator corresponding to the value"
      },
      "id": 96086006,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/gbatumbya/nexjexpress-jsonintergrationadapter",
      "language": "Java",
      "linescount": 903,
      "location": "/src/nexj/core/persistence/operator",
      "name": "nexjexpress-jsonintergrationadapter",
      "url": "https://searchcode.com/codesearch/view/121471342/",
      "md5hash": "054efb9c1ccc6c5a7a18787c97f1e88d",
      "lines": {
        "833": "    */",
        "834": "   public abstract ComparisonOperator createInverse();",
        "68": "    */",
        "69": "   protected ComparisonOperator()",
        "838": "    */",
        "135": "            {",
        "136": "               ComparisonOperator cmpOp = (ComparisonOperator)op;",
        "839": "   protected abstract ComparisonOperator createStrict();",
        "812": "    */",
        "813": "   protected abstract ComparisonOperator createSymmetric();",
        "19": " */",
        "20": "public abstract class ComparisonOperator extends BinaryOperator",
        "420": "                  {",
        "827": "    */",
        "828": "   protected abstract ComparisonOperator createSame();",
        "421": "                     ComparisonOperator cmp = createSame();"
      },
      "id": 121471342,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/cwdesautels/nexj-express-sqlite-adapter",
      "language": "Java",
      "linescount": 901,
      "location": "/src/nexj/core/persistence/operator",
      "name": "nexj-express-sqlite-adapter",
      "url": "https://searchcode.com/codesearch/view/121882977/",
      "md5hash": "87afffc9df9d5c5cb3579f908dcac66e",
      "lines": {
        "832": "   public abstract ComparisonOperator createInverse();",
        "418": "                  {",
        "419": "                     ComparisonOperator cmp = createSame();",
        "68": "    */",
        "69": "   protected ComparisonOperator()",
        "135": "            {",
        "136": "               ComparisonOperator cmpOp = (ComparisonOperator)op;",
        "810": "    */",
        "811": "   protected abstract ComparisonOperator createSymmetric();",
        "19": " */",
        "20": "public abstract class ComparisonOperator extends BinaryOperator",
        "837": "   protected abstract ComparisonOperator createStrict();",
        "836": "    */",
        "825": "    */",
        "826": "   protected abstract ComparisonOperator createSame();",
        "831": "    */"
      },
      "id": 121882977,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://github.com/santhoshdaivajna/AWSAutomata.git",
      "language": "Java",
      "linescount": 65,
      "location": "/src/main/java/com/automata/cloudcore/xmlbindings",
      "name": "AWSAutomata",
      "url": "https://searchcode.com/codesearch/view/67056449/",
      "md5hash": "a646c795e5eeaa28591b59c26fac4269",
      "lines": {
        "32": " */",
        "33": "@XmlType(name = \"ComparisonOperator\")",
        "34": "@XmlEnum",
        "35": "public enum ComparisonOperator {",
        "54": "",
        "46": "",
        "47": "    ComparisonOperator(String v) {",
        "16": "/**",
        "17": " * <p>Java class for ComparisonOperator.",
        "21": " * <pre>",
        "22": " * &lt;simpleType name=\"ComparisonOperator\">",
        "55": "    public static ComparisonOperator fromValue(String v) {",
        "56": "        for (ComparisonOperator c: ComparisonOperator.values()) {",
        "57": "            if (c.value.equals(v)) {"
      },
      "id": 67056449,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://github.com/bojanp/Nginious.git",
      "language": "Java",
      "linescount": 89,
      "location": "/nginious-server/src/main/java/com/nginious/http/xsp/expr",
      "name": "Nginious",
      "url": "https://searchcode.com/codesearch/view/74723287/",
      "md5hash": "9d34ba0ce922c840cd4608cfcae73017",
      "lines": {
        "25": " */",
        "26": "public abstract class ComparisonOperator extends Value {",
        "38": "     */",
        "39": "    protected ComparisonOperator(Value value1, Value value2) {"
      },
      "id": 74723287,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "git://github.com/amazonwebservices/aws-sdk-for-java.git",
      "language": "Java",
      "linescount": 89,
      "location": "/src/main/java/com/amazonaws/services/dynamodb/model",
      "name": "aws-sdk-for-java",
      "url": "https://searchcode.com/codesearch/view/10102630/",
      "md5hash": "dbc42f00780ed42ce179f11767d9ede7",
      "lines": {
        "64": "        } else if (\"LE\".equals(value)) {",
        "51": "     *            real value",
        "37": "",
        "38": "    private ComparisonOperator(String value) {",
        "19": " */",
        "20": "public enum ComparisonOperator {",
        "53": "     */",
        "54": "    public static ComparisonOperator fromValue(String value) {",
        "52": "     * @return ComparisonOperator corresponding to the value",
        "58": "        } else if (\"EQ\".equals(value)) {",
        "59": "            return ComparisonOperator.EQ;",
        "60": "        } else if (\"NE\".equals(value)) {",
        "61": "            return ComparisonOperator.NE;",
        "62": "        } else if (\"IN\".equals(value)) {",
        "63": "            return ComparisonOperator.IN;"
      },
      "id": 10102630,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/nickolas_pohilets/cyclone",
      "language": "Java",
      "linescount": 22,
      "location": "/eclipse/cycinf-plugin/src/cycinf/constraints",
      "name": "cyclone",
      "url": "https://searchcode.com/codesearch/view/128964460/",
      "md5hash": "b5271516cb0e4c0b8286efd5b88e29a3",
      "lines": {
        "16": "\tpublic final String symbol;",
        "17": "\tComparisonOperator(String symbol) {",
        "4": "",
        "5": "public enum ComparisonOperator {"
      },
      "id": 128964460,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/twic/liquidform",
      "language": "Java",
      "linescount": 38,
      "location": "/src/main/java/com/google/code/liquidform/conditions",
      "name": "liquidform",
      "url": "https://searchcode.com/codesearch/view/130529611/",
      "md5hash": "cb7506c1b656f10afd8d5baa64b52dd7",
      "lines": {
        "28": "",
        "29": "\tprivate ComparisonOperator(String stringRepresentation) {",
        "22": " */",
        "23": "public enum ComparisonOperator implements Operator {"
      },
      "id": 130529611,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "http://meta-editor.googlecode.com/svn/",
      "language": "Java",
      "linescount": 123,
      "location": "/trunk/MEditor/src/org/fedora/api",
      "name": "meta-editor",
      "url": "https://searchcode.com/codesearch/view/7794362/",
      "md5hash": "fe844bc17e88dbed141d60e3a3b989de",
      "lines": {
        "36": " * <p>",
        "37": " * Java class for ComparisonOperator.",
        "43": " * <pre>",
        "44": " * &lt;simpleType name=\"ComparisonOperator\">",
        "112": "     */",
        "113": "    public static ComparisonOperator fromValue(String v) {",
        "114": "        for (ComparisonOperator c : ComparisonOperator.values()) {",
        "115": "            if (c.value.equals(v)) {",
        "55": " */",
        "56": "@XmlType(name = \"ComparisonOperator\")",
        "57": "@XmlEnum",
        "58": "public enum ComparisonOperator {",
        "92": "     */",
        "93": "    ComparisonOperator(String v) {"
      },
      "id": 7794362,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "git://github.com/amazonwebservices/aws-sdk-for-java.git",
      "language": "Java",
      "linescount": 62,
      "location": "/src/main/java/com/amazonaws/services/cloudwatch/model",
      "name": "aws-sdk-for-java",
      "url": "https://searchcode.com/codesearch/view/8415645/",
      "md5hash": "dc8c07c95bb297fdb5f88ec151567a24",
      "lines": {
        "51": "        } else if (\"GreaterThanThreshold\".equals(value)) {",
        "42": "     *            real value",
        "43": "     * @return ComparisonOperator corresponding to the value",
        "44": "     */",
        "45": "    public static ComparisonOperator fromValue(String value) {",
        "49": "        } else if (\"GreaterThanOrEqualToThreshold\".equals(value)) {",
        "50": "            return ComparisonOperator.GreaterThanOrEqualToThreshold;",
        "19": " */",
        "20": "public enum ComparisonOperator {",
        "53": "        } else if (\"LessThanThreshold\".equals(value)) {",
        "54": "            return ComparisonOperator.LessThanThreshold;",
        "55": "        } else if (\"LessThanOrEqualToThreshold\".equals(value)) {",
        "56": "            return ComparisonOperator.LessThanOrEqualToThreshold;",
        "52": "            return ComparisonOperator.GreaterThanThreshold;",
        "28": "",
        "29": "    private ComparisonOperator(String value) {"
      },
      "id": 8415645,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://github.com/Melandro/bonita-engine.git",
      "language": "Java",
      "linescount": 34,
      "location": "/bpm/bonita-api/bonita-common-api/src/main/java/org/bonitasoft/engine/expression",
      "name": "bonita-engine",
      "url": "https://searchcode.com/codesearch/view/76159576/",
      "md5hash": "ace43fe3a67e7c835e39da3ac951d506",
      "lines": {
        "18": " */",
        "19": "public enum ComparisonOperator {"
      },
      "id": 76159576,
      "filename": "ComparisonOperator.java"
    },
    {
      "repo": "https://bitbucket.org/un_jon/orbisgis",
      "language": "Java",
      "linescount": 147,
      "location": "/orbisgis/gdms/src/main/java/org/gdms/sql/evaluator",
      "name": "orbisgis",
      "url": "https://searchcode.com/codesearch/view/56396481/",
      "md5hash": "0c9995ef4ff50285584e1fd1d104c135",
      "lines": {
        "84": "",
        "45": "",
        "46": "public abstract class ComparisonOperator extends Operator {",
        "85": "\tpublic ComparisonOperator(Expression... children) {"
      },
      "id": 56396481,
      "filename": "ComparisonOperator.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 250,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 133,
      "source": "Github",
      "id": 2
    },
    {
      "count": 27,
      "source": "Google Code",
      "id": 1
    }
  ]
}