{
  "matchterm": "RootProperty",
  "previouspage": null,
  "searchterm": "RootProperty",
  "query": "RootProperty",
  "language_filters": [
    {
      "count": 101,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 101,
  "results": [
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 101,
      "location": "/components/forks/poi/src/loci/poi/poifs/property",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642243/",
      "md5hash": "28cc66b1140b455a3efd35643218ce42",
      "lines": {
        "64": "",
        "65": "    RootProperty()",
        "82": "",
        "83": "    protected RootProperty(final int index, final byte [] array,",
        "99": "}   // end public class RootProperty",
        "56": "",
        "57": "public class RootProperty",
        "98": "    }"
      },
      "id": 15642243,
      "filename": "RootProperty.java"
    },
    {
      "repo": "https://github.com/ybl/riot.git",
      "language": "Java",
      "linescount": 123,
      "location": "/core/src/org/riotfamily/core/form/element",
      "name": "riot",
      "url": "https://searchcode.com/codesearch/view/107149846/",
      "md5hash": "993648f154386b27c11f9ccfd0b54adc",
      "lines": {
        "64": "\tpublic void setRootProperty(String rootProperty) {",
        "65": "\t\tthis.rootProperty = rootProperty;",
        "66": "\t}",
        "35": "\t",
        "36": "\tprivate String rootProperty;",
        "90": "\t\t\t\tObject root = FormScreen.getScreenContext(getForm()).getParent();",
        "91": "\t\t\t\tif (rootProperty != null) {",
        "92": "\t\t\t\t\troot = PropertyUtils.getProperty(root, rootProperty);",
        "93": "\t\t\t\t}",
        "63": "\t"
      },
      "id": 107149846,
      "filename": "ObjectChooser.java"
    },
    {
      "repo": "https://github.com/dant3/pooka.git",
      "language": "Java",
      "linescount": 335,
      "location": "/src/main/java/net/suberic/pooka/gui/search",
      "name": "pooka",
      "url": "https://searchcode.com/codesearch/view/96318664/",
      "md5hash": "33942a5f0971266e183e6d7d3f2948df",
      "lines": {
        "256": "    private void addSingleSearchTerm(String rootProperty, VariableBundle bundle, int type) {",
        "257": "\tif (type == FIRST) {",
        "258": "\t    SearchEntryForm sef = new SearchEntryForm(manager, rootProperty, bundle);",
        "283": "\tVector v = new Vector (searchTerms);",
        "278": "     * given rootProperty as the root.",
        "264": "\t} else {",
        "265": "\t    SearchEntryForm sef = new SearchEntryForm(manager, rootProperty, bundle);",
        "279": "     */",
        "290": "     */",
        "291": "    private void addToProperties(SearchEntryPair pair, String rootProperty, java.util.Properties props) {",
        "277": "     * This returns the defined SearchTerm as a set of Properties, with the",
        "214": "     * the rootProperty in the given VariableBundle.",
        "215": "     */",
        "280": "    public java.util.Properties generateSearchTermProperties(String rootProperty) {",
        "255": "     */",
        "284": "\taddToProperties(v, rootProperty, returnValue);",
        "213": "     * This sets the currently depicted SearchTerm to the one defined by"
      },
      "id": 96318664,
      "filename": "SearchEntryPanel.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 13474,
      "location": "/kernel/kernel-impl/src/main/java/org/sakaiproject/content/impl",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129857595/",
      "md5hash": "ca0faaf40230ed58b999b72b005956d8",
      "lines": {
        "6212": "\t * ",
        "6213": "\t * @param rootProperty",
        "6216": "\t */",
        "6217": "\tprotected String getAlternateReferenceRoot(String id, String rootProperty)",
        "6219": "\t\t// null means don't do this",
        "6220": "\t\tif (rootProperty == null) return \"\";",
        "6196": "\t *        The resource id.",
        "6197": "\t * @param rootProperty",
        "6230": "\t\t\t// findResource(id).getProperties().getProperty(...) ??",
        "6231": "\t\t\talternateRoot = StringUtils.trimToNull(getProperties(id).getProperty(rootProperty));",
        "6200": "\t */",
        "6201": "\tpublic String getUrl(String id, String rootProperty)",
        "6204": "\t\t// return getAccessPoint(false) + Validator.escapeUrl(id);",
        "6205": "\t\treturn m_serverConfigurationService.getAccessUrl() + getAlternateReferenceRoot(id, rootProperty) + m_relativeAccessPoint"
      },
      "id": 129857595,
      "filename": "BaseContentService.java"
    },
    {
      "repo": "https://github.com/dant3/pooka.git",
      "language": "Java",
      "linescount": 335,
      "location": "/src/main/java/net/suberic/pooka/gui/search",
      "name": "pooka",
      "url": "https://searchcode.com/codesearch/view/96318669/",
      "md5hash": "839f48e8401c346af1074ab717856f97",
      "lines": {
        "256": "\t    System.out.println(\"getting typeLabel from \" + searchProperty + \".label; value is \" + typeLabel);",
        "225": "\tif (searchProperty != null)",
        "226": "\t    returnValue.setProperty(rootProperty + \".searchTerm\", searchProperty);",
        "227": "\tif (operationProperty != null)",
        "71": "     */",
        "72": "    public SearchEntryForm(SearchTermManager newManager, String rootProperty, VariableBundle bundle) { ",
        "73": "\tthis(newManager);",
        "74": "\tsetTermValue(rootProperty, bundle);",
        "257": "\tString operationProperty = bundle.getProperty(rootProperty + \".operation\", \"Search.operations.Contains\");",
        "258": "\tif (Pooka.isDebug())",
        "259": "\t    System.out.println(\"getting operationProperty from \" + rootProperty + \".operation; value is \" + operationProperty);",
        "187": "     */",
        "188": "    public java.util.Properties generateSearchTermProperties(String rootProperty) {",
        "189": "      if (Pooka.isDebug())",
        "190": "\tSystem.out.println(\"SearchEntryForm:  generating SearchTerm property from \" + searchFieldCombo.getSelectedItem() + \" and \" + operationCombo.getSelectedItem() + \" using rootProperty \" + rootProperty);"
      },
      "id": 96318669,
      "filename": "SearchEntryForm.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 5571,
      "location": "/citations/citations-impl/impl/src/java/org/sakaiproject/citation/impl",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129861598/",
      "md5hash": "b633d139bd20f979e7226e2d13ae2186",
      "lines": {
        "2784": "\t\t\tif (!rootProperty.startsWith(Entity.SEPARATOR))",
        "2785": "\t\t\t{",
        "2915": "",
        "2916": "\t\tpublic String getReference(String rootProperty)",
        "2794": "",
        "2795": "\t\t\treturn rootProperty;",
        "2962": "\t\t\treturn getAccessPoint(false) + getAlternateReferenceRoot(rootProperty)",
        "2959": "",
        "2960": "\t\tpublic String getUrl(String rootProperty)",
        "2961": "\t\t{",
        "2770": "\t\t *",
        "2771": "\t\t * @param rootProperty",
        "2774": "\t\t */",
        "2775": "\t\tprotected String getAlternateReferenceRoot(String rootProperty)",
        "2777": "\t\t\t// null means don't do this",
        "2778": "\t\t\tif (rootProperty == null || rootProperty.trim().equals(\"\"))",
        "2783": "\t\t\t// make sure it start with a separator and does not end with one"
      },
      "id": 129861598,
      "filename": "BaseCitationService.java"
    },
    {
      "repo": "https://bitbucket.org/phreax/myreceiptmanager",
      "language": "Java",
      "linescount": 527,
      "location": "/src/PropertyModel",
      "name": "myreceiptmanager",
      "url": "https://searchcode.com/codesearch/view/133385623/",
      "md5hash": "3089a11e721eed3afacda9fb92d5c8c4",
      "lines": {
        "386": "  {",
        "387": "    if (path.isEmpty() || path.equals(rootProperty.getName()))",
        "388": "    {",
        "165": "  {",
        "166": "    return rootProperty.checkConsistency();",
        "392": "    String currentPropName = getFirstPropFromPath(currentPath);",
        "393": "    Property currentProperty = rootProperty;",
        "426": "",
        "427": "    Property currentProperty = rootProperty;",
        "46": " * <code>",
        "47": " * [rootproperty]<br />",
        "48": " * [subproperty]it's string value[/subproperty]<br />",
        "404": "  {",
        "405": "    return rootProperty.getName();",
        "389": "      return rootProperty;"
      },
      "id": 133385623,
      "filename": "PropertyTree.java"
    },
    {
      "repo": "https://repast.svn.sourceforge.net/svnroot/repast",
      "language": "Java",
      "linescount": 150,
      "location": "/repast.simphony/trunk/plugins/repast.simphony.integration/test/repast/simphony/integration",
      "name": "repast",
      "url": "https://searchcode.com/codesearch/view/1970889/",
      "md5hash": "f19b0b645898f8ac41319ca71afaf65e",
      "lines": {
        "28": "\t\t",
        "61": "\t\ttest(rootContext, subChildContext, \"/rootProperty\");",
        "54": "\t\ttest(rootContext, subChildContext, \"/\");",
        "55": "\t\ttest(rootContext, subChildContext, \"//rootProperty\");",
        "56": "\t\ttest(rootContext, subChildContext, \"/rootProperty\");",
        "57": "\t\ttest(rootContext, subChildContext, \"/RootProperty\");",
        "58": "\t\ttest(rootContext, subChildContext, \"../subChild/subChildProperty\");",
        "60": "\t\tSystem.out.println(\"rootContext:\");",
        "29": "\t\tpublic String getRootProperty() {",
        "30": "\t\t\treturn \"rootPropertyValue\";",
        "31": "\t\t}"
      },
      "id": 1970889,
      "filename": "BeanXPathTest.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 1311,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60434669/",
      "md5hash": "c0fa3c202ee3fb72d856f03cde913ccf",
      "lines": {
        "1051": "        ",
        "1222": "            this.treeView = treeView;",
        "423": "     */",
        "424": "    public final BooleanProperty showRootProperty() {",
        "393": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "1226": "        ",
        "1035": "            this.treeView = treeView;",
        "1036": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "392": "     */",
        "1227": "        private final ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "409": "    public final void setShowRoot(boolean value) {",
        "58": " * like {@link ListView}, in TreeView it is necessary to <strong>only</strong> ",
        "59": " * specify the {@link #rootProperty() root} node. ",
        "1052": "        private ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "410": "        showRootProperty().set(value);",
        "1223": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);"
      },
      "id": 60434669,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 1852,
      "location": "/calendar/calendar-impl/impl/src/java/org/sakaiproject/calendar/impl",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129852920/",
      "md5hash": "362f637e23fde30fd5f2b2120e2bb61c",
      "lines": {
        "1485": "",
        "1486": "\t\tpublic String getReference(String rootProperty)",
        "1487": "\t\t{",
        "1488": "\t\t\treturn rootProperty + getReference();",
        "1107": "",
        "1108": "\t\tpublic String getReference(String rootProperty)",
        "1109": "\t\t{",
        "1110": "\t\t\treturn rootProperty + getReference();",
        "1495": "",
        "1496": "\t\tpublic String getUrl(String rootProperty)",
        "1497": "\t\t{",
        "1498": "\t\t\treturn rootProperty + getUrl();",
        "1118": "",
        "1119": "\t\tpublic String getUrl(String rootProperty)"
      },
      "id": 129852920,
      "filename": "BaseExternalCalendarSubscriptionService.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 13030,
      "location": "/assignment/assignment-impl/impl/src/java/org/sakaiproject/assignment/impl",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129854536/",
      "md5hash": "a38ea131058e6f06e6083f28848ad344",
      "lines": {
        "8417": "\t\t */",
        "8418": "\t\tpublic String getReference(String rootProperty)",
        "7076": "\t\t */",
        "7077": "\t\tpublic String getReference(String rootProperty)",
        "8425": "\t\t */",
        "8426": "\t\tpublic String getUrl(String rootProperty)",
        "7084": "\t\t */",
        "7085": "\t\tpublic String getUrl(String rootProperty)"
      },
      "id": 129854536,
      "filename": "BaseAssignmentService.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 2940,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60434670/",
      "md5hash": "31b9efb03699f61cef831463d372caa3",
      "lines": {
        "384": "    public final BooleanProperty showRootProperty() {",
        "2691": "        ",
        "2692": "        private final ChangeListener rootPropertyListener = new ChangeListener<TreeItem<S>>() {",
        "2698": "                ",
        "2057": "            ",
        "2058": "            this.treeTableView.rootProperty().addListener(weakRootPropertyListener);",
        "2699": "        private final WeakChangeListener weakRootPropertyListener =",
        "2700": "                new WeakChangeListener(rootPropertyListener);",
        "2701": "        ",
        "337": "    public final void setRoot(TreeItem<S> value) {",
        "338": "        rootProperty().set(value);",
        "383": "     */",
        "2204": "        ",
        "2205": "        private WeakChangeListener weakRootPropertyListener =",
        "2206": "                new WeakChangeListener(rootPropertyListener);",
        "2207": "        "
      },
      "id": 60434670,
      "filename": "TreeTableView.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 268,
      "location": "/components/forks/poi/src/loci/poi/poifs/property",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642249/",
      "md5hash": "ec58a14799afd1ed760c28ac77bdf126",
      "lines": {
        "134": "",
        "135": "    public RootProperty getRoot()",
        "138": "        // it's always the first element in the List",
        "139": "        return ( RootProperty ) _properties.get(0);",
        "78": "        _properties  = new ArrayList();",
        "79": "        addProperty(new RootProperty());"
      },
      "id": 15642249,
      "filename": "PropertyTable.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-rt",
      "language": "Java",
      "linescount": 1160,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-rt",
      "url": "https://searchcode.com/codesearch/view/132892805/",
      "md5hash": "72c128d1b766aaa8b38d61f4ea021491",
      "lines": {
        "416": "     */",
        "385": "     */",
        "386": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "900": "        ",
        "901": "        private ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "417": "    public final BooleanProperty showRootProperty() {",
        "968": "        private WeakChangeListener weakRootPropertyListener =",
        "969": "                new WeakChangeListener(rootPropertyListener);",
        "967": "        ",
        "1071": "            this.treeView = treeView;",
        "1072": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "402": "    public final void setShowRoot(boolean value) {",
        "403": "        showRootProperty().set(value);",
        "1076": "        private final ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "1075": "        ",
        "59": " * like {@link ListView}, in TreeView it is necessary to <strong>only</strong> ",
        "60": " * specify the {@link #rootProperty() root} node. "
      },
      "id": 132892805,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://bitbucket.org/rbair/rbair-controls-8",
      "language": "Java",
      "linescount": 1380,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "rbair-controls-8",
      "url": "https://searchcode.com/codesearch/view/135697554/",
      "md5hash": "e5ba25c60fe9040032c6b1fab0fef2fa",
      "lines": {
        "384": "    public final void setRoot(TreeItem<T> value) {",
        "385": "        rootProperty().set(value);",
        "1286": "                new WeakChangeListener(rootPropertyListener);",
        "1284": "                ",
        "1061": "            this.treeView = treeView;",
        "1062": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "417": "        showRootProperty().set(value);",
        "1287": "        ",
        "1164": "        ",
        "1165": "        private WeakChangeListener weakRootPropertyListener =",
        "1166": "                new WeakChangeListener(rootPropertyListener);",
        "399": "     */",
        "400": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "416": "    public final void setShowRoot(boolean value) {",
        "1167": "        ",
        "1285": "        private final WeakChangeListener weakRootPropertyListener ="
      },
      "id": 135697554,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://bitbucket.org/shemnon/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 1380,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/135762167/",
      "md5hash": "e5ba25c60fe9040032c6b1fab0fef2fa",
      "lines": {
        "384": "    public final void setRoot(TreeItem<T> value) {",
        "385": "        rootProperty().set(value);",
        "1286": "                new WeakChangeListener(rootPropertyListener);",
        "1284": "                ",
        "1061": "            this.treeView = treeView;",
        "1062": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "417": "        showRootProperty().set(value);",
        "1287": "        ",
        "1164": "        ",
        "1165": "        private WeakChangeListener weakRootPropertyListener =",
        "1166": "                new WeakChangeListener(rootPropertyListener);",
        "399": "     */",
        "400": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "416": "    public final void setShowRoot(boolean value) {",
        "1167": "        ",
        "1285": "        private final WeakChangeListener weakRootPropertyListener ="
      },
      "id": 135762167,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-master-rt",
      "language": "Java",
      "linescount": 1219,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-master-rt",
      "url": "https://searchcode.com/codesearch/view/136760541/",
      "md5hash": "42f18e50dc9d22a19435b64137208073",
      "lines": {
        "419": "     */",
        "388": "     */",
        "389": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "1116": "        ",
        "940": "        ",
        "941": "        private ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "1117": "        private final ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "405": "    public final void setShowRoot(boolean value) {",
        "406": "        showRootProperty().set(value);",
        "1113": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "1112": "            this.treeView = treeView;",
        "420": "    public final BooleanProperty showRootProperty() {",
        "924": "            this.treeView = treeView;",
        "925": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "62": " * like {@link ListView}, in TreeView it is necessary to <strong>only</strong> ",
        "63": " * specify the {@link #rootProperty() root} node. "
      },
      "id": 136760541,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://bitbucket.org/carrot_garden/openjfx-8-graphics-rt",
      "language": "Java",
      "linescount": 1219,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-8-graphics-rt",
      "url": "https://searchcode.com/codesearch/view/136763663/",
      "md5hash": "42f18e50dc9d22a19435b64137208073",
      "lines": {
        "419": "     */",
        "388": "     */",
        "389": "    public final ObjectProperty<TreeItem<T>> rootProperty() {",
        "1116": "        ",
        "940": "        ",
        "941": "        private ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "1117": "        private final ChangeListener rootPropertyListener = new ChangeListener<TreeItem<T>>() {",
        "405": "    public final void setShowRoot(boolean value) {",
        "406": "        showRootProperty().set(value);",
        "1113": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "1112": "            this.treeView = treeView;",
        "420": "    public final BooleanProperty showRootProperty() {",
        "924": "            this.treeView = treeView;",
        "925": "            this.treeView.rootProperty().addListener(weakRootPropertyListener);",
        "62": " * like {@link ListView}, in TreeView it is necessary to <strong>only</strong> ",
        "63": " * specify the {@link #rootProperty() root} node. "
      },
      "id": 136763663,
      "filename": "TreeView.java"
    },
    {
      "repo": "https://github.com/awerder/riot.git",
      "language": "Java",
      "linescount": 294,
      "location": "/riot/src/org/riotfamily/riot/form/element",
      "name": "riot",
      "url": "https://searchcode.com/codesearch/view/105176430/",
      "md5hash": "54198f7aa66de8a5c053dd4bcbf904c6",
      "lines": {
        "193": "\t\t\tif (rootId == null) {",
        "130": "\t */",
        "131": "\tpublic void setRootProperty(String rootProperty) {",
        "132": "\t\tthis.rootProperty = rootProperty;",
        "133": "\t}",
        "104": "\t * Since any non-root list will require a parent id, you have to specify a ",
        "105": "\t * {@link #setRootProperty(String) root property} or a ",
        "194": "\t\t\t\tif (rootProperty != null) {",
        "195": "\t\t\t\t\tObject parent = FormUtils.loadParent(getForm());",
        "196": "\t\t\t\t\tObject root = PropertyUtils.getProperty(parent, rootProperty);",
        "124": "\t * <pre>",
        "125": "\t * &lt;riot:chooser bind=\"otherBaz\" rootEditorId=\"bars\" rootProperty=\"foo\" /&gt;",
        "62": "\t",
        "63": "\tprivate String rootProperty;"
      },
      "id": 105176430,
      "filename": "ObjectChooser.java"
    },
    {
      "repo": "https://bitbucket.org/fudan/sakai",
      "language": "Java",
      "linescount": 7427,
      "location": "/calendar/calendar-impl/impl/src/java/org/sakaiproject/calendar/impl",
      "name": "sakai",
      "url": "https://searchcode.com/codesearch/view/129852916/",
      "md5hash": "0ec4ece23a2209433f5fdca583e8a821",
      "lines": {
        "4448": "\t\tpublic String getUrl(String rootProperty)",
        "2373": "\t\t */",
        "2374": "\t\tpublic String getUrl(String rootProperty)",
        "4439": "\t\t */",
        "4440": "\t\tpublic String getReference(String rootProperty)",
        "2365": "\t\t */",
        "2366": "\t\tpublic String getReference(String rootProperty)",
        "4447": "\t\t */"
      },
      "id": 129852916,
      "filename": "BaseCalendarService.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 85,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 15,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1,
      "source": "Sourceforge",
      "id": 4
    }
  ]
}