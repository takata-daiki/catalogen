{
  "matchterm": "DBCellRecord",
  "previouspage": null,
  "searchterm": "DBCellRecord",
  "query": "DBCellRecord",
  "language_filters": [
    {
      "count": 13,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 13,
  "results": [
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 125,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260360/",
      "md5hash": "49afe040c55aaf543b3a3259c499d553",
      "lines": {
        "32": " */",
        "33": "class DBCellRecord extends WritableRecordData",
        "60": "   */",
        "61": "  public DBCellRecord(int rp)"
      },
      "id": 43260360,
      "filename": "DBCellRecord.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 125,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200888/",
      "md5hash": "49afe040c55aaf543b3a3259c499d553",
      "lines": {
        "32": " */",
        "33": "class DBCellRecord extends WritableRecordData",
        "60": "   */",
        "61": "  public DBCellRecord(int rp)"
      },
      "id": 49200888,
      "filename": "DBCellRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 215,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642411/",
      "md5hash": "acd46ae61f0fbc97df8795d16496df93",
      "lines": {
        "128": "     * gets offset from the start of this DBCellRecord to the start of the first cell in",
        "97": "    /**",
        "98": "     * sets offset from the start of this DBCellRecord to the start of the first cell in",
        "67": "    /**",
        "68": "     * Constructs a DBCellRecord and sets its fields appropriately",
        "71": "",
        "72": "    public DBCellRecord(RecordInputStream in)",
        "199": "    ",
        "200": "    /** Returns the size of a DBCellRecord when it needs to reference a certain number of rows*/",
        "54": "",
        "55": "public class DBCellRecord",
        "127": "    /**",
        "62": "",
        "63": "    public DBCellRecord()"
      },
      "id": 15642411,
      "filename": "DBCellRecord.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 125,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374556/",
      "md5hash": "d0d69d249331a07bb01eede78804dde1",
      "lines": {
        "32": " */",
        "33": "class DBCellRecord extends WritableRecordData",
        "60": "   */",
        "61": "  public DBCellRecord(int rp)"
      },
      "id": 11374556,
      "filename": "DBCellRecord.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 489,
      "location": "/components/forks/poi/src/loci/poi/hssf/record/aggregates",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642594/",
      "md5hash": "e2636fd1db0e4f81da83b828da4e76a6",
      "lines": {
        "130": "    public int getRowBlockCount() {",
        "131": "      int size = records.size()/DBCellRecord.BLOCK_SIZE;",
        "132": "      if ((records.size() % DBCellRecord.BLOCK_SIZE) != 0)",
        "133": "          size++;",
        "169": "    public int getEndRowNumberForBlock(int block) {",
        "170": "      int endIndex = ((block + 1)*DBCellRecord.BLOCK_SIZE)-1;",
        "43": "",
        "44": "import loci.poi.hssf.record.DBCellRecord;",
        "142": "    public int getRowCountForBlock(int block) {",
        "143": "      int startIndex = block * DBCellRecord.BLOCK_SIZE;",
        "144": "      int endIndex = startIndex + DBCellRecord.BLOCK_SIZE - 1;",
        "145": "      if (endIndex >= records.size())",
        "184": "    private int serializeRowBlock(final int block, final int offset, byte[] data) {",
        "185": "      final int startIndex = block*DBCellRecord.BLOCK_SIZE;",
        "186": "      final int endIndex = startIndex + DBCellRecord.BLOCK_SIZE;",
        "156": "      //having to move it to the right position.",
        "157": "      int startIndex = block * DBCellRecord.BLOCK_SIZE;"
      },
      "id": 15642594,
      "filename": "RowRecordsAggregate.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/openesb-components.git",
      "language": "Java",
      "linescount": 1148,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/43260286/",
      "md5hash": "ffa1236c86df17622a6a9299c36353c8",
      "lines": {
        "453": "    {",
        "454": "      DBCellRecord dbcell = new DBCellRecord(outputFile.getPos());"
      },
      "id": 43260286,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "https://bitbucket.org/brasseld/openesb-components.git",
      "language": "Java",
      "linescount": 1148,
      "location": "/ojc-core/component-common/axiondb/external/src/jxl/write/biff",
      "name": "openesb-components",
      "url": "https://searchcode.com/codesearch/view/49200814/",
      "md5hash": "ffa1236c86df17622a6a9299c36353c8",
      "lines": {
        "453": "    {",
        "454": "      DBCellRecord dbcell = new DBCellRecord(outputFile.getPos());"
      },
      "id": 49200814,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 506,
      "location": "/components/forks/poi/src/loci/poi/hssf/eventmodel",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642343/",
      "md5hash": "468caa59753e7c2d27a76f3903f70894",
      "lines": {
        "64": "import loci.poi.hssf.record.DBCellRecord;",
        "176": "                DimensionsRecord.class, RowRecord.class, LabelSSTRecord.class,",
        "177": "                RKRecord.class, NumberRecord.class, DBCellRecord.class,",
        "377": "        }",
        "378": "        else if (retval instanceof DBCellRecord)",
        "63": "import loci.poi.hssf.record.CountryRecord;"
      },
      "id": 15642343,
      "filename": "EventRecordFactory.java"
    },
    {
      "repo": "http://cellengine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1148,
      "location": "/engine_java/000_Engine_Core/lib/jexcelapi_2_6_9_1.4/jexcelapi/src/jxl/write/biff",
      "name": "cellengine",
      "url": "https://searchcode.com/codesearch/view/11374608/",
      "md5hash": "d2bb3c01a6178871cd169bd35ec691ea",
      "lines": {
        "453": "    {",
        "454": "      DBCellRecord dbcell = new DBCellRecord(outputFile.getPos());"
      },
      "id": 11374608,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "http://brainstream.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1148,
      "location": "/trunk/core/ReadExperimentDefinition/java/jexcelapi/src/jxl/write/biff",
      "name": "brainstream",
      "url": "https://searchcode.com/codesearch/view/13919791/",
      "md5hash": "5094787ddf1c15c3bd7058fdd6237342",
      "lines": {
        "453": "    {",
        "454": "      DBCellRecord dbcell = new DBCellRecord(outputFile.getPos());"
      },
      "id": 13919791,
      "filename": "SheetWriter.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 313,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642481/",
      "md5hash": "3a96eda8fddbdf5ee7f2d333771bc3be",
      "lines": {
        "225": "        }",
        "226": "        else if (retval instanceof DBCellRecord)",
        "86": "                DimensionsRecord.class, RowRecord.class, LabelSSTRecord.class,",
        "87": "                RKRecord.class, NumberRecord.class, DBCellRecord.class,"
      },
      "id": 15642481,
      "filename": "RecordFactory.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 3300,
      "location": "/components/forks/poi/src/loci/poi/hssf/model",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642365/",
      "md5hash": "1e8d548d196dc1063c30d9430b35b9f5",
      "lines": {
        "299": "            }",
        "300": "            else if ( rec.getSid() == DBCellRecord.sid )"
      },
      "id": 15642365,
      "filename": "Sheet.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 138,
      "location": "/components/forks/poi/src/loci/poi/hssf/record",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642517/",
      "md5hash": "d9557b61a9c09d256e4ddd24fcde74ec",
      "lines": {
        "65": "    /**",
        "66": "     * Constructs a DBCellRecord and sets its fields appropriately."
      },
      "id": 15642517,
      "filename": "DSFRecord.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 6,
      "source": "Github",
      "id": 2
    },
    {
      "count": 4,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 3,
      "source": "Google Code",
      "id": 1
    }
  ]
}