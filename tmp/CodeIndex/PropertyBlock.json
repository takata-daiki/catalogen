{
  "matchterm": "PropertyBlock",
  "previouspage": null,
  "searchterm": "PropertyBlock",
  "query": "PropertyBlock",
  "language_filters": [
    {
      "count": 77,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 77,
  "results": [
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 232,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291434/",
      "md5hash": "1fdf65532608f4aa3aec24bc972539e0",
      "lines": {
        "32": "public class PropertyBlock implements Cloneable",
        "208": "        PropertyBlock result = new PropertyBlock();",
        "146": "    {",
        "147": "        StringBuilder result = new StringBuilder(\"PropertyBlock[\");",
        "219": "",
        "207": "    {",
        "220": "    public boolean hasSameContentsAs( PropertyBlock other )",
        "205": "    @Override",
        "206": "    public PropertyBlock clone()",
        "31": ""
      },
      "id": 94291434,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 57,
      "location": "/plugins/properties/src/com/intellij/lang/properties/formatting",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/116143185/",
      "md5hash": "0a1a5bfc0f489e913e4d7e828b297d14",
      "lines": {
        "32": "                          @Nullable Alignment alignment) {",
        "29": " */",
        "30": "public class PropertyBlock extends AbstractBlock {",
        "31": "  protected PropertyBlock(@NotNull ASTNode node,"
      },
      "id": 116143185,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 163,
      "location": "/components/forks/poi/src/loci/poi/poifs/storage",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642270/",
      "md5hash": "67f0b4e3c1f95804ce5523dd582c22a3",
      "lines": {
        "96": "     *                   PropertyBlocks, in a java List",
        "97": "     *",
        "98": "     * @return the array of newly created PropertyBlock instances",
        "59": "",
        "100": "",
        "101": "    public static BlockWritable [] createPropertyBlockArray(",
        "133": "            rvalue[ j ] = new PropertyBlock(to_be_written,",
        "161": "}   // end public class PropertyBlock",
        "75": "",
        "76": "    private PropertyBlock(final Property [] properties, final int offset,",
        "160": "    /* **********  END  extension of BigBlock ********** */",
        "132": "        {",
        "90": "    /**",
        "91": "     * Create an array of PropertyBlocks from an array of Property",
        "60": "public class PropertyBlock",
        "95": "     * @param properties the Property instances to be converted into"
      },
      "id": 15642270,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 230,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71597672/",
      "md5hash": "2217ffcec4ddf0e36ec2eecad9c5a864",
      "lines": {
        "144": "    {",
        "145": "        StringBuilder result = new StringBuilder(\"PropertyBlock[\");",
        "206": "        PropertyBlock result = new PropertyBlock();",
        "217": "",
        "218": "    public boolean hasSameContentsAs( PropertyBlock other )",
        "203": "    @Override",
        "204": "    public PropertyBlock clone()",
        "29": "",
        "30": "public class PropertyBlock implements Cloneable",
        "205": "    {"
      },
      "id": 71597672,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 212,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67765146/",
      "md5hash": "67ec8173155158ff2cb519da80cfd535",
      "lines": {
        "26": "",
        "27": "public class PropertyBlock",
        "166": "    {",
        "167": "        StringBuilder result = new StringBuilder(\"PropertyBlock[\");"
      },
      "id": 67765146,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 212,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616557/",
      "md5hash": "b582b6b127d4aee41a0a375fc29cc4b7",
      "lines": {
        "26": "",
        "27": "public class PropertyBlock",
        "166": "    {",
        "167": "        StringBuffer result = new StringBuffer(\"PropertyBlock[\");"
      },
      "id": 5616557,
      "filename": "PropertyBlock.java"
    },
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 136,
      "location": "/plugins/properties/src/com/intellij/lang/properties/formatting",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/116143183/",
      "md5hash": "f049a8399c86ae55049a226cfbdfc70e",
      "lines": {
        "128": "           PropertiesTokenTypes.KEY_VALUE_SEPARATOR.equals(((PropertyBlock)block).getNode().getElementType());",
        "129": "  }",
        "66": "                     PropertiesTokenTypes.BAD_CHARACTER.equals(propertyNode.getElementType())) {",
        "67": "              result.add(new PropertyBlock(propertyNode, null));",
        "72": "        else if (PropertiesTokenTypes.BAD_CHARACTER.equals(child.getElementType())) {",
        "73": "          result.add(new PropertyBlock(child, null));",
        "76": "      if (PropertiesTokenTypes.END_OF_LINE_COMMENT.equals(child.getElementType())) {",
        "77": "        result.add(new PropertyBlock(child, null));",
        "83": "",
        "84": "  private void collectPropertyBlock(ASTNode propertyNode, List<Block> collector) {",
        "89": "      if (node instanceof PropertyKeyImpl) {",
        "90": "        collector.add(new PropertyBlock(node, null));",
        "127": "    return block instanceof PropertyBlock &&",
        "62": "            if (propertyNode.getElementType() instanceof PropertyStubElementType) {",
        "63": "              collectPropertyBlock(propertyNode, result);"
      },
      "id": 116143183,
      "filename": "PropertiesRootBlock.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 737,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67764588/",
      "md5hash": "a533cac375cc14ec71888f1a6b96f28e",
      "lines": {
        "597": "    public Object getStringFor( PropertyBlock propertyBlock )",
        "585": "",
        "431": "            PropertyBlock newBlock = getPropertyBlock( buffer );",
        "462": "     */",
        "463": "    private PropertyBlock getPropertyBlock( Buffer buffer )",
        "433": "            {",
        "434": "                record.addPropertyBlock( newBlock );",
        "596": "",
        "526": "",
        "598": "    {",
        "430": "        {",
        "527": "    public void encodeValue( PropertyBlock block, int keyId, Object value )",
        "586": "    private void setSingleBlockValue( PropertyBlock block, int keyId, PropertyType type, long longValue )",
        "318": "     */",
        "319": "    public void makeHeavy( PropertyBlock record )"
      },
      "id": 67764588,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 407,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67764797/",
      "md5hash": "a9511a8f48a8fa5f77cfa795c405efdd",
      "lines": {
        "165": "        public PropertyData newPropertyData( PropertyBlock block,",
        "132": "        @Override",
        "164": "        @Override",
        "68": "        @Override",
        "69": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "40": "        @Override",
        "41": "        public PropertyData newPropertyData( PropertyBlock block,",
        "51": "        @Override",
        "52": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "154": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "153": "        @Override",
        "57": "        @Override",
        "58": "        public PropertyData newPropertyData( PropertyBlock block,",
        "29": "        @Override",
        "30": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "133": "        public PropertyData newPropertyData( PropertyBlock block,"
      },
      "id": 67764797,
      "filename": "PropertyType.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 378,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616559/",
      "md5hash": "d979261733073adb60532094ef2049ac",
      "lines": {
        "165": "        public PropertyData newPropertyData( PropertyBlock block,",
        "132": "        @Override",
        "164": "        @Override",
        "68": "        @Override",
        "69": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "40": "        @Override",
        "41": "        public PropertyData newPropertyData( PropertyBlock block,",
        "51": "        @Override",
        "52": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "154": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "153": "        @Override",
        "57": "        @Override",
        "58": "        public PropertyData newPropertyData( PropertyBlock block,",
        "29": "        @Override",
        "30": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "133": "        public PropertyData newPropertyData( PropertyBlock block,"
      },
      "id": 5616559,
      "filename": "PropertyType.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 764,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616537/",
      "md5hash": "ceef2e81ed4bfc31bb2d78a040b39bc0",
      "lines": {
        "641": "",
        "642": "    public Object getStringFor( PropertyBlock propertyBlock )",
        "291": "            int longsAppended = 0; // For marking the end of blocks",
        "516": "        }",
        "517": "        PropertyBlock toReturn = new PropertyBlock();",
        "646": "",
        "647": "    public static Object getStringFor( AbstractDynamicStore store, PropertyBlock propertyBlock )",
        "648": "    {",
        "649": "        return getStringFor( store, propertyBlock.getSingleValueLong(), propertyBlock.getValueRecords() );",
        "529": "",
        "530": "    public Object getValue( PropertyBlock propertyBlock )",
        "531": "    {",
        "532": "        return propertyBlock.getType().getValue( propertyBlock, this );",
        "292": "            for ( PropertyBlock block : record.getPropertyBlocks() )",
        "643": "    {",
        "644": "        return getStringFor( stringPropertyStore, propertyBlock );"
      },
      "id": 5616537,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 703,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291374/",
      "md5hash": "0945a61035a80961e0bb7adf4630f1c7",
      "lines": {
        "512": "",
        "513": "    public static void encodeValue( PropertyBlock block, int keyId, Object value,",
        "450": "        }",
        "451": "        PropertyBlock toReturn = new PropertyBlock();",
        "300": "",
        "301": "    public void ensureHeavy( PropertyBlock block )",
        "413": "            {",
        "464": "    public Object getValue( PropertyBlock propertyBlock )",
        "465": "    {",
        "463": "",
        "442": "     */",
        "443": "    private PropertyBlock getPropertyBlock( PageCursor cursor )",
        "411": "            PropertyBlock newBlock = getPropertyBlock( cursor );",
        "410": "        {",
        "414": "                record.addPropertyBlock( newBlock );"
      },
      "id": 94291374,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 415,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71597416/",
      "md5hash": "53bd4e3ebda106a9093f093d9e17d2cb",
      "lines": {
        "75": "        @Override",
        "36": "        @Override",
        "37": "        public DefinedProperty readProperty( int propertyKeyId, PropertyBlock block, PropertyStore store )",
        "70": "        public DefinedProperty readProperty( int propertyKeyId, PropertyBlock block, PropertyStore store )",
        "42": "        @Override",
        "43": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "76": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "152": "        @Override",
        "146": "        @Override",
        "147": "        public DefinedProperty readProperty( int propertyKeyId, PropertyBlock block, PropertyStore store )",
        "55": "        @Override",
        "56": "        public DefinedProperty readProperty( int propertyKeyId, PropertyBlock block, PropertyStore store )",
        "153": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "61": "        @Override",
        "62": "        public Object getValue( PropertyBlock block, PropertyStore store )",
        "69": "        @Override"
      },
      "id": 71597416,
      "filename": "PropertyType.java"
    },
    {
      "repo": "https://github.com/ruderphilipp/community.git",
      "language": "Java",
      "linescount": 717,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/75402992/",
      "md5hash": "153e4b6fe984674193591a0cd56ccb4c",
      "lines": {
        "419": "        {",
        "420": "            PropertyBlock newBlock = getPropertyBlock( buffer );",
        "422": "            {",
        "423": "                record.addPropertyBlock( newBlock );",
        "588": "        return getStringFor( stringPropertyStore, propertyBlock );",
        "587": "    {",
        "452": "    private PropertyBlock getPropertyBlock( Buffer buffer )",
        "516": "    public void encodeValue( PropertyBlock block, int keyId, Object value )",
        "515": "",
        "451": "     */",
        "313": "     */",
        "314": "    public void makeHeavy( PropertyBlock record )",
        "475": "    {",
        "476": "        return propertyBlock.getType().getValue( propertyBlock, this );",
        "574": "",
        "575": "    private void setSingleBlockValue( PropertyBlock block, int keyId, PropertyType type, long longValue )"
      },
      "id": 75402992,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/apcj/neo4j.git",
      "language": "Java",
      "linescount": 724,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/71597221/",
      "md5hash": "09ba77af5d3cf0b5ca49399b7a38747c",
      "lines": {
        "448": "    public Object getValue( PropertyBlock propertyBlock )",
        "449": "    {",
        "395": "            PropertyBlock newBlock = getPropertyBlock( buffer );",
        "293": "",
        "294": "    public void ensureHeavy( PropertyBlock block )",
        "519": "    public void encodeValue( PropertyBlock block, int keyId, Object value )",
        "394": "        {",
        "427": "    private PropertyBlock getPropertyBlock( Buffer buffer )",
        "397": "            {",
        "398": "                record.addPropertyBlock( newBlock );",
        "434": "        }",
        "435": "        PropertyBlock toReturn = new PropertyBlock();",
        "518": "",
        "426": "     */",
        "447": ""
      },
      "id": 71597221,
      "filename": "PropertyStore.java"
    },
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 296,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291465/",
      "md5hash": "7496fd15a9c9105fea651926635315ec",
      "lines": {
        "128": "    private <P extends PrimitiveRecord> void addPropertyBlockToPrimitive(",
        "129": "            PropertyBlock block, RecordProxy<Long, P, Void> primitiveRecordChange,",
        "130": "            RecordAccess<Long, PropertyRecord, PrimitiveRecord> propertyRecords )",
        "196": "        {",
        "197": "            PropertyBlock block = properties.next();",
        "70": "        }",
        "71": "        PropertyBlock block = propertyRecord.getPropertyBlock( propertyKey );",
        "175": "            primitiveRecordChange.forChangingLinkage().setNextProp( host.getId() );",
        "176": "            host.addPropertyBlock( block );",
        "182": "",
        "183": "    public long createPropertyChain( PrimitiveRecord owner, Iterator<PropertyBlock> properties,",
        "27": "import org.neo4j.kernel.impl.nioneo.store.PrimitiveRecord;",
        "28": "import org.neo4j.kernel.impl.nioneo.store.PropertyBlock;",
        "157": "                host = propRecord;",
        "158": "                host.addPropertyBlock( block );",
        "127": ""
      },
      "id": 94291465,
      "filename": "PropertyCreator.java"
    },
    {
      "repo": "https://github.com/dmontag/neo4j-community.git",
      "language": "Java",
      "linescount": 988,
      "location": "/kernel/src/main/java/org/neo4j/unsafe/batchinsert",
      "name": "neo4j-community",
      "url": "https://searchcode.com/codesearch/view/67770015/",
      "md5hash": "a94a3c6d34893b79738325a6d633c7d3",
      "lines": {
        "321": "            /*",
        "322": "             * current.getPropertyBlock() is cheap but not free. If we already",
        "324": "             */",
        "325": "            if ( thatHas == null && current.getPropertyBlock( index ) != null )",
        "327": "                thatHas = current;",
        "328": "                PropertyBlock removed = thatHas.removePropertyBlock( index );",
        "394": "            current = getPropertyStore().getRecord( nextProp );",
        "395": "            if ( current.getPropertyBlock( propertyIndex ) != null )",
        "303": "        }",
        "304": "        PropertyBlock block = new PropertyBlock();",
        "823": "            PropertyRecord propRecord = propStore.getRecord( nextProp );",
        "824": "            for ( PropertyBlock propBlock : propRecord.getPropertyBlocks() )",
        "57": "import org.neo4j.kernel.impl.nioneo.store.PrimitiveRecord;",
        "58": "import org.neo4j.kernel.impl.nioneo.store.PropertyBlock;",
        "797": "             */",
        "798": "            for ( PropertyBlock propBlock : propRecord.getPropertyBlocks() )"
      },
      "id": 67770015,
      "filename": "BatchInserterImpl.java"
    },
    {
      "repo": "https://github.com/wadael/neo4j.git",
      "language": "Java",
      "linescount": 347,
      "location": "/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa",
      "name": "neo4j",
      "url": "https://searchcode.com/codesearch/view/94291508/",
      "md5hash": "af03b59093b7eb00540c2ac4506261fa",
      "lines": {
        "272": "    private class PropertyBlockIterator extends PrefetchingIterator<PropertyBlock>",
        "197": "        {",
        "198": "            PropertyBlock propertyBlock = propertyRecord.getPropertyBlock( propertyKeyId );",
        "199": "            if ( propertyBlock != null )",
        "200": "            {",
        "201": "                return propertyBlock.newPropertyData( propertyStore );",
        "173": "        {",
        "174": "            for ( PropertyBlock property : propertyRecord.getPropertyBlocks() )",
        "271": "",
        "48": "import org.neo4j.kernel.impl.nioneo.store.NodeStore;",
        "49": "import org.neo4j.kernel.impl.nioneo.store.PropertyBlock;",
        "274": "        private final Iterator<PropertyRecord> records;",
        "275": "        private Iterator<PropertyBlock> blocks = IteratorUtil.emptyIterator();",
        "276": "",
        "277": "        PropertyBlockIterator( NodeRecord node )"
      },
      "id": 94291508,
      "filename": "NeoStoreIndexStoreView.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 1908,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616502/",
      "md5hash": "4ee1192270b3f352b1c23e4028989428",
      "lines": {
        "1217": "        {",
        "1218": "            propertyRecord.removePropertyBlock( propertyData.getIndex() );",
        "1283": "        getPropertyStore().encodeValue( block, index.getKeyId(), value );",
        "1284": "        PropertyRecord host = addPropertyBlockToPrimitive( block, nodeRecord, RecordAdded.NODE );",
        "737": "            }",
        "1064": "",
        "1065": "        PropertyBlock block = propRecord.removePropertyBlock( propertyData.getIndex() );",
        "1194": "        }",
        "1195": "        PropertyBlock block = propertyRecord.getPropertyBlock( propertyData.getIndex() );",
        "1228": "             */",
        "738": "            for ( PropertyBlock block : propRecord.getPropertyBlocks() )",
        "1229": "            propertyRecord = addPropertyBlockToPrimitive( block, primitive, adder );",
        "49": "import org.neo4j.kernel.impl.nioneo.store.PrimitiveRecord;",
        "50": "import org.neo4j.kernel.impl.nioneo.store.PropertyBlock;",
        "1289": "    private PropertyRecord addPropertyBlockToPrimitive( PropertyBlock block,",
        "1288": ""
      },
      "id": 5616502,
      "filename": "WriteTransaction.java"
    },
    {
      "repo": "git://github.com/neo4j/community.git",
      "language": "Java",
      "linescount": 455,
      "location": "/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa",
      "name": "community",
      "url": "https://searchcode.com/codesearch/view/5616503/",
      "md5hash": "5f4e7fe24185e3806821d11d306cb4f7",
      "lines": {
        "257": "                property.getId() );",
        "258": "        PropertyBlock propertyBlock = propertyRecord.getPropertyBlock( property.getIndex() );",
        "259": "        if ( propertyBlock.isLight() )",
        "260": "        {",
        "37": "import org.neo4j.kernel.impl.nioneo.store.NodeStore;",
        "38": "import org.neo4j.kernel.impl.nioneo.store.PropertyBlock;",
        "263": "        return propertyBlock.getType().getValue( propertyBlock,",
        "201": "        {",
        "202": "            for ( PropertyBlock propBlock : propRecord.getPropertyBlocks() )",
        "262": "        }",
        "247": "    // Duplicated code",
        "248": "    public Object propertyGetValueOrNull( PropertyBlock propertyBlock )",
        "249": "    {",
        "250": "        return propertyBlock.getType().getValue( propertyBlock, null );",
        "261": "            getPropertyStore().makeHeavy( propertyBlock );"
      },
      "id": 5616503,
      "filename": "ReadTransaction.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 77,
      "source": "Github",
      "id": 2
    }
  ]
}