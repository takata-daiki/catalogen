{
  "matchterm": "ListData",
  "previouspage": null,
  "searchterm": "ListData",
  "query": "ListData",
  "language_filters": [
    {
      "count": 680,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 680,
  "results": [
    {
      "repo": "http://subetha.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 132,
      "location": "/src/org/subethamail/core/lists/i",
      "name": "subetha",
      "url": "https://searchcode.com/codesearch/view/12418447/",
      "md5hash": "e636548bd88a661eb08cb9684764d1eb",
      "lines": {
        "1": "/*",
        "2": " * $Id: ListData.java 979 2008-10-08 01:14:25Z jon $",
        "3": " * $URL: http://subetha.tigris.org/svn/subetha/branches/resin/core/src/org/subethamail/core/lists/i/ListData.java $",
        "4": " */",
        "14": " */",
        "15": "public class ListData implements Serializable, Comparable<ListData>",
        "35": "\t */",
        "117": "\t/** */",
        "118": "\tpublic int compareTo(ListData other)",
        "36": "\tpublic ListData(Long id,",
        "28": "",
        "29": "\tprotected ListData()"
      },
      "id": 12418447,
      "filename": "ListData.java"
    },
    {
      "repo": "https://gitlab.com/mrtoniliu/QingtingCheat.git",
      "language": "Java",
      "linescount": 26,
      "location": "/QingTingFanBianYi/src/fm/qingting/framework/data",
      "name": "QingtingCheat",
      "url": "https://searchcode.com/codesearch/view/114920010/",
      "md5hash": "f9624b5a30507c9e5e465fc78f0c968d",
      "lines": {
        "4": "",
        "5": "public class ListData",
        "23": "/* Location:           C:\\Users\\User\\dex2jar-2.0\\dex\\qting\\classes-dex2jar.jar",
        "24": " * Qualified Name:     fm.qingting.framework.data.ListData",
        "10": "",
        "11": "  public ListData(List paramList, Navigation paramNavigation)"
      },
      "id": 114920010,
      "filename": "ListData.java"
    },
    {
      "repo": "http://kanbe.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 39,
      "location": "/kanbe/java/src/bz/ziro/kanbe/bean",
      "name": "kanbe",
      "url": "https://searchcode.com/codesearch/view/8219947/",
      "md5hash": "4a354f7264021ed7ac89acc0e053c8b4",
      "lines": {
        "32": "        \t//??????",
        "33": "        \trtnList.add(listData);",
        "6": "",
        "7": "import bz.ziro.kanbe.dao.SiteListDataDao;",
        "8": "import bz.ziro.kanbe.logic.ListLogic;",
        "9": "import bz.ziro.kanbe.model.SiteListData;",
        "15": " */",
        "16": "public class ListData {",
        "26": "        //??????",
        "27": "        List<SiteListData> dataList = SiteListDataDao.findLastPageList(Long.valueOf(aKey),aNum);",
        "28": "        //?????????",
        "29": "        for ( SiteListData data : dataList ) { ",
        "30": "        \t//XML???",
        "31": "        \tMap<String,String> listData = ListLogic.createXMLMap(data.getData());"
      },
      "id": 8219947,
      "filename": "ListData.java"
    },
    {
      "repo": "https://github.com/sky24987/networklog.git",
      "language": "Java",
      "linescount": 1079,
      "location": "/src/com/googlecode/networklog",
      "name": "networklog",
      "url": "https://searchcode.com/codesearch/view/75741066/",
      "md5hash": "f946fb45d932e4ad735d28c857e601b5",
      "lines": {
        "150": "      adapter = new CustomAdapter(getActivity().getApplicationContext(), R.layout.logitem, listData);",
        "221": "          info = (AdapterContextMenuInfo) item.getMenuInfo();",
        "222": "          listItem = listData.get(info.position);",
        "145": "",
        "146": "      listData = new LinkedList<ListItem>();",
        "147": "      listDataBuffer = new LinkedList<ListItem>();",
        "148": "      listDataUnfiltered = new LinkedList<ListItem>();",
        "149": "",
        "54": "  // bound to adapter",
        "55": "  protected LinkedList<ListItem> listData;",
        "56": "  // buffers incoming log entries",
        "57": "  protected LinkedList<ListItem> listDataBuffer;",
        "58": "  // holds all entries, used for filtering",
        "92": "        synchronized(listDataUnfiltered) {",
        "93": "          listData.clear();",
        "94": "          listDataBuffer.clear();"
      },
      "id": 75741066,
      "filename": "LogFragment.java"
    },
    {
      "repo": "https://github.com/PabloKQ/networklog.git",
      "language": "Java",
      "linescount": 1029,
      "location": "/src/com/googlecode/networklog",
      "name": "networklog",
      "url": "https://searchcode.com/codesearch/view/71297492/",
      "md5hash": "56d8bb237bfe7072d8a7c63d266dec9f",
      "lines": {
        "150": "      adapter = new CustomAdapter(getActivity().getApplicationContext(), R.layout.logitem, listData);",
        "221": "          info = (AdapterContextMenuInfo) item.getMenuInfo();",
        "222": "          listItem = listData.get(info.position);",
        "145": "",
        "146": "      listData = new LinkedList<ListItem>();",
        "147": "      listDataBuffer = new LinkedList<ListItem>();",
        "148": "      listDataUnfiltered = new LinkedList<ListItem>();",
        "149": "",
        "54": "  // bound to adapter",
        "55": "  protected LinkedList<ListItem> listData;",
        "56": "  // buffers incoming log entries",
        "57": "  protected LinkedList<ListItem> listDataBuffer;",
        "58": "  // holds all entries, used for filtering",
        "92": "        synchronized(listDataUnfiltered) {",
        "93": "          listData.clear();",
        "94": "          listDataBuffer.clear();"
      },
      "id": 71297492,
      "filename": "LogFragment.java"
    },
    {
      "repo": "https://bitbucket.org/jakobk/machine-learning-exercise3.git",
      "language": "Java",
      "linescount": 615,
      "location": "/weka/src/main/java/weka/gui",
      "name": "machine-learning-exercise3",
      "url": "https://searchcode.com/codesearch/view/48501168/",
      "md5hash": "8c9caff82f9ddd722c90576401ca96ed",
      "lines": {
        "163": "     */",
        "164": "    public CheckBoxListModel(Vector listData) {",
        "165": "      for (int i = 0; i < listData.size(); i++)",
        "166": "        addElement(listData.get(i));",
        "167": "    }",
        "554": "   * ",
        "555": "   * @param listData\tthe data to use",
        "556": "   */",
        "152": "     * ",
        "153": "     * @param listData\tthe data to use",
        "154": "     */",
        "155": "    public CheckBoxListModel(Object[] listData) {",
        "156": "      for (int i = 0; i < listData.length; i++)",
        "157": "        addElement(listData[i]);",
        "158": "    }"
      },
      "id": 48501168,
      "filename": "CheckBoxList.java"
    },
    {
      "repo": "https://github.com/tienfeek/GraphView.git",
      "language": "Java",
      "linescount": 671,
      "location": "/src/com/jjoe64/graphview",
      "name": "GraphView",
      "url": "https://searchcode.com/codesearch/view/73225053/",
      "md5hash": "f49718fda8b23760cfb58598016c4feb",
      "lines": {
        "294": "\t\t\t// viewport",
        "295": "\t\t\tList<GraphViewData> listData = new ArrayList<GraphViewData>();",
        "298": "\t\t\t\t\tif (values[i].valueX > viewportStart+viewportSize) {",
        "299": "\t\t\t\t\t\tlistData.add(values[i]); // one more for nice scrolling",
        "301": "\t\t\t\t\t} else {",
        "302": "\t\t\t\t\t\tlistData.add(values[i]);",
        "304": "\t\t\t\t} else {",
        "305": "\t\t\t\t\tif (listData.isEmpty()) {",
        "306": "\t\t\t\t\t\tlistData.add(values[i]);",
        "307": "\t\t\t\t\t}",
        "308": "\t\t\t\t\tlistData.set(0, values[i]); // one before, for nice scrolling",
        "310": "\t\t\t}",
        "311": "\t\t\treturn listData.toArray(new GraphViewData[listData.size()]);"
      },
      "id": 73225053,
      "filename": "GraphView.java"
    },
    {
      "repo": "https://github.com/djokovicg/Binaural-Beats.git",
      "language": "Java",
      "linescount": 682,
      "location": "/src/com/jjoe64/graphview",
      "name": "Binaural-Beats",
      "url": "https://searchcode.com/codesearch/view/75659750/",
      "md5hash": "64b77905ff8df6d4828d7d3a15558fd3",
      "lines": {
        "324": "\t\t\t// viewport",
        "325": "\t\t\tList<GraphViewData> listData = new ArrayList<GraphViewData>();",
        "328": "\t\t\t\t\tif (values[i].valueX > viewportStart+viewportSize) {",
        "329": "\t\t\t\t\t\tlistData.add(values[i]); // one more for nice scrolling",
        "331": "\t\t\t\t\t} else {",
        "332": "\t\t\t\t\t\tlistData.add(values[i]);",
        "334": "\t\t\t\t} else {",
        "335": "\t\t\t\t\tif (listData.isEmpty()) {",
        "336": "\t\t\t\t\t\tlistData.add(values[i]);",
        "337": "\t\t\t\t\t}",
        "338": "\t\t\t\t\tlistData.set(0, values[i]); // one before, for nice scrolling",
        "340": "\t\t\t}",
        "341": "\t\t\treturn listData.toArray(new GraphViewData[listData.size()]);"
      },
      "id": 75659750,
      "filename": "GraphView.java"
    },
    {
      "repo": "https://bitbucket.org/fredgrott/gwsamulet.git",
      "language": "Java",
      "linescount": 644,
      "location": "/src/com/jjoe64/graphview",
      "name": "gwsamulet",
      "url": "https://searchcode.com/codesearch/view/39719214/",
      "md5hash": "8310bbaa571fac8a0d1a08d4c3ee76ae",
      "lines": {
        "288": "\t\t\t\t\t\tlistData.add(values[i]); // one more for nice scrolling",
        "290": "\t\t\t\t\t} else {",
        "291": "\t\t\t\t\t\tlistData.add(values[i]);",
        "293": "\t\t\t\t} else {",
        "294": "\t\t\t\t\tif (listData.isEmpty()) {",
        "295": "\t\t\t\t\t\tlistData.add(values[i]);",
        "296": "\t\t\t\t\t}",
        "297": "\t\t\t\t\tlistData.set(0, values[i]); // one before, for nice scrolling",
        "299": "\t\t\t}",
        "300": "\t\t\treturn listData.toArray(new GraphViewData[listData.size()]);",
        "283": "\t\t\t// viewport",
        "284": "\t\t\tList<GraphViewData> listData = new ArrayList<GraphViewData>();",
        "287": "\t\t\t\t\tif (values[i].valueX > viewportStart+viewportSize) {"
      },
      "id": 39719214,
      "filename": "GraphView.java"
    },
    {
      "repo": "https://bitbucket.org/fredgrott/gwsdroidfeel.git",
      "language": "Java",
      "linescount": 644,
      "location": "/src/com/jjoe64/graphview",
      "name": "gwsdroidfeel",
      "url": "https://searchcode.com/codesearch/view/40028052/",
      "md5hash": "8310bbaa571fac8a0d1a08d4c3ee76ae",
      "lines": {
        "288": "\t\t\t\t\t\tlistData.add(values[i]); // one more for nice scrolling",
        "290": "\t\t\t\t\t} else {",
        "291": "\t\t\t\t\t\tlistData.add(values[i]);",
        "293": "\t\t\t\t} else {",
        "294": "\t\t\t\t\tif (listData.isEmpty()) {",
        "295": "\t\t\t\t\t\tlistData.add(values[i]);",
        "296": "\t\t\t\t\t}",
        "297": "\t\t\t\t\tlistData.set(0, values[i]); // one before, for nice scrolling",
        "299": "\t\t\t}",
        "300": "\t\t\treturn listData.toArray(new GraphViewData[listData.size()]);",
        "283": "\t\t\t// viewport",
        "284": "\t\t\tList<GraphViewData> listData = new ArrayList<GraphViewData>();",
        "287": "\t\t\t\t\tif (values[i].valueX > viewportStart+viewportSize) {"
      },
      "id": 40028052,
      "filename": "GraphView.java"
    },
    {
      "repo": "https://bitbucket.org/hoovercj/graphview.git",
      "language": "Java",
      "linescount": 712,
      "location": "/src/com/jjoe64/graphview",
      "name": "graphview",
      "url": "https://searchcode.com/codesearch/view/47040444/",
      "md5hash": "9f0bd5f26da692b5869599e3a6b56e0f",
      "lines": {
        "327": "\t\t\t// viewport",
        "328": "\t\t\tList<GraphViewData> listData = new ArrayList<GraphViewData>();",
        "331": "\t\t\t\t\tif (values[i].valueX > viewportStart+viewportSize) {",
        "332": "\t\t\t\t\t\tlistData.add(values[i]); // one more for nice scrolling",
        "334": "\t\t\t\t\t} else {",
        "335": "\t\t\t\t\t\tlistData.add(values[i]);",
        "337": "\t\t\t\t} else {",
        "338": "\t\t\t\t\tif (listData.isEmpty()) {",
        "339": "\t\t\t\t\t\tlistData.add(values[i]);",
        "340": "\t\t\t\t\t}",
        "341": "\t\t\t\t\tlistData.set(0, values[i]); // one before, for nice scrolling",
        "343": "\t\t\t}",
        "344": "\t\t\treturn listData.toArray(new GraphViewData[listData.size()]);"
      },
      "id": 47040444,
      "filename": "GraphView.java"
    },
    {
      "repo": "https://github.com/Kalisen/classpath-doctor.git",
      "language": "Java",
      "linescount": 350,
      "location": "/src/main/java/org/kalisen/classpathdoctor/gui",
      "name": "classpath-doctor",
      "url": "https://searchcode.com/codesearch/view/103923237/",
      "md5hash": "65712b60b0cd4a18431cbb96f342af70",
      "lines": {
        "128": "\t\t\tpublic int getSize() {",
        "129": "\t\t\t\treturn listData.size();",
        "162": "\tpublic void setListData(Object[] listData) {",
        "163": "\t\tif (listData instanceof PathEntry[]) {",
        "132": "\t\t\tpublic PathEntry getElementAt(int i) {",
        "133": "\t\t\t\treturn listData.elementAt(i);",
        "161": "\t@Override",
        "168": "\t\t\t\t\t+ (listData == null ? null : listData.getClass().getName()));",
        "167": "\t\t\t\t\t+ PathEntry[].class.getName() + \" but was \"",
        "172": "\tpublic void setListData(final PathEntry[] listData) {",
        "174": "\t\t\tpublic int getSize() {",
        "175": "\t\t\t\treturn listData.length;",
        "171": "",
        "164": "\t\t\tsuper.setListData(listData);",
        "165": "\t\t} else {"
      },
      "id": 103923237,
      "filename": "ClassPathList.java"
    },
    {
      "repo": "https://bitbucket.org/thelearninglabs/uclinux-distro-tll-public.git",
      "language": "Java",
      "linescount": 2498,
      "location": "/lib/classpath/javax/swing",
      "name": "uclinux-distro-tll-public",
      "url": "https://searchcode.com/codesearch/view/37721904/",
      "md5hash": "0ec8047f677d04437f267c7a0c01bb2a",
      "lines": {
        "64": "import javax.swing.event.ListDataListener;",
        "65": "import javax.swing.event.ListSelectionEvent;",
        "770": "          ListModel oldModel = (ListModel) e.getOldValue();",
        "771": "          oldModel.removeListDataListener(this);",
        "772": "          ListModel newModel = (ListModel) e.getNewValue();",
        "773": "          newModel.addListDataListener(this);",
        "129": "               ListSelectionListener, ListDataListener",
        "128": "    implements AccessibleSelection, PropertyChangeListener,",
        "1083": "    if (model != null)",
        "723": "     */",
        "724": "    public void contentsChanged(ListDataEvent event)",
        "737": "    public void intervalAdded(ListDataEvent event)",
        "1084": "      model.addListDataListener(listListener);",
        "736": "     */",
        "62": "import javax.accessibility.AccessibleStateSet;",
        "63": "import javax.swing.event.ListDataEvent;"
      },
      "id": 37721904,
      "filename": "JList.java"
    },
    {
      "repo": "https://bitbucket.org/tari/prizm-gcc.git",
      "language": "Java",
      "linescount": 2500,
      "location": "/libjava/classpath/javax/swing",
      "name": "prizm-gcc",
      "url": "https://searchcode.com/codesearch/view/37946085/",
      "md5hash": "60ec9e43fbfdc9e3d9b91387047c0999",
      "lines": {
        "64": "import javax.accessibility.AccessibleStateSet;",
        "65": "import javax.swing.event.ListDataEvent;",
        "66": "import javax.swing.event.ListDataListener;",
        "67": "import javax.swing.event.ListSelectionEvent;",
        "772": "          ListModel oldModel = (ListModel) e.getOldValue();",
        "773": "          oldModel.removeListDataListener(this);",
        "130": "    implements AccessibleSelection, PropertyChangeListener,",
        "775": "          newModel.addListDataListener(this);",
        "738": "     */",
        "774": "          ListModel newModel = (ListModel) e.getNewValue();",
        "131": "               ListSelectionListener, ListDataListener",
        "725": "     */",
        "726": "    public void contentsChanged(ListDataEvent event)",
        "739": "    public void intervalAdded(ListDataEvent event)",
        "1085": "    if (model != null)",
        "1086": "      model.addListDataListener(listListener);"
      },
      "id": 37946085,
      "filename": "JList.java"
    },
    {
      "repo": "https://bitbucket.org/bluezoo/gcc.git",
      "language": "Java",
      "linescount": 2500,
      "location": "/libjava/classpath/javax/swing",
      "name": "gcc",
      "url": "https://searchcode.com/codesearch/view/46811720/",
      "md5hash": "60ec9e43fbfdc9e3d9b91387047c0999",
      "lines": {
        "64": "import javax.accessibility.AccessibleStateSet;",
        "65": "import javax.swing.event.ListDataEvent;",
        "66": "import javax.swing.event.ListDataListener;",
        "67": "import javax.swing.event.ListSelectionEvent;",
        "772": "          ListModel oldModel = (ListModel) e.getOldValue();",
        "773": "          oldModel.removeListDataListener(this);",
        "130": "    implements AccessibleSelection, PropertyChangeListener,",
        "775": "          newModel.addListDataListener(this);",
        "738": "     */",
        "774": "          ListModel newModel = (ListModel) e.getNewValue();",
        "131": "               ListSelectionListener, ListDataListener",
        "725": "     */",
        "726": "    public void contentsChanged(ListDataEvent event)",
        "739": "    public void intervalAdded(ListDataEvent event)",
        "1085": "    if (model != null)",
        "1086": "      model.addListDataListener(listListener);"
      },
      "id": 46811720,
      "filename": "JList.java"
    },
    {
      "repo": "https://github.com/semantalytics/RightField.git",
      "language": "Java",
      "linescount": 181,
      "location": "/src/main/java/uk/ac/manchester/cs/owl/semspreadsheets/ui",
      "name": "RightField",
      "url": "https://searchcode.com/codesearch/view/72855086/",
      "md5hash": "60cbc8a4dd26ff3705236ed7701438d3",
      "lines": {
        "131": "        Collection<OntologyTermValidation> validations = workbookManager.getOntologyManager().getContainingOntologyTermValidations(range);",
        "132": "        TreeSet<ValueListItem> listData = new TreeSet<ValueListItem>();",
        "134": "            for(Term term : validation.getValidationDescriptor().getTerms()) {",
        "135": "                listData.add(new ValueListItem(term.getFormattedName(), validation.getValidationDescriptor().getType()));",
        "137": "        }",
        "138": "        termList.setListData(listData.toArray());",
        "115": "\t\t\tList<OntologyTermValidation> previewList) {",
        "116": "    \tTreeSet<ValueListItem> listData = new TreeSet<ValueListItem>();",
        "118": "            for(Term term : validation.getValidationDescriptor().getTerms()) {",
        "119": "                listData.add(new ValueListItem(term.getFormattedName(), validation.getValidationDescriptor().getType()));",
        "121": "        }",
        "122": "        termList.setListData(listData.toArray());\t\t",
        "125": "\tprivate void updateFromModel(Range range) {\t\t",
        "126": "        termList.setListData(new Object [0]);"
      },
      "id": 72855086,
      "filename": "ValidationValuesPanel.java"
    },
    {
      "repo": "https://github.com/nickboldt/jbosstools-webservices.git",
      "language": "Java",
      "linescount": 584,
      "location": "/plugins/org.jboss.tools.ws.ui/src/org/jboss/tools/ws/ui/preferences",
      "name": "jbosstools-webservices",
      "url": "https://searchcode.com/codesearch/view/74435288/",
      "md5hash": "c6d7e866b405fbaeabaca7267fb4b431",
      "lines": {
        "149": "",
        "150": "\t\tFormData listData = new FormData();",
        "151": "\t\tlistData.left = new FormAttachment(0, 5);",
        "152": "\t\tlistData.right = new FormAttachment(actionPanel, -5);",
        "153": "\t\tlistData.top = new FormAttachment(0, 5);",
        "154": "\t\tlistData.bottom = new FormAttachment(100, -5);",
        "155": "\t\tlistView.getControl().setLayoutData(listData);",
        "156": ""
      },
      "id": 74435288,
      "filename": "JBossWSLibraryListFieldEditor.java"
    },
    {
      "repo": "https://github.com/naver/yobi.git",
      "language": "Java",
      "linescount": 443,
      "location": "/app/playRepository",
      "name": "yobi",
      "url": "https://searchcode.com/codesearch/view/75057453/",
      "md5hash": "61a2e544f24194a7b72c0ab531f1580d",
      "lines": {
        "180": "            }",
        "178": "",
        "179": "                listData.put(entry.getName(), data);",
        "116": "",
        "117": "                listData.put(entry.getName(), data);",
        "118": "            }",
        "119": "            result.put(\"data\", listData);",
        "152": "            ObjectNode result = Json.newObject();",
        "153": "            ObjectNode listData = Json.newObject();",
        "91": "            ObjectNode result = Json.newObject();",
        "92": "            ObjectNode listData = Json.newObject();",
        "181": "            result.put(\"data\", listData);"
      },
      "id": 75057453,
      "filename": "SVNRepository.java"
    },
    {
      "repo": "https://bitbucket.org/kenglover/compendiumng.git",
      "language": "Java",
      "linescount": 258,
      "location": "/src/com/compendium/ui",
      "name": "compendiumng",
      "url": "https://searchcode.com/codesearch/view/43184183/",
      "md5hash": "c57896008275b61181b97a3ee72da250",
      "lines": {
        "96": "     * @param listData, the <code>Vector</code> to be loaded into the data model.",
        "97": "     */",
        "98": "    public UINavList(final Vector listData) {",
        "99": "\t\tsuper(listData);",
        "100": "",
        "73": "     *",
        "74": "     * @param listData, the array of Objects to be loaded into the data model.",
        "75": "     */",
        "76": "    public UINavList(final Object[] listData) {",
        "77": "\t\tsuper(listData);",
        "78": "",
        "95": "     *"
      },
      "id": 43184183,
      "filename": "UINavList.java"
    },
    {
      "repo": "https://bitbucket.org/kenglover/compendiumng.git",
      "language": "Java",
      "linescount": 350,
      "location": "/src/com/compendium/ui",
      "name": "compendiumng",
      "url": "https://searchcode.com/codesearch/view/43184184/",
      "md5hash": "a967adca6ab3e485e01b45c0f0c35767",
      "lines": {
        "203": "     */",
        "204": "    public void contentsChanged(ListDataEvent e) {",
        "201": "     * Override parent method to stop it firing an ActionEvent when initiated by the keyboard.",
        "202": "\t * @param e, the associated ListDataEvent.",
        "107": "     *",
        "108": "     * @param  listData  the <code>Vector</code> to be loaded into the data model",
        "109": "     */",
        "110": "    public UINavComboBox(final Vector listData) {",
        "111": "\t\tsuper(listData);",
        "112": "",
        "83": "     *",
        "84": "     * @param listData, the array of Objects to be loaded into the data model.",
        "85": "     */",
        "86": "    public UINavComboBox(final Object[] listData) {",
        "87": "\t\tsuper(listData);"
      },
      "id": 43184184,
      "filename": "UINavComboBox.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 387,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 142,
      "source": "Github",
      "id": 2
    },
    {
      "count": 134,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 14,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 1,
      "source": "CodePlex",
      "id": 5
    }
  ]
}