{
  "matchterm": "ShapeTypes",
  "previouspage": null,
  "searchterm": "ShapeTypes",
  "query": "ShapeTypes",
  "language_filters": [
    {
      "count": 40,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 40,
  "results": [
    {
      "repo": "https://bitbucket.org/dyp/geotools.git",
      "language": "Java",
      "linescount": 1152,
      "location": "/modules/plugin/arcsde/datastore/src/main/java/org/geotools/arcsde/data",
      "name": "geotools",
      "url": "https://searchcode.com/codesearch/view/47135150/",
      "md5hash": "3749ffffe88648385548f71266ab5500",
      "lines": {
        "160": "            if (geometryClass == MultiPoint.class) {",
        "161": "                shapeTypes |= SeLayer.SE_POINT_TYPE_MASK;",
        "162": "            } else if (geometryClass == MultiLineString.class) {",
        "163": "                shapeTypes |= SeLayer.SE_LINE_TYPE_MASK;",
        "164": "            } else if (geometryClass == MultiPolygon.class) {",
        "165": "                shapeTypes |= SeLayer.SE_AREA_TYPE_MASK;",
        "170": "            if (geometryClass == Point.class) {",
        "171": "                shapeTypes |= SeLayer.SE_POINT_TYPE_MASK;",
        "172": "            } else if (geometryClass == LineString.class) {",
        "143": "",
        "144": "    public static int guessShapeTypes(GeometryDescriptor attribute) {",
        "150": "",
        "151": "        int shapeTypes = 0;",
        "153": "        if (attribute.isNillable()) {",
        "154": "            shapeTypes |= SeLayer.SE_NIL_TYPE_MASK;",
        "157": "        if (GeometryCollection.class.isAssignableFrom(geometryClass)) {",
        "158": "            shapeTypes |= SeLayer.SE_MULTIPART_TYPE_MASK;"
      },
      "id": 47135150,
      "filename": "ArcSDEAdapter.java"
    },
    {
      "repo": "https://github.com/guamoko/modelbuilder.git",
      "language": "Java",
      "linescount": 749,
      "location": "/exported/ModelBuilder v0006/modelbuilder/source/unlekker/unlekker/util",
      "name": "modelbuilder",
      "url": "https://searchcode.com/codesearch/view/100924729/",
      "md5hash": "3f05adec5ab9073440785ba25a0a7d50",
      "lines": {
        "65": "//",
        "66": "//    Object[]     set=shapeTypes.keySet().toArray();",
        "70": "//    }",
        "71": "//    set=shapeTypes.values().toArray();",
        "63": "//    ",
        "62": "//    shapeTypes.put(\"\"+LINES, \"LINES\");",
        "54": "    ",
        "55": "//    shapeTypes=new HashMap(10,5);",
        "56": "//    shapeTypes.put(\"\"+POLYGON, \"POLYGON\");",
        "57": "//    shapeTypes.put(\"\"+TRIANGLES, \"TRIANGLES\");",
        "58": "//    shapeTypes.put(\"\"+TRIANGLE_STRIP, \"TRIANGLE_STRIP\");",
        "59": "//    shapeTypes.put(\"\"+QUADS, \"QUADS\");",
        "60": "//    shapeTypes.put(\"\"+QUAD_STRIP, \"QUAD_STRIP\");",
        "61": "//    shapeTypes.put(\"\"+POINTS, \"POINTS\");",
        "30": "\t",
        "31": "//\tpublic static HashMap shapeTypes=null;"
      },
      "id": 100924729,
      "filename": "Util.java"
    },
    {
      "repo": "https://github.com/guamoko/modelbuilder.git",
      "language": "Java",
      "linescount": 1413,
      "location": "/exported/Modelbuilder v0007a01/modelbuilder/src/unlekker/util",
      "name": "modelbuilder",
      "url": "https://searchcode.com/codesearch/view/100926452/",
      "md5hash": "624846aad8439e23b33f4527fa88001a",
      "lines": {
        "64": "//    shapeTypes.put(\"\"+QUAD_STRIP, \"QUAD_STRIP\");",
        "65": "//    shapeTypes.put(\"\"+POINTS, \"POINTS\");",
        "34": "\t",
        "35": "//\tpublic static HashMap shapeTypes=null;",
        "69": "//",
        "70": "//    Object[]     set=shapeTypes.keySet().toArray();",
        "74": "//    }",
        "75": "//    set=shapeTypes.values().toArray();",
        "66": "//    shapeTypes.put(\"\"+LINES, \"LINES\");",
        "67": "//    ",
        "58": "    ",
        "59": "//    shapeTypes=new HashMap(10,5);",
        "60": "//    shapeTypes.put(\"\"+POLYGON, \"POLYGON\");",
        "61": "//    shapeTypes.put(\"\"+TRIANGLES, \"TRIANGLES\");",
        "62": "//    shapeTypes.put(\"\"+TRIANGLE_STRIP, \"TRIANGLE_STRIP\");",
        "63": "//    shapeTypes.put(\"\"+QUADS, \"QUADS\");"
      },
      "id": 100926452,
      "filename": "UUtil.java"
    },
    {
      "repo": "https://github.com/guamoko/modelbuilder.git",
      "language": "Java",
      "linescount": 1591,
      "location": "/exported/Modelbuilder-0020-151/modelbuilder/src/unlekker/util",
      "name": "modelbuilder",
      "url": "https://searchcode.com/codesearch/view/100927862/",
      "md5hash": "addeba14c29b1cc501c9497f19eddeca",
      "lines": {
        "64": "    ",
        "65": "//    shapeTypes=new HashMap(10,5);",
        "66": "//    shapeTypes.put(\"\"+POLYGON, \"POLYGON\");",
        "67": "//    shapeTypes.put(\"\"+TRIANGLES, \"TRIANGLES\");",
        "68": "//    shapeTypes.put(\"\"+TRIANGLE_STRIP, \"TRIANGLE_STRIP\");",
        "69": "//    shapeTypes.put(\"\"+QUADS, \"QUADS\");",
        "70": "//    shapeTypes.put(\"\"+QUAD_STRIP, \"QUAD_STRIP\");",
        "71": "//    shapeTypes.put(\"\"+POINTS, \"POINTS\");",
        "40": "\t",
        "41": "//\tpublic static HashMap shapeTypes=null;",
        "75": "//",
        "76": "//    Object[]     set=shapeTypes.keySet().toArray();",
        "80": "//    }",
        "72": "//    shapeTypes.put(\"\"+LINES, \"LINES\");",
        "73": "//    ",
        "81": "//    set=shapeTypes.values().toArray();"
      },
      "id": 100927862,
      "filename": "UUtil.java"
    },
    {
      "repo": "https://github.com/guamoko/modelbuilder.git",
      "language": "Java",
      "linescount": 1440,
      "location": "/exported/Modelbuilder v0007a03/modelbuilder/src/unlekker/util",
      "name": "modelbuilder",
      "url": "https://searchcode.com/codesearch/view/100929913/",
      "md5hash": "34464a5d7f57345157a3a902299fc170",
      "lines": {
        "64": "//    shapeTypes.put(\"\"+QUAD_STRIP, \"QUAD_STRIP\");",
        "65": "//    shapeTypes.put(\"\"+POINTS, \"POINTS\");",
        "34": "\t",
        "35": "//\tpublic static HashMap shapeTypes=null;",
        "69": "//",
        "70": "//    Object[]     set=shapeTypes.keySet().toArray();",
        "74": "//    }",
        "75": "//    set=shapeTypes.values().toArray();",
        "66": "//    shapeTypes.put(\"\"+LINES, \"LINES\");",
        "67": "//    ",
        "58": "    ",
        "59": "//    shapeTypes=new HashMap(10,5);",
        "60": "//    shapeTypes.put(\"\"+POLYGON, \"POLYGON\");",
        "61": "//    shapeTypes.put(\"\"+TRIANGLES, \"TRIANGLES\");",
        "62": "//    shapeTypes.put(\"\"+TRIANGLE_STRIP, \"TRIANGLE_STRIP\");",
        "63": "//    shapeTypes.put(\"\"+QUADS, \"QUADS\");"
      },
      "id": 100929913,
      "filename": "UUtil.java"
    },
    {
      "repo": "https://github.com/guamoko/modelbuilder.git",
      "language": "Java",
      "linescount": 1591,
      "location": "/src-universal/unlekker/util",
      "name": "modelbuilder",
      "url": "https://searchcode.com/codesearch/view/100931613/",
      "md5hash": "9d4116096a8f7d3287a9c7fc6823b2c5",
      "lines": {
        "64": "    ",
        "65": "//    shapeTypes=new HashMap(10,5);",
        "66": "//    shapeTypes.put(\"\"+POLYGON, \"POLYGON\");",
        "67": "//    shapeTypes.put(\"\"+TRIANGLES, \"TRIANGLES\");",
        "68": "//    shapeTypes.put(\"\"+TRIANGLE_STRIP, \"TRIANGLE_STRIP\");",
        "69": "//    shapeTypes.put(\"\"+QUADS, \"QUADS\");",
        "70": "//    shapeTypes.put(\"\"+QUAD_STRIP, \"QUAD_STRIP\");",
        "71": "//    shapeTypes.put(\"\"+POINTS, \"POINTS\");",
        "40": "\t",
        "41": "//\tpublic static HashMap shapeTypes=null;",
        "75": "//",
        "76": "//    Object[]     set=shapeTypes.keySet().toArray();",
        "80": "//    }",
        "72": "//    shapeTypes.put(\"\"+LINES, \"LINES\");",
        "73": "//    ",
        "81": "//    set=shapeTypes.values().toArray();"
      },
      "id": 100931613,
      "filename": "UUtil.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 251,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199843/",
      "md5hash": "026d2e5a409c163cebb17982b0fba880",
      "lines": {
        "96": "        PhysicsNode rArmUpperNode=new PhysicsNode(rArmUpper,CollisionShape.ShapeTypes.CAPSULE);",
        "99": "        Capsule body=new Capsule(\"capsule\",8,8,8,0.2f,2f);",
        "100": "        PhysicsNode bodyNode=new PhysicsNode(body,CollisionShape.ShapeTypes.CAPSULE);",
        "214": "        // the floor, does not move (mass=0)",
        "103": "        Capsule hips=new Capsule(\"capsule\",8,8,8,0.2f,1f);",
        "104": "        PhysicsNode hipsNode=new PhysicsNode(hips,CollisionShape.ShapeTypes.CAPSULE);",
        "215": "        PhysicsNode physicsFloor=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH);",
        "81": "        Capsule shoulders=new Capsule(\"capsule\",8,8,8,0.2f,2f);",
        "82": "        PhysicsNode shouldersNode=new PhysicsNode(shoulders,CollisionShape.ShapeTypes.CAPSULE);",
        "86": "        Capsule lArmLower=new Capsule(\"capsule\",8,8,8,0.2f,1f);",
        "87": "        PhysicsNode lArmLowerNode=new PhysicsNode(lArmLower,CollisionShape.ShapeTypes.CAPSULE);",
        "89": "        Capsule lArmUpper=new Capsule(\"capsule\",8,8,8,0.2f,1f);",
        "90": "        PhysicsNode lArmUpperNode=new PhysicsNode(lArmUpper,CollisionShape.ShapeTypes.CAPSULE);",
        "92": "        Capsule rArmLower=new Capsule(\"capsule\",8,8,8,0.2f,1f);",
        "93": "        PhysicsNode rArmLowerNode=new PhysicsNode(rArmLower,CollisionShape.ShapeTypes.CAPSULE);",
        "95": "        Capsule rArmUpper=new Capsule(\"capsule\",8,8,8,0.2f,1f);"
      },
      "id": 2199843,
      "filename": "TestSimpleRagdoll.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 885,
      "location": "/jbullet-jme/src/com/jmex/jbullet/nodes",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199812/",
      "md5hash": "a2137656b8cc513583f6da470ca13221",
      "lines": {
        "775": "        switch(type){",
        "776": "            case CollisionShape.ShapeTypes.BOX:",
        "778": "            break;",
        "779": "            case CollisionShape.ShapeTypes.SPHERE:",
        "791": "            case CollisionShape.ShapeTypes.GIMPACT:",
        "781": "            break;",
        "782": "            case CollisionShape.ShapeTypes.CAPSULE:",
        "111": "        this(child,ShapeTypes.SPHERE);",
        "784": "            break;",
        "785": "            case CollisionShape.ShapeTypes.CYLINDER:",
        "787": "            break;",
        "788": "            case CollisionShape.ShapeTypes.MESH:",
        "110": "    public PhysicsNode(Spatial child){",
        "790": "            break;",
        "55": "import com.jmex.jbullet.collision.shapes.CollisionShape;",
        "56": "import com.jmex.jbullet.collision.shapes.CollisionShape.ShapeTypes;"
      },
      "id": 2199812,
      "filename": "PhysicsNode.java"
    },
    {
      "repo": "http://research-code-base-animesh.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 107,
      "location": "/code_comm",
      "name": "research-code-base-animesh",
      "url": "https://searchcode.com/codesearch/view/13396543/",
      "md5hash": "fad12b1da9fa00a4fa39434487fa3623",
      "lines": {
        "99": "      // Read in the same order they were written:",
        "100": "      shapeTypes = (List)in.readObject();",
        "75": "  public static void main(String[] args) throws Exception {",
        "76": "    List shapeTypes, shapes;",
        "77": "    if(args.length == 0) {",
        "78": "      shapeTypes = new ArrayList();",
        "80": "      // Add references to the class objects:",
        "81": "      shapeTypes.add(Circle.class);",
        "82": "      shapeTypes.add(Square.class);",
        "83": "      shapeTypes.add(Line.class);",
        "84": "      // Make some shapes:",
        "92": "        new FileOutputStream(\"CADState.out\"));",
        "93": "      out.writeObject(shapeTypes);"
      },
      "id": 13396543,
      "filename": "CADState.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 313,
      "location": "/jbullet-jme/src/com/jmex/jbullet/nodes",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199811/",
      "md5hash": "bd3342275373e59f498bf1994258e2d2",
      "lines": {
        "107": "        switch (type) {",
        "108": "            case CollisionShape.ShapeTypes.BOX:",
        "110": "                break;",
        "111": "            case CollisionShape.ShapeTypes.SPHERE:",
        "113": "                break;",
        "114": "            case CollisionShape.ShapeTypes.CAPSULE:",
        "116": "                break;",
        "117": "            case CollisionShape.ShapeTypes.CYLINDER:",
        "119": "                break;",
        "120": "            case CollisionShape.ShapeTypes.MESH:",
        "122": "                break;",
        "123": "            case CollisionShape.ShapeTypes.GIMPACT:"
      },
      "id": 2199811,
      "filename": "PhysicsGhostNode.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 163,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199845/",
      "md5hash": "b714e075136951d803b28af9e19c6d98",
      "lines": {
        "128": "        PhysicsNode node3=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH,0);",
        "75": "        Sphere sphere=new Sphere(\"physicssphere\",16,16,1f);",
        "100": "        PhysicsNode physicsCylinder=new PhysicsNode(cylGeom, CollisionShape.ShapeTypes.CYLINDER);",
        "106": "        Capsule capGeom=new Capsule(\"physicscapsule\",16,16,16,0.5f,2f);",
        "107": "        PhysicsNode physicsCapsule=new PhysicsNode(capGeom, CollisionShape.ShapeTypes.CAPSULE);",
        "76": "        PhysicsNode physicsSphere=new PhysicsNode(sphere,CollisionShape.ShapeTypes.SPHERE);",
        "99": "        Cylinder cylGeom=new Cylinder(\"physicscyliner\",16,16,1f,3f);",
        "120": "        // an obstacle mesh, does not move (mass=0)",
        "121": "        PhysicsNode node2=new PhysicsNode(new Sphere(\"physicsobstaclemesh\",16,16,1.2f),CollisionShape.ShapeTypes.MESH,0);",
        "91": "        Box boxGeom=new Box(\"physicsbox\",Vector3f.ZERO,1f,1f,1f);",
        "92": "        PhysicsNode physicsBox=new PhysicsNode(boxGeom,CollisionShape.ShapeTypes.BOX);",
        "127": "        // the floor, does not move (mass=0)"
      },
      "id": 2199845,
      "filename": "TestSimplePhysics.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 276,
      "location": "/jbullet-jme/src/jmetest/jbullet/debug",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199850/",
      "md5hash": "945697184cada11a41a5dcd1de9a9abc",
      "lines": {
        "130": "        // an obstacle mesh, does not move (mass=0)",
        "131": "        PhysicsNode node2 = new PhysicsNode( new Box( \"physicsobstaclemesh\", Vector3f.ZERO, 2, 2, 2 ), CollisionShape.ShapeTypes.BOX, 0 );",
        "138": "        // the floor, does not move (mass=0)",
        "139": "        PhysicsNode node4 = new PhysicsNode( new Box( \"physicsfloor\", Vector3f.ZERO, 20f, 0.2f, 20f ), CollisionShape.ShapeTypes.MESH, 0 );",
        "109": "        Sphere caps = new Sphere( \"character\", 8, 8, 2f );",
        "110": "        character = new PhysicsCharacterNode( caps, CollisionShape.ShapeTypes.SPHERE, .1f );",
        "116": "        Box box = new Box( \"physicsobstaclemesh\", Vector3f.ZERO, .5f, .5f, .5f );",
        "117": "        PhysicsNode boxNode = new PhysicsNode( box, CollisionShape.ShapeTypes.BOX );",
        "123": "        // an obstacle mesh, does not move (mass=0)",
        "124": "        PhysicsNode node3 = new PhysicsNode( new Sphere( \"physicsobstaclemesh\", Vector3f.ZERO, 32, 32, 1 ), CollisionShape.ShapeTypes.CAPSULE, 0 );",
        "157": "",
        "158": "        PhysicsNode node6 = new PhysicsNode( new Box( \"physicsobstaclemesh\", Vector3f.ZERO, 5f, 10f, 1f ), CollisionShape.ShapeTypes.BOX, 0f );"
      },
      "id": 2199850,
      "filename": "TestPhysicsDebugGameState.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 188,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199847/",
      "md5hash": "9e2fbe99e5e4cf3b2bbde9986d5f188b",
      "lines": {
        "128": "        PhysicsNode holder=new PhysicsNode(sphere, CollisionShape.ShapeTypes.SPHERE,0);",
        "145": "        // an obstacle mesh, does not move (mass=0)",
        "146": "        PhysicsNode node2=new PhysicsNode(new Box(\"physicsobstaclemesh\",Vector3f.ZERO,2,2,2),CollisionShape.ShapeTypes.MESH,0);",
        "134": "        Box box=new Box(\"physicsobstaclemesh\",Vector3f.ZERO,.5f,.5f,.5f);",
        "135": "        hammer=new PhysicsNode(box, CollisionShape.ShapeTypes.BOX);",
        "152": "        // the floor, does not move (mass=0)",
        "153": "        PhysicsNode node3=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH,0);",
        "109": "                    if(shape==null){",
        "110": "                        ball=new PhysicsNode(sphere, CollisionShape.ShapeTypes.SPHERE);",
        "127": "        Sphere sphere=new Sphere(\"physicsobstaclemesh\",8,8,0.25f);"
      },
      "id": 2199847,
      "filename": "TestHingeJointMotor.java"
    },
    {
      "repo": "https://code.google.com/p/doubleko/",
      "language": "Java",
      "linescount": 107,
      "location": "/java/tij/io",
      "name": "doubleko",
      "url": "https://searchcode.com/codesearch/view/13980821/",
      "md5hash": "7c82596b965dc48dd7e5e8f6d37dbe19",
      "lines": {
        "88": "    out.writeObject(shapeTypes);",
        "87": "      new FileOutputStream(\"CADState.out\"));",
        "71": "  public static void main(String[] args) throws Exception {",
        "72": "    List<Class<? extends Shape>> shapeTypes =",
        "74": "    // Add references to the class objects:",
        "75": "    shapeTypes.add(Circle.class);",
        "76": "    shapeTypes.add(Square.class);",
        "77": "    shapeTypes.add(Line.class);",
        "78": "    List<Shape> shapes = new ArrayList<Shape>();"
      },
      "id": 13980821,
      "filename": "StoreCADState.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 185,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199846/",
      "md5hash": "7312cc19809c9d83828493d6c63396a2",
      "lines": {
        "128": "        Box box=new Box(\"physicsobstaclemesh\",Vector3f.ZERO,.5f,.5f,.5f);",
        "129": "        hammer=new PhysicsNode(box, CollisionShape.ShapeTypes.BOX);",
        "149": "        // the floor, does not move (mass=0)",
        "150": "        PhysicsNode node3=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH,0);",
        "121": "        Sphere sphere=new Sphere(\"physicsobstaclemesh\",8,8,0.25f);",
        "122": "        PhysicsNode holder=new PhysicsNode(sphere, CollisionShape.ShapeTypes.SPHERE,0);",
        "142": "        // an obstacle mesh, does not move (mass=0)",
        "143": "        PhysicsNode node2=new PhysicsNode(new Box(\"physicsobstaclemesh\",Vector3f.ZERO,2,2,2),CollisionShape.ShapeTypes.MESH,0);"
      },
      "id": 2199846,
      "filename": "Test6DofJointMotor.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 213,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199848/",
      "md5hash": "4cee50ca994ca11faf19c4b32090bc7f",
      "lines": {
        "96": "        Sphere caps=new Sphere(\"character\",8,8,2f);",
        "97": "        character=new PhysicsCharacterNode(caps, CollisionShape.ShapeTypes.SPHERE, .1f);",
        "117": "        // the floor, does not move (mass=0)",
        "118": "        PhysicsNode node3=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH,0);",
        "103": "        Box box=new Box(\"physicsobstaclemesh\",Vector3f.ZERO,.5f,.5f,.5f);",
        "104": "        PhysicsNode boxNode=new PhysicsNode(box, CollisionShape.ShapeTypes.BOX);",
        "110": "        // an obstacle mesh, does not move (mass=0)",
        "111": "        PhysicsNode node2=new PhysicsNode(new Box(\"physicsobstaclemesh\",Vector3f.ZERO,2,2,2),CollisionShape.ShapeTypes.BOX,0);"
      },
      "id": 2199848,
      "filename": "TestPhysicsCharacter.java"
    },
    {
      "repo": "git://github.com/metsci/glimpse.git",
      "language": "Java",
      "linescount": 263,
      "location": "/extras-charts/src/main/java/com/metsci/glimpse/charts/vector/display",
      "name": "glimpse",
      "url": "https://searchcode.com/codesearch/view/16557575/",
      "md5hash": "21d74254376a14753d7d7ce7207de068",
      "lines": {
        "64": "    private int trackIdFactor = -1;// Integer.MAX_VALUE / ( encObjectTypes.length * shapeTypes.length );",
        "93": "            trackIdFactor = Integer.MAX_VALUE / ( object.getGeoFeatureType( ).getNumFeatures() * shapeTypes.length );",
        "56": "{",
        "57": "    private static final GeoShapeType[] shapeTypes = GeoShapeType.values( );",
        "92": "        if (trackIdFactor < 0)",
        "77": "    {",
        "78": "        return objectType.ordinal( ) + ( shapeType.ordinal( ) + shapeTypes.length );",
        "63": "    private int trackIdOffset = 0;"
      },
      "id": 16557575,
      "filename": "TrackHandler.java"
    },
    {
      "repo": "http://jbullet-jme.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 284,
      "location": "/jbullet-jme/src/jmetest/jbullet",
      "name": "jbullet-jme",
      "url": "https://searchcode.com/codesearch/view/2199844/",
      "md5hash": "05da63d8c3e7329a12e1921146981c47",
      "lines": {
        "163": "        // the floor, does not move (mass=0)",
        "164": "        PhysicsNode node3=new PhysicsNode(new Box(\"physicsfloor\",Vector3f.ZERO,100f,0.2f,100f),CollisionShape.ShapeTypes.MESH,0);",
        "156": "        // an obstacle mesh, does not move (mass=0)",
        "125": "        Box box1=new Box(\"physicscar\",Vector3f.ZERO,0.5f,0.5f,2f);",
        "126": "        physicsCar=new PhysicsVehicleNode(box1,CollisionShape.ShapeTypes.BOX);",
        "157": "        node2=new PhysicsNode(new Sphere(\"physicsobstaclemesh\",16,16,1.2f),CollisionShape.ShapeTypes.MESH,0);"
      },
      "id": 2199844,
      "filename": "TestSimplePhysicsCar.java"
    },
    {
      "repo": "git://github.com/metsci/glimpse.git",
      "language": "Java",
      "linescount": 212,
      "location": "/extras-charts/src/main/java/com/metsci/glimpse/charts/vector/display",
      "name": "glimpse",
      "url": "https://searchcode.com/codesearch/view/16557573/",
      "md5hash": "9c2713db0714f6e9bd137b2cf881bff5",
      "lines": {
        "64": "    private static final GeoShapeType[] shapeTypes = GeoShapeType.values( );",
        "34": "import com.metsci.glimpse.charts.vector.display.xmlgen.ShapeSpec;",
        "35": "import com.metsci.glimpse.charts.vector.display.xmlgen.ShapeTypeSpec;",
        "173": "        assert(shapeType != null);",
        "174": "        return shapeType.ordinal( ) + ( featureType.ordinal( ) * shapeTypes.length );",
        "175": "        //return featureType.ordinal( ) + 10000 * ( shapeType.ordinal( ) + shapeTypes.length + 1 );",
        "176": "    }",
        "113": "            {",
        "114": "                GeoShapeType shapeType = convertShapeType( shapeSpec.getShapetypespec( ) );",
        "147": "",
        "148": "    private GeoShapeType convertShapeType( ShapeTypeSpec type )",
        "63": ""
      },
      "id": 16557573,
      "filename": "BasicSkin.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 126,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/model",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394369/",
      "md5hash": "9f2f845896b81ee3324eee328eab442a",
      "lines": {
        "112": "    \t",
        "113": "    \tLog.d(\"getOutline\", \"getOutline: \" + getText() + \", type: \" + ShapeTypes.typeName(getShapeType()));",
        "117": "        if(outline == null){",
        "118": "            logger.log(POILogger.WARN, \"Outline not found for \" + ShapeTypes.typeName(getShapeType()));",
        "30": " * AutoShapes are drawing objects with a particular shape that may be customized through smart resizing and adjustments.",
        "31": " * See {@link ShapeTypes}"
      },
      "id": 97394369,
      "filename": "AutoShape.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 25,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 14,
      "source": "Github",
      "id": 2
    },
    {
      "count": 1,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}