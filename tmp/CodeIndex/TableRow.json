{
  "matchterm": "TableRow",
  "previouspage": null,
  "searchterm": "TableRow",
  "query": "TableRow",
  "language_filters": [
    {
      "count": 1736,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1736,
  "results": [
    {
      "repo": "https://github.com/lib-uoguelph-ca/dspace-ug.git",
      "language": "Java",
      "linescount": 735,
      "location": "/dspace-api/src/main/java/org/dspace/storage/rdbms",
      "name": "dspace-ug",
      "url": "https://searchcode.com/codesearch/view/109454657/",
      "md5hash": "8527861fba37670248fcb63cbf351bab",
      "lines": {
        "1": "/*",
        "2": " * TableRow.java",
        "649": "     * @param obj",
        "650": "     * @return true if TableRow objects are equal",
        "653": "    {",
        "654": "        if (!(obj instanceof TableRow))",
        "658": "",
        "82": "     */",
        "83": "    public TableRow(String table, List columns)",
        "659": "        return data.equals(((TableRow) obj).data);",
        "54": " */",
        "55": "public class TableRow"
      },
      "id": 109454657,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/kejar31/android_frameworks_base",
      "language": "Java",
      "linescount": 534,
      "location": "/core/java/android/widget",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/61782410/",
      "md5hash": "3c36ab354dd11555af1f294cf8f5323a",
      "lines": {
        "32": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "34": " *",
        "35": " * <p>The children of a TableRow do not need to specify the",
        "36": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "37": " * XML file. TableRow always enforces those values to be respectively",
        "41": " * <p>",
        "42": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "44": " */",
        "45": "public class TableRow extends LinearLayout {",
        "273": "    int getNextLocationOffset(View child) {",
        "274": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "265": "    int getLocationOffset(View child) {",
        "266": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "29": "/**",
        "30": " * <p>A layout that arranges its children horizontally. A TableRow should",
        "31": " * always be used as a child of a {@link android.widget.TableLayout}. If a"
      },
      "id": 61782410,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/seandroid/frameworks-base.git",
      "language": "Java",
      "linescount": 550,
      "location": "/core/java/android/widget",
      "name": "frameworks-base",
      "url": "https://searchcode.com/codesearch/view/37047087/",
      "md5hash": "ea50dfd112c752c2ba6c09ada6c993c8",
      "lines": {
        "32": " * always be used as a child of a {@link android.widget.TableLayout}. If a",
        "33": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "35": " *",
        "36": " * <p>The children of a TableRow do not need to specify the",
        "37": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "38": " * XML file. TableRow always enforces those values to be respectively",
        "42": " * <p>",
        "43": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "45": " */",
        "46": "public class TableRow extends LinearLayout {",
        "274": "    int getNextLocationOffset(View child) {",
        "275": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "267": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "266": "    int getLocationOffset(View child) {",
        "30": "/**",
        "31": " * <p>A layout that arranges its children horizontally. A TableRow should"
      },
      "id": 37047087,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/iainh/projectzzz-platform-frameworks-base.git",
      "language": "Java",
      "linescount": 548,
      "location": "/core/java/android/widget",
      "name": "projectzzz-platform-frameworks-base",
      "url": "https://searchcode.com/codesearch/view/37268994/",
      "md5hash": "08b05cbdd530ffc1f6661a4af2969dd2",
      "lines": {
        "32": " * <p>A layout that arranges its children horizontally. A TableRow should",
        "33": " * always be used as a child of a {@link android.widget.TableLayout}. If a",
        "34": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "267": "    int getLocationOffset(View child) {",
        "36": " *",
        "37": " * <p>The children of a TableRow do not need to specify the",
        "38": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "39": " * XML file. TableRow always enforces those values to be respectively",
        "268": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "43": " * <p>",
        "44": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "46": " */",
        "47": "public class TableRow extends LinearLayout {",
        "275": "    int getNextLocationOffset(View child) {",
        "276": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "31": "/**"
      },
      "id": 37268994,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/htchoi1995/frameworks_base.git",
      "language": "Java",
      "linescount": 548,
      "location": "/core/java/android/widget",
      "name": "frameworks_base",
      "url": "https://searchcode.com/codesearch/view/51928755/",
      "md5hash": "100f97f7cba208360692942a93634e63",
      "lines": {
        "32": " * <p>A layout that arranges its children horizontally. A TableRow should",
        "33": " * always be used as a child of a {@link android.widget.TableLayout}. If a",
        "34": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "267": "    int getLocationOffset(View child) {",
        "36": " *",
        "37": " * <p>The children of a TableRow do not need to specify the",
        "38": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "39": " * XML file. TableRow always enforces those values to be respectively",
        "268": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "43": " * <p>",
        "44": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "46": " */",
        "47": "public class TableRow extends LinearLayout {",
        "275": "    int getNextLocationOffset(View child) {",
        "276": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "31": "/**"
      },
      "id": 51928755,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/chameleonos/miui_frameworks.git",
      "language": "Java",
      "linescount": 376,
      "location": "/framework/java/jd-gui/android/widget",
      "name": "miui_frameworks",
      "url": "https://searchcode.com/codesearch/view/44002725/",
      "md5hash": "2303083563f5d505afd5e3ca58255f92",
      "lines": {
        "32": "",
        "33": "    public TableRow(Context paramContext, AttributeSet paramAttributeSet)",
        "35": "        super(paramContext, paramAttributeSet);",
        "36": "        initTableRow();",
        "38": "",
        "39": "    private void initTableRow()",
        "289": "            TableRow.access$302(TableRow.this, null);",
        "288": "        {",
        "282": "            TableRow.access$302(TableRow.this, null);",
        "18": "",
        "19": "public class TableRow extends LinearLayout",
        "281": "        {",
        "26": "",
        "27": "    public TableRow(Context paramContext)",
        "29": "        super(paramContext);",
        "30": "        initTableRow();"
      },
      "id": 44002725,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/chameleonos/miui_frameworks.git",
      "language": "Java",
      "linescount": 385,
      "location": "/framework/java/jad/android/widget",
      "name": "miui_frameworks",
      "url": "https://searchcode.com/codesearch/view/44004829/",
      "md5hash": "505f02a9ea36c26babacae70b4b428fe",
      "lines": {
        "328": "        super.onInitializeAccessibilityEvent(accessibilityevent);",
        "97": "            mOffset = new int[2];",
        "98": "            TypedArray typedarray = context.obtainStyledAttributes(attributeset, com.android.internal.R.styleable.TableRow_Cell);",
        "38": "        private android.view.ViewGroup.OnHierarchyChangeListener listener;",
        "39": "        final TableRow this$0;",
        "129": "",
        "329": "        accessibilityevent.setClassName(android/widget/TableRow.getName());",
        "42": "        private ChildrenTracker() {",
        "43": "            this$0 = TableRow.this;",
        "130": "    private void initTableRow() {",
        "334": "        accessibilitynodeinfo.setClassName(android/widget/TableRow.getName());",
        "333": "        super.onInitializeAccessibilityNodeInfo(accessibilitynodeinfo);",
        "17": "",
        "18": "public class TableRow extends LinearLayout {",
        "123": "",
        "124": "    public TableRow(Context context, AttributeSet attributeset) {"
      },
      "id": 44004829,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://github.com/GunioRobot/hello.git",
      "language": "Java",
      "linescount": 37,
      "location": "/source/org/limewire/hello/base/user",
      "name": "hello",
      "url": "https://searchcode.com/codesearch/view/67501017/",
      "md5hash": "7a817e588604c7ed19d5902e93e2e840",
      "lines": {
        "4": "",
        "5": "/** A TableRow object represents a row in a Table object and on the screen. */",
        "6": "public class TableRow {",
        "7": "",
        "8": "\t// -------- A TableRow object, and its parts --------",
        "10": "\t/**",
        "11": "\t * Make a new TableRow object.",
        "13": "\t * ",
        "14": "\t * @param behind The object that is making this new TableRow, and will sit behind it",
        "16": "\t */",
        "17": "\tpublic TableRow(OldTable table, Object behind, String... cells) {",
        "18": "\t\tthis.table = table;",
        "19": "\t\tthis.behind = behind; // Save everything in this new TableRow object",
        "24": "",
        "25": "\t/** A link up to the object that made this TableRow, and is using it to show itself to the user. */"
      },
      "id": 67501017,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/anjensan/jaj",
      "language": "Java",
      "linescount": 101,
      "location": "/jaj-core/src/main/java/by/bsuir/acm/jaj/core/judge",
      "name": "jaj",
      "url": "https://searchcode.com/codesearch/view/58523240/",
      "md5hash": "3eb11a2dc7ff99e7b3df1e25c868fba0",
      "lines": {
        "34": "",
        "35": "    public TableRow(User user, double score, double penalty, List<TableCell> cells) {",
        "52": "",
        "53": "    public TableRow(TableRow prototype, double score, double penalty, List<TableCell> cells) {",
        "38": "",
        "39": "    public TableRow(TableRow prototype, double score, double penalty, List<TableCell> cells,",
        "25": "",
        "26": "    public TableRow(User user, double score, double penalty, List<TableCell> cells, long version) {",
        "13": "",
        "14": "public class TableRow implements Serializable {"
      },
      "id": 58523240,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/dkocher/google-visualization-java",
      "language": "Java",
      "linescount": 196,
      "location": "/src/main/java/com/google/visualization/datasource/datatable",
      "name": "google-visualization-java",
      "url": "https://searchcode.com/codesearch/view/60087335/",
      "md5hash": "044bd911fd7986b38b972f579a0b0dca",
      "lines": {
        "34": " */",
        "35": "public class TableRow {",
        "177": "     * Returns a clone of this TableRow. This is a deep clone.",
        "50": "    public TableRow() {",
        "176": "    /**",
        "49": "     */",
        "178": "     *",
        "179": "     * @return A clone of this TableRow.",
        "181": "    @Override",
        "182": "    public TableRow clone() {",
        "183": "        TableRow result = new TableRow();",
        "184": "        for(TableCell cell : cells) {"
      },
      "id": 60087335,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/dyp/geotools.git",
      "language": "Java",
      "linescount": 177,
      "location": "/modules/unsupported/vpf/src/main/java/org/geotools/data/vpf/io",
      "name": "geotools",
      "url": "https://searchcode.com/codesearch/view/47131780/",
      "md5hash": "9fe28858485c8dab09c9263052d47f2e",
      "lines": {
        "33": " */",
        "34": "public class TableRow implements VPFRow {",
        "135": "    public boolean equals(Object obj) {",
        "136": "        if ((obj == null) || !(obj instanceof TableRow)) {",
        "139": "",
        "140": "        TableRow row = (TableRow) obj;",
        "47": "    /**",
        "48": "     * Creates a new <code>TableRow</code> instance.",
        "52": "     */",
        "53": "    public TableRow(RowField[] fieldsArr, Map fieldsMap) {",
        "25": " * TableRow.java Created: Thu Jan 02 23:58:39 2003",
        "24": "/**",
        "57": "",
        "58": "    // TableRow constructor"
      },
      "id": 47131780,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://bitbucket.org/openjfxmirrors/openjfx-sandbox-8-controls-rt",
      "language": "Java",
      "linescount": 340,
      "location": "/javafx-ui-controls/src/javafx/scene/control",
      "name": "openjfx-sandbox-8-controls-rt",
      "url": "https://searchcode.com/codesearch/view/60434688/",
      "md5hash": "05164c5cc672666bcc15a1a8361d94a7",
      "lines": {
        "66": "    /**",
        "67": "     * Constructs a default TableRow instance with a style class of 'table-row-cell'",
        "68": "     */",
        "69": "    public TableRow() {",
        "39": "/**",
        "40": " * <p>TableRow is an {@link javafx.scene.control.IndexedCell IndexedCell}, but",
        "41": " * rarely needs to be used by developers creating TableView instances. The only",
        "42": " * time TableRow is likely to be encountered at all by a developer is if they",
        "57": " */",
        "58": "public class TableRow<T> extends IndexedCell<T> {",
        "190": "                public Object getBean() {",
        "191": "                    return TableRow.this;"
      },
      "id": 60434688,
      "filename": "TableRow.java"
    },
    {
      "repo": "git://github.com/android/platform_frameworks_base.git",
      "language": "Java",
      "linescount": 550,
      "location": "/core/java/android/widget",
      "name": "platform_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/2440000/",
      "md5hash": "23bc18f19662669edab674fa766b5247",
      "lines": {
        "32": " * always be used as a child of a {@link android.widget.TableLayout}. If a",
        "33": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "35": " *",
        "36": " * <p>The children of a TableRow do not need to specify the",
        "37": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "38": " * XML file. TableRow always enforces those values to be respectively",
        "42": " * <p>",
        "43": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "45": " */",
        "46": "public class TableRow extends LinearLayout {",
        "274": "    int getNextLocationOffset(View child) {",
        "275": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "267": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "266": "    int getLocationOffset(View child) {",
        "30": "/**",
        "31": " * <p>A layout that arranges its children horizontally. A TableRow should"
      },
      "id": 2440000,
      "filename": "TableRow.java"
    },
    {
      "repo": "git://github.com/CyanogenMod/android_frameworks_base.git",
      "language": "Java",
      "linescount": 550,
      "location": "/core/java/android/widget",
      "name": "android_frameworks_base",
      "url": "https://searchcode.com/codesearch/view/5225311/",
      "md5hash": "23bc18f19662669edab674fa766b5247",
      "lines": {
        "32": " * always be used as a child of a {@link android.widget.TableLayout}. If a",
        "33": " * TableRow's parent is not a TableLayout, the TableRow will behave as",
        "35": " *",
        "36": " * <p>The children of a TableRow do not need to specify the",
        "37": " * <code>layout_width</code> and <code>layout_height</code> attributes in the",
        "38": " * XML file. TableRow always enforces those values to be respectively",
        "42": " * <p>",
        "43": " * Also see {@link TableRow.LayoutParams android.widget.TableRow.LayoutParams}",
        "45": " */",
        "46": "public class TableRow extends LinearLayout {",
        "274": "    int getNextLocationOffset(View child) {",
        "275": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION_NEXT];",
        "267": "        return ((TableRow.LayoutParams) child.getLayoutParams()).mOffset[LayoutParams.LOCATION];",
        "266": "    int getLocationOffset(View child) {",
        "30": "/**",
        "31": " * <p>A layout that arranges its children horizontally. A TableRow should"
      },
      "id": 5225311,
      "filename": "TableRow.java"
    },
    {
      "repo": "http://gwt-stuff.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 285,
      "location": "/src/org/mcarthur/sandy/gwt/table/client",
      "name": "gwt-stuff",
      "url": "https://searchcode.com/codesearch/view/13739568/",
      "md5hash": "7656752daf04c28ed44d23a89fd2843e",
      "lines": {
        "160": "            //sinkEvents(TableRowGroup.MOUSEEVENTSALL); // no longer works with GWT 1.4's event model changes",
        "179": "                //unsinkEvents(TableRowGroup.MOUSEEVENTSALL); // no longer works with GWT 1.4's event model changes",
        "38": " * <ul class=\"css\">",
        "39": " * <li>.gwtstuff-TableRow { }</li>",
        "172": "     * @see #addMouseListener(org.mcarthur.sandy.gwt.table.client.TableRow.MouseListener)",
        "171": "     * @param listener the mouse listener to remove.",
        "44": " */",
        "45": "public abstract class TableRow extends UIObject implements EventListener {",
        "178": "            if (mouseListeners.isEmpty()) {",
        "51": "",
        "52": "    protected TableRow() {",
        "53": "        setElement(DOM.createTR());",
        "154": "     * @param listener the mouse listener to add.",
        "155": "     * @see #removeMouseListener(org.mcarthur.sandy.gwt.table.client.TableRow.MouseListener)",
        "159": "        if (mouseListeners == null) {"
      },
      "id": 13739568,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://wardphotodirectory.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 566,
      "location": "/1.x/nfop/fo/flow",
      "name": "wardphotodirectory",
      "url": "https://searchcode.com/codesearch/view/117209681/",
      "md5hash": "3e6abd86f30190d851ab215b98c335a0",
      "lines": {
        "1": "/*",
        "2": " * $Id: TableRow.java,v 1.2 2005/03/09 13:33:08 alan13 Exp $",
        "179": "",
        "180": "    public TableRow(FObj parent, PropertyList propertyList,",
        "69": "\t\t\torg.apache.fop.apps.Driver.IncrementRow();",
        "70": "            return new TableRow(parent, propertyList, systemId, line, column);",
        "75": "    public static FObj.Maker maker() {",
        "76": "        return new TableRow.Maker();",
        "62": "",
        "63": "public class TableRow extends FObj {"
      },
      "id": 117209681,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://github.com/jedi-Knight/processing-android.git",
      "language": "Java",
      "linescount": 113,
      "location": "/core/src/processing/data",
      "name": "processing-android",
      "url": "https://searchcode.com/codesearch/view/98072272/",
      "md5hash": "ba9b40761c7671ef85ee512edc8e2231",
      "lines": {
        "32": "   * @see TableRow#getString(int)",
        "33": "   */",
        "43": "  /**",
        "44": "   * @webref tablerow:method",
        "11": " */",
        "12": "public interface TableRow {",
        "14": "  /**",
        "15": "   * @webref tablerow:method",
        "17": "   * @param column ID number of the column to reference",
        "18": "   * @see TableRow#getInt(int)",
        "19": "   * @see TableRow#getFloat(int)",
        "20": "   */",
        "27": "  /**",
        "28": "   * @webref tablerow:method",
        "30": "   * @param column ID number of the column to reference",
        "31": "   * @see TableRow#getFloat(int)"
      },
      "id": 98072272,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://github.com/guamoko/ITP2013Parametric.git",
      "language": "Java",
      "linescount": 114,
      "location": "/src-processing-data-2.0.1/processing/data",
      "name": "ITP2013Parametric",
      "url": "https://searchcode.com/codesearch/view/100993373/",
      "md5hash": "11944d30785ac12a458232475e3b4f4a",
      "lines": {
        "33": "   * @param column ID number of the column to reference",
        "34": "   * @see TableRow#getFloat(int)",
        "35": "   * @see TableRow#getString(int)",
        "36": "   */",
        "46": "  /**",
        "14": " */",
        "15": "public interface TableRow {",
        "17": "  /**",
        "18": "   * @webref tablerow:method",
        "20": "   * @param column ID number of the column to reference",
        "21": "   * @see TableRow#getInt(int)",
        "22": "   * @see TableRow#getFloat(int)",
        "23": "   */",
        "47": "   * @webref tablerow:method",
        "30": "  /**",
        "31": "   * @webref tablerow:method"
      },
      "id": 100993373,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://github.com/cppwfs/spring-xd.git",
      "language": "Java",
      "linescount": 99,
      "location": "/spring-xd-shell/src/main/java/org/springframework/xd/shell/util",
      "name": "spring-xd",
      "url": "https://searchcode.com/codesearch/view/69997282/",
      "md5hash": "32dbf7990fe6cd82bc9e7553003861e1",
      "lines": {
        "33": " */",
        "34": "public class TableRow {",
        "87": "\t\t\treturn false;",
        "88": "\t\tTableRow other = (TableRow) obj;",
        "60": "\t */",
        "61": "\tpublic TableRow addValue(Integer column, String value) {"
      },
      "id": 69997282,
      "filename": "TableRow.java"
    },
    {
      "repo": "https://github.com/JoonyLi/qi4j-sdk.git",
      "language": "Java",
      "linescount": 68,
      "location": "/tools/envisage/src/main/java/org/qi4j/envisage/util",
      "name": "qi4j-sdk",
      "url": "https://searchcode.com/codesearch/view/74618357/",
      "md5hash": "f4965afc5ebfb2087b0890ee6577ba30",
      "lines": {
        "33": "",
        "34": "    public TableRow( int col, Object[] values )",
        "23": " */",
        "24": "public class TableRow",
        "28": "",
        "29": "    public TableRow( int col )"
      },
      "id": 74618357,
      "filename": "TableRow.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 767,
      "source": "Github",
      "id": 2
    },
    {
      "count": 719,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 221,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 12,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 10,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 6,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "Unknown",
      "id": 0
    }
  ]
}