{
  "matchterm": "TextRun",
  "previouspage": null,
  "searchterm": "TextRun",
  "query": "TextRun",
  "language_filters": [
    {
      "count": 86,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 86,
  "results": [
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 103,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/model",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730134/",
      "md5hash": "cc8758fbe4c059d583aef3fc6be7fdd3",
      "lines": {
        "19": "public class TextRun ",
        "18": " */",
        "35": " */",
        "36": "public TextRun(String text) {",
        "53": " */",
        "54": "public TextRun subdivideRun(int offset) {",
        "55": "\tString remainder = removeRange(offset, size() - offset);",
        "56": "\treturn new TextRun(remainder, getType());",
        "42": " */",
        "43": "public TextRun(String text, int type) {"
      },
      "id": 13730134,
      "filename": "TextRun.java"
    },
    {
      "repo": "https://bitbucket.org/openxls/openxls.git",
      "language": "Java",
      "linescount": 494,
      "location": "/src/main/java/com/extentech/formats/OOXML",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/47125097/",
      "md5hash": "99c3050cb41ad4987553bd2ecf7aecd4",
      "lines": {
        "64": "\tpublic TextRun(String s) {",
        "34": "/**",
        "35": " * textRun group, either r (regular text), br (line break) or fld (text Field)",
        "100": "  \t \t\tLogger.logErr(\"textRun.parseOOXML: \" + e.toString());",
        "101": "  \t \t}",
        "102": "  \t \tTextRun oe= new TextRun(run, brk, f);",
        "41": "//TODO: Finish rPr children highlight TEXTUNDERLINE, TEXTUNDERLINEFILL, sym, hlinkClick, hlinkMouseOver, ",
        "42": "public class TextRun implements OOXMLElement{",
        "48": "\t",
        "49": "\tpublic TextRun(r run, Br brk, Fld f) {",
        "114": "\tpublic OOXMLElement cloneElement() {",
        "99": "  \t \t} catch (Exception e) {",
        "115": "\t\treturn new TextRun(this);",
        "351": "  \t \t\tLogger.logErr(\"textRun.parseOOXML: \" + e.toString());",
        "350": "  \t \t} catch (Exception e) {",
        "63": "\t */"
      },
      "id": 47125097,
      "filename": "TextRun.java"
    },
    {
      "repo": "https://bitbucket.org/ghu/openxls.git",
      "language": "Java",
      "linescount": 494,
      "location": "/src/main/java/com/extentech/formats/OOXML",
      "name": "openxls",
      "url": "https://searchcode.com/codesearch/view/50976721/",
      "md5hash": "99c3050cb41ad4987553bd2ecf7aecd4",
      "lines": {
        "64": "\tpublic TextRun(String s) {",
        "34": "/**",
        "35": " * textRun group, either r (regular text), br (line break) or fld (text Field)",
        "100": "  \t \t\tLogger.logErr(\"textRun.parseOOXML: \" + e.toString());",
        "101": "  \t \t}",
        "102": "  \t \tTextRun oe= new TextRun(run, brk, f);",
        "41": "//TODO: Finish rPr children highlight TEXTUNDERLINE, TEXTUNDERLINEFILL, sym, hlinkClick, hlinkMouseOver, ",
        "42": "public class TextRun implements OOXMLElement{",
        "48": "\t",
        "49": "\tpublic TextRun(r run, Br brk, Fld f) {",
        "114": "\tpublic OOXMLElement cloneElement() {",
        "99": "  \t \t} catch (Exception e) {",
        "115": "\t\treturn new TextRun(this);",
        "351": "  \t \t\tLogger.logErr(\"textRun.parseOOXML: \" + e.toString());",
        "350": "  \t \t} catch (Exception e) {",
        "63": "\t */"
      },
      "id": 50976721,
      "filename": "TextRun.java"
    },
    {
      "repo": "http://okapi.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 91,
      "location": "/okapi/filters/openxml/src/main/java/net/sf/okapi/filters/openxml",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/401325/",
      "md5hash": "5777879f88691306e443202d32ac6856",
      "lines": {
        "40": "\tpublic TextRun()",
        "34": " */",
        "35": "public class TextRun {",
        "39": ""
      },
      "id": 401325,
      "filename": "TextRun.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 1710,
      "location": "/batik/src/main/java/org/apache/batik/gvt/renderer",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96985261/",
      "md5hash": "bc688106e6be6e9d093341e3cd1c534f",
      "lines": {
        "192": "    public List getTextRuns(TextNode node, AttributedCharacterIterator aci) {",
        "193": "        List textRuns = node.getTextRuns();",
        "194": "        if (textRuns != null) {",
        "195": "            return textRuns;",
        "196": "        }",
        "198": "        AttributedCharacterIterator[] chunkACIs = getTextChunkACIs(aci);",
        "166": "",
        "167": "        List textRuns = getTextRuns(node, aci);",
        "170": "        // and finally the strikethrough",
        "171": "        paintDecorations(textRuns, g2d, TextSpanLayout.DECORATION_UNDERLINE);",
        "172": "        paintDecorations(textRuns, g2d, TextSpanLayout.DECORATION_OVERLINE);",
        "173": "        paintTextRuns(textRuns, g2d);",
        "174": "        paintDecorations",
        "175": "            (textRuns, g2d, TextSpanLayout.DECORATION_STRIKETHROUGH);",
        "199": "        textRuns = computeTextRuns(node, aci, chunkACIs);",
        "191": "    // static long reorderTime, fontMatchingTime, layoutTime;"
      },
      "id": 96985261,
      "filename": "StrokingTextPainter.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 1801,
      "location": "/fop/src/main/java/org/apache/fop/render/rtf",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96991235/",
      "md5hash": "2707a4c5b18c01d0c7284e2befb20db9",
      "lines": {
        "429": "        try {",
        "430": "            IRtfTextrunContainer container",
        "431": "                = (IRtfTextrunContainer)builderContext.getContainer(",
        "403": "",
        "404": "            IRtfTextrunContainer container",
        "405": "                = (IRtfTextrunContainer)builderContext.getContainer(",
        "406": "                    IRtfTextrunContainer.class,",
        "407": "                    true, this);",
        "408": "",
        "409": "            RtfTextrun textrun = container.getTextrun();",
        "410": "",
        "411": "            textrun.addParagraphBreak();",
        "412": "            textrun.pushBlockAttributes(rtfAttr);",
        "413": "            textrun.addBookmark(bl.getId());",
        "414": "        } catch (IOException ioe) {"
      },
      "id": 96991235,
      "filename": "RTFHandler.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 612,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/model",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394395/",
      "md5hash": "4ae551d90bbc16377c5513186d4e9dc1",
      "lines": {
        "163": "    /**",
        "164": "     * Set default properties for the  TextRun.",
        "134": "",
        "135": "    public TextRun createTextRun(){",
        "296": "             */",
        "169": "     */",
        "138": "",
        "139": "        _txtrun = getTextRun();",
        "46": "import org.apache.poi.hslf.record.TxInteractiveInfoAtom;",
        "47": "import org.apache.poi.hslf.usermodel.RichTextRun;",
        "297": "            int type = getTextRun().getRunType();",
        "179": "     public String getText(){",
        "180": "        TextRun tx = getTextRun();",
        "150": "",
        "151": "            _txtrun = new TextRun(tha,tca,sta);",
        "170": "    protected void setDefaultTextProperties(TextRun _txtrun){"
      },
      "id": 97394395,
      "filename": "TextShape.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 465,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/model",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394323/",
      "md5hash": "004c81d0c6f4e85beee2c12f2cad27b2",
      "lines": {
        "132": "            RecordContainer.handleParentAwareRecords(wrappers[i]);",
        "133": "            findTextRuns(wrappers[i].getChildRecords(), runsV);",
        "135": "            if (s2 != s1){",
        "136": "                TextRun t = runsV.get(runsV.size()-1);",
        "168": "                    TextCharsAtom tca = (TextCharsAtom) records[i + 1];",
        "139": "        }",
        "140": "        return runsV.toArray(new TextRun[runsV.size()]);",
        "173": "\t\t\t\t\t\ttrun = new TextRun(tha, tba, stpa);",
        "145": "     * a TextHeaderAtom followed by one of a TextBytesAtom or",
        "146": "     * a TextCharsAtom. Builds up TextRuns from these",
        "172": "\t\t\t\t\t\tTextBytesAtom tba = (TextBytesAtom) records[i + 1];",
        "150": "     */",
        "151": "    protected static void findTextRuns(Record[] records, List<TextRun> found) {",
        "169": "                    trun = new TextRun(tha, tca, stpa);",
        "154": "            if (records[i] instanceof TextHeaderAtom) {",
        "155": "                TextRun trun = null;"
      },
      "id": 97394323,
      "filename": "Sheet.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 277,
      "location": "/fop/src/main/java/org/apache/fop/svg",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96989736/",
      "md5hash": "98c5e5ceb8a50a0fcb8d15bdaa99ef6b",
      "lines": {
        "106": "        TextSpanLayout layout = textRun.getLayout();",
        "107": "        logTextRun(runaci, layout);",
        "108": "        runaci.first(); //Reset ACI",
        "184": "            super.paintTextRuns(textRuns, g2d);",
        "178": "    @Override",
        "179": "    protected void paintTextRuns(@SuppressWarnings(\"rawtypes\") List textRuns, Graphics2D g2d) {",
        "180": "        if (log.isTraceEnabled()) {",
        "181": "            log.trace(\"paintTextRuns: count = \" + textRuns.size());",
        "183": "        if (!isSupported(g2d)) {",
        "88": "     * Paints a single text run.",
        "89": "     * @param textRun the text run",
        "186": "        }",
        "187": "        for (int i = 0; i < textRuns.size(); i++) {",
        "188": "            TextRun textRun = (TextRun) textRuns.get(i);",
        "189": "            try {",
        "190": "                paintTextRun(textRun, g2d);"
      },
      "id": 96989736,
      "filename": "NativeTextPainter.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 514,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/model",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394313/",
      "md5hash": "346ffc55e0b7a05381ade3b094d03d17",
      "lines": {
        "208": "\t\tTextRun[] txt = getTextRuns();",
        "74": "",
        "75": " \t\t// Grab the TextRuns from the PPDrawing",
        "76": "\t\tTextRun[] _otherRuns = findTextRuns(getPPDrawing());",
        "77": "",
        "78": "\t\t// For the text coming in from the SlideAtomsSet:",
        "79": "\t\t// Build up TextRuns from pairs of TextHeaderAtom and",
        "80": "\t\t//  one of TextBytesAtom or TextCharsAtom",
        "55": "\tprivate SlideAtomsSet _atomSet;",
        "56": "\tprivate TextRun[] _runs;",
        "185": "\t\tpl.setShapeType(ShapeTypes.Rectangle);",
        "186": "\t\tpl.getTextRun().setRunType(TextHeaderAtom.TITLE_TYPE);",
        "207": "\tpublic String getTitle(){",
        "61": "\t *  containing the text.",
        "62": "\t * Initialises TextRuns, to provide easier access to the text"
      },
      "id": 97394313,
      "filename": "Slide.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 247,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/edit",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730123/",
      "md5hash": "73809889f07e5c3eb28f9a391b861663",
      "lines": {
        "128": "\tModelLocation start = new ModelLocation(",
        "129": "\t\t\t(TextRun)range.begin.part.getModel(), range.begin.offset);",
        "130": "\tModelLocation end = new ModelLocation(",
        "131": "\t\t\t(TextRun)range.end.part.getModel(), range.end.offset);",
        "167": "\t\treturn null;",
        "168": "\tTextRun run = (TextRun)where.part.getModel();",
        "142": "\t\t\t// that container's style to be set multiple times",
        "143": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "189": "\tTextLocation where = request.getSelectionRange().end;",
        "51": "private Command checkForConversion(TextLocation location) {",
        "52": "\tTextRun run = (TextRun)location.part.getModel();",
        "190": "\tTextRun run = (TextRun)where.part.getModel();",
        "56": "\t\tconverted.getStyle().setBold(true);",
        "57": "\t\tTextRun boldText = new TextRun(\"BOLD\");",
        "29": "import org.eclipse.gef.examples.text.model.Style;",
        "30": "import org.eclipse.gef.examples.text.model.TextRun;"
      },
      "id": 13730123,
      "filename": "BlockEditPolicy.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 133,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/edit",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730120/",
      "md5hash": "da8ebd4d898e1fcfec15d255d629b37f",
      "lines": {
        "67": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "68": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "101": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "102": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "75": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "76": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "109": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "110": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "20": "import org.eclipse.gef.examples.text.model.Style;",
        "21": "import org.eclipse.gef.examples.text.model.TextRun;",
        "86": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "85": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "120": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "121": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();",
        "94": "\t\tfor (Iterator iter = range.getLeafParts().iterator(); iter.hasNext();) {",
        "95": "\t\t\tTextRun run = (TextRun)((TextEditPart)iter.next()).getModel();"
      },
      "id": 13730120,
      "filename": "DocumentPart.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 106,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/model",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730139/",
      "md5hash": "492a37f4e765cf983766098b8dbfa76c",
      "lines": {
        "32": "",
        "33": "\tTextRun end = new TextRun(\"ABCDE\");",
        "83": "\t\tassertTrue(ModelUtil.getModelSpan(runABC, 1, run123, 4).isEmpty());",
        "68": "",
        "69": "\tTextRun runABC = new TextRun(\"ABCDE\");",
        "65": "\tTextRun run123 = new TextRun(\"12345\");",
        "64": "\tContainer branch1 = new Block(0);",
        "47": "\t\tassertTrue(result.isEmpty());",
        "48": "\t\tdoc.add(new TextRun(\"bogus\"), 0);",
        "50": "",
        "51": "\tTextRun middle = new TextRun(\"I'm in the middle\");",
        "84": "\t\tdoc.add(new TextRun(\"bogus\"), 0);",
        "85": "\t\tdoc.add(new TextRun(\"bogus\"), doc.getChildren().size());",
        "86": "\t}",
        "87": "",
        "88": "\tTextRun middle = new TextRun(\"I'm in the middle\");"
      },
      "id": 13730139,
      "filename": "TestModelUtil.java"
    },
    {
      "repo": "http://okapi.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1996,
      "location": "/okapi/filters/openxml/src/main/java/net/sf/okapi/filters/openxml",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/401327/",
      "md5hash": "bec478bced1b2c665527416feffc3788",
      "lines": {
        "832": "\t\t\t\t\t\taddToTextRun(internalEncManager.encode(txt,0)); // DWH 8-7-09 still have to encode text if not in text unit",
        "129": "\tprivate boolean bAfterText = false; // DWH 4-10-09",
        "130": "\tprivate TextRun trTextRun = null; // DWH 4-10-09",
        "131": "\tprivate TextRun trNonTextRun = null; // DWH 5-5-09",
        "132": "\tprivate boolean bIgnoredPreRun = false; // DWH 4-10-09",
        "133": "\tprivate boolean bBeforeFirstTextRun = true; // DWH 4-15-09",
        "810": "\t\t// already processing inline text",
        "811": "//\t\tif (text.isWhiteSpace() && !isInsideTextRun()) {",
        "812": "\t\tif (bWhiteSpace && !isInsideTextRun()) {",
        "813": "\t\t\taddToDocumentPart(txt);",
        "824": "\t\t{",
        "825": "\t\t\tif (bInTextRun) // DWH 4-20-09 whole if revised",
        "829": "\t\t\t\t\tif (filetype==MSEXCEL && txt!=null && txt.length()>0 && txt.charAt(0)=='=')",
        "830": "\t\t\t\t\t\taddToTextRun(txt); // DWH 5-13-09 don't treat Excel formula as text to be translated",
        "831": "\t\t\t\t\telse if (bExcludeTextInRun || bExcludeTextInUnit) // DWH 5-29-09 don't treat as text if excluding text"
      },
      "id": 401327,
      "filename": "OpenXMLContentFilter.java"
    },
    {
      "repo": "https://code.google.com/p/okapi/",
      "language": "Java",
      "linescount": 1996,
      "location": "/okapi/filters/openxml/src/main/java/net/sf/okapi/filters/openxml",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/12770007/",
      "md5hash": "64ce71045bbcd230b0ec36d2e1b303b1",
      "lines": {
        "832": "\t\t\t\t\t\taddToTextRun(internalEncManager.encode(txt,0)); // DWH 8-7-09 still have to encode text if not in text unit",
        "129": "\tprivate boolean bAfterText = false; // DWH 4-10-09",
        "130": "\tprivate TextRun trTextRun = null; // DWH 4-10-09",
        "131": "\tprivate TextRun trNonTextRun = null; // DWH 5-5-09",
        "132": "\tprivate boolean bIgnoredPreRun = false; // DWH 4-10-09",
        "133": "\tprivate boolean bBeforeFirstTextRun = true; // DWH 4-15-09",
        "810": "\t\t// already processing inline text",
        "811": "//\t\tif (text.isWhiteSpace() && !isInsideTextRun()) {",
        "812": "\t\tif (bWhiteSpace && !isInsideTextRun()) {",
        "813": "\t\t\taddToDocumentPart(txt);",
        "824": "\t\t{",
        "825": "\t\t\tif (bInTextRun) // DWH 4-20-09 whole if revised",
        "829": "\t\t\t\t\tif (filetype==MSEXCEL && txt!=null && txt.length()>0 && txt.charAt(0)=='=')",
        "830": "\t\t\t\t\t\taddToTextRun(txt); // DWH 5-13-09 don't treat Excel formula as text to be translated",
        "831": "\t\t\t\t\telse if (bExcludeTextInRun || bExcludeTextInUnit) // DWH 5-29-09 don't treat as text if excluding text"
      },
      "id": 12770007,
      "filename": "OpenXMLContentFilter.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 347,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730115/",
      "md5hash": "96b290263b570b87a75a952ed93ffc0a",
      "lines": {
        "320": "\t\tdoc.add(imports);",
        "321": "\t\timports.add(new TextRun(\"org.eclipse.draw2d\", TextRun.TYPE_IMPORT));",
        "322": "\t\timports.add(new TextRun(\"org.eclipse.gef\", TextRun.TYPE_IMPORT));",
        "323": "\t\t//for (int i = 0; i < 400; i++) {",
        "324": "\t\t\tContainer block = new Block(Container.TYPE_COMMENT);",
        "325": "\t\t\tblock.add(new TextRun(\"Copyright (c) 2005 IBM Corporation and others. All rights reserved. This program and \" +",
        "221": "\t\t\t\tswitch (((TextRun)model).getType()) {",
        "48": "import org.eclipse.gef.examples.text.edit.TextFlowPart;",
        "49": "import org.eclipse.gef.examples.text.edit.TextRunTreePart;",
        "53": "import org.eclipse.gef.examples.text.model.Style;",
        "54": "import org.eclipse.gef.examples.text.model.TextRun;",
        "316": "\t\tContainer preface = new Block(Container.TYPE_PARAGRAPH);",
        "317": "\t\tpreface.add(new TextRun(\"package org.eclipse.gef.examples.text\"));",
        "222": "\t\t\t\t\tcase TextRun.TYPE_IMPORT:",
        "223": "\t\t\t\t\t\treturn new ImportPart(model);"
      },
      "id": 13730115,
      "filename": "TextEditor.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 251,
      "location": "/fop/src/main/java/org/apache/fop/render/rtf/rtflib/rtfdoc",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96991601/",
      "md5hash": "7ff410aeefd668641febfbab1eb77e67",
      "lines": {
        "64": "    /**",
        "65": "     * special RtfTextrun that is used as list item label",
        "66": "     */",
        "38": "public class RtfListItem extends RtfContainer",
        "39": "        implements IRtfTextrunContainer,",
        "144": "    /**",
        "145": "     * Get the current textrun.",
        "146": "     * @return current RtfTextrun object",
        "147": "     * @throws IOException Thrown when an IO-problem occurs",
        "148": "     */",
        "149": "    public RtfTextrun getTextrun() throws IOException {",
        "150": "        RtfTextrun textrun = RtfTextrun.getTextrun(this, writer, null);",
        "151": "        textrun.setRtfListItem(this);",
        "152": "        return textrun;",
        "153": "    }"
      },
      "id": 96991601,
      "filename": "RtfListItem.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 281,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/edit",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730126/",
      "md5hash": "326e5bec3b7d1bd9764b7749890f201a",
      "lines": {
        "115": "\t\tFontCache.checkIn(font);",
        "116": "\tgetTextFlow().setText(textRun.getText());",
        "51": "\tTextFlow flow = new TextFlow();",
        "52": "\tif (((TextRun)getModel()).getType() == TextRun.TYPE_CODE)",
        "104": "protected void refreshVisuals() {",
        "105": "\tTextRun textRun = (TextRun)getModel();",
        "106": "\tStyle style = textRun.getContainer().getStyle();",
        "107": "\tFont font = FontCache.checkOut(style.getFontFamily(), style.getFontHeight(), ",
        "29": "import org.eclipse.gef.examples.text.model.Style;",
        "30": "import org.eclipse.gef.examples.text.model.TextRun;"
      },
      "id": 13730126,
      "filename": "TextFlowPart.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 65,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/model/commands",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730150/",
      "md5hash": "12a0d846a1d58aa15d1385fcfa64f946",
      "lines": {
        "35": "",
        "36": "private TextRun getPreviousTextRun() {",
        "41": "\t}",
        "42": "\treturn (TextRun)candidate;",
        "46": "\tcontainer.remove(run);",
        "47": "\tTextRun previous = getPreviousTextRun();",
        "17": "import org.eclipse.gef.examples.text.model.ModelLocation;",
        "18": "import org.eclipse.gef.examples.text.model.TextRun;",
        "55": "public ModelLocation getResultingLocation() {",
        "56": "\tTextRun previous = getPreviousTextRun();",
        "27": "private Container container;",
        "28": "private TextRun run;",
        "30": "public MergeWithPrevious(TextEditPart part) {",
        "31": "\trun = (TextRun)part.getModel();"
      },
      "id": 13730150,
      "filename": "MergeWithPrevious.java"
    },
    {
      "repo": "http://lighttexteditor.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 58,
      "location": "/light_edit/misc/octane_reports/octane_designer/lib/swt/M6/linux/examples/text/org/eclipse/gef/examples/text/model/commands",
      "name": "lighttexteditor",
      "url": "https://searchcode.com/codesearch/view/13730149/",
      "md5hash": "90f5c35a85d57b9dd890083646a58e66",
      "lines": {
        "17": "/**",
        "18": " * Divides a TextRun into itself and another TextRun.",
        "23": "",
        "24": "private final TextRun run;",
        "25": "private final int offset;",
        "26": "private TextRun inserted;",
        "27": "",
        "28": "public SubdivideElement(TextRun run, int offset) {",
        "14": "import org.eclipse.gef.examples.text.model.ModelLocation;",
        "15": "import org.eclipse.gef.examples.text.model.TextRun;"
      },
      "id": 13730149,
      "filename": "SubdivideElement.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 43,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 24,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 19,
      "source": "Github",
      "id": 2
    }
  ]
}