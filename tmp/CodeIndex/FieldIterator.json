{
  "matchterm": "FieldIterator",
  "previouspage": null,
  "searchterm": "FieldIterator",
  "query": "FieldIterator",
  "language_filters": [
    {
      "count": 76,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 76,
  "results": [
    {
      "repo": "https://github.com/Melandro/bonita-engine.git",
      "language": "Java",
      "linescount": 766,
      "location": "/services/bonita-persistence/bonita-persistence-hibernate/src/main/java/org/bonitasoft/engine/persistence",
      "name": "bonita-engine",
      "url": "https://searchcode.com/codesearch/view/76152918/",
      "md5hash": "4a00b08aa9787319a3af78f76426814b",
      "lines": {
        "434": "                }",
        "435": "                while (fieldIterator.hasNext()) {",
        "436": "                    final Iterator<String> termIterator = terms.iterator();",
        "437": "                    final String currentField = fieldIterator.next();",
        "440": "                        builder.append(currentField).append(getLikeEscapeClause(currentTerm));",
        "441": "                        if (termIterator.hasNext() || fieldIterator.hasNext()) {",
        "426": "            fields.removeAll(specificFilters);",
        "427": "            final Iterator<String> fieldIterator = fields.iterator();"
      },
      "id": 76152918,
      "filename": "AbstractHibernatePersistenceService.java"
    },
    {
      "repo": "git://github.com/kevinweil/elephant-bird.git",
      "language": "Java",
      "linescount": 104,
      "location": "/src/test/com/twitter/elephantbird/pig/util",
      "name": "elephant-bird",
      "url": "https://searchcode.com/codesearch/view/4840480/",
      "md5hash": "8fa4546a16e2fd6b02dcd0521b579d1a",
      "lines": {
        "64": "    Assert.assertEquals(\"Incorrect data size\", 4, descriptor.getFields().size());",
        "65": "    Iterator<Descriptors.FieldDescriptor> fieldIterator = descriptor.getFields().iterator();",
        "66": "    assetFieldDescriptor(fieldIterator.next(), \"chararray\", Descriptors.FieldDescriptor.Type.STRING);",
        "67": "    assetFieldDescriptor(fieldIterator.next(), \"bytearray\", Descriptors.FieldDescriptor.Type.BYTES);",
        "68": "    assetFieldDescriptor(fieldIterator.next(), \"extra_string\", Descriptors.FieldDescriptor.Type.STRING);",
        "37": "    Assert.assertEquals(\"Incorrect data size\", 7, descriptor.getFields().size());",
        "38": "    Iterator<Descriptors.FieldDescriptor> fieldIterator = descriptor.getFields().iterator();",
        "39": "    assetFieldDescriptor(fieldIterator.next(), \"chararray\", Descriptors.FieldDescriptor.Type.STRING);",
        "40": "    assetFieldDescriptor(fieldIterator.next(), \"bytearray\", Descriptors.FieldDescriptor.Type.BYTES);",
        "41": "    assetFieldDescriptor(fieldIterator.next(), \"boolean\", Descriptors.FieldDescriptor.Type.BOOL);",
        "42": "    assetFieldDescriptor(fieldIterator.next(), \"integer\", Descriptors.FieldDescriptor.Type.INT32);",
        "43": "    assetFieldDescriptor(fieldIterator.next(), \"long\", Descriptors.FieldDescriptor.Type.INT64);",
        "44": "    assetFieldDescriptor(fieldIterator.next(), \"float\", Descriptors.FieldDescriptor.Type.FLOAT);",
        "70": "  }",
        "69": "    assetFieldDescriptor(fieldIterator.next(), \"extra_int\", Descriptors.FieldDescriptor.Type.INT32);"
      },
      "id": 4840480,
      "filename": "TestPigToProtobuf.java"
    },
    {
      "repo": "git://github.com/jbossas/jboss-as.git",
      "language": "Java",
      "linescount": 1219,
      "location": "/cmp/src/main/java/org/jboss/as/cmp/jdbc/bridge",
      "name": "jboss-as",
      "url": "https://searchcode.com/codesearch/view/7393148/",
      "md5hash": "a77ea989f750c4d6609da508e3782cf4",
      "lines": {
        "1184": "        public void removeAll() {",
        "1185": "            throw MESSAGES.emptyFieldIteratorImmutable();",
        "1090": "",
        "1091": "        public FieldIterator getDirtyIterator(CmpEntityBeanContext ctx) {",
        "1092": "            return new MaskFieldIterator((byte) (DIRTY | ADD_TO_SET_ON_UPDATE));",
        "1093": "        }",
        "1170": "",
        "1181": "            throw MESSAGES.emptyFieldIteratorImmutable();",
        "1106": "        public FieldIterator getLockedIterator(CmpEntityBeanContext ctx) {",
        "1107": "            return new MaskFieldIterator((byte) (LOCKED | ADD_TO_WHERE_ON_UPDATE));",
        "1108": "        }",
        "1171": "    public static final FieldIterator EMPTY_FIELD_ITERATOR = new FieldIterator() {",
        "442": "",
        "443": "        FieldIterator loadIter;",
        "1180": "        public void remove() {",
        "413": "",
        "414": "    public FieldIterator getLoadIterator(JDBCCMPFieldBridge requiredField,"
      },
      "id": 7393148,
      "filename": "JDBCEntityBridge.java"
    },
    {
      "repo": "https://bitbucket.org/rgatter/openmama.git",
      "language": "Java",
      "linescount": 769,
      "location": "/mamda/java/com/wombat/mamda",
      "name": "openmama",
      "url": "https://searchcode.com/codesearch/view/42897937/",
      "md5hash": "bd935c42cef41e0eb12ffb3098d14e39",
      "lines": {
        "736": "        public FieldIterator (MamdaSecurityStatusListener listener)",
        "386": "",
        "115": "",
        "116": "        mFieldIterator = new FieldIterator (this);",
        "731": "     ************************************************************/",
        "732": "    private class FieldIterator implements MamaMsgFieldIterator",
        "58": "    // Used for all field iteration processing",
        "59": "    private FieldIterator mFieldIterator = null;",
        "387": "            msg.iterateFields (mFieldIterator, null, null);",
        "735": ""
      },
      "id": 42897937,
      "filename": "MamdaSecurityStatusListener.java"
    },
    {
      "repo": "https://bitbucket.org/rgatter/openmama.git",
      "language": "Java",
      "linescount": 1461,
      "location": "/mamda/java/com/wombat/mamda",
      "name": "openmama",
      "url": "https://searchcode.com/codesearch/view/42897953/",
      "md5hash": "24701c85267f47834989caa53f9ccbde",
      "lines": {
        "992": "        ",
        "993": "        public FieldIterator (MamdaOrderImbalanceListener listener)",
        "886": "",
        "887": "            msg.iterateFields (mFieldIterator, null, null);",
        "988": "     ************************************************************/",
        "989": "    private class FieldIterator implements MamaMsgFieldIterator",
        "60": "    // Used for all field iteration processing",
        "61": "    private FieldIterator mFieldIterator = null;",
        "174": "        mFieldIterator = new FieldIterator (this);",
        "173": "        "
      },
      "id": 42897953,
      "filename": "MamdaOrderImbalanceListener.java"
    },
    {
      "repo": "https://bitbucket.org/rgatter/openmama.git",
      "language": "Java",
      "linescount": 716,
      "location": "/mamda/java/com/wombat/mamda",
      "name": "openmama",
      "url": "https://searchcode.com/codesearch/view/42897977/",
      "md5hash": "dce032cefd9e3c36f05673700ce9e84e",
      "lines": {
        "467": "        {",
        "468": "            msg.iterateFields (mFieldIterator, null, null);",
        "533": "     ************************************************************/",
        "534": "    private class FieldIterator implements MamaMsgFieldIterator",
        "55": "    // Used for all field iteration processing",
        "56": "    private FieldIterator mFieldIterator = null;",
        "537": "        ",
        "122": "        clearCache ();        ",
        "123": "        mFieldIterator = new FieldIterator (this);",
        "538": "        public FieldIterator (MamdaAuctionListener listener)"
      },
      "id": 42897977,
      "filename": "MamdaAuctionListener.java"
    },
    {
      "repo": "https://bitbucket.org/nuclos/nuclos.git",
      "language": "Java",
      "linescount": 2246,
      "location": "/nuclos-server/src/main/java/org/nuclos/server/nbo",
      "name": "nuclos",
      "url": "https://searchcode.com/codesearch/view/46076728/",
      "md5hash": "74fe39da3efc5511e4bfdaa2b37059d1",
      "lines": {
        "2163": "\t\t\t\tfinal List<FieldMeta<?>> refFieldsSorted = new ArrayList<>(metaProvider.getAllEntityFieldsByEntity(dependentEntityMeta.getUID()).values());",
        "2164": "\t\t\t\tfinal Iterator<FieldMeta<?>> fieldIterator = refFieldsSorted.iterator();",
        "2165": "\t\t\t\twhile (fieldIterator.hasNext()) {",
        "2166": "\t\t\t\t\tfinal FieldMeta<?> fieldMeta = fieldIterator.next();",
        "2167": "\t\t\t\t\t// We only need references on our entity",
        "2168": "\t\t\t\t\tif (fieldMeta.getForeignEntity() == null && fieldMeta.getForeignIntegrationPoint() == null) {",
        "2169": "\t\t\t\t\t\tfieldIterator.remove();"
      },
      "id": 46076728,
      "filename": "NuclosBusinessObjectBuilder.java"
    },
    {
      "repo": "https://github.com/uiterlix/orientdb.git",
      "language": "Java",
      "linescount": 604,
      "location": "/core/src/main/java/com/orientechnologies/orient/core/index",
      "name": "orientdb",
      "url": "https://searchcode.com/codesearch/view/95045261/",
      "md5hash": "911616e627d78962998d7e10ea99480b",
      "lines": {
        "384": "      ddl.append(fieldIterator.next());",
        "385": "      while (fieldIterator.hasNext()) {",
        "386": "        ddl.append(\", \").append(fieldIterator.next());",
        "387": "      }",
        "381": "",
        "382": "    final Iterator<String> fieldIterator = getFieldsToIndex().iterator();",
        "383": "    if (fieldIterator.hasNext()) {"
      },
      "id": 95045261,
      "filename": "OCompositeIndexDefinition.java"
    },
    {
      "repo": "https://bitbucket.org/nurdiansyah/openfire",
      "language": "Java",
      "linescount": 478,
      "location": "/src/java/org/jivesoftware/openfire/entitycaps",
      "name": "openfire",
      "url": "https://searchcode.com/codesearch/view/133625661/",
      "md5hash": "8391954552b17677539d53847fe9e53d",
      "lines": {
        "416": "\t\t\t\t\tfinal Element fieldElement = fieldIterator.next();",
        "417": "\t\t\t\t\tif (fieldElement.attributeValue(\"var\").equals(\"FORM_TYPE\")) {",
        "411": "",
        "412": "\t\t\t\tIterator<Element> fieldIterator = extensionElement",
        "414": "\t\t\t\tList<String> vars = new ArrayList<String>();",
        "415": "\t\t\t\twhile (fieldIterator != null && fieldIterator.hasNext()) {"
      },
      "id": 133625661,
      "filename": "EntityCapabilitiesManager.java"
    },
    {
      "repo": "https://bitbucket.org/aldrinleal/openejb-core",
      "language": "Java",
      "linescount": 703,
      "location": "/src/main/java/org/apache/openejb/core/timer",
      "name": "openejb-core",
      "url": "https://searchcode.com/codesearch/view/56057357/",
      "md5hash": "f022d759d09eae534c4701d5be307324",
      "lines": {
        "288": "\t\t\t\t\t\tfieldIterator.previous();",
        "289": "\t\t\t\t\t\tfieldIterator.previous();",
        "290": "\t\t\t\t\t}",
        "291": "\t\t\t\t}",
        "292": "\t\t\t} else if (fieldIterator.previousIndex() >= 1) {",
        "294": "\t\t\t\t// and increase the value",
        "295": "\t\t\t\tfieldIterator.previous();",
        "273": "",
        "274": "\t\tListIterator<FieldExpression> fieldIterator = expressions.listIterator();",
        "275": "\t\twhile (fieldIterator.hasNext() && calendar.before(stopCalendar)) {",
        "276": "\t\t\tFieldExpression expr = fieldIterator.next();",
        "277": "\t\t\tInteger value = expr.getNextValue(calendar);",
        "219": "",
        "220": "\t\tListIterator<FieldExpression> fieldIterator = expressions.listIterator();",
        "221": "\t\twhile (fieldIterator.hasNext() && calendar.after(stopCalendar)) {",
        "287": "\t\t\t\t\tif (expr.field == Calendar.DAY_OF_WEEK) {"
      },
      "id": 56057357,
      "filename": "EJBCronTrigger.java"
    },
    {
      "repo": "https://github.com/navssurtani/JBossAS51.git",
      "language": "Java",
      "linescount": 1479,
      "location": "/server/src/main/org/jboss/ejb/plugins/cmp/jdbc/bridge",
      "name": "JBossAS51",
      "url": "https://searchcode.com/codesearch/view/109277741/",
      "md5hash": "36546bd48b1695641bf4a9609e6acdf3",
      "lines": {
        "1345": "",
        "1346": "      public FieldIterator getLockedIterator(EntityEnterpriseContext ctx)",
        "1347": "      {",
        "1348": "         return new MaskFieldIterator((byte)(LOCKED | ADD_TO_WHERE_ON_UPDATE));",
        "1329": "         return new MaskFieldIterator((byte)(DIRTY | ADD_TO_SET_ON_UPDATE));",
        "714": "",
        "715": "   public FieldIterator getDirtyIterator(EntityEnterpriseContext ctx)",
        "1326": "",
        "1328": "      {",
        "528": "",
        "529": "      FieldIterator loadIter;",
        "1424": "   public static final FieldIterator EMPTY_FIELD_ITERATOR = new FieldIterator()",
        "1451": "   public static interface FieldIterator",
        "1423": "",
        "1327": "      public FieldIterator getDirtyIterator(EntityEnterpriseContext ctx)",
        "1450": ""
      },
      "id": 109277741,
      "filename": "JDBCEntityBridge.java"
    },
    {
      "repo": "https://github.com/jbossejb3/jboss-as.git",
      "language": "Java",
      "linescount": 1223,
      "location": "/cmp/src/main/java/org/jboss/as/cmp/jdbc/bridge",
      "name": "jboss-as",
      "url": "https://searchcode.com/codesearch/view/114039662/",
      "md5hash": "20b34b1d28672b023c0ccca0cfb29765",
      "lines": {
        "1195": "",
        "1174": "",
        "1094": "",
        "1095": "        public FieldIterator getDirtyIterator(CmpEntityBeanContext ctx) {",
        "1096": "            return new MaskFieldIterator((byte) (DIRTY | ADD_TO_SET_ON_UPDATE));",
        "1097": "        }",
        "1175": "    public static final FieldIterator EMPTY_FIELD_ITERATOR = new FieldIterator() {",
        "1196": "    public static interface FieldIterator {",
        "593": "",
        "594": "    public FieldIterator getDirtyIterator(CmpEntityBeanContext ctx) {",
        "1109": "",
        "1110": "        public FieldIterator getLockedIterator(CmpEntityBeanContext ctx) {",
        "1111": "            return new MaskFieldIterator((byte) (LOCKED | ADD_TO_WHERE_ON_UPDATE));",
        "441": "",
        "442": "        FieldIterator loadIter;",
        "412": "",
        "413": "    public FieldIterator getLoadIterator(JDBCCMPFieldBridge requiredField,"
      },
      "id": 114039662,
      "filename": "JDBCEntityBridge.java"
    },
    {
      "repo": "git://github.com/jbossas/jboss-as.git",
      "language": "Java",
      "linescount": 474,
      "location": "/jacorb/src/main/java/org/jboss/as/jacorb/rmi",
      "name": "jboss-as",
      "url": "https://searchcode.com/codesearch/view/7392352/",
      "md5hash": "71b7bdd555f1846158c273fe005b53a2",
      "lines": {
        "289": "        */",
        "290": "        Iterator fieldIterator = Arrays.asList(type.getFields()).iterator();",
        "291": "",
        "292": "        while (fieldIterator.hasNext()) {",
        "293": "",
        "294": "            Field f = (Field) fieldIterator.next();",
        "440": "        if (!cannotBeRemote) {",
        "441": "            Iterator fieldIterator = Arrays.asList(type.getFields()).iterator();",
        "442": "",
        "443": "            while (fieldIterator.hasNext()) {",
        "444": "                Field f = (Field) fieldIterator.next();",
        "445": ""
      },
      "id": 7392352,
      "filename": "RmiIdlUtil.java"
    },
    {
      "repo": "https://code.google.com/p/google-http-java-client/",
      "language": "Java",
      "linescount": 269,
      "location": "/google-http-client/src/main/java/com/google/api/client/util",
      "name": "google-http-java-client",
      "url": "https://searchcode.com/codesearch/view/782816/",
      "md5hash": "3fa671e6b6fa841fe75dddf892d7a292",
      "lines": {
        "264": "      }",
        "265": "      fieldIterator.remove();",
        "236": "    /** Iterator over the fields. */",
        "237": "    private final Iterator<Map.Entry<String, Object>> fieldIterator;",
        "242": "    EntryIterator(DataMap.EntrySet dataEntrySet) {",
        "243": "      fieldIterator = dataEntrySet.iterator();",
        "247": "    public boolean hasNext() {",
        "248": "      return fieldIterator.hasNext() || unknownIterator.hasNext();",
        "252": "      if (!startedUnknown) {",
        "253": "        if (fieldIterator.hasNext()) {",
        "254": "          return fieldIterator.next();",
        "255": "        }"
      },
      "id": 782816,
      "filename": "GenericData.java"
    },
    {
      "repo": "https://github.com/itsvikramagr/presto.git",
      "language": "Java",
      "linescount": 191,
      "location": "/presto-main/src/main/java/com/facebook/presto/operator/index",
      "name": "presto",
      "url": "https://searchcode.com/codesearch/view/95981399/",
      "md5hash": "f8dd805188ca77a8b9d9abedfd302891",
      "lines": {
        "117": "            }",
        "118": "            Iterator<Integer> fieldIterator = fields.iterator();",
        "119": "            int firstField = fieldIterator.next();",
        "120": "            while (fieldIterator.hasNext()) {",
        "121": "                if (!fieldEquals(cursor, firstField, fieldIterator.next())) {",
        "122": "                    return false;"
      },
      "id": 95981399,
      "filename": "FieldSetFilteringRecordSet.java"
    },
    {
      "repo": "https://github.com/treejames/openfire-1.git",
      "language": "Java",
      "linescount": 481,
      "location": "/openfire_src/src/java/org/jivesoftware/openfire/entitycaps",
      "name": "openfire-1",
      "url": "https://searchcode.com/codesearch/view/98284858/",
      "md5hash": "0c5c07c74218b037696101808b8745c5",
      "lines": {
        "417": "\t\t\t\tList<String> vars = new ArrayList<String>();",
        "418": "\t\t\t\twhile (fieldIterator != null && fieldIterator.hasNext()) {",
        "419": "\t\t\t\t\tfinal Element fieldElement = fieldIterator.next();",
        "420": "\t\t\t\t\tif (fieldElement.attributeValue(\"var\").equals(\"FORM_TYPE\")) {",
        "414": "",
        "415": "\t\t\t\tIterator<Element> fieldIterator = extensionElement"
      },
      "id": 98284858,
      "filename": "EntityCapabilitiesManager.java"
    },
    {
      "repo": "https://github.com/commoncrawl/commoncrawl-crawler.git",
      "language": "Java",
      "linescount": 898,
      "location": "/src/org/commoncrawl/rpc/compiler",
      "name": "commoncrawl-crawler",
      "url": "https://searchcode.com/codesearch/view/101728617/",
      "md5hash": "7161f3bfe59afb7420a6478c96e09eab",
      "lines": {
        "673": "      else { ",
        "674": "      \tfieldIterator = fields;",
        "676": "      ",
        "677": "      for (JField<JavaType> jf : fieldIterator) {",
        "668": "      ",
        "669": "      Iterable<JField<JavaType>> fieldIterator = null;",
        "670": "      if (getKeyCount() != 0) { ",
        "671": "      \tfieldIterator = getKeys();"
      },
      "id": 101728617,
      "filename": "JRecord.java"
    },
    {
      "repo": "http://orient.googlecode.com/svn/",
      "language": "Java",
      "linescount": 288,
      "location": "/tags/1.0rc6/core/src/main/java/com/orientechnologies/orient/core/index",
      "name": "orient",
      "url": "https://searchcode.com/codesearch/view/4427893/",
      "md5hash": "10b89889721b79b1b78441fdb3c9934e",
      "lines": {
        "233": "",
        "234": "        final Iterator<String> fieldIterator = getFields().iterator();",
        "235": "        if (fieldIterator.hasNext()) {",
        "236": "            ddl.append(fieldIterator.next());",
        "237": "            while (fieldIterator.hasNext()) {",
        "238": "                ddl.append(\", \").append(fieldIterator.next());",
        "239": "            }"
      },
      "id": 4427893,
      "filename": "OCompositeIndexDefinition.java"
    },
    {
      "repo": "http://orient.googlecode.com/svn/",
      "language": "Java",
      "linescount": 525,
      "location": "/trunk/core/src/main/java/com/orientechnologies/orient/core/index",
      "name": "orient",
      "url": "https://searchcode.com/codesearch/view/4431937/",
      "md5hash": "aed879180234c916a32270e1cd7bbc73",
      "lines": {
        "384": "      ddl.append(fieldIterator.next());",
        "385": "      while (fieldIterator.hasNext()) {",
        "386": "        ddl.append(\", \").append(fieldIterator.next());",
        "387": "      }",
        "381": "",
        "382": "    final Iterator<String> fieldIterator = getFieldsToIndex().iterator();",
        "383": "    if (fieldIterator.hasNext()) {"
      },
      "id": 4431937,
      "filename": "OCompositeIndexDefinition.java"
    },
    {
      "repo": "http://orient.googlecode.com/svn/",
      "language": "Java",
      "linescount": 286,
      "location": "/tags/1.0rc8/core/src/main/java/com/orientechnologies/orient/core/index",
      "name": "orient",
      "url": "https://searchcode.com/codesearch/view/10490252/",
      "md5hash": "cf8d95e084d38f6eaa81da7e99ab575d",
      "lines": {
        "240": "\t\tfinal Iterator<String> fieldIterator = getFields().iterator();",
        "241": "\t\tif (fieldIterator.hasNext()) {",
        "242": "\t\t\tddl.append(fieldIterator.next());",
        "243": "\t\t\twhile (fieldIterator.hasNext()) {",
        "244": "\t\t\t\tddl.append(\", \").append(fieldIterator.next());",
        "245": "\t\t\t}",
        "239": ""
      },
      "id": 10490252,
      "filename": "OCompositeIndexDefinition.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 38,
      "source": "Github",
      "id": 2
    },
    {
      "count": 31,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 7,
      "source": "Google Code",
      "id": 1
    }
  ]
}