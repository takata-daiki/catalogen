{
  "matchterm": "ObjectsPool",
  "previouspage": null,
  "searchterm": "ObjectsPool",
  "query": "ObjectsPool",
  "language_filters": [
    {
      "count": 37,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 37,
  "results": [
    {
      "repo": "https://bitbucket.org/smartinezgd/pymoult",
      "language": "Java",
      "linescount": 55,
      "location": "/jamoult/src/lowlevel/data_access",
      "name": "pymoult",
      "url": "https://searchcode.com/codesearch/view/137053453/",
      "md5hash": "bc05ed659bb60ca0742180e1d2647180",
      "lines": {
        "7": "",
        "8": "public class ObjectsPool implements Iterable<WeakReference<Object>> {",
        "9": "    private static ObjectsPool objectsPool;",
        "10": "    ",
        "11": "    /* Returns the instance of ObjectsPool. Raises an error if no",
        "12": "        ObjectsPoolinstance was created */",
        "13": "    public static ObjectsPool getObjectsPool() {",
        "14": "        if (ObjectsPool.objectsPool == null)",
        "15": "        \tObjectsPool.objectsPool = new ObjectsPool();",
        "16": "        return ObjectsPool.objectsPool;",
        "17": "    }",
        "22": "",
        "23": "    private ObjectsPool() {",
        "24": "        /* set_instance_hook(ObjectsPool.objectsPool.add) */",
        "25": "    }"
      },
      "id": 137053453,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "https://github.com/mustafakosker/banana.git",
      "language": "Java",
      "linescount": 106,
      "location": "/banana/src/net/yadan/banana/pool",
      "name": "banana",
      "url": "https://searchcode.com/codesearch/view/75669764/",
      "md5hash": "b8b9fa0f1b93d2c6d28b1e73a92ff834",
      "lines": {
        "8": "public class ObjectsPool {",
        "18": "",
        "19": "  public ObjectsPool(int poolSize, boolean lazy, PoolExhaustedPolicy policy, Factory factory) {",
        "7": ""
      },
      "id": 75669764,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "https://github.com/rdenadai/Pydev.git",
      "language": "Java",
      "linescount": 128,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/67067050/",
      "md5hash": "30b6f48ca3560a74b918c003e70f5704",
      "lines": {
        "117": "     */",
        "102": "     */",
        "103": "    public static class ObjectsPoolMap extends HashMap<String, String>{",
        "25": " */",
        "26": "public final class ObjectsPool {",
        "27": "    ",
        "28": "    private ObjectsPool(){",
        "118": "    public static String internLocal(ObjectsPoolMap mapWithInternedStrings, String string){"
      },
      "id": 67067050,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 126,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8168474/",
      "md5hash": "758568f598723b43b48cd220886e62c1",
      "lines": {
        "115": "     */",
        "116": "    public static String internLocal(ObjectsPoolMap mapWithInternedStrings, String string) {",
        "101": "     */",
        "102": "    public static final class ObjectsPoolMap extends HashMap<String, String> {",
        "25": " */",
        "26": "public final class ObjectsPool {",
        "27": "",
        "28": "    private ObjectsPool() {"
      },
      "id": 8168474,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "https://github.com/zbika73/Pydev.git",
      "language": "Java",
      "linescount": 80,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/110501457/",
      "md5hash": "9116a995b470d4d6a8ef58155538a061",
      "lines": {
        "19": " */",
        "20": "public final class ObjectsPool {",
        "21": "    ",
        "54": "     */",
        "55": "    public static class ObjectsPoolMap extends HashMap<String, String>{",
        "22": "    private ObjectsPool(){",
        "70": "    public static String internLocal(ObjectsPoolMap mapWithInternedStrings, String string){",
        "69": "     */"
      },
      "id": 110501457,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "https://github.com/airadier/Pydev_web2py.git",
      "language": "Java",
      "linescount": 86,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core",
      "name": "Pydev_web2py",
      "url": "https://searchcode.com/codesearch/view/113970751/",
      "md5hash": "12f46d0d1ff99bcaf1a42e0f7bd5b572",
      "lines": {
        "76": "    public static String internLocal(ObjectsPoolMap mapWithInternedStrings, String string){",
        "75": "     */",
        "25": " */",
        "26": "public final class ObjectsPool {",
        "27": "    ",
        "28": "    private ObjectsPool(){",
        "61": "    public static class ObjectsPoolMap extends HashMap<String, String>{",
        "60": "     */"
      },
      "id": 113970751,
      "filename": "ObjectsPool.java"
    },
    {
      "repo": "https://github.com/mustafakosker/banana.git",
      "language": "Java",
      "linescount": 114,
      "location": "/misc/src/net/yadan/banana/pool",
      "name": "banana",
      "url": "https://searchcode.com/codesearch/view/75669327/",
      "md5hash": "02f8611843039a25553c0af2115b5445",
      "lines": {
        "66": "    int num = 10000000;",
        "67": "    final ObjectsPool pool = new ObjectsPool(num, false, PoolExhaustedPolicy.BLOCK, new Factory() {",
        "4": "",
        "5": "import net.yadan.banana.pool.ObjectsPool.Factory;",
        "6": "import net.yadan.banana.pool.ObjectsPool.PoolExhaustedPolicy;",
        "7": "import net.yadan.banana.pool.ObjectsPool.PooledObject;",
        "8": "import net.yadan.utils.Util;",
        "13": "",
        "14": "    private ObjectsPool m_pool;",
        "20": "",
        "21": "    public BenchThread(ObjectsPool pool, int acquiresPerThread) {"
      },
      "id": 75669327,
      "filename": "Throughput.java"
    },
    {
      "repo": "https://github.com/rdenadai/Pydev.git",
      "language": "Java",
      "linescount": 855,
      "location": "/plugins/com.python.pydev.analysis/src/com/python/pydev/analysis/additionalinfo",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/67064137/",
      "md5hash": "86e5b33ca66e1000d6fc19074112e7bc",
      "lines": {
        "385": "    \t\t                                ClassInfo info = new ClassInfo(",
        "34": "import org.python.pydev.core.ObjectsPool;",
        "387": "    \t\t                                        key.name, ",
        "260": "            AttrInfo info = new AttrInfo(",
        "261": "                    ObjectsPool.internUnsynched(FullRepIterable.getFirstPart(rep)), ",
        "262": "                    moduleName, ",
        "33": "import org.python.pydev.core.ModulesKeyForZip;",
        "263": "                    ObjectsPool.internUnsynched(path), ",
        "396": "    \t\t                                FuncInfo info2 = new FuncInfo(",
        "386": "    \t\t                                        ObjectsPool.internUnsynched(((NameTok)((ClassDef)entry.node).name).id), ",
        "398": "    \t\t                                        key.name, ",
        "397": "    \t\t                                        ObjectsPool.internUnsynched(((NameTok)((FunctionDef) entry.node).name).id), ",
        "422": "\t\t\t        }//end lock ObjectsPool.lock",
        "388": "    \t\t                                        ObjectsPool.internUnsynched(pathToRoot.o1),",
        "399": "    \t\t                                        ObjectsPool.internUnsynched(pathToRoot.o1),",
        "421": "    \t\t\t        "
      },
      "id": 67064137,
      "filename": "AbstractAdditionalTokensInfo.java"
    },
    {
      "repo": "https://bitbucket.org/sdorra/svnkit",
      "language": "Java",
      "linescount": 30,
      "location": "/svnkit/src/main/java/org/tmatesoft/svn/core/internal/wc",
      "name": "svnkit",
      "url": "https://searchcode.com/codesearch/view/128610508/",
      "md5hash": "8d76e3c91aa6401fad13d145ece28c15",
      "lines": {
        "5": "",
        "6": "public class SVNObjectsPool {",
        "7": "    ",
        "8": "    private Map<Object, Object> objectsPool = new HashMap<Object, Object>();",
        "11": "        if (value != null) {",
        "12": "            Object existingValue = objectsPool.get(value);",
        "15": "            } else {",
        "16": "                objectsPool.put(value, value);",
        "22": "    public void clear() {",
        "23": "        objectsPool = new HashMap<Object, Object>();",
        "26": "    public int size() {",
        "27": "        return objectsPool.size();"
      },
      "id": 128610508,
      "filename": "SVNObjectsPool.java"
    },
    {
      "repo": "https://bitbucket.org/sdorra/svnkit-mq",
      "language": "Java",
      "linescount": 30,
      "location": "/svnkit/src/main/java/org/tmatesoft/svn/core/internal/wc",
      "name": "svnkit-mq",
      "url": "https://searchcode.com/codesearch/view/128612007/",
      "md5hash": "8d76e3c91aa6401fad13d145ece28c15",
      "lines": {
        "5": "",
        "6": "public class SVNObjectsPool {",
        "7": "    ",
        "8": "    private Map<Object, Object> objectsPool = new HashMap<Object, Object>();",
        "11": "        if (value != null) {",
        "12": "            Object existingValue = objectsPool.get(value);",
        "15": "            } else {",
        "16": "                objectsPool.put(value, value);",
        "22": "    public void clear() {",
        "23": "        objectsPool = new HashMap<Object, Object>();",
        "26": "    public int size() {",
        "27": "        return objectsPool.size();"
      },
      "id": 128612007,
      "filename": "SVNObjectsPool.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 836,
      "location": "/plugins/com.python.pydev.analysis/src/com/python/pydev/analysis/additionalinfo",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8170704/",
      "md5hash": "4c233fca2f9ffb31fc39c8ac6daef3f7",
      "lines": {
        "259": "            //no intern construct (locked in the loop that calls this method)",
        "388": "                                            FuncInfo info2 = new FuncInfo(",
        "37": "import org.python.pydev.core.ModulesKeyForZip;",
        "262": "            add(info, doOn);",
        "391": "                                                    key.name, ObjectsPool.internUnsynched(pathToRoot.o1), false);",
        "389": "                                                    ObjectsPool",
        "338": "                synchronized (this.lock) {",
        "339": "                    synchronized (ObjectsPool.lock) {",
        "340": "                        key.name = ObjectsPool.internUnsynched(key.name);",
        "260": "            AttrInfo info = new AttrInfo(ObjectsPool.internUnsynched(FullRepIterable.getFirstPart(rep)), moduleName,",
        "38": "import org.python.pydev.core.ObjectsPool;",
        "390": "                                                            .internUnsynched(((NameTok) ((FunctionDef) entry.node).name).id),",
        "413": "",
        "414": "                    }//end lock ObjectsPool.lock",
        "261": "                    ObjectsPool.internUnsynched(path), false);"
      },
      "id": 8170704,
      "filename": "AbstractAdditionalTokensInfo.java"
    },
    {
      "repo": "https://bitbucket.org/sdorra/svnkit-old",
      "language": "Java",
      "linescount": 30,
      "location": "/svnkit/src/main/java/org/tmatesoft/svn/core/internal/wc",
      "name": "svnkit-old",
      "url": "https://searchcode.com/codesearch/view/102078300/",
      "md5hash": "efce173dee32b3bb623576bda9c9ecdc",
      "lines": {
        "5": "",
        "6": "public class SVNObjectsPool {",
        "7": "    ",
        "8": "    private Map objectsPool = new HashMap();",
        "11": "        if (value != null) {",
        "12": "            Object existingValue = objectsPool.get(value);",
        "15": "            } else {",
        "16": "                objectsPool.put(value, value);",
        "22": "    public void clear() {",
        "23": "        objectsPool = new HashMap();",
        "26": "    public int size() {",
        "27": "        return objectsPool.size();"
      },
      "id": 102078300,
      "filename": "SVNObjectsPool.java"
    },
    {
      "repo": "git://github.com/mkszuba/kolmafia.git",
      "language": "Java",
      "linescount": 30,
      "location": "/lib/org/tmatesoft/svn/core/internal/wc",
      "name": "kolmafia",
      "url": "https://searchcode.com/codesearch/view/58756205/",
      "md5hash": "8d76e3c91aa6401fad13d145ece28c15",
      "lines": {
        "5": "",
        "6": "public class SVNObjectsPool {",
        "7": "    ",
        "8": "    private Map<Object, Object> objectsPool = new HashMap<Object, Object>();",
        "11": "        if (value != null) {",
        "12": "            Object existingValue = objectsPool.get(value);",
        "15": "            } else {",
        "16": "                objectsPool.put(value, value);",
        "22": "    public void clear() {",
        "23": "        objectsPool = new HashMap<Object, Object>();",
        "26": "    public int size() {",
        "27": "        return objectsPool.size();"
      },
      "id": 58756205,
      "filename": "SVNObjectsPool.java"
    },
    {
      "repo": "https://github.com/rdenadai/Pydev.git",
      "language": "Java",
      "linescount": 116,
      "location": "/plugins/com.python.pydev.analysis/src/com/python/pydev/analysis/additionalinfo",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/67064126/",
      "md5hash": "b68e6204c61016ac247121dc66592af3",
      "lines": {
        "39": "    public AbstractInfo(String name, String moduleDeclared, String path) {",
        "40": "        synchronized (ObjectsPool.lock) {",
        "41": "            this.name = ObjectsPool.internUnsynched(name);",
        "42": "            this.moduleDeclared = ObjectsPool.internUnsynched(moduleDeclared);",
        "43": "            this.path = ObjectsPool.internUnsynched(path);",
        "44": "        }",
        "13": "",
        "14": "import org.python.pydev.core.ObjectsPool;"
      },
      "id": 67064126,
      "filename": "AbstractInfo.java"
    },
    {
      "repo": "https://github.com/rdenadai/Pydev.git",
      "language": "Java",
      "linescount": 1290,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core/docutils",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/67067345/",
      "md5hash": "e1eb2e5fc789d257d6d8fe7e3518d6b8",
      "lines": {
        "624": "                        addTo.add(ObjectsPool.internUnsynched(string.substring(last, i)));",
        "638": "                    addTo.add(ObjectsPool.internUnsynched(string.substring(last, len)));",
        "635": "                    addTo.add(ObjectsPool.internUnsynched(string)); //it is equal to the original (no char to split)",
        "612": "    public static void splitWithIntern(String string, char toSplit, Collection<String> addTo) {",
        "613": "        synchronized (ObjectsPool.lock) {",
        "634": "                if(last == 0 && len > 0){",
        "31": "import org.python.pydev.core.ObjectsPool;",
        "637": "                }else if(last < len){",
        "30": "import org.eclipse.core.runtime.Assert;",
        "623": "                    if(last != i){"
      },
      "id": 67067345,
      "filename": "StringUtils.java"
    },
    {
      "repo": "https://github.com/rdenadai/Pydev.git",
      "language": "Java",
      "linescount": 238,
      "location": "/plugins/org.python.pydev.parser/src/org/python/pydev/parser/jython",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/67073183/",
      "md5hash": "311ff60b877147de69807eadbd42905b",
      "lines": {
        "194": "",
        "195": "    private final ObjectsPoolMap interned = new ObjectsPoolMap(); ",
        "198": "        if (bufpos >= tokenBegin) {",
        "199": "            return ObjectsPool.internLocal(interned, new String(buffer, tokenBegin, bufpos - tokenBegin+1));",
        "200": "        } else {",
        "201": "            return ObjectsPool.internLocal(interned, new String(buffer, tokenBegin, buffer.length - tokenBegin+1));",
        "10": "",
        "11": "import org.python.pydev.core.ObjectsPool;",
        "12": "import org.python.pydev.core.ObjectsPool.ObjectsPoolMap;",
        "13": "import org.python.pydev.core.log.Log;"
      },
      "id": 67073183,
      "filename": "FastCharStream.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 1085,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core/docutils",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8168531/",
      "md5hash": "7e7003e385a7f9f369257897fcf7687f",
      "lines": {
        "32": "import org.python.pydev.core.ObjectsPool;",
        "544": "                if (last == 0 && len > 0) {",
        "547": "                } else if (last < len) {",
        "548": "                    addTo.add(ObjectsPool.internUnsynched(string.substring(last, len)));",
        "533": "                    if (last != i) {",
        "534": "                        addTo.add(ObjectsPool.internUnsynched(string.substring(last, i)));",
        "545": "                    addTo.add(ObjectsPool.internUnsynched(string)); //it is equal to the original (no char to split)",
        "522": "    public static void splitWithIntern(String string, char toSplit, Collection<String> addTo) {",
        "523": "        synchronized (ObjectsPool.lock) {",
        "31": ""
      },
      "id": 8168531,
      "filename": "StringUtils.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 123,
      "location": "/plugins/com.python.pydev.analysis/src/com/python/pydev/analysis/additionalinfo",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8170706/",
      "md5hash": "ed3b8beb04de251f6af5f443db090e3d",
      "lines": {
        "37": "    public AbstractInfo(String name, String moduleDeclared, String path) {",
        "38": "        synchronized (ObjectsPool.lock) {",
        "39": "            this.name = ObjectsPool.internUnsynched(name);",
        "40": "            this.moduleDeclared = ObjectsPool.internUnsynched(moduleDeclared);",
        "41": "            this.path = ObjectsPool.internUnsynched(path);",
        "42": "        }",
        "13": "",
        "14": "import org.python.pydev.core.ObjectsPool;"
      },
      "id": 8170706,
      "filename": "AbstractInfo.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 38,
      "location": "/plugins/org.python.pydev.core/tests/org/python/pydev/core",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8168599/",
      "md5hash": "0c01fa08c0afb60e7b1725a10b3fb72c",
      "lines": {
        "32": "        //                ObjectsPool.internUnsynched(\"foo\");",
        "22": " */",
        "23": "public class ObjectsPoolTest extends TestCase {",
        "24": "",
        "25": "    public void testObjectsPool() throws Exception {",
        "26": "        String intern = ObjectsPool.intern(new String(\"foo\"));",
        "27": "        assertSame(ObjectsPool.intern(new String(\"foo\")), intern);",
        "28": "",
        "29": "        //        Timer t = new Timer();",
        "30": "        //        synchronized (ObjectsPool.lock){",
        "31": "        //            for(int i=0;i<100000000;i++){"
      },
      "id": 8168599,
      "filename": "ObjectsPoolTest.java"
    },
    {
      "repo": "git://github.com/aptana/Pydev.git",
      "language": "Java",
      "linescount": 412,
      "location": "/plugins/org.python.pydev.core/src/org/python/pydev/core/cache",
      "name": "Pydev",
      "url": "https://searchcode.com/codesearch/view/8168569/",
      "md5hash": "8058120bc0c84723cf34c17f6a4ed2d1",
      "lines": {
        "27": "import org.python.pydev.shared_core.cache.Cache;",
        "189": "                            case 0:",
        "211": "                            //File also written.",
        "212": "                            key.key.file = new File(ObjectsPool.internLocal(objectsPoolMap, buf.toString()));",
        "25": "import org.python.pydev.core.ObjectsPool;",
        "24": "import org.python.pydev.core.FastBufferedReader;",
        "153": "     * Loads from a reader a string that was acquired from writeTo.",
        "26": "import org.python.pydev.core.ObjectsPool.ObjectsPoolMap;",
        "155": "     */",
        "156": "    public static DiskCache loadFrom(FastBufferedReader reader, ObjectsPoolMap objectsPoolMap) throws IOException {",
        "154": "     * @param objectsPoolMap ",
        "190": "                                key = new CompleteIndexKey(ObjectsPool.internLocal(objectsPoolMap, buf.toString()));"
      },
      "id": 8168569,
      "filename": "DiskCache.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 32,
      "source": "Github",
      "id": 2
    },
    {
      "count": 5,
      "source": "Bitbucket",
      "id": 3
    }
  ]
}