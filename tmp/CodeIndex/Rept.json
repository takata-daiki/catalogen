{
  "matchterm": "Rept",
  "previouspage": null,
  "searchterm": "Rept",
  "query": "Rept",
  "language_filters": [
    {
      "count": 39,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 39,
  "results": [
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 36,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398795/",
      "md5hash": "efb35888942787ab9194537a3d960213",
      "lines": {
        "9": "",
        "10": "public class REPT extends AbstractFunction"
      },
      "id": 105398795,
      "filename": "REPT.java"
    },
    {
      "repo": "https://github.com/j4ckfrost/android_art.git",
      "language": "Java",
      "linescount": 428,
      "location": "/test/023-many-interfaces/src",
      "name": "android_art",
      "url": "https://searchcode.com/codesearch/view/97510403/",
      "md5hash": "ed6c717f1e8e28bf3c38e735ec4f6643",
      "lines": {
        "208": "        report(\"testIface001\", start, end, iter, rept);",
        "195": "        int iter = 32768;",
        "196": "        int rept = 16;",
        "228": "        report(\"testVirt049\", start, end, iter, rept);",
        "173": "    private static void report(String label, long start, long end, int iter,",
        "174": "            int rept) {",
        "207": "        end = System.nanoTime();",
        "176": "            System.out.println(label + \": \" + (end - start) / 1000 + \"us\"",
        "177": "                    + \"  (\" + (end - start) / (iter*rept) + \"ns per call)\");",
        "227": "        end = System.nanoTime();",
        "212": "        end = System.nanoTime();",
        "213": "        report(\"testIface049\", start, end, iter, rept);",
        "217": "        end = System.nanoTime();",
        "218": "        report(\"testIface099\", start, end, iter, rept);",
        "222": "        end = System.nanoTime();",
        "223": "        report(\"testVirt001\", start, end, iter, rept);"
      },
      "id": 97510403,
      "filename": "ManyInterfaces.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 204,
      "location": "/org.boris.expr/java/test/org/boris/expr",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105398301/",
      "md5hash": "fd1a6ba159ce79570abe9653fcda5c88",
      "lines": {
        "144": "        assertException(\"rept(1,1,1)\");",
        "24": "import org.boris.expr.function.excel.REPLACE;",
        "25": "import org.boris.expr.function.excel.REPT;",
        "138": "",
        "139": "    public void testREPT() throws Exception {",
        "140": "        REPT r = new REPT();",
        "141": "        assertResult(\"REPT({1},3.2)\", \"111\");",
        "142": "        assertEquals(eval(r, \"*-\", 3), \"*-*-*-\");",
        "143": "        assertEquals(eval(r, \"-\", 10), \"----------\");"
      },
      "id": 105398301,
      "filename": "ExcelTextFunctionsTest.java"
    },
    {
      "repo": "https://bitbucket.org/adoptopenjdk/jdk8-corba",
      "language": "Java",
      "linescount": 2085,
      "location": "/src/share/classes/sun/rmi/rmic/iiop",
      "name": "jdk8-corba",
      "url": "https://searchcode.com/codesearch/view/103345929/",
      "md5hash": "761fb5605153102b29832c36edd39ee4",
      "lines": {
        "1570": "        String repID = ct.getRepositoryID().substring( 4 );",
        "1571": "        StringTokenizer rept = new StringTokenizer( repID,\"/\" );",
        "1572": "        if ( rept.countTokens() < 2 ) return;",
        "1573": "",
        "1574": "        while ( rept.hasMoreTokens() )",
        "1575": "            vec.addElement( rept.nextToken() );",
        "1576": "        vec.removeElementAt( vec.size() - 1 );"
      },
      "id": 103345929,
      "filename": "IDLGenerator.java"
    },
    {
      "repo": "https://github.com/turian/kea-service.git",
      "language": "Java",
      "linescount": 2010,
      "location": "/patch/filters",
      "name": "kea-service",
      "url": "https://searchcode.com/codesearch/view/110944754/",
      "md5hash": "3779c1a14baf3d4857ca0f773f53395d",
      "lines": {
        "995": "\t\t//FilteredClassifier fclass = new FilteredClassifier();\t\t",
        "996": "\t\t//fclass.setClassifier(new REPTree());",
        "973": "\t\t/*",
        "974": "\t\t * REPTree rept = new REPTree();",
        "975": "\t\t //results are worse!",
        "976": "\t\t  rept.setNoPruning(true);",
        "977": "\t\t  String[] ops_rept = {",
        "978": "\t\t  new String(\"-M\"), ",
        "990": "\t\t  bagging.setClassifier(rept);",
        "991": "\t\t */",
        "988": "",
        "989": "\t\t  rept.setOptions(ops_rept);",
        "958": "",
        "959": "\t\t/* III. Bagging with REPTrees"
      },
      "id": 110944754,
      "filename": "KEAFilter.java"
    },
    {
      "repo": "git://github.com/GregBowyer/ManagedRuntimeInitiative.git",
      "language": "Java",
      "linescount": 2085,
      "location": "/MRI-J/corba/src/share/classes/sun/rmi/rmic/iiop",
      "name": "ManagedRuntimeInitiative",
      "url": "https://searchcode.com/codesearch/view/17094243/",
      "md5hash": "ff781b7efb0d5c1737c79a8ecb893e2a",
      "lines": {
        "1570": "        String repID = ct.getRepositoryID().substring( 4 );",
        "1571": "        StringTokenizer rept = new StringTokenizer( repID,\"/\" );",
        "1572": "        if ( rept.countTokens() < 2 ) return;",
        "1573": "",
        "1574": "        while ( rept.hasMoreTokens() )",
        "1575": "            vec.addElement( rept.nextToken() );",
        "1576": "        vec.removeElementAt( vec.size() - 1 );"
      },
      "id": 17094243,
      "filename": "IDLGenerator.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 830,
      "location": "/components/bio-formats/src/loci/formats/in",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15643776/",
      "md5hash": "4ef705182acff9d2d02e50e904782bb8",
      "lines": {
        "632": "          meta.put(measureInfo + \"colT\", new Float(colT));",
        "633": "          meta.put(measureInfo + \"repT\", new Float(repT));",
        "183": "  public float colT;",
        "184": "  public float repT;",
        "569": "        colT = in.readFloat();",
        "570": "        repT = in.readFloat();"
      },
      "id": 15643776,
      "filename": "SDTInfo.java"
    },
    {
      "repo": "https://github.com/dsths/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/100412065/",
      "md5hash": "97269efda67b1f67b152b3400030b364",
      "lines": {
        "894": "",
        "895": "    // Todo: Rept Repeats text a given number of times. Use REPT to fill a cell"
      },
      "id": 100412065,
      "filename": "Excel.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 1111,
      "location": "/src/main/mondrian/olap/fun/vba",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69456290/",
      "md5hash": "d000de4330f4246f9ea598129c490c5c",
      "lines": {
        "894": "",
        "895": "    // Todo: Rept Repeats text a given number of times. Use REPT to fill a cell"
      },
      "id": 69456290,
      "filename": "Excel.java"
    },
    {
      "repo": "https://bitbucket.org/hamishm/haiku-jdk-corba",
      "language": "Java",
      "linescount": 2085,
      "location": "/src/share/classes/sun/rmi/rmic/iiop",
      "name": "haiku-jdk-corba",
      "url": "https://searchcode.com/codesearch/view/127225148/",
      "md5hash": "761fb5605153102b29832c36edd39ee4",
      "lines": {
        "1570": "        String repID = ct.getRepositoryID().substring( 4 );",
        "1571": "        StringTokenizer rept = new StringTokenizer( repID,\"/\" );",
        "1572": "        if ( rept.countTokens() < 2 ) return;",
        "1573": "",
        "1574": "        while ( rept.hasMoreTokens() )",
        "1575": "            vec.addElement( rept.nextToken() );",
        "1576": "        vec.removeElementAt( vec.size() - 1 );"
      },
      "id": 127225148,
      "filename": "IDLGenerator.java"
    },
    {
      "repo": "http://zkspreadsheet.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 1430,
      "location": "/zssapp/src/org/zkoss/zss/app/formula",
      "name": "zkspreadsheet",
      "url": "https://searchcode.com/codesearch/view/3969892/",
      "md5hash": "a07bf1b4287ec51f4c6c5c920d857dd5",
      "lines": {
        "1064": "\t\t\t\t\t\"Repeats text a given number of times\",",
        "1061": "\t\ttextAry.add(new FormulaMetaInfo(TEXT,",
        "1062": "\t\t\t\t\t\"REPT\",",
        "1063": "\t\t\t\t\t\"REPT(text, number_times)\","
      },
      "id": 3969892,
      "filename": "Formulas.java"
    },
    {
      "repo": "https://bitbucket.org/cyanogenmod/android_dalvik.git",
      "language": "Java",
      "linescount": 414,
      "location": "/tests/023-many-interfaces/src",
      "name": "android_dalvik",
      "url": "https://searchcode.com/codesearch/view/40425245/",
      "md5hash": "e3fa33458e07a9d08b9d28f4d72fec1c",
      "lines": {
        "160": "            int rept) {",
        "193": "        end = System.nanoTime();",
        "162": "            System.out.println(label + \": \" + (end - start) / 1000 + \"us\"",
        "163": "                    + \"  (\" + (end - start) / (iter*rept) + \"ns per call)\");",
        "214": "        report(\"testVirt049\", start, end, iter, rept);",
        "198": "        end = System.nanoTime();",
        "199": "        report(\"testIface049\", start, end, iter, rept);",
        "203": "        end = System.nanoTime();",
        "204": "        report(\"testIface099\", start, end, iter, rept);",
        "194": "        report(\"testIface001\", start, end, iter, rept);",
        "208": "        end = System.nanoTime();",
        "209": "        report(\"testVirt001\", start, end, iter, rept);",
        "181": "        int iter = 32768;",
        "182": "        int rept = 16;",
        "213": "        end = System.nanoTime();",
        "159": "    private static void report(String label, long start, long end, int iter,"
      },
      "id": 40425245,
      "filename": "ManyInterfaces.java"
    },
    {
      "repo": "https://bitbucket.org/codefirex/dalvik.git",
      "language": "Java",
      "linescount": 414,
      "location": "/tests/023-many-interfaces/src",
      "name": "dalvik",
      "url": "https://searchcode.com/codesearch/view/43775998/",
      "md5hash": "e3fa33458e07a9d08b9d28f4d72fec1c",
      "lines": {
        "160": "            int rept) {",
        "193": "        end = System.nanoTime();",
        "162": "            System.out.println(label + \": \" + (end - start) / 1000 + \"us\"",
        "163": "                    + \"  (\" + (end - start) / (iter*rept) + \"ns per call)\");",
        "214": "        report(\"testVirt049\", start, end, iter, rept);",
        "198": "        end = System.nanoTime();",
        "199": "        report(\"testIface049\", start, end, iter, rept);",
        "203": "        end = System.nanoTime();",
        "204": "        report(\"testIface099\", start, end, iter, rept);",
        "194": "        report(\"testIface001\", start, end, iter, rept);",
        "208": "        end = System.nanoTime();",
        "209": "        report(\"testVirt001\", start, end, iter, rept);",
        "181": "        int iter = 32768;",
        "182": "        int rept = 16;",
        "213": "        end = System.nanoTime();",
        "159": "    private static void report(String label, long start, long end, int iter,"
      },
      "id": 43775998,
      "filename": "ManyInterfaces.java"
    },
    {
      "repo": "https://github.com/teruok78/pentaho-kettle.git",
      "language": "Java",
      "linescount": 494,
      "location": "/ui/src/org/pentaho/libformula/ui/editor",
      "name": "pentaho-kettle",
      "url": "https://searchcode.com/codesearch/view/95320589/",
      "md5hash": "41124269a604fd314ef918603b7137ed",
      "lines": {
        "277": "      // Category Text",
        "278": "      \"EXACT\", \"FIND\", \"LEFT\", \"LEN\", \"LOWER\", \"MID\", \"REPLACE\", \"REPT\", \"RIGHT\", \"SUBSTITUTE\", \"T\", \"TEXT\","
      },
      "id": 95320589,
      "filename": "LibFormulaValuesHighlight.java"
    },
    {
      "repo": "http://terminal-panel.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 156,
      "location": "/orig/salma-hayek/src/e/ptextarea",
      "name": "terminal-panel",
      "url": "https://searchcode.com/codesearch/view/12036857/",
      "md5hash": "7012a78ab0984ec0440a1c40b878ae34",
      "lines": {
        "118": "            \"quad\",",
        "119": "            \"rept\","
      },
      "id": 12036857,
      "filename": "PAssemblerTextStyler.java"
    },
    {
      "repo": "https://bitbucket.org/ravenscroftj/just-player.git",
      "language": "Java",
      "linescount": 375,
      "location": "/JUSTPLAYER/src/jp/co/kayo/android/localplayer",
      "name": "just-player",
      "url": "https://searchcode.com/codesearch/view/35852444/",
      "md5hash": "dfa1e36b50a035b5ed6f53046588853b",
      "lines": {
        "304": "    private void rept() {",
        "303": "",
        "233": "            break;",
        "234": "        case R.id.btnRept1: {",
        "235": "            mTracker.trackClick(\"onClick.repeat1\");",
        "236": "            rept();",
        "238": "            break;",
        "239": "        // case R.id.btnRept2:{ rept();}break;"
      },
      "id": 35852444,
      "filename": "LockScreenActivity.java"
    },
    {
      "repo": "https://bitbucket.org/ravenscroftj/just-player.git",
      "language": "Java",
      "linescount": 581,
      "location": "/JUSTPLAYER/src/jp/co/kayo/android/localplayer/ui",
      "name": "just-player",
      "url": "https://searchcode.com/codesearch/view/35852512/",
      "md5hash": "888f87069cfa1776ea78729d90f3b5df",
      "lines": {
        "192": "        btnRept1 = (ImageButton) root.findViewById(R.id.btnRept1);",
        "480": "            btnRept1.setBackgroundDrawable(media_button",
        "68": "    ImageButton btnSfl;",
        "69": "    ImageButton btnRept1;",
        "481": "                    .getDrawable(BTN_REPOFF_ID));",
        "200": "        btnSfl.setOnClickListener(this);",
        "201": "        btnRept1.setOnClickListener(this);",
        "338": "            break;",
        "339": "        case R.id.btnRept1: {",
        "340": "            rept();",
        "341": "        }",
        "342": "            break;",
        "343": "        // case R.id.btnRept2:{ rept();}break;",
        "479": "        case SystemConsts.FLG_REPEAT_NO:",
        "540": "",
        "541": "    private void rept() {",
        "191": "        btnSfl = (ImageButton) root.findViewById(R.id.btnSfl);"
      },
      "id": 35852512,
      "filename": "ControlFragment.java"
    },
    {
      "repo": "https://bitbucket.org/dalb8/just-player.git",
      "language": "Java",
      "linescount": 380,
      "location": "/JUSTPLAYER/src/jp/co/kayo/android/localplayer",
      "name": "just-player",
      "url": "https://searchcode.com/codesearch/view/36196689/",
      "md5hash": "a5d4fe85e1146086baaa6b93e41f64ef",
      "lines": {
        "226": "                break;",
        "227": "            case R.id.btnRept1: {",
        "228": "                rept();",
        "229": "            }",
        "230": "                break;",
        "231": "        // case R.id.btnRept2:{ rept();}break;",
        "301": "",
        "302": "    private void rept() {"
      },
      "id": 36196689,
      "filename": "LockScreenActivity.java"
    },
    {
      "repo": "https://bitbucket.org/dalb8/just-player.git",
      "language": "Java",
      "linescount": 592,
      "location": "/JUSTPLAYER/src/jp/co/kayo/android/localplayer/fragment",
      "name": "just-player",
      "url": "https://searchcode.com/codesearch/view/36196784/",
      "md5hash": "63e9b689e2acd7dd4a8be99a24019fff",
      "lines": {
        "480": "            case SystemConsts.FLG_REPEAT_NO:",
        "481": "                btnRept1.setBackgroundDrawable(media_button",
        "226": "        btnSfl = (ImageButton) root.findViewById(R.id.btnSfl);",
        "67": "    ImageButton btnSfl;",
        "68": "    ImageButton btnRept1;",
        "482": "                        .getDrawable(BTN_REPOFF_ID));",
        "483": "                // btnRept1.setBackgroundResource(R.drawable.repeat_button_off);",
        "227": "        btnRept1 = (ImageButton) root.findViewById(R.id.btnRept1);",
        "544": "    private void rept() {",
        "312": "                break;",
        "313": "            case R.id.btnRept1: {",
        "314": "                rept();",
        "315": "            }",
        "316": "                break;",
        "317": "        // case R.id.btnRept2:{ rept();}break;",
        "543": ""
      },
      "id": 36196784,
      "filename": "ControlFragment.java"
    },
    {
      "repo": "https://bitbucket.org/pdf/just-player.git",
      "language": "Java",
      "linescount": 361,
      "location": "/JUSTPLAYER/src/jp/co/kayo/android/localplayer",
      "name": "just-player",
      "url": "https://searchcode.com/codesearch/view/37050024/",
      "md5hash": "944c6667472b67d4fec44d1d46ae12f3",
      "lines": {
        "224": "            break;",
        "225": "        // case R.id.btnRept2:{ rept();}break;",
        "290": "    private void rept() {",
        "289": "",
        "220": "            break;",
        "221": "        case R.id.btnRept1: {",
        "222": "            rept();",
        "223": "        }"
      },
      "id": 37050024,
      "filename": "LockScreenActivity.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 27,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 10,
      "source": "Github",
      "id": 2
    },
    {
      "count": 2,
      "source": "Google Code",
      "id": 1
    }
  ]
}