{
  "matchterm": "PackagePart",
  "previouspage": null,
  "searchterm": "PackagePart",
  "query": "PackagePart",
  "language_filters": [
    {
      "count": 99,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 99,
  "results": [
    {
      "repo": "https://github.com/bojanp/Nginious.git",
      "language": "Java",
      "linescount": 583,
      "location": "/nginious-server/src/main/java/com/nginious/http/xsp",
      "name": "Nginious",
      "url": "https://searchcode.com/codesearch/view/74723196/",
      "md5hash": "ed5863195900f6bfb166d1adfeb1b639",
      "lines": {
        "285": "    \t\tfor(String packagePart : packageParts) {",
        "245": "    \tif(packageName != null) {",
        "246": "    \t\tString[] packageParts = packageName.split(\"\\\\.\");",
        "247": "    \t\t",
        "248": "    \t\tfor(String packagePart : packageParts) {",
        "249": "    \t\t\tdestDir = new File(destDir, packagePart);",
        "250": "    \t\t\t",
        "283": "    \t\tString[] packageParts = packageName.split(\"\\\\.\");",
        "284": "    \t\t",
        "282": "    \tif(packageName != null) {",
        "286": "    \t\t\tdestDir = new File(destDir, packagePart);",
        "287": "    \t\t\t"
      },
      "id": 74723196,
      "filename": "XspCompiler.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 1489,
      "location": "/pptx/src/org/apache/poi/openxml4j/opc",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406292/",
      "md5hash": "47fc882bc196bd395e952d6ada656cd9",
      "lines": {
        "419": "\t\t\t\t.getContentTypeFromFileExtension(filename);",
        "420": "\t\tPackagePartName thumbnailPartName = null;",
        "549": "\tpublic ArrayList<PackagePart> getPartsByRelationshipType(",
        "552": "\t\t\tthrow new IllegalArgumentException(\"relationshipType\");",
        "553": "\t\tArrayList<PackagePart> retArr = new ArrayList<PackagePart>();",
        "564": "\t    ArrayList<PackagePart> result = new ArrayList<PackagePart>();",
        "559": "",
        "560": "\tpublic List<PackagePart> getPartsByName(final Pattern namePattern) {",
        "563": "\t    }",
        "530": "\t */",
        "531": "\tpublic ArrayList<PackagePart> getPartsByContentType(String contentType) {",
        "532": "\t\tArrayList<PackagePart> retArr = new ArrayList<PackagePart>();",
        "533": "\t\tfor (PackagePart part : partList.values()) {",
        "534": "\t\t\tif (part.getContentType().equals(contentType))",
        "548": "\t */",
        "565": "\t    for (PackagePart part : partList.values()) {"
      },
      "id": 97406292,
      "filename": "OPCPackage.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 265,
      "location": "/pptx/src/org/apache/poi/xslf",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406428/",
      "md5hash": "8f08dde64ec3cc85fb68661974a86de1",
      "lines": {
        "150": "\tpublic CTSlideMaster getSlideMaster(CTSlideMasterIdListEntry master) throws IOException, XmlException {",
        "134": "\t",
        "135": "\tpublic PackagePart getSlideMasterPart(CTSlideMasterIdListEntry master) throws IOException, XmlException {",
        "136": "\t\ttry {",
        "137": "\t\t   PackagePart corePart = getCorePart(); ",
        "151": "\t\tPackagePart masterPart = getSlideMasterPart(master);",
        "172": "\tpublic CTSlide getSlide(CTSlideIdListEntry slide) throws IOException, XmlException {",
        "173": "\t\tPackagePart slidePart = getSlidePart(slide);",
        "179": "\t/**",
        "180": "\t * Gets the PackagePart of the notes for the",
        "22": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "23": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "156": "",
        "157": "\tpublic PackagePart getSlidePart(CTSlideIdListEntry slide) throws IOException, XmlException {",
        "158": "\t\ttry {",
        "159": "\t      PackagePart corePart = getCorePart(); "
      },
      "id": 97406428,
      "filename": "XSLFSlideShow.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 555,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406768/",
      "md5hash": "06c77456c926d8545168347abe70a1d6",
      "lines": {
        "288": "",
        "289": "        PackagePart part = getPackagePart();",
        "35": "import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
        "36": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "534": "     */",
        "548": "",
        "531": "     * @param blipId        ID of the package relationship to retrieve.",
        "532": "     * @param packagePart   package part containing the data to import",
        "181": "    public XSLFPictureShape createPicture(int pictureIndex){",
        "182": "        List<PackagePart>  pics = getPackagePart().getPackage()",
        "535": "    String importBlip(String blipId, PackagePart packagePart) {",
        "536": "        PackageRelationship blipRel = packagePart.getRelationship(blipId);",
        "537": "        PackagePart blipPart;",
        "538": "        try {",
        "539": "            blipPart = packagePart.getRelatedPart(blipRel);",
        "549": "        PackageRelationship rel = getPackagePart().addRelationship("
      },
      "id": 97406768,
      "filename": "XSLFSheet.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 183,
      "location": "/pptx/src/org/apache/poi",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406028/",
      "md5hash": "26607ac5995dc62d56a6e905896e6ed2",
      "lines": {
        "32": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "150": "     */",
        "151": "    public abstract List<PackagePart> getAllEmbedds() throws OpenXML4JException;",
        "172": "        //force all children to commit their changes into the underlying OOXML Package",
        "77": "",
        "78": "    protected PackagePart getCorePart() {",
        "79": "        return getPackagePart();",
        "80": "    }",
        "173": "        Set<PackagePart> context = new HashSet<PackagePart>();",
        "82": "    /**",
        "83": "     * Retrieves all the PackageParts which are defined as",
        "86": "     */",
        "87": "    protected PackagePart[] getRelatedByType(String contentType) throws InvalidFormatException {",
        "88": "        PackageRelationshipCollection partsC =",
        "153": "    protected final void load(POIXMLFactory factory) throws IOException {",
        "154": "        Map<PackagePart, POIXMLDocumentPart> context = new HashMap<PackagePart, POIXMLDocumentPart>();",
        "31": "import org.apache.poi.openxml4j.opc.OPCPackage;"
      },
      "id": 97406028,
      "filename": "POIXMLDocument.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 395,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406883/",
      "md5hash": "affb9bb9cdc3dc16020b82db1f4ce116",
      "lines": {
        "225": "",
        "34": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "35": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "36": "import org.apache.poi.openxml4j.opc.PackagePartName;",
        "37": "import org.apache.poi.openxml4j.opc.TargetMode;",
        "166": "",
        "167": "        PackagePart part = getPackagePart();",
        "354": "                OutputStream out = img.getPackagePart().getOutputStream();",
        "353": "            try {",
        "226": "        PackagePartName ppName = layout.getPackagePart().getPartName();",
        "175": "     */",
        "176": "    public List<PackagePart> getAllEmbedds() throws OpenXML4JException {",
        "227": "        slide.getPackagePart().addRelationship(ppName, TargetMode.INTERNAL,",
        "183": "     * Returns all Pictures, which are referenced from the document itself.",
        "184": "     * @return a {@link List} of {@link PackagePart}.",
        "228": "                layout.getPackageRelationship().getRelationshipType());"
      },
      "id": 97406883,
      "filename": "XMLSlideShow.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 112,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406847/",
      "md5hash": "347d827329d054e6a40515d2805da46a",
      "lines": {
        "48": " * \t\tString contentType = data.getPackagePart().getContentType();",
        "81": "\t\ttry {",
        "82": "\t\t\tBufferedImage img = ImageIO.read(data.getPackagePart().getInputStream());",
        "25": "",
        "26": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "111": "    }",
        "108": "     */",
        "109": "    public BufferedImage readImage(PackagePart packagePart) throws IOException {",
        "110": "        return ImageIO.read(packagePart.getInputStream());",
        "47": " * \t\t// see what type of image we are"
      },
      "id": 97406847,
      "filename": "XSLFImageRenderer.java"
    },
    {
      "repo": "https://bitbucket.org/nbargnesi/idea.git",
      "language": "Java",
      "linescount": 247,
      "location": "/java/java-impl/src/com/intellij/psi/util",
      "name": "idea",
      "url": "https://searchcode.com/codesearch/view/39416726/",
      "md5hash": "8f606c37fc5ae362558c7a619f87c740",
      "lines": {
        "112": "    while (tokenizer.hasMoreTokens()) {",
        "113": "      String packagePart = tokenizer.nextToken();",
        "114": "      PsiDirectory subdirectory = directoryRoot.findSubdirectory(packagePart);",
        "115": "      if (subdirectory == null) {",
        "116": "        directoryRoot.checkCreateSubdirectory(packagePart);",
        "117": "        subdirectory = directoryRoot.createSubdirectory(packagePart);",
        "118": "      }"
      },
      "id": 39416726,
      "filename": "CreateClassUtil.java"
    },
    {
      "repo": "https://github.com/ironSunr1se/ceylon-compiler.git",
      "language": "Java",
      "linescount": 256,
      "location": "/src/com/redhat/ceylon/compiler/codegen",
      "name": "ceylon-compiler",
      "url": "https://searchcode.com/codesearch/view/65884139/",
      "md5hash": "d511084775342b2c5f3314a3320d5aa3",
      "lines": {
        "163": "        String shortName = Convert.shortName(fullname);",
        "164": "        String packagePart = Convert.packagePart(fullname);",
        "165": "        if (packagePart == null || packagePart.length() == 0)",
        "166": "            return make().Ident(names().fromString(shortName));",
        "167": "        else",
        "168": "            return make().Select(getPackage(packagePart), names().fromString(shortName));"
      },
      "id": 65884139,
      "filename": "CeylonTransformer.java"
    },
    {
      "repo": "http://okapi.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 83,
      "location": "/okapi/steps/xliffkit/src/main/java/net/sf/okapi/steps/xliffkit/opc",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/401674/",
      "md5hash": "59505bde48817117712a3f30e0e301d9",
      "lines": {
        "34": "",
        "35": "\tpublic static List<PackagePart> getCoreParts(OPCPackage pack) {",
        "36": "\t\tList<PackagePart> res = new ArrayList<PackagePart>();",
        "37": "\t\t",
        "60": "",
        "74": "\t",
        "75": "\tpublic static PackagePart getSourcePart(PackagePart part) {\t\t",
        "78": "",
        "47": "\t",
        "48": "\tpublic static PackagePart getCorePart(OPCPackage pack) {",
        "49": "\t\tList<PackagePart> res = new ArrayList<PackagePart>();",
        "50": "\t\t",
        "79": "\tpublic static PackagePart getResourcesPart(PackagePart part) {\t\t",
        "27": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "28": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "61": "\tprivate static PackagePart getPartByRelationshipType(PackagePart part, String relationshipType) {"
      },
      "id": 401674,
      "filename": "OPCPackageUtil.java"
    },
    {
      "repo": "https://bitbucket.org/gargdeendayal/procyon",
      "language": "Java",
      "linescount": 373,
      "location": "/Procyon.CompilerTools/src/main/java/com/strobel/decompiler",
      "name": "Procyon",
      "url": "https://searchcode.com/codesearch/view/67347441/",
      "md5hash": "df50062e0f1736755964cb9186b94826",
      "lines": {
        "354": "",
        "315": "                sb.append(colorize(packageParts[i], _package));",
        "356": "",
        "357": "            if (\"*\".equals(packagePart)) {",
        "358": "                sb.append(packagePart);",
        "359": "            }",
        "360": "            else {",
        "361": "                sb.append(colorize(packagePart, _package));",
        "299": "        if (StringUtilities.startsWith(s, packagePrefix)) {",
        "300": "            final String[] packageParts = packageName.split(\"\\\\.\");",
        "355": "            final String packagePart = packageParts[i];",
        "309": "",
        "310": "            for (int i = 0; i < packageParts.length; i++) {",
        "314": "",
        "347": "        final String[] packageParts = text.split(\"\\\\.\");",
        "346": "    private String colorizePackage(final String text) {"
      },
      "id": 67347441,
      "filename": "AnsiTextOutput.java"
    },
    {
      "repo": "https://github.com/solsson/tika.git",
      "language": "Java",
      "linescount": 165,
      "location": "/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml",
      "name": "tika",
      "url": "https://searchcode.com/codesearch/view/111785571/",
      "md5hash": "e792b324ce485597dfa73d012dd27d56",
      "lines": {
        "161": "     */",
        "162": "    protected abstract List<PackagePart> getMainDocumentParts()",
        "27": "import org.apache.poi.openxml4j.opc.PackageRelationship;",
        "124": "     */",
        "107": "                 if(rel.getTargetMode() == TargetMode.INTERNAL) {",
        "108": "                    PackagePartName relName;",
        "125": "    protected void handleEmbedded(PackageRelationship rel, PackagePart part, ",
        "113": "                    }",
        "114": "                    PackagePart relPart = rel.getPackage().getPart(relName);",
        "24": "import org.apache.poi.openxml4j.exceptions.InvalidFormatException;",
        "25": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "26": "import org.apache.poi.openxml4j.opc.PackagePartName;",
        "91": "        // Now do any embedded parts",
        "92": "        List<PackagePart> mainParts = getMainDocumentParts();",
        "93": "        for(PackagePart part : mainParts) {",
        "94": "           PackageRelationshipCollection rels;"
      },
      "id": 111785571,
      "filename": "AbstractOOXMLExtractor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/xdocreport.git",
      "language": "Java",
      "linescount": 1398,
      "location": "/thirdparties-extension/org.apache.poi.xwpf.converter.core/src/main/java/org/apache/poi/xwpf/converter/core",
      "name": "xdocreport",
      "url": "https://searchcode.com/codesearch/view/96672565/",
      "md5hash": "2ee0d9cfda1138ee93328b854d5e99ce",
      "lines": {
        "1215": "            if ( footer.getPackagePart().equals( hdrPart ) )",
        "1186": "        {",
        "1187": "            if ( header.getPackagePart().equals( hdrPart ) )",
        "36": "",
        "37": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "1210": "    {",
        "1211": "        PackagePart hdrPart = document.getPartById( footerRef.getId() );",
        "1214": "        {",
        "1182": "    {",
        "1183": "        PackagePart hdrPart = document.getPartById( headerRef.getId() );"
      },
      "id": 96672565,
      "filename": "XWPFDocumentVisitor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/xdocreport.git",
      "language": "Java",
      "linescount": 259,
      "location": "/thirdparties-extension/org.apache.poi.xwpf.converter/src/main/java/org/apache/poi/xwpf/converter/internal",
      "name": "xdocreport",
      "url": "https://searchcode.com/codesearch/view/96673228/",
      "md5hash": "d6d3c3a30f634d51c3155de9cc6c7667",
      "lines": {
        "130": "    {",
        "131": "        PackagePart hdrPart = document.getPartById( headerRef.getId() );",
        "148": "    {",
        "6": "",
        "134": "        {",
        "7": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "152": "        {",
        "153": "            if ( footer.getPackagePart().equals( hdrPart ) )",
        "135": "            if ( header.getPackagePart().equals( hdrPart ) )",
        "149": "        PackagePart hdrPart = document.getPartById( footerRef.getId() );"
      },
      "id": 96673228,
      "filename": "XWPFDocumentVisitor.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 162,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406705/",
      "md5hash": "3cf6ae3d47d4aecb9c8db82efffb3346",
      "lines": {
        "147": "        String blipId = p.getBlipId();",
        "148": "        String relId = getSheet().importBlip(blipId, p.getSheet().getPackagePart());",
        "105": "",
        "26": "import org.apache.poi.POIXMLException;",
        "27": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "106": "            PackagePart p = getSheet().getPackagePart();",
        "110": "                    PackagePart imgPart = p.getRelatedPart(rel);",
        "109": "                try {"
      },
      "id": 97406705,
      "filename": "XSLFPictureShape.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 634,
      "location": "/pptx/src/org/apache/poi/xslf/usermodel",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97406799/",
      "md5hash": "6e68dd3c8ec32b1c5501783941fcea98",
      "lines": {
        "395": "                    paint = selectPaint(graphics, fillProps, phClr, sheet.getPackagePart());",
        "339": "        for (XmlObject obj : spPr.selectPath(\"*\")) {",
        "340": "            paint = selectPaint(graphics, obj, phClr, _shape.getSheet().getPackagePart());",
        "103": "     */",
        "104": "    public Paint selectPaint(Graphics2D graphics, XmlObject obj, CTSchemeColor phClr, PackagePart parentPart) {",
        "394": "                if(fillProps != null) {",
        "139": "    private Paint createTexturePaint(CTBlipFillProperties blipFill, Graphics2D graphics,",
        "140": "            PackagePart parentPart){",
        "29": "",
        "30": "import org.apache.poi.openxml4j.opc.PackagePart;"
      },
      "id": 97406799,
      "filename": "RenderableShape.java"
    },
    {
      "repo": "https://github.com/jkellerer/infinispan.git",
      "language": "Java",
      "linescount": 224,
      "location": "/tools/src/test/java/org/infinispan/test/fwk",
      "name": "infinispan",
      "url": "https://searchcode.com/codesearch/view/113386719/",
      "md5hash": "befc7a235bb2962ac1db70c75444a759",
      "lines": {
        "104": "",
        "105": "   private String getPackagePart(String javaString, String filename) {",
        "91": "      classNamePart = classNamePart.substring(\"public class \".length());",
        "92": "      String packagePart = getPackagePart(javaString, filename);",
        "93": "      //if the test is in org.infinispan package then make sure no . is prepended",
        "94": "      String packagePrepend = ((packagePart != null) && (packagePart.length() > 0)) ? packagePart + \".\" : \"\";"
      },
      "id": 113386719,
      "filename": "TestNameVerifier.java"
    },
    {
      "repo": "https://github.com/florinleu/Eclipse.git",
      "language": "Java",
      "linescount": 119,
      "location": "/com.mobilesorcery.sdk.builder.android/src/com/mobilesorcery/sdk/builder/android",
      "name": "Eclipse",
      "url": "https://searchcode.com/codesearch/view/69857404/",
      "md5hash": "b56b6ea6a6fc9a4b0b62c54a71483d22",
      "lines": {
        "99": "",
        "100": "\tprivate static String validatePackagePart(String packagePart) {",
        "101": "\t\tchar[] packagePartCh = packagePart.toCharArray();",
        "102": "\t\tif (packagePart.length() == 0) {",
        "103": "\t\t\treturn \"Package segment cannot be empty\";",
        "105": "",
        "106": "\t\tchar invalidChar = Character.isJavaIdentifierStart(packagePartCh[0]) ? '\\0' : packagePartCh[0];",
        "107": "",
        "108": "\t\tfor (int i = 1; invalidChar == '\\0' && i < packagePartCh.length; i++) {",
        "109": "\t\t\tinvalidChar = Character.isJavaIdentifierPart(packagePartCh[i]) ? '\\0' : packagePartCh[i];",
        "110": "\t\t}",
        "84": "\tpublic static IMessageProvider validatePackageName(String packageName) {",
        "85": "\t\tString[] packageParts = packageName.split(\"\\\\.\");",
        "86": "\t\tif (packageParts.length < 2) {",
        "87": "\t\t\treturn new DefaultMessageProvider(\"Android packages must have at least two parts (eg com.test)\", IMessageProvider.ERROR);"
      },
      "id": 69857404,
      "filename": "AndroidPackager.java"
    },
    {
      "repo": "https://bitbucket.org/udse/udld",
      "language": "Java",
      "linescount": 123,
      "location": "/workspace/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench",
      "name": "udld",
      "url": "https://searchcode.com/codesearch/view/132480540/",
      "md5hash": "cfea26fd61f27e5ea6a88b329df11f2b",
      "lines": {
        "111": "  private static String packagePart(String t, int count) {",
        "110": "",
        "102": "        }",
        "103": "        if (!Util.isPrimitiveType(elemType) && !packagePart(elemType, 2).equals(packagePart(containerType, 2))) {"
      },
      "id": 132480540,
      "filename": "InterfaceAnalyzer.java"
    },
    {
      "repo": "http://okapi.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 386,
      "location": "/okapi/steps/xliffkit/src/main/java/net/sf/okapi/steps/xliffkit/writer",
      "name": "okapi",
      "url": "https://searchcode.com/codesearch/view/401675/",
      "md5hash": "ea741284f79220e798f61c9c2565b4ed",
      "lines": {
        "65": "import org.apache.poi.openxml4j.opc.OPCPackage;",
        "66": "import org.apache.poi.openxml4j.opc.PackagePart;",
        "67": "import org.apache.poi.openxml4j.opc.PackagePartName;",
        "68": "import org.apache.poi.openxml4j.opc.PackagingURIHelper;",
        "325": "\t\t",
        "326": "\t\tPackagePart corePart =",
        "276": "\t",
        "277": "\tprivate PackagePart createPart(OPCPackage pack, PackagePart corePart, String name, File file, String contentType, String relationshipType) {\t\t",
        "278": "\t\tPackagePart part = null;",
        "279": "\t\ttry {\t\t\t",
        "280": "\t\t\tPackagePartName partName = PackagingURIHelper.createPartName(\"/\" + name);"
      },
      "id": 401675,
      "filename": "XLIFFKitWriterStep.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 47,
      "source": "Github",
      "id": 2
    },
    {
      "count": 37,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 15,
      "source": "Google Code",
      "id": 1
    }
  ]
}