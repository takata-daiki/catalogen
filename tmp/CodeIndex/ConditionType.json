{
  "matchterm": "ConditionType",
  "previouspage": null,
  "searchterm": "ConditionType",
  "query": "ConditionType",
  "language_filters": [
    {
      "count": 243,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 243,
  "results": [
    {
      "repo": "git://github.com/zkoss/zk.git",
      "language": "Java",
      "linescount": 24,
      "location": "/zkbind/src/org/zkoss/bind/sys",
      "name": "zk",
      "url": "https://searchcode.com/codesearch/view/17661809/",
      "md5hash": "65a2c73eea1b07e3e5296804e31355e9",
      "lines": {
        "1": "/* ConditionType.java",
        "2": "",
        "18": "public enum ConditionType {",
        "17": " */"
      },
      "id": 17661809,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/Ciel13/crawljax.git",
      "language": "Java",
      "linescount": 97,
      "location": "/core/src/main/java/com/crawljax/condition",
      "name": "crawljax",
      "url": "https://searchcode.com/codesearch/view/71730459/",
      "md5hash": "f3dd71ed0f3f8ba711387a279c7dc2a1",
      "lines": {
        "18": "@ThreadSafe",
        "19": "public abstract class ConditionType {",
        "68": "\t/**",
        "69": "\t * @return the conditionType",
        "54": "\t */",
        "55": "\tpublic ConditionType(String description, Condition condition, List<Condition> preConditions) {",
        "42": "\t */",
        "43": "\tpublic ConditionType(String description, Condition condition, Condition... preConditions) {",
        "30": "\t */",
        "31": "\tpublic ConditionType(String description, Condition condition) {"
      },
      "id": 71730459,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/uisleandro/org.eclipse.papyrus.git",
      "language": "Java",
      "linescount": 355,
      "location": "/extraplugins/marte/org.eclipse.papyrus.marte.static.profile/src/org/eclipse/papyrus/MARTE/MARTE_DesignModel/HRM/HwPhysical/HwLayout",
      "name": "org.eclipse.papyrus",
      "url": "https://searchcode.com/codesearch/view/97916020/",
      "md5hash": "c84efe251ea78f6b558c5e30517f5241",
      "lines": {
        "256": "\t\t\tConditionType result = VALUES_ARRAY[i];",
        "353": "\t",
        "354": "} //ConditionType",
        "310": "\tprivate ConditionType(int value, String name, String literal) {",
        "309": "\t */",
        "31": "public enum ConditionType implements Enumerator {",
        "269": "\t */",
        "270": "\tpublic static ConditionType get(int value) {",
        "212": "\t */",
        "213": "\tprivate static final ConditionType[] VALUES_ARRAY =",
        "214": "\t\tnew ConditionType[] {",
        "215": "\t\t\tTEMPERATURE,",
        "26": " * <!-- end-user-doc -->",
        "27": " * @see org.eclipse.papyrus.MARTE.MARTE_DesignModel.HRM.HwPhysical.HwLayout.HwLayoutPackage#getConditionType()",
        "30": " */",
        "255": "\t\tfor (int i = 0; i < VALUES_ARRAY.length; ++i) {"
      },
      "id": 97916020,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://bitbucket.org/mbrizi/jira-plugins",
      "language": "Java",
      "linescount": 79,
      "location": "/ugov-jira-subtask-plugin/src/main/java/com/googlecode/jsu/helpers",
      "name": "jira-plugins",
      "url": "https://searchcode.com/codesearch/view/119422085/",
      "md5hash": "8282eb8dbf588607d8f1cc718ed34f62",
      "lines": {
        "72": "            return false;",
        "19": "     */",
        "20": "    public ConditionType(",
        "70": "            return false;",
        "71": "        if (!(obj instanceof ConditionType))",
        "8": " */",
        "9": "public class ConditionType {",
        "73": "        ConditionType other = (ConditionType) obj;"
      },
      "id": 119422085,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/atlasapi/atlas-feeds.git",
      "language": "Java",
      "linescount": 105,
      "location": "/src/main/java/tva/metadata/extended/_2010",
      "name": "atlas-feeds",
      "url": "https://searchcode.com/codesearch/view/109542938/",
      "md5hash": "42e6674280a9911d11158a676aba9ca1",
      "lines": {
        "40": "",
        "19": "/**",
        "20": " * <p>Java class for ConditionType complex type.",
        "37": "@XmlAccessorType(XmlAccessType.FIELD)",
        "38": "@XmlType(name = \"ConditionType\")",
        "39": "public class ConditionType {",
        "24": " * <pre>",
        "25": " * &lt;complexType name=\"ConditionType\">"
      },
      "id": 109542938,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://bitbucket.org/aschuma/jira-suite-utilities-avono.git",
      "language": "Java",
      "linescount": 74,
      "location": "/src/main/java/com/googlecode/jsu/helpers",
      "name": "jira-suite-utilities-avono",
      "url": "https://searchcode.com/codesearch/view/45059731/",
      "md5hash": "7351a72ba7b38321e9c112f9a130103a",
      "lines": {
        "65": "            return false;",
        "66": "        if (!(obj instanceof ConditionType))",
        "67": "            return false;",
        "68": "        ConditionType other = (ConditionType) obj;",
        "8": " */",
        "9": "public class ConditionType {",
        "14": "",
        "15": "    public ConditionType("
      },
      "id": 45059731,
      "filename": "ConditionType.java"
    },
    {
      "repo": "http://crawljax.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 98,
      "location": "/src/main/java/com/crawljax/condition",
      "name": "crawljax",
      "url": "https://searchcode.com/codesearch/view/5180212/",
      "md5hash": "8cb1dc299a3701e8fedd16e372275f45",
      "lines": {
        "32": "\tpublic ConditionType(String description, Condition condition) {",
        "69": "\t/**",
        "70": "\t * @return the conditionType",
        "43": "\t */",
        "44": "\tpublic ConditionType(String description, Condition condition, Condition... preConditions) {",
        "16": " * @author dannyroest@gmail.com (Danny Roest)",
        "17": " * @version $Id: ConditionType.java 78 2010-01-14 12:23:50Z lenselinkstefan@gmail.com $",
        "19": "@ThreadSafe",
        "20": "public abstract class ConditionType {",
        "55": "\t */",
        "56": "\tpublic ConditionType(String description, Condition condition, List<Condition> preConditions) {",
        "31": "\t */"
      },
      "id": 5180212,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/sapo/sapo-broker.git",
      "language": "Java",
      "linescount": 52,
      "location": "/gcs/src/main/java/pt/com/gcs/conf/global",
      "name": "sapo-broker",
      "url": "https://searchcode.com/codesearch/view/138506969/",
      "md5hash": "c01f99f0bf2dc4f6459ff88a39f76ad8",
      "lines": {
        "33": " */",
        "34": "@XmlType(name = \"ConditionType\")",
        "35": "@XmlEnum",
        "36": "public enum ConditionType",
        "21": " * <pre>",
        "22": " * &lt;simpleType name=\"ConditionType\">",
        "46": "\tpublic static ConditionType fromValue(String v)",
        "45": "",
        "14": " * <p>",
        "15": " * Java class for ConditionType."
      },
      "id": 138506969,
      "filename": "ConditionType.java"
    },
    {
      "repo": "http://enterprise-java-xacml.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 89,
      "location": "/an.jaxb/components/pdp/src/oasis/names/tc/xacml/_2_0/policy/schema/os",
      "name": "enterprise-java-xacml",
      "url": "https://searchcode.com/codesearch/view/11710564/",
      "md5hash": "79f3ff952c3024ad74700102a18dae02",
      "lines": {
        "40": "})",
        "18": "/**",
        "19": " * <p>Java class for ConditionType complex type.",
        "37": "@XmlAccessorType(XmlAccessType.FIELD)",
        "38": "@XmlType(name = \"ConditionType\", namespace = \"urn:oasis:names:tc:xacml:2.0:policy:schema:os\", propOrder = {",
        "23": " * <pre>",
        "24": " * &lt;complexType name=\"ConditionType\">",
        "41": "public class ConditionType {"
      },
      "id": 11710564,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://bitbucket.org/dantam/svefaktura",
      "language": "Java",
      "linescount": 41,
      "location": "/src/main/java/oasis/names/tc/ubl/commonbasiccomponents/_1/_0",
      "name": "svefaktura",
      "url": "https://searchcode.com/codesearch/view/127618082/",
      "md5hash": "dc7fb0f50b71df0741b8ab33d3473750",
      "lines": {
        "17": "/**",
        "18": " * <p>Java class for ConditionType complex type.",
        "35": "public class ConditionType",
        "36": "    extends TextTypeUn",
        "22": " * <pre>",
        "33": "@XmlAccessorType(XmlAccessType.FIELD)",
        "23": " * &lt;complexType name=\"ConditionType\">",
        "34": "@XmlType(name = \"ConditionType\")"
      },
      "id": 127618082,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/silentjesse/code_java_wellpt.git",
      "language": "Java",
      "linescount": 172,
      "location": "/wellpt-basicdata/src/main/java/com/wellsoft/pt/basicdata/dyview/entity",
      "name": "code_java_wellpt",
      "url": "https://searchcode.com/codesearch/view/94109881/",
      "md5hash": "1122e10f64eca7d726aec58a05c7c3cc",
      "lines": {
        "32": "@Table(name = \"dyview_select_conditionType\")",
        "34": "@DynamicInsert",
        "35": "public class ConditionType extends IdEntity {",
        "31": "@Entity"
      },
      "id": 94109881,
      "filename": "ConditionType.java"
    },
    {
      "repo": "http://xeno.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 127,
      "location": "/devs/xeno-persist-Java/src/xeno/persist/criteria",
      "name": "xeno",
      "url": "https://searchcode.com/codesearch/view/12337721/",
      "md5hash": "9f3829ec0c5bc9427455df05a6f0aa2d",
      "lines": {
        "26": "",
        "27": "enum ConditionType {"
      },
      "id": 12337721,
      "filename": "ConditionType.java"
    },
    {
      "repo": "https://github.com/axelfontaine/aws-sdk-java.git",
      "language": "Java",
      "linescount": 215,
      "location": "/src/main/java/com/amazonaws/auth/policy/internal",
      "name": "aws-sdk-java",
      "url": "https://searchcode.com/codesearch/view/75940570/",
      "md5hash": "62be5eb18aad74599fe16f9d83bcaddc",
      "lines": {
        "151": "        for (Condition condition : conditions) {",
        "111": "        generator.key(\"Condition\").object();",
        "112": "        for (String conditionType : conditionsByType.keySet()) {",
        "113": "            generator.key(conditionType).object();",
        "114": "",
        "119": "             */",
        "120": "            Map<String, List<String>> conditionValuesByKey = sortConditionsByKey(conditionsByType.get(conditionType));",
        "153": "            if (conditionsByType.get(conditionType) == null) {",
        "152": "            String conditionType = condition.getType();",
        "155": "            }",
        "156": "            conditionsByType.get(conditionType).add(condition);",
        "154": "                conditionsByType.put(conditionType, new ArrayList<Condition>());"
      },
      "id": 75940570,
      "filename": "JsonPolicyWriter.java"
    },
    {
      "repo": "https://github.com/alibaba/wasp.git",
      "language": "Java",
      "linescount": 176,
      "location": "/src/main/java/com/alibaba/wasp/plan/parser",
      "name": "wasp",
      "url": "https://searchcode.com/codesearch/view/75829628/",
      "md5hash": "300106b82507e1cc5a2ff789aea7fefa",
      "lines": {
        "32": "public class Condition {",
        "33": "  public static enum ConditionType {",
        "66": "  public Condition(String fieldName, ConditionType type, SQLExpr value) {",
        "37": "",
        "38": "  final private ConditionType type;",
        "65": "   */",
        "77": "   */",
        "78": "  public Condition(String fieldName, ConditionType type, SQLExpr value,",
        "157": "    if (type == ConditionType.EQUAL) {",
        "156": "    sb.append(\" Value \");",
        "93": "",
        "94": "  public ConditionType getType() {"
      },
      "id": 75829628,
      "filename": "Condition.java"
    },
    {
      "repo": "https://github.com/rdwebster/Open-Quark.git",
      "language": "Java",
      "linescount": 6093,
      "location": "/src/CAL_Platform/src/org/openquark/cal/compiler",
      "name": "Open-Quark",
      "url": "https://searchcode.com/codesearch/view/107275214/",
      "md5hash": "49ae7a76c088804f30e1c83078d64d8e",
      "lines": {
        "899": "                    patternAnalysisResults = analyzeDataConstructorNonPatternConstructorHelper(",
        "900": "                            functionEnv, nonGenericVars, consTypeExpr, conditionType, patternNode, patternNode);",
        "1034": "        try {            ",
        "811": "        final ParseTreeNode conditionNode = caseNode.firstChild();",
        "812": "        final TypeExpr conditionType = analyzeExpr(functionEnv, nonGenericVars, conditionNode);",
        "909": "                    patternAnalysisResults = analyzeDataConstructorNonPatternConstructorHelper(",
        "910": "                            functionEnv, nonGenericVars, consTypeExpr, conditionType, null, patternNode);",
        "656": "        try {            ",
        "657": "            TypeExpr.unifyType(conditionType, recordPatternTypeExpr, currentModuleTypeInfo);",
        "1035": "            TypeExpr.unifyType(conditionType, typeOfAppl, currentModuleTypeInfo);",
        "919": "                    patternAnalysisResults = analyzeDataConstructorNonPatternConstructorHelper(",
        "534": "        final ParseTreeNode conditionNode = recordCaseNode.firstChild();",
        "535": "        final TypeExpr conditionType = analyzeExpr(functionEnv, nonGenericVars, conditionNode);",
        "920": "                            functionEnv, nonGenericVars, consTypeExpr, conditionType, null, patternNode);",
        "1051": "     * @param nonGenericVars",
        "1052": "     * @param conditionType the type of the expression on which the case is predicated."
      },
      "id": 107275214,
      "filename": "CALTypeChecker.java"
    },
    {
      "repo": "git://github.com/Graylog2/graylog2-server.git",
      "language": "Java",
      "linescount": 322,
      "location": "/graylog2-server/src/test/java/org/graylog2/inputs/extractors",
      "name": "graylog2-server",
      "url": "https://searchcode.com/codesearch/view/116004640/",
      "md5hash": "fa6def0d6abaccbc8a5205aea26d68a7",
      "lines": {
        "161": "",
        "162": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\"__\", 4), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "135": "",
        "136": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"our_result\", config(\" \", 9001), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "199": "         public void testDoesNotInitializeOnNullTargetIndex() throws Exception {",
        "44": "",
        "45": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\" \", 4), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "174": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"LOLIDONTEXIST\", \"our_result\", config(\" \", 4), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "173": "",
        "200": "        new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(\"x\", null), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "148": "",
        "149": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"our_result\", config(\"_\", 9001), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "183": "",
        "184": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"our_result\", config(\" \", 4), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "58": "",
        "59": "        SplitAndIndexExtractor x = new SplitAndIndexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\".\", 2), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);"
      },
      "id": 116004640,
      "filename": "SplitAndIndexExtractorTest.java"
    },
    {
      "repo": "git://github.com/Graylog2/graylog2-server.git",
      "language": "Java",
      "linescount": 1050,
      "location": "/graylog2-server/src/test/java/org/graylog2/plugin/inputs",
      "name": "graylog2-server",
      "url": "https://searchcode.com/codesearch/view/116004530/",
      "md5hash": "c2ae03a24ab2be93860f48fe02cf8fac",
      "lines": {
        "128": "        final TestExtractor extractor = new TestExtractor.Builder()",
        "129": "                .conditionType(STRING)",
        "39": "import static org.graylog2.plugin.inputs.Converter.Type.NUMERIC;",
        "40": "import static org.graylog2.plugin.inputs.Extractor.ConditionType.NONE;",
        "41": "import static org.graylog2.plugin.inputs.Extractor.ConditionType.REGEX;",
        "42": "import static org.graylog2.plugin.inputs.Extractor.ConditionType.STRING;",
        "43": "import static org.graylog2.plugin.inputs.Extractor.CursorStrategy.COPY;",
        "941": "            private String targetField = \"target\";",
        "942": "            private ConditionType conditionType = NONE;",
        "914": "                             List<Converter> converters,",
        "915": "                             ConditionType conditionType,",
        "917": "            super(metricRegistry, id, title, order, type, cursorStrategy, sourceField, targetField, extractorConfig,",
        "918": "                    creatorUserId, converters, conditionType, conditionValue);",
        "152": "        final TestExtractor extractor = new TestExtractor.Builder()",
        "153": "                .conditionType(REGEX)"
      },
      "id": 116004530,
      "filename": "ExtractorTest.java"
    },
    {
      "repo": "git://github.com/Graylog2/graylog2-server.git",
      "language": "Java",
      "linescount": 208,
      "location": "/graylog2-server/src/test/java/org/graylog2/inputs/extractors",
      "name": "graylog2-server",
      "url": "https://searchcode.com/codesearch/view/116004638/",
      "md5hash": "5b0fb068d0bfcbf172aea1e0431de733",
      "lines": {
        "164": "",
        "165": "        SubstringExtractor x = new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(0, 3), \"foo\", noConverters(), Extractor.ConditionType.REGEX, \"^XXX\");",
        "135": "    public void testDoesNotInitializeOnNullConfigMap() throws Exception {",
        "136": "        new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", null, \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "140": "    public void testDoesNotInitializeOnNullStartValue() throws Exception {",
        "44": "",
        "45": "        SubstringExtractor x = new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(17, 30), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "177": "",
        "141": "        new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(null, 2), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "145": "    public void testDoesNotInitializeOnNullEndValue() throws Exception {",
        "146": "        new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(1, null), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "178": "        SubstringExtractor x = new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(0, 3), \"foo\", noConverters(), Extractor.ConditionType.STRING, \"FOOBAR\");",
        "150": "    public void testDoesNotInitializeOnStringStartValue() throws Exception {",
        "151": "        new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(\"1\", 2), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "155": "    public void testDoesNotInitializeOnStringEndValue() throws Exception {",
        "156": "        new SubstringExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(1, \"2\"), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);"
      },
      "id": 116004638,
      "filename": "SubstringExtractorTest.java"
    },
    {
      "repo": "https://bitbucket.org/mbrizi/jira-plugins",
      "language": "Java",
      "linescount": 115,
      "location": "/ugov-jira-subtask-plugin/src/main/java/com/googlecode/jsu/helpers",
      "name": "jira-plugins",
      "url": "https://searchcode.com/codesearch/view/119422087/",
      "md5hash": "df0983d263b04a0a95b30c08ed255326",
      "lines": {
        "83": "    public List<ConditionType> getConditionTypes() {",
        "100": "     */",
        "37": "    @SuppressWarnings(\"serial\")",
        "38": "    private static final Map<Integer, ConditionType> CONDITIONS_CACHE =",
        "39": "        new LinkedHashMap<Integer, ConditionType>(6) {{",
        "40": "            put(GREATER.getId(), GREATER);",
        "82": "     */",
        "18": "public class ConditionCheckerFactory {",
        "19": "    public static final ConditionType GREATER = new ConditionType(1, \">\", \"greater than\", \"G\");",
        "20": "    public static final ConditionType GREATER_EQUAL = new ConditionType(2, \">=\", \"greater than or equal to\", \"GE\");",
        "85": "    }",
        "84": "        return new ArrayList<ConditionType>(CONDITIONS_CACHE.values());",
        "60": "",
        "61": "    public ConditionChecker getChecker(ComparisonType type, ConditionType condition) {",
        "101": "    public ConditionType findConditionById(String id) {"
      },
      "id": 119422087,
      "filename": "ConditionCheckerFactory.java"
    },
    {
      "repo": "git://github.com/Graylog2/graylog2-server.git",
      "language": "Java",
      "linescount": 210,
      "location": "/graylog2-server/src/test/java/org/graylog2/inputs/extractors",
      "name": "graylog2-server",
      "url": "https://searchcode.com/codesearch/view/116004641/",
      "md5hash": "cc089c1f3cb6cfb3d9712bfa150a1631",
      "lines": {
        "160": "        new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(\"\"), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "181": "",
        "130": "",
        "131": "        RegexExtractor x = new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"our_result\", config(\"id:(\\\\d+)\"), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "182": "        RegexExtractor x = new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\"id:(\\\\d+)\"), \"foo\", noConverters(), Extractor.ConditionType.STRING, \"FOOBAR\");",
        "168": "",
        "140": "",
        "44": "",
        "45": "        RegexExtractor x = new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\"id:(\\\\d+)\"), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "141": "        RegexExtractor x = new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"our_result\", config(\"(.*)\"), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "149": "    public void testDoesNotInitializeOnNullConfigMap() throws Exception {",
        "150": "        new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", null, \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "169": "        RegexExtractor x = new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.COPY, \"somefield\", \"our_result\", config(\"id:(\\\\d+)\"), \"foo\", noConverters(), Extractor.ConditionType.REGEX, \"^XXX\");",
        "154": "    public void testDoesNotInitializeOnNullRegexValue() throws Exception {",
        "155": "        new RegexExtractor(metricRegistry, \"foo\", \"foo\", 0, Extractor.CursorStrategy.CUT, \"somefield\", \"somefield\", config(null), \"foo\", noConverters(), Extractor.ConditionType.NONE, null);",
        "159": "    public void testDoesNotInitializeOnEmptyRegexValue() throws Exception {"
      },
      "id": 116004641,
      "filename": "RegexExtractorTest.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 131,
      "source": "Github",
      "id": 2
    },
    {
      "count": 70,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 40,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "GitLab",
      "id": 13
    }
  ]
}