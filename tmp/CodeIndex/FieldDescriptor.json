{
  "matchterm": "FieldDescriptor",
  "previouspage": null,
  "searchterm": "FieldDescriptor",
  "query": "FieldDescriptor",
  "language_filters": [
    {
      "count": 1134,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1134,
  "results": [
    {
      "repo": "git://github.com/JetBrains/intellij-community.git",
      "language": "Java",
      "linescount": 64,
      "location": "/plugins/java-decompiler/engine/src/org/jetbrains/java/decompiler/struct/gen",
      "name": "intellij-community",
      "url": "https://searchcode.com/codesearch/view/116118371/",
      "md5hash": "8850b571b88aa14436c278f7a3040f4e",
      "lines": {
        "34": "",
        "35": "  public static FieldDescriptor parseDescriptor(String descriptor) {",
        "36": "    return new FieldDescriptor(descriptor);",
        "37": "  }",
        "55": "    FieldDescriptor fd = (FieldDescriptor)o;",
        "19": "",
        "20": "public class FieldDescriptor {",
        "21": "",
        "22": "  public static final FieldDescriptor INTEGER_DESCRIPTOR = parseDescriptor(\"Ljava/lang/Integer;\");",
        "23": "  public static final FieldDescriptor LONG_DESCRIPTOR = parseDescriptor(\"Ljava/lang/Long;\");",
        "24": "  public static final FieldDescriptor FLOAT_DESCRIPTOR = parseDescriptor(\"Ljava/lang/Float;\");",
        "25": "  public static final FieldDescriptor DOUBLE_DESCRIPTOR = parseDescriptor(\"Ljava/lang/Double;\");",
        "54": "",
        "53": "    if (o == null || !(o instanceof FieldDescriptor)) return false;",
        "52": "    if (o == this) return true;"
      },
      "id": 116118371,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/openisoj/openisoj-core",
      "language": "Java",
      "linescount": 249,
      "location": "/src/main/java/org/bitbucket/openisoj",
      "name": "openisoj-core",
      "url": "https://searchcode.com/codesearch/view/62443072/",
      "md5hash": "7017e783c6464745950e691ccb2e2932",
      "lines": {
        "2": "",
        "3": "import org.bitbucket.openisoj.exceptions.FieldDescriptorException;",
        "14": "",
        "15": "public class FieldDescriptor implements IFieldDescriptor {",
        "16": "",
        "17": "    public static IFieldDescriptor getAsciiAlphaNumeric(int length) throws Exception {",
        "18": "        return new FieldDescriptor(new FixedLengthFormatter(length), FieldValidators.getAnsp(),",
        "19": "                new PadRightSetAdjuster(length, ' '));",
        "21": "",
        "22": "    public static IFieldDescriptor getAsciiAmount(int length) throws Exception {",
        "23": "        return new FieldDescriptor(new FixedLengthFormatter(length), FieldValidators.getRev87Amount(),",
        "24": "                new PadLeftSetAdjuster(length, '0'));",
        "26": "",
        "27": "    public static IFieldDescriptor getAsciiAns(int length) throws Exception {",
        "28": "        return new FieldDescriptor(new FixedLengthFormatter(length), FieldValidators.getAns(), null);"
      },
      "id": 62443072,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/openesb/mdm-legacy.git",
      "language": "Java",
      "linescount": 248,
      "location": "/open-dm-mi/index-core/src/main/java/com/sun/mdm/index/objects/validation",
      "name": "mdm-legacy",
      "url": "https://searchcode.com/codesearch/view/43432385/",
      "md5hash": "774e4e14b7e54c43d0d9bef4efd20efc",
      "lines": {
        "224": "            throw new UnknownDataTypeException(mLocalizer.t(\"OBJ646: FieldDescriptor \" + ",
        "65": "     */",
        "66": "    public FieldDescriptor(String name) throws ValidationException {",
        "36": " */",
        "37": "public class FieldDescriptor implements FieldValidator {",
        "161": "    /**",
        "162": "     * Set an attribute of this FieldDescriptor",
        "81": "     */",
        "82": "    public FieldDescriptor(String name, int dataType) throws ValidationException {",
        "180": "    /**",
        "181": "     * Set the FieldType of this FieldDescriptor",
        "150": "    /**",
        "151": "     * Set all attributes of this FieldDescriptor",
        "223": "        if (field.getType() != getFieldType()) {",
        "94": "     */",
        "95": "    public FieldDescriptor(String name, int dataType, int attributes) throws ValidationException {"
      },
      "id": 43432385,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/pymma/mosaic.git",
      "language": "Java",
      "linescount": 250,
      "location": "/open-dm-mi/index-core/src/main/java/com/sun/mdm/index/objects/validation",
      "name": "mosaic",
      "url": "https://searchcode.com/codesearch/view/46866059/",
      "md5hash": "7bf19ee505fb4e0f16e3ffe806e8a0ad",
      "lines": {
        "65": "     */",
        "66": "    public FieldDescriptor(String name) throws ValidationException {",
        "227": "            throw new UnknownDataTypeException(mLocalizer.t(\"OBJ646: FieldDescriptor \" + ",
        "36": " */",
        "37": "public class FieldDescriptor implements FieldValidator {",
        "161": "    /**",
        "226": "        if(!ObjectField.isValueValid(getFieldType(), value)) {",
        "162": "     * Set an attribute of this FieldDescriptor",
        "81": "     */",
        "82": "    public FieldDescriptor(String name, int dataType) throws ValidationException {",
        "180": "    /**",
        "181": "     * Set the FieldType of this FieldDescriptor",
        "150": "    /**",
        "151": "     * Set all attributes of this FieldDescriptor",
        "188": "        if (dataType < 0 || dataType > FieldType.MAX_TYPES) {",
        "189": "            throw new UnknownDataTypeException(mLocalizer.t(\"OBJ645: FieldDescriptor \" + "
      },
      "id": 46866059,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/bpw/oshajava",
      "language": "Java",
      "linescount": 145,
      "location": "/src/oshajava/spec/names",
      "name": "oshajava",
      "url": "https://searchcode.com/codesearch/view/57666627/",
      "md5hash": "35378aafb7c3664383b1f096cd217e39",
      "lines": {
        "128": "\t}",
        "129": "\tpublic static FieldDescriptor of(ObjectTypeDescriptor declaringType, String fieldName, TypeDescriptor fieldType, int access) {",
        "131": "\t\tif (stringToDescriptor.containsKey(s)) {",
        "132": "\t\t\tfinal FieldDescriptor fd = stringToDescriptor.get(s);",
        "39": "",
        "40": "public class FieldDescriptor extends Descriptor {",
        "137": "\t\t} else {",
        "138": "\t\t\tFieldDescriptor fd = new FieldDescriptor(declaringType, fieldName, fieldType, access);",
        "48": "\t",
        "49": "\tprivate FieldDescriptor(ObjectTypeDescriptor containingType, String fieldName, TypeDescriptor fieldType, int access) {",
        "116": "\t\tif (other == this) return true;",
        "117": "\t\tif (other instanceof FieldDescriptor) {",
        "118": "\t\t\tFieldDescriptor fd = (FieldDescriptor)other;",
        "119": "\t\t\treturn declaringType.equals(fd.declaringType) && fieldName.equals(fd.fieldName) && fieldType.equals(fd.fieldType);",
        "124": "\t// Runtime.",
        "125": "\tprivate static final Map<String,FieldDescriptor> stringToDescriptor = new HashMap<String,FieldDescriptor>();",
        "126": "\tpublic static FieldDescriptor of(ObjectTypeDescriptor declaringType, String fieldName, TypeDescriptor fieldType) {"
      },
      "id": 57666627,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/cpopov/JMongo.git",
      "language": "Java",
      "linescount": 224,
      "location": "/src/main/java/uk/co/innoltd/jmongo/internal",
      "name": "JMongo",
      "url": "https://searchcode.com/codesearch/view/66460218/",
      "md5hash": "7853c1dac5eae14f029be5c0c0aaae98",
      "lines": {
        "129": "",
        "130": "\tpublic List<FieldDescriptor> getChildren() {",
        "75": "\t\treturn fieldDescriptor;",
        "69": "\t\t\t\tif (ReflectionUtils.shouldPersist(childField)) {",
        "70": "\t\t\t\t\tfieldDescriptor.addChild(get(childField));",
        "10": "",
        "11": "public class FieldDescriptor {",
        "61": "\t\tFieldDescriptor fieldDescriptor = new FieldDescriptor(field);",
        "74": "\t\t}",
        "30": "\tprivate FieldDescriptor(Field field) {",
        "23": "\tprivate boolean isEnum;",
        "24": "\tprivate List<FieldDescriptor> children = new ArrayList<FieldDescriptor>();",
        "25": "",
        "60": "\tpublic static FieldDescriptor get(Field field) {",
        "29": "",
        "62": "\t\tif (ReflectionUtils.isSimpleField(field)) {"
      },
      "id": 66460218,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/cpilsworth/sling.git",
      "language": "Java",
      "linescount": 173,
      "location": "/tooling/maven/maven-jcrocm-plugin/src/main/java/org/apache/sling/maven/jcrocm",
      "name": "sling",
      "url": "https://searchcode.com/codesearch/view/92252941/",
      "md5hash": "f230f1c7d403c64cee12cbff85578829",
      "lines": {
        "97": "",
        "98": "    static FieldDescriptor fromMethod(Log log, JavaMethod method) {",
        "114": "",
        "111": "",
        "112": "        return new FieldDescriptor(log, tag, fieldName);",
        "49": " */",
        "50": "public class FieldDescriptor extends AbstractItemDescriptor {",
        "115": "    private FieldDescriptor(Log log, DocletTag tag, String fieldName) {",
        "87": "",
        "88": "    static FieldDescriptor fromField(Log log, JavaField field) {",
        "25": "/**",
        "26": " * The <code>FieldDescriptor</code> class provides support for the",
        "94": "",
        "95": "        return new FieldDescriptor(log, tag, field.getName());"
      },
      "id": 92252941,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/JoshiManjila/jersey.git",
      "language": "Java",
      "linescount": 119,
      "location": "/incubator/declarative-linking/src/main/java/org/glassfish/jersey/linking",
      "name": "jersey",
      "url": "https://searchcode.com/codesearch/view/94621510/",
      "md5hash": "2d5374dfc18b6a9dd3b8f14aa4ab00d8",
      "lines": {
        "72": "            Logger.getLogger(FieldDescriptor.class.getName()).log(Level.FINE, null, ex);",
        "69": "        } catch (IllegalArgumentException ex) {",
        "70": "            Logger.getLogger(FieldDescriptor.class.getName()).log(Level.FINE, null, ex);",
        "55": " */",
        "56": "class FieldDescriptor {",
        "103": "        final FieldDescriptor other = (FieldDescriptor) obj;",
        "71": "        } catch (IllegalAccessException ex) {",
        "59": "",
        "60": "    FieldDescriptor(Field f) {",
        "102": "        }"
      },
      "id": 94621510,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/ngiger/elexis-base",
      "language": "Java",
      "linescount": 90,
      "location": "/ch.elexis/src/ch/elexis/selectors",
      "name": "elexis-base",
      "url": "https://searchcode.com/codesearch/view/117568140/",
      "md5hash": "3f22db5bee3ece5bae9f6dd79dff349a",
      "lines": {
        "65": "\t",
        "66": "\tpublic FieldDescriptor(String anzeige, String feldname, IObjectLink<T> cp){",
        "72": "\t",
        "73": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] choices){",
        "80": "\t",
        "15": "",
        "16": "public class FieldDescriptor<T extends PersistentObject> {",
        "81": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] comboItems,",
        "50": "\t",
        "51": "\tpublic FieldDescriptor(String anzeige, String feldname, Typ feldtyp, String hashname){",
        "58": "\t",
        "59": "\tpublic FieldDescriptor(String all){"
      },
      "id": 117568140,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/lukasc-ch/elexis-3-core.git",
      "language": "Java",
      "linescount": 90,
      "location": "/ch.elexis.core.ui/src/ch/elexis/core/ui/selectors",
      "name": "elexis-3-core",
      "url": "https://searchcode.com/codesearch/view/93891062/",
      "md5hash": "08441f8507119786b27af6b03eea1c3f",
      "lines": {
        "65": "\t",
        "66": "\tpublic FieldDescriptor(String anzeige, String feldname, IObjectLink<T> cp){",
        "72": "\t",
        "73": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] choices){",
        "80": "\t",
        "15": "",
        "16": "public class FieldDescriptor<T extends PersistentObject> {",
        "81": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] comboItems,",
        "50": "\t",
        "51": "\tpublic FieldDescriptor(String anzeige, String feldname, Typ feldtyp, String hashname){",
        "58": "\t",
        "59": "\tpublic FieldDescriptor(String all){"
      },
      "id": 93891062,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/tims/mucene.git",
      "language": "Java",
      "linescount": 77,
      "location": "/src/java/fm/last/mucene/schema",
      "name": "mucene",
      "url": "https://searchcode.com/codesearch/view/108093592/",
      "md5hash": "f8edd04e5dee22295b59a35667dd74e5",
      "lines": {
        "2": "",
        "3": "public class FieldDescriptor {",
        "57": "      return false;",
        "8": "",
        "9": "  public FieldDescriptor(String name, FieldType type) {",
        "58": "    FieldDescriptor other = (FieldDescriptor) obj;",
        "14": "",
        "15": "  public FieldDescriptor(String name, FieldType type, boolean stored, boolean indexed) {"
      },
      "id": 108093592,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/marlovitsh/elexis-base-marlovitsh-new",
      "language": "Java",
      "linescount": 91,
      "location": "/ch.elexis/src/ch/elexis/selectors",
      "name": "elexis-base-marlovitsh-new",
      "url": "https://searchcode.com/codesearch/view/61097639/",
      "md5hash": "f5d2ff07bb50c535f1f8a1a88e65e4c8",
      "lines": {
        "66": "\t",
        "67": "\tpublic FieldDescriptor(String anzeige, String feldname, IObjectLink<T> cp){",
        "81": "\t",
        "73": "\t",
        "10": " *    ",
        "11": " *    $Id: FieldDescriptor.java 5355 2009-06-14 10:35:19Z rgw_ch $",
        "16": "",
        "17": "public class FieldDescriptor<T extends PersistentObject> {",
        "82": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] comboItems,",
        "51": "\t",
        "52": "\tpublic FieldDescriptor(String anzeige, String feldname, Typ feldtyp, String hashname){",
        "59": "\t",
        "60": "\tpublic FieldDescriptor(String all){",
        "74": "\tpublic FieldDescriptor(String anzeige, String feldname, String hashname, String[] choices){"
      },
      "id": 61097639,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/github-borniswelt/stardust.engine.git",
      "language": "Java",
      "linescount": 64,
      "location": "/stardust-engine-core/src/main/java/org/eclipse/stardust/engine/core/persistence/jdbc",
      "name": "stardust.engine",
      "url": "https://searchcode.com/codesearch/view/74212021/",
      "md5hash": "a26a15561fea162e374508d90ddfb4c5",
      "lines": {
        "27": "",
        "18": " */",
        "19": "public class FieldDescriptor",
        "28": "   public FieldDescriptor(Field field, int length, String wrapFunction,"
      },
      "id": 74212021,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/Melandro/bonita-engine.git",
      "language": "Java",
      "linescount": 42,
      "location": "/bpm/bonita-core/bonita-process-engine/src/main/java/org/bonitasoft/engine/search/descriptor",
      "name": "bonita-engine",
      "url": "https://searchcode.com/codesearch/view/76168317/",
      "md5hash": "cf9aceb90d50938058bebe5257ee8bae",
      "lines": {
        "26": "",
        "27": "    public FieldDescriptor(final Class<? extends PersistentObject> persitentClass, final String value) {",
        "20": " */",
        "21": "public class FieldDescriptor {"
      },
      "id": 76168317,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/aldrinleal/openejb-core",
      "language": "Java",
      "linescount": 167,
      "location": "/src/main/java/org/apache/openejb/util/io",
      "name": "openejb-core",
      "url": "https://searchcode.com/codesearch/view/56057245/",
      "md5hash": "26ee5aebf2978664deea5a1de21e1cc4",
      "lines": {
        "99": "    public int compareTo(Object o) {",
        "100": "        FieldDescriptor f2 = (FieldDescriptor) o;",
        "53": "",
        "22": "",
        "23": "public class FieldDescriptor implements java.io.Serializable, Comparable {",
        "24": "",
        "25": "    public FieldDescriptor(Field field) {",
        "54": "    public FieldDescriptor(String name, Class type) {"
      },
      "id": 56057245,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://bitbucket.org/lthief/hsplet",
      "language": "Java",
      "linescount": 56,
      "location": "/compiler/hsplet/compiler/codescanner",
      "name": "hsplet",
      "url": "https://searchcode.com/codesearch/view/60266293/",
      "md5hash": "1acee2e3c49554b51087c13a214f247c",
      "lines": {
        "33": "        }",
        "34": "        final FieldDescriptor other = (FieldDescriptor) obj;",
        "22": "    public String toString() {",
        "23": "        return \"FieldDescriptor{\" + \"owner=\" + owner + \", name=\" + name + \", desc=\" + desc + '}';",
        "10": " */",
        "11": "public class FieldDescriptor {",
        "14": "",
        "15": "    public FieldDescriptor(String owner, String name, String desc) {"
      },
      "id": 60266293,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "http://mysqlindexanalyzer.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 156,
      "location": "/MySQLIndexAnalyzer/src/de/shipdown/util/mysql/index",
      "name": "mysqlindexanalyzer",
      "url": "https://searchcode.com/codesearch/view/3283604/",
      "md5hash": "f2209d03b7768eabe7938fee41cbf07e",
      "lines": {
        "33": " */",
        "34": "public class FieldDescriptor {",
        "71": "    /**",
        "72": "     * Creates a new FieldDescriptor. Use this constructor for single field",
        "77": "     */",
        "78": "    public FieldDescriptor(@NonNull",
        "48": "    /**",
        "49": "     * Creates a new FieldDescriptor. Use this constructor especially for parts",
        "94": "        FieldDescriptor tDescriptor = (FieldDescriptor) obj;",
        "56": "     */",
        "57": "    public FieldDescriptor(@NonNull",
        "90": "    public boolean equals(Object obj) {",
        "91": "        if (!(obj instanceof FieldDescriptor)) {",
        "93": "        }",
        "62": "",
        "63": "    public FieldDescriptor(@NonNull"
      },
      "id": 3283604,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "https://github.com/Melandro/bonita-engine.git",
      "language": "Java",
      "linescount": 48,
      "location": "/services/bonita-sql/src/main/java/org/bonitasoft/engine/sql",
      "name": "bonita-engine",
      "url": "https://searchcode.com/codesearch/view/76155987/",
      "md5hash": "013c712253a21a28d19f9fd80ccfd494",
      "lines": {
        "16": "public abstract class FieldDescriptor<T> {",
        "24": "    public FieldDescriptor(final String columnName, final String fieldName, final Class<T> fieldType) {",
        "23": "",
        "15": ""
      },
      "id": 76155987,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "http://gap-data.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 118,
      "location": "/types/src/gap/service/od",
      "name": "gap-data",
      "url": "https://searchcode.com/codesearch/view/2633653/",
      "md5hash": "8a55fc8ce9f68ae6d7fb1bc78047737b",
      "lines": {
        "91": "    public interface Relation ",
        "36": "    public interface DefaultSortBy",
        "37": "        extends FieldDescriptor",
        "92": "        extends FieldDescriptor",
        "79": "    public interface Uniqueness ",
        "80": "        extends FieldDescriptor",
        "49": "    public interface Enumerated",
        "50": "        extends FieldDescriptor",
        "27": " */",
        "28": "public interface FieldDescriptor",
        "61": "    public interface Persistence ",
        "62": "        extends FieldDescriptor"
      },
      "id": 2633653,
      "filename": "FieldDescriptor.java"
    },
    {
      "repo": "git://github.com/jersey/jersey-old.git",
      "language": "Java",
      "linescount": 117,
      "location": "/jersey-server-linking/src/main/java/com/sun/jersey/server/linking/impl",
      "name": "jersey-old",
      "url": "https://searchcode.com/codesearch/view/14577161/",
      "md5hash": "9a70d286afdf58992349834f94db4bc0",
      "lines": {
        "100": "        }",
        "67": "        } catch (IllegalArgumentException ex) {",
        "68": "            Logger.getLogger(FieldDescriptor.class.getName()).log(Level.SEVERE, null, ex);",
        "53": " */",
        "54": "public class FieldDescriptor {",
        "57": "",
        "58": "    FieldDescriptor(Field f) {",
        "70": "            Logger.getLogger(FieldDescriptor.class.getName()).log(Level.SEVERE, null, ex);",
        "101": "        final FieldDescriptor other = (FieldDescriptor) obj;",
        "69": "        } catch (IllegalAccessException ex) {"
      },
      "id": 14577161,
      "filename": "FieldDescriptor.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 609,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 372,
      "source": "Github",
      "id": 2
    },
    {
      "count": 145,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 6,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 2,
      "source": "Sourceforge",
      "id": 4
    }
  ]
}