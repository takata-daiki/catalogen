{
  "matchterm": "Quotient",
  "previouspage": null,
  "searchterm": "Quotient",
  "query": "Quotient",
  "language_filters": [
    {
      "count": 1203,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 1202,
  "results": [
    {
      "repo": "https://bitbucket.org/dkocher/google-visualization-java",
      "language": "Java",
      "linescount": 125,
      "location": "/src/main/java/com/google/visualization/datasource/query/scalarfunction",
      "name": "google-visualization-java",
      "url": "https://searchcode.com/codesearch/view/60087308/",
      "md5hash": "fa1180555cc4d46d407a19b8f12db85a",
      "lines": {
        "65": "    /**",
        "66": "     * Executes the scalar function quotient() on the given values. Returns the",
        "35": "     */",
        "36": "    private static final String FUNCTION_NAME = \"quotient\";",
        "40": "     */",
        "41": "    private static final Quotient INSTANCE = new Quotient();",
        "45": "     */",
        "46": "    private Quotient() {",
        "67": "     * quotient of the given values. All values are number values. Division by",
        "53": "     */",
        "54": "    public static Quotient getInstance() {",
        "24": "/**",
        "25": " * The binary scalar function quotient().",
        "26": " * Returns the quotient of two values. Division by zero returns a null number",
        "27": " * value.",
        "30": " */",
        "31": "public class Quotient implements ScalarFunction {"
      },
      "id": 60087308,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://symja.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 590,
      "location": "/jas/src/main/java/edu/jas/ufd",
      "name": "symja",
      "url": "https://searchcode.com/codesearch/view/11752790/",
      "md5hash": "0afa962550c15c2eedc6c780888df834",
      "lines": {
        "32": "    public final QuotientRing<C> ring;",
        "1": "/*",
        "2": " * $Id: Quotient.java 3356 2010-10-23 16:41:01Z kredel $",
        "51": "    public Quotient(QuotientRing<C> r) {",
        "48": "     * The constructor creates a Quotient object from a ring factory.",
        "15": "/**",
        "16": " * Quotient, i.e. rational function, based on GenPolynomial with RingElem",
        "50": "     */",
        "19": " */",
        "20": "public class Quotient<C extends GcdRingElem<C>> implements GcdRingElem<Quotient<C>> {",
        "22": "",
        "23": "    private static final Logger logger = Logger.getLogger(Quotient.class);",
        "47": "    /**",
        "29": "    /**",
        "30": "     * Quotient class factory data structure.",
        "31": "     */"
      },
      "id": 11752790,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://symja.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 400,
      "location": "/jas/src/main/java/edu/jas/poly",
      "name": "symja",
      "url": "https://searchcode.com/codesearch/view/11752836/",
      "md5hash": "f783fefd778ca47900b961adaa1ed861",
      "lines": {
        "1": "/*",
        "2": " * $Id: Quotient.java 3365 2010-10-24 12:59:34Z kredel $",
        "42": "",
        "43": "    /** The constructor creates a Quotient object ",
        "16": "/**",
        "17": " * Quotient element based on RingElem pairs.",
        "20": " */",
        "21": "public class Quotient<C extends RingElem<C> > ",
        "22": "             implements RingElem< Quotient<C> > {",
        "23": "",
        "24": "    private static final Logger logger = Logger.getLogger(Quotient.class);",
        "27": "",
        "28": "    /** Quotient class factory data structure. ",
        "29": "     */",
        "30": "    public final QuotientRing<C> ring;"
      },
      "id": 11752836,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://google-visualization-java.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 127,
      "location": "/src/main/java/com/google/visualization/datasource/query/scalarfunction",
      "name": "google-visualization-java",
      "url": "https://searchcode.com/codesearch/view/4536112/",
      "md5hash": "833ec8a5769d49a23b6d772611cd663e",
      "lines": {
        "64": "  /**",
        "65": "   * Executes the scalar function quotient() on the given values. Returns the",
        "66": "   * quotient of the given values. All values are number values. Division by",
        "35": "   */",
        "36": "  private static final String FUNCTION_NAME = \"quotient\";",
        "40": "   */",
        "41": "  private static final Quotient INSTANCE = new Quotient();",
        "45": "   */",
        "46": "  private Quotient() {}",
        "52": "   */",
        "53": "  public static Quotient getInstance() {",
        "24": "/**",
        "25": " * The binary scalar function quotient().",
        "26": " * Returns the quotient of two values. Division by zero returns a null number",
        "27": " * value.",
        "30": " */",
        "31": "public class Quotient implements ScalarFunction {"
      },
      "id": 4536112,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://github.com/tegonal/DevsmartLib-Android.git",
      "language": "Java",
      "linescount": 22,
      "location": "/devsmartlib/src/com/devsmart/android/mathutils",
      "name": "DevsmartLib-Android",
      "url": "https://searchcode.com/codesearch/view/70661189/",
      "md5hash": "6d7501af55b45de223e269f15bcd85b9",
      "lines": {
        "16": "\t",
        "17": "\tpublic Quotient inverse() {",
        "2": "",
        "3": "public class Quotient {",
        "19": "\t}",
        "7": "\t",
        "8": "\tpublic Quotient(int n, int d) {",
        "18": "\t\treturn new Quotient(denominator, numerator);"
      },
      "id": 70661189,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://github.com/csc201/A7CycleThrowTryCatch.git",
      "language": "Java",
      "linescount": 35,
      "location": "/A7CycleThrowTryCatch/src",
      "name": "A7CycleThrowTryCatch",
      "url": "https://searchcode.com/codesearch/view/94746695/",
      "md5hash": "501596942bb31def07c28d60eb227892",
      "lines": {
        "10": "\t\tJTextField denominator = new JTextField(10);",
        "11": "\t\tJLabel label = new JLabel(\"Enter numerator and denominator to find the quotient.\");",
        "5": "",
        "6": "public class Quotient {"
      },
      "id": 94746695,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://androjena.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 114,
      "location": "/androjena/src/com/hp/hpl/jena/reasoner/rulesys/builtins",
      "name": "androjena",
      "url": "https://searchcode.com/codesearch/view/819248/",
      "md5hash": "8025d48d70fe349d7f2de5505640bb2d",
      "lines": {
        "1": "/******************************************************************",
        "2": " * File:        Quotient.java",
        "33": "    public String getName() {",
        "7": " * [See end of file]",
        "8": " * $Id: Quotient.java,v 1.1 2009/06/29 08:55:36 castagna Exp $",
        "26": " */",
        "27": "public class Quotient extends BaseBuiltin {",
        "34": "        return \"quotient\";"
      },
      "id": 819248,
      "filename": "Quotient.java"
    },
    {
      "repo": "git://github.com/conanite/rainbow.git",
      "language": "Java",
      "linescount": 24,
      "location": "/src/java/rainbow/functions/maths",
      "name": "rainbow",
      "url": "https://searchcode.com/codesearch/view/2508767/",
      "md5hash": "ee4afd2b105ae7fa438118c567710fce",
      "lines": {
        "8": "",
        "9": "public class Quotient extends Builtin {",
        "10": "  public Quotient() {",
        "11": "    super(\"quotient\");",
        "12": "  }"
      },
      "id": 2508767,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://symja.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 18,
      "location": "/matheclipse-core/src/main/java/org/matheclipse/core/reflection/system",
      "name": "symja",
      "url": "https://searchcode.com/codesearch/view/11754088/",
      "md5hash": "d7bf024a27d7bf239dba1aab4598f8b3",
      "lines": {
        "7": "",
        "8": "public class Quotient extends AbstractArg2 {",
        "9": "\tpublic Quotient() {",
        "10": "\t}",
        "13": "\tpublic IExpr e2IntArg(final IInteger i0, final IInteger i1) {",
        "14": "\t\treturn ((IntegerSym)i0).quotient((IntegerSym)i1);"
      },
      "id": 11754088,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://bitbucket.org/jakepetroules/epgy-archive.git",
      "language": "Java",
      "linescount": 13,
      "location": "/java/Assignment_03/VersionTwo",
      "name": "epgy-archive",
      "url": "https://searchcode.com/codesearch/view/50795659/",
      "md5hash": "998740b9894b057a299e118cc5db569b",
      "lines": {
        "1": "public class Quotient extends BinaryOperation",
        "2": "{",
        "3": "\tpublic Quotient(Expression e1, Expression e2)"
      },
      "id": 50795659,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://bitbucket.org/jakepetroules/epgy-archive.git",
      "language": "Java",
      "linescount": 23,
      "location": "/java/Assignment_03/VersionOne",
      "name": "epgy-archive",
      "url": "https://searchcode.com/codesearch/view/50795667/",
      "md5hash": "8796b09e1c5ba0c44a2e24d9ab61d80d",
      "lines": {
        "1": "public class Quotient extends Expression",
        "2": "{",
        "3": "\tpublic Quotient(Expression e1, Expression e2)"
      },
      "id": 50795667,
      "filename": "Quotient.java"
    },
    {
      "repo": "http://google-refine.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 67,
      "location": "/main/src/com/google/refine/expr/functions/math",
      "name": "google-refine",
      "url": "https://searchcode.com/codesearch/view/2366133/",
      "md5hash": "77afdc12b0be7efc7231b6e33e5b5c77",
      "lines": {
        "44": "",
        "45": "public class Quotient implements Function {"
      },
      "id": 2366133,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://bitbucket.org/wikier/google-refine",
      "language": "Java",
      "linescount": 67,
      "location": "/main/src/com/google/refine/expr/functions/math",
      "name": "google-refine",
      "url": "https://searchcode.com/codesearch/view/130338974/",
      "md5hash": "77afdc12b0be7efc7231b6e33e5b5c77",
      "lines": {
        "44": "",
        "45": "public class Quotient implements Function {"
      },
      "id": 130338974,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://bitbucket.org/codethief/eph",
      "language": "Java",
      "linescount": 6,
      "location": "/src/core/parser",
      "name": "eph",
      "url": "https://searchcode.com/codesearch/view/52730469/",
      "md5hash": "1a45ba3a0f67ac71c79358a52809fe81",
      "lines": {
        "2": "",
        "3": "public class Quotient extends InfixExpression {"
      },
      "id": 52730469,
      "filename": "Quotient.java"
    },
    {
      "repo": "https://github.com/ejrh/Whiley.git",
      "language": "Java",
      "linescount": 728,
      "location": "/modules/wyrl/src/wyrl/util",
      "name": "Whiley",
      "url": "https://searchcode.com/codesearch/view/74140798/",
      "md5hash": "f9844ed6f4b2ff1ad8ce84e3ae353588",
      "lines": {
        "352": "\t\tPolynomial quotient = new Polynomial(0);",
        "356": "\t\t\tPair<Term, Term> r = t2.divide(t1);",
        "357": "\t\t\tquotient = quotient.add(r.first());",
        "402": "\t\t\t\tTerm quotient = d.first();",
        "360": "",
        "361": "\t\treturn new Pair(quotient, remainder);",
        "403": "",
        "365": "\t * This method divides this polynomial by the polynomial argument using long",
        "366": "\t * division. The method produces the pair (quotient,remainder). For example:",
        "401": "\t\t\tif (!d.first().equals(Term.ZERO)) {",
        "338": "\t * This method divides this polynomial by the term argument using simple",
        "339": "\t * division. The method produces the pair (quotient,remainder). For example:",
        "406": "\t\t\t\tPair<Polynomial, Polynomial> r = remainder.divide(x);",
        "407": "\t\t\t\treturn new Pair(r.first().add(quotient), r.second());",
        "351": "\tpublic Pair<Polynomial, Polynomial> divide(Term t1) {"
      },
      "id": 74140798,
      "filename": "Polynomial.java"
    },
    {
      "repo": "https://github.com/paulkmoore/javamoney.git",
      "language": "Java",
      "linescount": 624,
      "location": "/money-api/platform/src/main/java/javax/money",
      "name": "javamoney",
      "url": "https://searchcode.com/codesearch/view/75652607/",
      "md5hash": "2ea5b0142838ab0e71555d7addb0ee1b",
      "lines": {
        "160": "\t * Returns a {@code MonetaryAmount} whose value is the integer part of the",
        "161": "\t * quotient {@code (this / divisor)} rounded down. The preferred scale of",
        "67": "\t * divisor)}, and whose preferred scale is {@code (this.getScale() -",
        "68": "\t * divisor.getScale())}; if the exact quotient cannot be represented",
        "134": "\t *            and the remainder computed.",
        "102": "\t * <p>",
        "103": "\t * Note that if both the integer quotient and remainder are needed, this",
        "74": "\t * @throws ArithmeticException",
        "75": "\t *             if the exact quotient does not have a terminating decimal",
        "110": "\t *            and the remainder computed.",
        "111": "\t * @return a two element {@code MonetaryAmount} array: the quotient (the",
        "146": "\t * Returns a {@code MonetaryAmount} whose value is the integer part of the",
        "83": "\t * divisor)}, and whose preferred scale is {@code (this.getScale() -",
        "84": "\t * divisor.getScale())}; if the exact quotient cannot be represented",
        "147": "\t * quotient {@code (this / divisor)} rounded down. The preferred scale of",
        "135": "\t * @return a two element {@code MonetaryAmount} array: the quotient (the"
      },
      "id": 75652607,
      "filename": "MonetaryAmount.java"
    },
    {
      "repo": "https://github.com/harshavardhanreddy/GitJava.git",
      "language": "Java",
      "linescount": 45,
      "location": "",
      "name": "GitJava",
      "url": "https://searchcode.com/codesearch/view/73059989/",
      "md5hash": "05dcfff9fd5188c92757a2219777d9f8",
      "lines": {
        "6": "      int number3 = 77;",
        "7": "      int sum, difference, product, quotient, remainder, sum3, product3,sum4;  // Declare five int variables to hold results",
        "40": "      System.out.println(\"number2 after decrement is \" + number2);",
        "41": "      quotient = number1 / number2; ",
        "42": "      System.out.println(\"The new quotient of \" + number1 + \" and \" + number2 ",
        "43": "            + \" is \" + quotient);",
        "12": "      product = number1 * number2;",
        "13": "      quotient = number1 / number2;",
        "44": "   }",
        "17": "      sum4 = (31*number1) + (17*number2) + (87*number3);",
        "18": "      System.out.print(\"The sum, difference, product, quotient and remainder of \" + number1 + \" and \" + number2 + \" are \" + sum + \" , \"+ difference + \" , \" + product + \" , \" + quotient + \" and \" + remainder +\"\\n\");  // Print description",
        "30": "      System.out.print(\", \");",
        "31": "      System.out.print(quotient);"
      },
      "id": 73059989,
      "filename": "ArithmeticTest.java"
    },
    {
      "repo": "https://github.com/PAmoto/android_libcore.git",
      "language": "Java",
      "linescount": 1230,
      "location": "/luni/src/main/java/java/math",
      "name": "android_libcore",
      "url": "https://searchcode.com/codesearch/view/71746695/",
      "md5hash": "c010294aec39e4377453f7d21979ef75",
      "lines": {
        "896": "        BigInt.division(getBigInt(), divisorBigInt, quotient, remainder);",
        "897": "        return new BigInteger[] {new BigInteger(quotient), new BigInteger(remainder) };",
        "898": "    }",
        "908": "    public BigInteger divide(BigInteger divisor) {",
        "909": "        BigInt quotient = new BigInt();",
        "910": "        BigInt.division(getBigInt(), divisor.getBigInt(), quotient, null);",
        "911": "        return new BigInteger(quotient);",
        "912": "    }",
        "893": "        BigInt divisorBigInt = divisor.getBigInt();",
        "894": "        BigInt quotient = new BigInt();",
        "895": "        BigInt remainder = new BigInt();"
      },
      "id": 71746695,
      "filename": "BigInteger.java"
    },
    {
      "repo": "https://github.com/martinbaker/euclideanspace.git",
      "language": "Java",
      "linescount": 1232,
      "location": "/com.euclideanspace.aldor/src-gen/com/euclideanspace/aldor/editor",
      "name": "euclideanspace",
      "url": "https://searchcode.com/codesearch/view/81919000/",
      "md5hash": "01831edc9a4b9f4a6d3b1fd5cdc00975",
      "lines": {
        "1202": "  QuotientTok createQuotientTok();",
        "1201": "   */",
        "745": "  /**",
        "746": "   * Returns a new object of class '<em>Unqual Op Quotient Tok</em>'.",
        "1195": "  /**",
        "748": "   * <!-- end-user-doc -->",
        "749": "   * @return a new object of class '<em>Unqual Op Quotient Tok</em>'.",
        "1198": "   * <!-- end-user-doc -->",
        "1199": "   * @return a new object of class '<em>Quotient Tok</em>'.",
        "817": "  /**",
        "818": "   * Returns a new object of class '<em>Qual Op Quotient Tok</em>'.",
        "1196": "   * Returns a new object of class '<em>Quotient Tok</em>'.",
        "820": "   * <!-- end-user-doc -->",
        "821": "   * @return a new object of class '<em>Qual Op Quotient Tok</em>'.",
        "823": "   */",
        "824": "  QualOp_QuotientTok createQualOp_QuotientTok();"
      },
      "id": 81919000,
      "filename": "EditorFactory.java"
    },
    {
      "repo": "https://github.com/TeamAmalgam/kodkod.git",
      "language": "Java",
      "linescount": 664,
      "location": "/src/kodkod/engine/bool",
      "name": "kodkod",
      "url": "https://searchcode.com/codesearch/view/71115999/",
      "md5hash": "d79cc50594b9306deaebfb3079712892",
      "lines": {
        "305": "\t * Performs non-restoring signed division of this and the given integer.  Returns ",
        "306": "\t * the this.factory.bitwidth low-order bits of the quotient if the quotient flag ",
        "363": "\t\tif (quotient) { // convert q to 2's complement, correct it if s is nonzero, and return",
        "313": "\t */",
        "314": "\tprivate BooleanValue[] nonRestoringDivision(Int d, boolean quotient) {",
        "362": "\t\t\t\t",
        "316": "\t\t",
        "317": "\t\t//\textend the dividend to bitwidth*2 + 1 and store it in s; the quotient will have width digits  "
      },
      "id": 71115999,
      "filename": "TwosComplementInt.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 694,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 321,
      "source": "Github",
      "id": 2
    },
    {
      "count": 174,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 12,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 1,
      "source": "CodePlex",
      "id": 5
    }
  ]
}