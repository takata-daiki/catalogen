{
  "matchterm": "Child",
  "previouspage": null,
  "searchterm": "Child",
  "query": "Child",
  "language_filters": [
    {
      "count": 90803,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 90802,
  "results": [
    {
      "repo": "https://bitbucket.org/snowtweets/mia",
      "language": "Java",
      "linescount": 181,
      "location": "/ca/uwaterloo/fes/mia/v1/iquitos",
      "name": "mia",
      "url": "https://searchcode.com/codesearch/view/53330617/",
      "md5hash": "1cd15a1edb64d88b859ddd6f0061955f",
      "lines": {
        "16": "public class ChildAgent{",
        "1": "/* Child (<15) Agent Class",
        "2": " * Josh King",
        "67": "\t  ",
        "68": "\t  public ChildAgent(HouseholdAgent household, int newAge, int newDeath){",
        "57": "\t\t\treturn false;",
        "58": "\t\tChildAgent other = (ChildAgent) obj;",
        "15": ""
      },
      "id": 53330617,
      "filename": "ChildAgent.java"
    },
    {
      "repo": "https://github.com/anujojha/MyExamples.git",
      "language": "Java",
      "linescount": 33,
      "location": "/src/com/java/basics",
      "name": "MyExamples",
      "url": "https://searchcode.com/codesearch/view/73518444/",
      "md5hash": "0e8f32c6458f457b5496872c26394203",
      "lines": {
        "2": "",
        "3": "public class Child extends Parent{",
        "5": "\t",
        "6": "\tpublic Child(){",
        "7": "\t\tSystem.out.println(\"child no arg const\");",
        "8": "\t\t//super.getName(); //parent methods can be accessed using super keyword.",
        "12": "\tpublic void play(){",
        "13": "\t\tSystem.out.println(\"child is playing\");",
        "19": "\t\t",
        "20": "\t\tChild c = new Child();",
        "21": "\t\tParent p = new Child();",
        "22": "\t\t",
        "23": "\t\tChild c2 = (Child)p; //casting parent obj to child"
      },
      "id": 73518444,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/rgan/RapidFTR---BlackBerry-Edition.git",
      "language": "Java",
      "linescount": 275,
      "location": "/RapidFTR-Blackberry/src/com/rapidftr/model",
      "name": "RapidFTR---BlackBerry-Edition",
      "url": "https://searchcode.com/codesearch/view/112952674/",
      "md5hash": "18dad962c9708608682f9d7dad97d731",
      "lines": {
        "32": "\t\tput(CREATED_AT_KEY, creationDate);",
        "33": "\t\tchildStatus = ChildStatus.NEW;",
        "166": "",
        "167": "\tpublic static Child create(Forms forms, String currentFormattedDateTime) {",
        "168": "\t\tChild child = new Child(currentFormattedDateTime);",
        "169": "\t\tchild.update(forms);",
        "138": "\t\t}",
        "139": "\t\tChild other = (Child) obj;",
        "18": "",
        "19": "public class Child implements Persistable {",
        "25": "",
        "26": "\tprivate ChildStatus childStatus;",
        "27": "",
        "28": "\tpublic Child(String creationDate) {",
        "170": "\t\treturn child;"
      },
      "id": 112952674,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/jboulon/hadoop-20.git",
      "language": "Java",
      "linescount": 242,
      "location": "/src/mapred/org/apache/hadoop/mapred",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/74234873/",
      "md5hash": "2ed9903d88389339981dd53ab6311c34",
      "lines": {
        "214": "      // Shutting down log4j of the child-vm... ",
        "179": "    } catch (FSError e) {",
        "198": "    } catch (Throwable throwable) {",
        "199": "      LOG.fatal(\"Error running child : \"",
        "45": "/** ",
        "46": " * The main() for child processes. ",
        "48": "",
        "49": "class Child {",
        "51": "  public static final Log LOG =",
        "52": "    LogFactory.getLog(Child.class);",
        "213": "      metricsContext.close();",
        "182": "    } catch (Exception exception) {",
        "183": "      LOG.warn(\"Error running child\", exception);",
        "180": "      LOG.fatal(\"FSError from child\", e);",
        "59": "  public static void main(String[] args) throws Throwable {",
        "60": "    LOG.debug(\"Child starting\");"
      },
      "id": 74234873,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/lihuibng/hadoop-20.git",
      "language": "Java",
      "linescount": 244,
      "location": "/src/mapred/org/apache/hadoop/mapred",
      "name": "hadoop-20",
      "url": "https://searchcode.com/codesearch/view/75371555/",
      "md5hash": "5c9f6c739fe6bd6131560644d638118c",
      "lines": {
        "43": " * The main() for child processes. ",
        "170": "    } catch (FSError e) {",
        "171": "      LOG.fatal(\"FSError from child\", e);",
        "204": "      metricsContext.close();",
        "45": "",
        "46": "class Child {",
        "173": "    } catch (Exception exception) {",
        "48": "  public static final Log LOG =",
        "49": "    LogFactory.getLog(Child.class);",
        "205": "      // Shutting down log4j of the child-vm... ",
        "174": "      LOG.warn(\"Error running child\", exception);",
        "189": "    } catch (Throwable throwable) {",
        "56": "  public static void main(String[] args) throws Throwable {",
        "57": "    LOG.debug(\"Child starting\");",
        "42": "/** ",
        "190": "      LOG.fatal(\"Error running child : \""
      },
      "id": 75371555,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 67,
      "location": "/ppt/poi/org/apache/poi/poifs/property",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97397900/",
      "md5hash": "a3b7cc3f49ecb945b85e3780187137f6",
      "lines": {
        "32": "    /**",
        "33": "     * Get the next Child, if any",
        "34": "     *",
        "35": "     * @return the next Child; may return null",
        "37": "",
        "38": "    public Child getNextChild();",
        "40": "    /**",
        "41": "     * Get the previous Child, if any",
        "42": "     *",
        "43": "     * @return the previous Child; may return null",
        "45": "",
        "46": "    public Child getPreviousChild();",
        "48": "    /**",
        "49": "     * Set the next Child",
        "50": "     *",
        "28": "",
        "29": "public interface Child"
      },
      "id": 97397900,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/mdodsworth/hadoop-common.git",
      "language": "Java",
      "linescount": 280,
      "location": "/src/mapred/org/apache/hadoop/mapred",
      "name": "hadoop-common",
      "url": "https://searchcode.com/codesearch/view/110743194/",
      "md5hash": "b2a9e0424f02b50b5186ad1ecf5088a0",
      "lines": {
        "187": "        // can only see files down and under attemtdir only.",
        "260": "      LOG.fatal(\"Error running child : \"",
        "259": "    } catch (Throwable throwable) {",
        "188": "        TaskRunner.setupChildMapredLocalDirs(task, job);",
        "146": "    UserGroupInformation childUGI = null;",
        "47": "/** ",
        "48": " * The main() for child processes. ",
        "145": "    ",
        "50": "",
        "51": "class Child {",
        "53": "  public static final Log LOG =",
        "54": "    LogFactory.getLog(Child.class);",
        "185": "",
        "186": "        // setup the child's mapred-local-dir. The child is now sandboxed and",
        "59": "  public static void main(String[] args) throws Throwable {",
        "60": "    LOG.debug(\"Child starting\");"
      },
      "id": 110743194,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/YaoLin1/hadoop.git",
      "language": "Java",
      "linescount": 197,
      "location": "/src/mapred/org/apache/hadoop/mapred",
      "name": "hadoop",
      "url": "https://searchcode.com/codesearch/view/71660714/",
      "md5hash": "0bf8830b99c1f67b3f5bec618ca1a9bc",
      "lines": {
        "171": "      LOG.warn(\"Error running child\", throwable);",
        "167": "    } catch (FSError e) {",
        "168": "      LOG.fatal(\"FSError from child\", e);",
        "41": " * The main() for child processes. ",
        "170": "    } catch (Throwable throwable) {",
        "43": "",
        "44": "class Child {",
        "46": "  public static final Log LOG =",
        "47": "    LogFactory.getLog(Child.class);",
        "40": "/** ",
        "52": "  public static void main(String[] args) throws Throwable {",
        "53": "    LOG.debug(\"Child starting\");",
        "189": "      metricsContext.close();",
        "190": "      // Shutting down log4j of the child-vm... "
      },
      "id": 71660714,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/xrogzu/es.git",
      "language": "Java",
      "linescount": 72,
      "location": "/common/src/test/java/com/sishuok/es/tmp/parentchild",
      "name": "es",
      "url": "https://searchcode.com/codesearch/view/86297100/",
      "md5hash": "d672fef8c246862b69b0823d6efd090e",
      "lines": {
        "18": "@Entity",
        "19": "@Table(name = \"child\")",
        "20": "public class Child {",
        "5": " */",
        "6": "package com.sishuok.es.tmp.parentchild;",
        "59": "",
        "60": "        Child child = (Child) o;",
        "61": "",
        "62": "        if (id != null ? !id.equals(child.id) : child.id != null) return false;",
        "21": ""
      },
      "id": 86297100,
      "filename": "Child.java"
    },
    {
      "repo": "git://github.com/openmicroscopy/bioformats.git",
      "language": "Java",
      "linescount": 89,
      "location": "/components/forks/poi/src/loci/poi/poifs/property",
      "name": "bioformats",
      "url": "https://searchcode.com/codesearch/view/15642244/",
      "md5hash": "c57bc94c60cf20f34a1593035594d61d",
      "lines": {
        "64": "     *",
        "65": "     * @return the previous Child; may return null",
        "67": "",
        "68": "    public Child getPreviousChild();",
        "70": "    /**",
        "71": "     * Set the next Child",
        "72": "     *",
        "50": "",
        "51": "public interface Child",
        "54": "    /**",
        "55": "     * Get the next Child, if any",
        "56": "     *",
        "57": "     * @return the next Child; may return null",
        "59": "",
        "60": "    public Child getNextChild();",
        "62": "    /**",
        "63": "     * Get the previous Child, if any"
      },
      "id": 15642244,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/effyroth/paper.git",
      "language": "Java",
      "linescount": 348,
      "location": "/src/mapred/org/apache/hadoop/mapred",
      "name": "paper",
      "url": "https://searchcode.com/codesearch/view/93067596/",
      "md5hash": "7a5412381737ddc00da314d492b10072",
      "lines": {
        "163": "    ",
        "164": "    UserGroupInformation childUGI = null;",
        "275": "    } catch (Exception exception) {",
        "272": "    } catch (FSError e) {",
        "273": "      LOG.fatal(\"FSError from child\", e);",
        "50": "/** ",
        "51": " * The main() for child processes. ",
        "276": "      LOG.warn(\"Error running child\", exception);",
        "53": "",
        "54": "class Child {",
        "279": "          // do cleanup for the task",
        "56": "  public static final Log LOG =",
        "57": "    LogFactory.getLog(Child.class);",
        "283": "            final Task taskFinal = task;",
        "284": "            childUGI.doAs(new PrivilegedExceptionAction<Object>() {",
        "280": "          if(childUGI == null) {"
      },
      "id": 93067596,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/sluk3r/playGround.git",
      "language": "Java",
      "linescount": 27,
      "location": "/src/test/java/cn/sluk3r/test/lang",
      "name": "playGround",
      "url": "https://searchcode.com/codesearch/view/93228681/",
      "md5hash": "0a7bcefb3917b5ce0f0d0c3d8ecf4e44",
      "lines": {
        "5": " */",
        "6": "public class Child extends Parent {",
        "11": "        Parent p = new Parent(): cn.sluk3r.test.lang.Parent",
        "12": "        Child c = new Child(): cn.sluk3r.test.lang.Child",
        "13": "        Parent p1 = new Child(): cn.sluk3r.test.lang.Child",
        "14": "         */",
        "18": "",
        "19": "        Child c = new Child();",
        "20": "        System.out.println(\"Child c = new Child(): \" + c.getCurrentClassNameWithReflection());",
        "21": "",
        "22": "        Parent p1 = new Child();",
        "23": "        System.out.println(\"Parent p1 = new Child(): \" + p1.getCurrentClassNameWithReflection());",
        "24": "    }"
      },
      "id": 93228681,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/ddddtttt4444/javaresearch.git",
      "language": "Java",
      "linescount": 37,
      "location": "/Construction/src/pk",
      "name": "javaresearch",
      "url": "https://searchcode.com/codesearch/view/73305277/",
      "md5hash": "e20bd42d8ae4944141272e26d8a210f6",
      "lines": {
        "27": "        Child ch = new Child();",
        "22": "",
        "25": "",
        "9": " */",
        "10": "public class Child extends Base<Long> {",
        "23": "    protected Child() {",
        "28": "        ch.id = id;",
        "26": "    public static Child restore(Long id, String str) {"
      },
      "id": 73305277,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/kuguobing/dddlib.git",
      "language": "Java",
      "linescount": 50,
      "location": "/dsmonitor/src/test/java/com/dayatang/dsmonitor/domain",
      "name": "dddlib",
      "url": "https://searchcode.com/codesearch/view/76066676/",
      "md5hash": "f2e6bdc9ddadaed1b387a41595083b20",
      "lines": {
        "16": "public class Child extends AbstractEntity {",
        "17": "",
        "34": "\t\tChild rhs = (Child) other;",
        "33": "\t\t}",
        "27": "\tpublic boolean equals(Object other) {",
        "28": "\t\tif (other instanceof Child == false) {",
        "13": "",
        "14": "@Entity(name = \"CommonsTestChild\")",
        "15": "@Table(name = \"CHILD\")"
      },
      "id": 76066676,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/pavannarne/pavan.git",
      "language": "Java",
      "linescount": 49,
      "location": "/kid/src/kid",
      "name": "pavan",
      "url": "https://searchcode.com/codesearch/view/92747290/",
      "md5hash": "373e9f0bbea6b37d08ef221503ccf5d6",
      "lines": {
        "32": "\t\tSystem.out.println(\"child's age is : \"+age);",
        "35": "\t/**",
        "3": "/**",
        "4": " * child is a class to represent his age ",
        "37": "\t * @return true if this child age is lessthan 25 false otherwise",
        "38": "\t */",
        "7": " */",
        "8": "public class child ",
        "18": "\t\t */",
        "19": "\t\tSystem.out.println(\"child don't have any activities\");",
        "23": "\t * @param age",
        "24": "\t * this age parameter represents child's age",
        "36": "\t * isYoung is a boolean function, tests this child is Young",
        "29": "\t\t/**",
        "30": "\t\t * Display the child's age",
        "31": "\t\t */"
      },
      "id": 92747290,
      "filename": "child.java"
    },
    {
      "repo": "https://github.com/william081117/hibernate-orm.git",
      "language": "Java",
      "linescount": 82,
      "location": "/hibernate-envers/src/test/java/ee/estonia/entities",
      "name": "hibernate-orm",
      "url": "https://searchcode.com/codesearch/view/96680818/",
      "md5hash": "1292a7c57c897406eb3194ca67716f38",
      "lines": {
        "64": "\t\treturn \"Child(id = \" + id + \", data = \" + data + \")\";",
        "38": "\t\t}",
        "39": "\t\tif ( !(o instanceof Child) ) {",
        "42": "",
        "43": "\t\tChild that = (Child) o;",
        "14": "@Audited",
        "15": "public class Child implements Serializable {",
        "21": "",
        "22": "\tpublic Child() {",
        "24": "",
        "25": "\tpublic Child(String data) {",
        "28": "",
        "29": "\tpublic Child(String data, Long id) {",
        "63": "\tpublic String toString() {"
      },
      "id": 96680818,
      "filename": "Child.java"
    },
    {
      "repo": "http://mobicents.googlecode.com/svn/trunk/",
      "language": "Java",
      "linescount": 64,
      "location": "/servers/diameter/core/jdiameter/api/src/main/java/org/jdiameter/api/annotation",
      "name": "mobicents",
      "url": "https://searchcode.com/codesearch/view/65792/",
      "md5hash": "2598fc491b9c2e2c6f710c0f2f649123",
      "lines": {
        "38": "@Target(ElementType.TYPE)",
        "39": "public @interface Child {",
        "41": "  /**",
        "42": "   * Return reference to child class or interface with AvpDscr annotation",
        "43": "   * @return reference to child class or interface with AvpDscr annotation",
        "44": "   */",
        "47": "  /**",
        "48": "   * Return child position",
        "49": "   * @return child position",
        "50": "   */",
        "53": "  /**",
        "54": "   * Return minimum count of this child in parent avp set",
        "55": "   * @return  minimum count of this child in parent avp set",
        "56": "   */",
        "59": "  /**",
        "60": "   * Return maximum count of this child in parent avp set",
        "61": "   * @return maximum count of this child in parent avp set s"
      },
      "id": 65792,
      "filename": "Child.java"
    },
    {
      "repo": "git://github.com/apache/hadoop-common.git",
      "language": "Java",
      "linescount": 288,
      "location": "/hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred",
      "name": "hadoop-common",
      "url": "https://searchcode.com/codesearch/view/8194719/",
      "md5hash": "f3acd0c06334ba41caf00bebc4d72003",
      "lines": {
        "192": "        // setup the child's Configs.LOCAL_DIR. The child is now sandboxed and",
        "193": "        // can only see files down and under attemtdir only.",
        "267": "    } catch (Throwable throwable) {",
        "151": "    ",
        "268": "      LOG.fatal(\"Error running child : \"",
        "49": "/** ",
        "50": " * The main() for child processes. ",
        "52": "",
        "53": "class Child {",
        "55": "  public static final Log LOG =",
        "56": "    LogFactory.getLog(Child.class);",
        "152": "    UserGroupInformation childUGI = null;",
        "61": "  public static void main(String[] args) throws Throwable {",
        "62": "    LOG.debug(\"Child starting\");",
        "191": "        "
      },
      "id": 8194719,
      "filename": "Child.java"
    },
    {
      "repo": "https://github.com/kissys/es.git",
      "language": "Java",
      "linescount": 72,
      "location": "/common/src/test/java/com/sishuok/es/tmp/parentchild",
      "name": "es",
      "url": "https://searchcode.com/codesearch/view/92669401/",
      "md5hash": "d672fef8c246862b69b0823d6efd090e",
      "lines": {
        "18": "@Entity",
        "19": "@Table(name = \"child\")",
        "20": "public class Child {",
        "5": " */",
        "6": "package com.sishuok.es.tmp.parentchild;",
        "59": "",
        "60": "        Child child = (Child) o;",
        "61": "",
        "62": "        if (id != null ? !id.equals(child.id) : child.id != null) return false;",
        "21": ""
      },
      "id": 92669401,
      "filename": "Child.java"
    },
    {
      "repo": "https://bitbucket.org/Innvo/openpoc.git",
      "language": "Java",
      "linescount": 111,
      "location": "/OpenPPI/src/java/examples/domain",
      "name": "openpoc",
      "url": "https://searchcode.com/codesearch/view/45910320/",
      "md5hash": "7832cad9bdb4148e83365771e6352549",
      "lines": {
        "32": "    @NamedNativeQuery(name = \"Child.findAll\", query = \"SELECT * FROM Child c\", resultClass = Child.class),",
        "33": "    @NamedNativeQuery(name = \"Child.findByChildByParentid\", query = \"SELECT * FROM Child c WHERE c.parentid = ? \", resultClass = Child.class),",
        "34": "    @NamedNativeQuery(name = \"Child.findByChildid\", query = \"SELECT * FROM Child c WHERE c.childid = :childid\", resultClass = Child.class)})",
        "35": "public class Child implements Serializable {",
        "36": "    private static final long serialVersionUID = 1L;",
        "40": "    @NotNull",
        "41": "    @Column(name = \"CHILDID\")",
        "42": "    private Integer childid;",
        "43": "    @Size(max = 50)",
        "44": "    @Column(name = \"CHILDIDENTIFIER\")",
        "45": "    private String childidentifier;",
        "46": "    @JoinColumn(name = \"PARENTID\", referencedColumnName = \"PARENTID\")",
        "28": "@Entity",
        "29": "@Table(name = \"child\")",
        "31": "@NamedNativeQueries({"
      },
      "id": 45910320,
      "filename": "Child.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 45258,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 34545,
      "source": "Github",
      "id": 2
    },
    {
      "count": 8683,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1204,
      "source": "Sourceforge",
      "id": 4
    },
    {
      "count": 488,
      "source": "GitLab",
      "id": 13
    },
    {
      "count": 217,
      "source": "Unknown",
      "id": 0
    },
    {
      "count": 211,
      "source": "Google Android",
      "id": 12
    },
    {
      "count": 187,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 10,
      "source": "Gitorious",
      "id": 10
    }
  ]
}