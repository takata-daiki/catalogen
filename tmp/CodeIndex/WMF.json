{
  "matchterm": "WMF",
  "previouspage": null,
  "searchterm": "WMF",
  "query": "WMF",
  "language_filters": [
    {
      "count": 351,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 351,
  "results": [
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 196,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/blip",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394516/",
      "md5hash": "d0a7dfe6144b031234382ee06549b69e",
      "lines": {
        "33": " */",
        "34": "public final class WMF extends Metafile {",
        "99": "     * We are of type <code>Picture.WMF</code>",
        "36": "    /**",
        "37": "     * Extract compressed WMF data from a ppt",
        "138": "            int key = LittleEndian.getInt(data, pos); pos += LittleEndian.INT_SIZE; //header key",
        "139": "            if (key != APMHEADER_KEY) throw new HSLFException(\"Not a valid WMF file\");",
        "98": "    /**",
        "81": "        Header header = new Header();",
        "82": "        header.wmfsize = data.length - aldus.getSize();",
        "83": "        header.bounds = new and.awt.Rectangle((short)aldus.left, (short)aldus.top, (short)aldus.right-(short)aldus.left, (short)aldus.bottom-(short)aldus.top);",
        "84": "        //coefficient to translate from WMF dpi to 96pdi",
        "151": "            if (checksum != getChecksum()){",
        "152": "                logger.log(POILogger.WARN, \"WMF checksum does not match the header data\");",
        "29": "/**",
        "30": " * Represents a WMF (Windows Metafile) picture data."
      },
      "id": 97394516,
      "filename": "WMF.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 1222,
      "location": "/batik/src/main/java/org/apache/batik/transcoder/wmf/tosvg",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96986760/",
      "md5hash": "29b83b6bc73f309b9dfd544ad25796de",
      "lines": {
        "64": "    /**",
        "129": "    /**",
        "130": "     * Renders the WMF image(s).",
        "190": "                case WMFConstants.META_SETWINDOWEXT:",
        "18": " */",
        "19": "package org.apache.batik.transcoder.wmf.tosvg;",
        "181": "                switch ( mr.functionId ) {",
        "182": "                case WMFConstants.META_SETWINDOWORG:",
        "56": "/**",
        "57": "  * Core class for rendering the WMF image. It is able to render a",
        "58": "  * WMF file in a <code>Graphics</code> object.",
        "59": "  *",
        "188": "",
        "189": "                case WMFConstants.META_SETWINDOWORG_EX: // ???? LOOKS SUSPICIOUS",
        "62": "  */",
        "63": "public class WMFPainter extends AbstractWMFPainter {"
      },
      "id": 96986760,
      "filename": "WMFPainter.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 565,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684759/",
      "md5hash": "1d1ad829a7e0f00408add9a6761c12a9",
      "lines": {
        "37": "import org.apache.commons.logging.LogFactory;",
        "38": "import org.pentaho.reporting.libraries.pixie.wmf.records.CommandFactory;",
        "39": "import org.pentaho.reporting.libraries.pixie.wmf.records.MfCmd;",
        "40": "import org.pentaho.reporting.libraries.pixie.wmf.records.MfCmdSetWindowExt;",
        "41": "import org.pentaho.reporting.libraries.pixie.wmf.records.MfCmdSetWindowOrg;",
        "42": "import org.pentaho.reporting.libraries.base.util.FastStack;",
        "135": "  public WmfFile(final String inName, final int imageWidth, final int imageHeight)",
        "44": "/**",
        "45": " * Parses and replays the WmfFile.",
        "46": " */",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf;",
        "148": "   */",
        "149": "  public WmfFile(final InputStream in, final int imageWidth,",
        "134": "   */"
      },
      "id": 100684759,
      "filename": "WmfFile.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 109,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128945294/",
      "md5hash": "54e626e9bec81da8c0455dd91f1ecdba",
      "lines": {
        "32": "",
        "50": "        checkSourceFlavor(src);",
        "39": "/**",
        "40": " * This ImageConverter converts WMF (Windows Metafile) images (represented by Batik's",
        "41": " * WMFRecordStore) to Java2D.",
        "42": " */",
        "43": "public class ImageConverterWMF2G2D extends AbstractImageConverter {",
        "45": "    /** logger */",
        "46": "    private static Log log = LogFactory.getLog(ImageConverterWMF2G2D.class);",
        "17": "",
        "18": "/* $Id: ImageConverterWMF2G2D.java 1296526 2012-03-03 00:18:45Z gadams $ */",
        "51": "        ImageWMF wmf = (ImageWMF)src;",
        "29": "",
        "30": "import org.apache.batik.transcoder.wmf.tosvg.WMFPainter;",
        "31": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;"
      },
      "id": 128945294,
      "filename": "ImageConverterWMF2G2D.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/patch-for-sqs-translator",
      "language": "Java",
      "linescount": 109,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "patch-for-sqs-translator",
      "url": "https://searchcode.com/codesearch/view/128948399/",
      "md5hash": "54e626e9bec81da8c0455dd91f1ecdba",
      "lines": {
        "32": "",
        "50": "        checkSourceFlavor(src);",
        "39": "/**",
        "40": " * This ImageConverter converts WMF (Windows Metafile) images (represented by Batik's",
        "41": " * WMFRecordStore) to Java2D.",
        "42": " */",
        "43": "public class ImageConverterWMF2G2D extends AbstractImageConverter {",
        "45": "    /** logger */",
        "46": "    private static Log log = LogFactory.getLog(ImageConverterWMF2G2D.class);",
        "17": "",
        "18": "/* $Id: ImageConverterWMF2G2D.java 1296526 2012-03-03 00:18:45Z gadams $ */",
        "51": "        ImageWMF wmf = (ImageWMF)src;",
        "29": "",
        "30": "import org.apache.batik.transcoder.wmf.tosvg.WMFPainter;",
        "31": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;"
      },
      "id": 128948399,
      "filename": "ImageConverterWMF2G2D.java"
    },
    {
      "repo": "https://github.com/rmuller/xmlgraphics-mavenized.git",
      "language": "Java",
      "linescount": 109,
      "location": "/fop/src/main/java/org/apache/fop/image/loader/batik",
      "name": "xmlgraphics-mavenized",
      "url": "https://searchcode.com/codesearch/view/96989959/",
      "md5hash": "54e626e9bec81da8c0455dd91f1ecdba",
      "lines": {
        "32": "",
        "50": "        checkSourceFlavor(src);",
        "39": "/**",
        "40": " * This ImageConverter converts WMF (Windows Metafile) images (represented by Batik's",
        "41": " * WMFRecordStore) to Java2D.",
        "42": " */",
        "43": "public class ImageConverterWMF2G2D extends AbstractImageConverter {",
        "45": "    /** logger */",
        "46": "    private static Log log = LogFactory.getLog(ImageConverterWMF2G2D.class);",
        "17": "",
        "18": "/* $Id: ImageConverterWMF2G2D.java 1296526 2012-03-03 00:18:45Z gadams $ */",
        "51": "        ImageWMF wmf = (ImageWMF)src;",
        "29": "",
        "30": "import org.apache.batik.transcoder.wmf.tosvg.WMFPainter;",
        "31": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;"
      },
      "id": 96989959,
      "filename": "ImageConverterWMF2G2D.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 160,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684891/",
      "md5hash": "5d550a98210535ade7048291ebf1b178",
      "lines": {
        "45": "  /**",
        "46": "   * Replays the command on the given WmfFile.",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "19": "",
        "20": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogBrush;",
        "21": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogFont;",
        "22": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogPalette;",
        "23": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogPen;",
        "24": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogRegion;",
        "25": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.MfType;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.WmfFile;",
        "28": "import org.pentaho.reporting.libraries.pixie.wmf.WmfObject;",
        "29": ""
      },
      "id": 100684891,
      "filename": "MfCmdSelectObject.java"
    },
    {
      "repo": "https://bitbucket.org/dyp/geotools.git",
      "language": "Java",
      "linescount": 265,
      "location": "/modules/unsupported/mark-wkt/src/test/java/org/geotools/renderer/markwkt/test",
      "name": "geotools",
      "url": "https://searchcode.com/codesearch/view/47132527/",
      "md5hash": "6ab14db6483aae148940b2af5f4012d3",
      "lines": {
        "160": "    public void testUnknownProtocol() {",
        "161": "        WKTMarkFactory wmf = new WKTMarkFactory();",
        "132": "    public void testWellKnownTextCurve() {",
        "133": "        WKTMarkFactory wmf = new WKTMarkFactory();",
        "136": "                    .literal(WKTMarkFactory.WKT_PREFIX + \"CURVEPOLYGON(COMPOUNDCURVE(CIRCULARSTRING(0 0,2 0, 2 1, 2 3, 4 3),(4 3, 4 5, 1 4, 0 0)))\");",
        "137": "            wmf.getShape(null, this.exp, this.feature);",
        "178": "        wmf.setRoot(this.rootDir);",
        "176": "    public void testWellKnownTextFromNotExistingFile() {",
        "177": "        WKTMarkFactory wmf = new WKTMarkFactory();",
        "146": "    public void testWellKnownTextPolygonError() {",
        "147": "\tWKTMarkFactory wmf = new WKTMarkFactory();",
        "150": "\t\t    .literal(WKTMarkFactory.WKT_PREFIX + \"POLYGON((0.25 0.25, 0.5 0.75, 0.75 0.25,     ))\");",
        "151": "\t    wmf.getShape(null, this.exp, this.feature);",
        "164": "                    .literal(\"xxx://POLYGON((0.25 0.25, 0.5 0.75, 0.75 0.25,))\");",
        "165": "            if (wmf.getShape(null, this.exp, this.feature) == null) {"
      },
      "id": 47132527,
      "filename": "WKTMarkFactoryTest.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 276,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684728/",
      "md5hash": "1a2fc7a48b21804db325227fac3d7566",
      "lines": {
        "64": "  // private static final int WMF_VERSION = PLACEABLE_HEADER_SIZE + 0x4;       // WORD",
        "65": "  private static final int WMF_FILE_SIZE = PLACEABLE_HEADER_SIZE + 0x06;     // DWORD",
        "49": "  /**",
        "41": "  /**",
        "42": "   * A constant stating that the given file is not Wmf-File at all.",
        "50": "   * A constant stating that the given file is a Wmf-File.",
        "46": "   * A constant stating that the given file could be a Wmf-File.",
        "45": "  /**",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf;",
        "58": "   * Metadata Positions This implementation always reserves space for both the standard",
        "59": "   * and the extended wmf header; the standard header is always placed after the extended",
        "61": "   */",
        "62": "  private static final int WMF_FILE_TYPE = PLACEABLE_HEADER_SIZE;     // WORD",
        "63": "  private static final int WMF_HEADER_SIZE = PLACEABLE_HEADER_SIZE + 0x2;   // WORD"
      },
      "id": 100684728,
      "filename": "MfHeader.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 210,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100685017/",
      "md5hash": "fd61c79e4383b59ccab208d6b2bd2ccf",
      "lines": {
        "34": " * <p/>",
        "35": " * The style is one of the BS_* constants defined in {@link org.pentaho.reporting.libraries.pixie.wmf.BrushConstants}.",
        "36": " * The hatch is one of the HS_* constants defined in {@link org.pentaho.reporting.libraries.pixie.wmf.BrushConstants}.",
        "37": " * <p/>",
        "74": "  /**",
        "75": "   * Replays the command on the given WmfFile.",
        "78": "   */",
        "79": "  public void replay(final WmfFile file)",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "23": "import org.apache.commons.logging.LogFactory;",
        "24": "import org.pentaho.reporting.libraries.pixie.wmf.BrushConstants;",
        "25": "import org.pentaho.reporting.libraries.pixie.wmf.GDIColor;",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogBrush;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;"
      },
      "id": 100685017,
      "filename": "MfCmdCreateBrush.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 373,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100685007/",
      "md5hash": "a3a0441695bd8b84145832b530cb667b",
      "lines": {
        "32": "import org.pentaho.reporting.libraries.pixie.wmf.WmfFile;",
        "33": "",
        "98": "  public void replay(final WmfFile file)",
        "97": "   */",
        "93": "  /**",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "94": "   * Replays the command on the given WmfFile.",
        "25": "",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.BrushConstants;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.MfDcState;",
        "28": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogFont;",
        "29": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;",
        "30": "import org.pentaho.reporting.libraries.pixie.wmf.MfType;",
        "31": "import org.pentaho.reporting.libraries.pixie.wmf.TextConstants;"
      },
      "id": 100685007,
      "filename": "MfCmdExtTextOut.java"
    },
    {
      "repo": "https://github.com/minstrelsy/POI-Android.git",
      "language": "Java",
      "linescount": 74,
      "location": "/ppt/scratchpad/src/org/apache/poi/hslf/blip",
      "name": "POI-Android",
      "url": "https://searchcode.com/codesearch/view/97394485/",
      "md5hash": "68955d2549933d40d6cb143538bed43d",
      "lines": {
        "35": " * <code>",
        "36": " * public WMFPaiter implements ImagePainter{",
        "38": " *       DataInputStream is = new DataInputStream(new ByteArrayInputStream(pict.getData()));",
        "39": " *       org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore wmfStore =",
        "40": " *               new org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore();",
        "41": " *       try {",
        "42": " *           wmfStore.read(is);",
        "47": " *       Rectangle anchor = parent.getAnchor();",
        "48": " *       float scale = (float)anchor.width/wmfStore.getWidthPixels();",
        "49": " *",
        "50": " *       org.apache.batik.transcoder.wmf.tosvg.WMFPainter painter =",
        "51": " *               new org.apache.batik.transcoder.wmf.tosvg.WMFPainter(wmfStore, 0, 0, scale);",
        "52": " *       graphics.translate(anchor.x, anchor.y);",
        "55": " * }",
        "56": " * PictureData.setImagePainter(Picture.WMF, new WMFPaiter());"
      },
      "id": 97394485,
      "filename": "ImagePainter.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 221,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684796/",
      "md5hash": "5eef646fb2669353db2d8b3281362d77",
      "lines": {
        "49": "  /**",
        "50": "   * Replays the command on the given WmfFile.",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "53": "   */",
        "54": "  public void replay(final WmfFile file)",
        "24": "",
        "25": "import org.pentaho.reporting.libraries.pixie.wmf.MfDcState;",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogBrush;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogRegion;",
        "28": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;",
        "29": "import org.pentaho.reporting.libraries.pixie.wmf.MfType;",
        "30": "import org.pentaho.reporting.libraries.pixie.wmf.WmfFile;",
        "31": ""
      },
      "id": 100684796,
      "filename": "MfCmdFrameRegion.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 172,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684843/",
      "md5hash": "59b5c24011083c3862a0954a4a68c428",
      "lines": {
        "47": "  /**",
        "48": "   * Replays the command on the given WmfFile.",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "51": "   */",
        "52": "  public void replay(final WmfFile file)",
        "23": "",
        "24": "import org.pentaho.reporting.libraries.pixie.wmf.MfDcState;",
        "25": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogBrush;",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogRegion;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;",
        "28": "import org.pentaho.reporting.libraries.pixie.wmf.MfType;",
        "29": "import org.pentaho.reporting.libraries.pixie.wmf.WmfFile;",
        "30": ""
      },
      "id": 100684843,
      "filename": "MfCmdFillRegion.java"
    },
    {
      "repo": "https://github.com/bmorrise/pentaho-reporting.git",
      "language": "Java",
      "linescount": 149,
      "location": "/libraries/libpixie/source/org/pentaho/reporting/libraries/pixie/wmf/records",
      "name": "pentaho-reporting",
      "url": "https://searchcode.com/codesearch/view/100684988/",
      "md5hash": "47e392aa4623a166c6074c3c2f39be80",
      "lines": {
        "49": "  public void replay(final WmfFile file)",
        "44": "  /**",
        "45": "   * Replays the command on the given WmfFile.",
        "48": "   */",
        "17": "",
        "18": "package org.pentaho.reporting.libraries.pixie.wmf.records;",
        "22": "",
        "23": "import org.pentaho.reporting.libraries.pixie.wmf.MfDcState;",
        "24": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogBrush;",
        "25": "import org.pentaho.reporting.libraries.pixie.wmf.MfLogRegion;",
        "26": "import org.pentaho.reporting.libraries.pixie.wmf.MfRecord;",
        "27": "import org.pentaho.reporting.libraries.pixie.wmf.MfType;",
        "28": "import org.pentaho.reporting.libraries.pixie.wmf.WmfFile;",
        "29": ""
      },
      "id": 100684988,
      "filename": "MfCmdPaintRgn.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/xmlgraphics-commons",
      "language": "Java",
      "linescount": 255,
      "location": "/src/java/org/apache/xmlgraphics/image/loader/impl",
      "name": "xmlgraphics-commons",
      "url": "https://searchcode.com/codesearch/view/59766493/",
      "md5hash": "897fdaf429b32b74b3631147608569b9",
      "lines": {
        "214": "         * @return the start offset (or 0 if there's no WMF preview)",
        "215": "         */",
        "204": "        /**",
        "205": "         * Indicates whether the EPS has a WMF preview.",
        "206": "         * @return true if there is a WMF preview",
        "207": "         */",
        "208": "        public boolean hasWMFPreview() {",
        "209": "            return (wmfStart != 0);",
        "210": "        }",
        "212": "        /**",
        "213": "         * Returns the start offset of the WMF preview.",
        "182": "        private long psLength = 0;",
        "183": "        private long wmfStart = 0;",
        "184": "        private long wmfLength = 0;",
        "185": "        private long tiffStart = 0;"
      },
      "id": 59766493,
      "filename": "PreloaderEPS.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 70,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128945287/",
      "md5hash": "f165a2223d4c4c04e84f2a8b605d6d57",
      "lines": {
        "32": "",
        "33": "    /** MIME type for WMF */",
        "34": "    public static final String MIME_WMF = \"image/x-wmf\";",
        "35": "",
        "36": "    /** ImageFlavor for Batik's WMFRecordStore */",
        "37": "    public static final ImageFlavor WMF_IMAGE = new ImageFlavor(\"WMFRecordStore\");",
        "38": "",
        "39": "    private WMFRecordStore store;",
        "43": "     * @param info the image info object",
        "44": "     * @param store the WMF record store containing the loaded WMF file",
        "45": "     */",
        "17": "",
        "18": "/* $Id: ImageWMF.java 679326 2008-07-24 09:35:34Z vhennebert $ */",
        "21": "",
        "22": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;",
        "30": " */",
        "31": "public class ImageWMF extends AbstractImage {"
      },
      "id": 128945287,
      "filename": "ImageWMF.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/fop-formgenerator",
      "language": "Java",
      "linescount": 148,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "fop-formgenerator",
      "url": "https://searchcode.com/codesearch/view/128945290/",
      "md5hash": "bfbe7440c587ef28a7eeffadde208d3a",
      "lines": {
        "32": "",
        "33": "import org.apache.batik.transcoder.wmf.WMFConstants;",
        "34": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;",
        "35": "",
        "97": "                din.reset();",
        "98": "                if (magic != WMFConstants.META_ALDUS_APM) {",
        "49": "    /** Logger instance */",
        "44": "/**",
        "45": " * Image preloader for WMF images (Windows Metafile).",
        "46": " */",
        "47": "public class PreloaderWMF extends AbstractImagePreloader {",
        "50": "    private static Log log = LogFactory.getLog(PreloaderWMF.class);",
        "17": "",
        "18": "/* $Id: PreloaderWMF.java 1296526 2012-03-03 00:18:45Z gadams $ */",
        "99": "                    return null; //Not a WMF file",
        "78": "     * This method is put in another class so that the class loader does not",
        "79": "     * attempt to load Batik related classes when constructing the WMFPreloader"
      },
      "id": 128945290,
      "filename": "PreloaderWMF.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/patch-for-sqs-translator",
      "language": "Java",
      "linescount": 70,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "patch-for-sqs-translator",
      "url": "https://searchcode.com/codesearch/view/128948392/",
      "md5hash": "f165a2223d4c4c04e84f2a8b605d6d57",
      "lines": {
        "32": "",
        "33": "    /** MIME type for WMF */",
        "34": "    public static final String MIME_WMF = \"image/x-wmf\";",
        "35": "",
        "36": "    /** ImageFlavor for Batik's WMFRecordStore */",
        "37": "    public static final ImageFlavor WMF_IMAGE = new ImageFlavor(\"WMFRecordStore\");",
        "38": "",
        "39": "    private WMFRecordStore store;",
        "43": "     * @param info the image info object",
        "44": "     * @param store the WMF record store containing the loaded WMF file",
        "45": "     */",
        "17": "",
        "18": "/* $Id: ImageWMF.java 679326 2008-07-24 09:35:34Z vhennebert $ */",
        "21": "",
        "22": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;",
        "30": " */",
        "31": "public class ImageWMF extends AbstractImage {"
      },
      "id": 128948392,
      "filename": "ImageWMF.java"
    },
    {
      "repo": "https://bitbucket.org/kubohiroya/patch-for-sqs-translator",
      "language": "Java",
      "linescount": 148,
      "location": "/src/java/org/apache/fop/image/loader/batik",
      "name": "patch-for-sqs-translator",
      "url": "https://searchcode.com/codesearch/view/128948395/",
      "md5hash": "bfbe7440c587ef28a7eeffadde208d3a",
      "lines": {
        "32": "",
        "33": "import org.apache.batik.transcoder.wmf.WMFConstants;",
        "34": "import org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;",
        "35": "",
        "97": "                din.reset();",
        "98": "                if (magic != WMFConstants.META_ALDUS_APM) {",
        "49": "    /** Logger instance */",
        "44": "/**",
        "45": " * Image preloader for WMF images (Windows Metafile).",
        "46": " */",
        "47": "public class PreloaderWMF extends AbstractImagePreloader {",
        "50": "    private static Log log = LogFactory.getLog(PreloaderWMF.class);",
        "17": "",
        "18": "/* $Id: PreloaderWMF.java 1296526 2012-03-03 00:18:45Z gadams $ */",
        "99": "                    return null; //Not a WMF file",
        "78": "     * This method is put in another class so that the class loader does not",
        "79": "     * attempt to load Batik related classes when constructing the WMFPreloader"
      },
      "id": 128948395,
      "filename": "PreloaderWMF.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 186,
      "source": "Github",
      "id": 2
    },
    {
      "count": 125,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 39,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 1,
      "source": "Gitorious",
      "id": 10
    }
  ]
}