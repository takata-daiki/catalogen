{
  "matchterm": "Subtotal",
  "previouspage": null,
  "searchterm": "Subtotal",
  "query": "Subtotal",
  "language_filters": [
    {
      "count": 569,
      "id": 23,
      "language": "Java"
    }
  ],
  "total": 569,
  "results": [
    {
      "repo": "https://github.com/ruliarso/khs-spring-batch-report-writer.git",
      "language": "Java",
      "linescount": 54,
      "location": "/src/main/java/com/khs/batch/report",
      "name": "khs-spring-batch-report-writer",
      "url": "https://searchcode.com/codesearch/view/97404989/",
      "md5hash": "ccdce3935513d7dcaa0b74801a44bd7f",
      "lines": {
        "24": "public class SubTotal {",
        "23": " */"
      },
      "id": 97404989,
      "filename": "SubTotal.java"
    },
    {
      "repo": "https://github.com/poidasmith/xlloop.git",
      "language": "Java",
      "linescount": 13,
      "location": "/org.boris.expr/java/src/org/boris/expr/function/excel",
      "name": "xlloop",
      "url": "https://searchcode.com/codesearch/view/105399208/",
      "md5hash": "53f238281ea59520272d3849cac4ec9e",
      "lines": {
        "6": "",
        "7": "public class SUBTOTAL extends AbstractFunction"
      },
      "id": 105399208,
      "filename": "SUBTOTAL.java"
    },
    {
      "repo": "https://github.com/marcelst/mondrian.git",
      "language": "Java",
      "linescount": 12046,
      "location": "/testsrc/main/mondrian/olap/fun",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/83139500/",
      "md5hash": "912373370604bf54dd5a525d68512bbe",
      "lines": {
        "1": "/*",
        "2": "// This software is subject to the terms of the Eclipse Public License v1.0",
        "3": "// Agreement, available at the following URL:",
        "4": "// http://www.eclipse.org/legal/epl-v10.html.",
        "5": "// You must accept the terms of that agreement to use this software.",
        "6": "//",
        "7": "// Copyright (C) 2003-2005 Julian Hyde",
        "8": "// Copyright (C) 2005-2012 Pentaho and others",
        "9": "// All Rights Reserved.",
        "10": "*/",
        "11": "package mondrian.olap.fun;",
        "12": "",
        "13": "import mondrian.olap.*;",
        "14": "import mondrian.resource.MondrianResource;",
        "15": "import mondrian.test.FoodMartTestCase;"
      },
      "id": 83139500,
      "filename": "FunctionTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 591,
      "location": "/core/broadleaf-framework/src/test/java/org/broadleafcommerce/core/offer/service/processor",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75607217/",
      "md5hash": "77d69bcd2c83124fa790f218722a8a0c",
      "lines": {
        "283": "            \"order.subTotal.getAmount()>20\",",
        "293": "        offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "294": "            \"order.subTotal.getAmount()>20\",",
        "199": "",
        "200": "        // Add a subtotal requirement that will be met by the item offer.",
        "265": "        offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "266": "            \"order.subTotal.getAmount()==0\",",
        "203": "            \"order.subTotal.getAmount()>20\",",
        "172": "        List<Offer> offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "173": "            \"order.subTotal.getAmount()>20\",",
        "310": "        List<Offer> offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "311": "            \"order.subTotal.getAmount()>20\",",
        "282": "        List<Offer> offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "187": "        offers = dataProvider.createItemBasedOfferWithItemCriteria(",
        "188": "            \"order.subTotal.getAmount()>20\",",
        "202": "        offers = dataProvider.createItemBasedOfferWithItemCriteria("
      },
      "id": 75607217,
      "filename": "ItemOfferProcessorTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 190,
      "location": "/core/broadleaf-framework/src/test/java/org/broadleafcommerce/core/pricing/service/workflow",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75607227/",
      "md5hash": "310cfc13997ba232f93ac4ef196e3c56",
      "lines": {
        "64": "            orderItem.getOrderItemPriceDetails().clear();",
        "65": "            subTotal = subTotal.add(orderItem.getTotalPrice());",
        "165": "",
        "166": "        Money subTotal = new Money(order.getCurrency());",
        "171": "            }",
        "172": "            subTotal = subTotal.add(orderItem.getTotalPrice());",
        "173": "        }",
        "142": "        Order order = dataProvider.createOrderWithBundle();",
        "143": "        Money subTotal = new Money(order.getCurrency());",
        "144": "        for (OrderItem orderItem : order.getOrderItems()) {",
        "145": "            subTotal = subTotal.add(orderItem.getTotalPrice());",
        "146": "        }",
        "147": "        order.setSubTotal(subTotal);",
        "174": "        order.setSubTotal(subTotal);",
        "60": "        Order order = dataProvider.createBasicOrder();",
        "61": "        Money subTotal = new Money(order.getCurrency());"
      },
      "id": 75607227,
      "filename": "FulfillmentItemPricingActivityTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 496,
      "location": "/core/broadleaf-framework/src/test/java/org/broadleafcommerce/core/offer/service",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75607197/",
      "md5hash": "78c055e27afa0332a37fa8ac3d0f4ff4",
      "lines": {
        "288": "",
        "257": "        assertTrue(adjustmentCount == 1);",
        "258": "        assertTrue(order.getSubTotal().subtract(order.getOrderAdjustmentsValue()).equals(new Money(112.45D)));",
        "259": "        assertTrue(order.getSubTotal().equals(new Money(124.95D)));",
        "260": "",
        "263": "        //offers.get(0).setCombinableWithOtherOffers(false);",
        "264": "        List<Offer> offers3 = dataProvider.createOrderBasedOffer(\"order.subTotal.getAmount()>20\", OfferDiscountType.AMOUNT_OFF);",
        "304": "        assertTrue(order.getSubTotal().equals(new Money(129.95D)));",
        "302": "        assertTrue(adjustmentCount == 1);",
        "207": "        myOrder.set(order);",
        "208": "        List<Offer> offers = dataProvider.createOrderBasedOffer(\"order.subTotal.getAmount()>126\", OfferDiscountType.PERCENT_OFF);",
        "305": "",
        "303": "        assertTrue(order.getSubTotal().subtract(order.getOrderAdjustmentsValue()).equals(new Money(116.95D)));",
        "285": "        assertTrue(adjustmentCount == 1);",
        "286": "        assertTrue(order.getSubTotal().subtract(order.getOrderAdjustmentsValue()).equals(new Money(112.45D)));",
        "287": "        assertTrue(order.getSubTotal().equals(new Money(124.95D)));"
      },
      "id": 75607197,
      "filename": "OfferServiceTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 176,
      "location": "/core/broadleaf-framework/src/test/java/org/broadleafcommerce/core/offer/service/processor",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75607212/",
      "md5hash": "14f72c77e9e034486f00d1965dc9c5ee",
      "lines": {
        "96": "        List<PromotableCandidateOrderOffer> qualifiedOffers = new ArrayList<PromotableCandidateOrderOffer>();",
        "97": "        List<Offer> offers = dataProvider.createOrderBasedOffer(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF);",
        "130": "        offers = dataProvider.createOrderBasedOffer(\"order.subTotal.getAmount()==0\", OfferDiscountType.PERCENT_OFF);",
        "129": "        ",
        "104": "        qualifiedOffers = new ArrayList<PromotableCandidateOrderOffer>();",
        "105": "        offers = dataProvider.createOrderBasedOfferWithItemCriteria(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF, \"([MVEL.eval(\\\"toUpperCase()\\\",\\\"test1\\\"), MVEL.eval(\\\"toUpperCase()\\\",\\\"test2\\\")] contains MVEL.eval(\\\"toUpperCase()\\\", discreteOrderItem.category.name))\");",
        "167": "        ",
        "141": "        PromotableOrder order = dataProvider.createBasicPromotableOrder();",
        "142": "        List<Offer> offers = dataProvider.createOrderBasedOfferWithItemCriteria(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF, \"([MVEL.eval(\\\"toUpperCase()\\\",\\\"test1\\\"), MVEL.eval(\\\"toUpperCase()\\\",\\\"test2\\\")] contains MVEL.eval(\\\"toUpperCase()\\\", discreteOrderItem.category.name))\");",
        "111": "        qualifiedOffers = new ArrayList<PromotableCandidateOrderOffer>();",
        "112": "        offers = dataProvider.createOrderBasedOfferWithItemCriteria(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF, \"([5,6] contains discreteOrderItem.category.id.intValue())\");",
        "168": "        offers = dataProvider.createOrderBasedOfferWithItemCriteria(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF, \"([MVEL.eval(\\\"toUpperCase()\\\",\\\"test5\\\"), MVEL.eval(\\\"toUpperCase()\\\",\\\"test6\\\")] contains MVEL.eval(\\\"toUpperCase()\\\", discreteOrderItem.category.name))\");",
        "146": "        ",
        "147": "        offers = dataProvider.createOrderBasedOfferWithItemCriteria(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF, \"([MVEL.eval(\\\"toUpperCase()\\\",\\\"test5\\\"), MVEL.eval(\\\"toUpperCase()\\\",\\\"test6\\\")] contains MVEL.eval(\\\"toUpperCase()\\\", discreteOrderItem.category.name))\");",
        "124": "        PromotableOrder order = dataProvider.createBasicPromotableOrder();",
        "125": "        List<Offer> offers = dataProvider.createOrderBasedOffer(\"order.subTotal.getAmount()>20\", OfferDiscountType.PERCENT_OFF);"
      },
      "id": 75607212,
      "filename": "OrderOfferProcessorTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 457,
      "location": "/core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/domain",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75608531/",
      "md5hash": "c32f57c26767d8be44a71fe711046a6c",
      "lines": {
        "97": "    /**",
        "98": "     * Sets the subtotal price for the order.  The subtotal price is the price of all order items",
        "99": "     * with item offers applied.  The subtotal does not take into account the order offers or any",
        "116": "    public Money calculateSubTotal();",
        "48": " * 3.  Orders have several price related methods that are useful when displaying totals on the cart.",
        "49": " * 3a.    getSubTotal() :  The total of all order items and their adjustments exclusive of taxes",
        "51": " * 3c.    getTotalTax() :  The total taxes being charged for the order",
        "52": " * 3d.    getTotal() : The order total (equivalent of getSubTotal() - getOrderAdjustmentsValue() + getTotalTax())",
        "115": "     */",
        "88": "    /**",
        "89": "     * Returns the subtotal price for the order.  The subtotal price is the price of all order items",
        "90": "     * with item offers applied.  The subtotal does not take into account the order promotions, shipping costs or any",
        "91": "     * taxes that apply to this order.",
        "94": "     */",
        "95": "    public Money getSubTotal();"
      },
      "id": 75608531,
      "filename": "Order.java"
    },
    {
      "repo": "git://github.com/liferay/liferay-portal.git",
      "language": "Java",
      "linescount": 1181,
      "location": "/modules/apps/shopping/shopping-service/src/main/java/com/liferay/shopping/util",
      "name": "liferay-portal",
      "url": "https://searchcode.com/codesearch/view/116053797/",
      "md5hash": "af89082bd0b4c9156de3b0691d0dc742",
      "lines": {
        "256": "\t\t\tdiscount = actualSubtotal * coupon.getDiscount();",
        "320": "\t\treturn subtotal;",
        "305": "\tpublic static double calculateDiscountSubtotal(",
        "279": "\t\tdouble discount = calculateDiscountSubtotal(",
        "304": "",
        "248": "\t\t\t(coupon.getMinOrder() > actualSubtotal)) {",
        "308": "",
        "309": "\t\tdouble subtotal = 0.0;",
        "278": "",
        "247": "\t\tif ((coupon.getMinOrder() > 0) &&",
        "280": "\t\t\titems) / calculateSubtotal(items);",
        "281": "",
        "319": "",
        "316": "",
        "317": "\t\t\tsubtotal += calculateDiscountPrice(item, count.intValue());",
        "255": "\t\tif (type.equals(ShoppingCouponConstants.DISCOUNT_TYPE_PERCENTAGE)) {"
      },
      "id": 116053797,
      "filename": "ShoppingUtil.java"
    },
    {
      "repo": "https://adempiere.svn.codeplex.com/svn",
      "language": "Java",
      "linescount": 889,
      "location": "/adempiereSource/client/src/org/compiere/minigrid",
      "name": "adempiere",
      "url": "https://searchcode.com/codesearch/view/116800838/",
      "md5hash": "c89b818f8f8a81693c250f6e82e15427",
      "lines": {
        "832": "\t\t\t\t\t{\t",
        "833": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "770": "\t\t\t\t\t{",
        "771": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "772": "\t\t\t\t\t\tif(total[col] != null)",
        "773": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "775": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "776": "\t\t\t\t\t\tif(subtotal == null)",
        "777": "\t\t\t\t\t\t\tsubtotal = new Double(0);",
        "778": "\t\t\t\t\t\tif(amt == null )",
        "779": "\t\t\t\t\t\t\tsubtotal = new Double(0);",
        "780": "\t\t\t\t\t\ttotal[col] = subtotal + amt;",
        "781": "\t\t\t\t\t\t",
        "835": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "834": "\t\t\t\t\t\tif(total[col]!= null)"
      },
      "id": 116800838,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://github.com/Berico-Technologies/mondrian.git",
      "language": "Java",
      "linescount": 12282,
      "location": "/testsrc/main/mondrian/olap/fun",
      "name": "mondrian",
      "url": "https://searchcode.com/codesearch/view/69449040/",
      "md5hash": "8be29996d3388b5c24865f6c7da32b4e",
      "lines": {
        "1": "/*",
        "2": "// This software is subject to the terms of the Eclipse Public License v1.0",
        "3": "// Agreement, available at the following URL:",
        "4": "// http://www.eclipse.org/legal/epl-v10.html.",
        "5": "// You must accept the terms of that agreement to use this software.",
        "6": "//",
        "7": "// Copyright (C) 2003-2005 Julian Hyde",
        "8": "// Copyright (C) 2005-2013 Pentaho and others",
        "9": "// All Rights Reserved.",
        "10": "*/",
        "11": "package mondrian.olap.fun;",
        "12": "",
        "13": "import mondrian.olap.*;",
        "14": "import mondrian.resource.MondrianResource;",
        "15": "import mondrian.test.FoodMartTestCase;"
      },
      "id": 69449040,
      "filename": "FunctionTest.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 785,
      "location": "/core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/domain",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75608543/",
      "md5hash": "21961669a8fe5d8a91d72847654a5b34",
      "lines": {
        "160": "    @Column(name = \"ORDER_SUBTOTAL\", precision=19, scale=5)",
        "161": "    @AdminPresentation(friendlyName = \"OrderImpl_Order_Subtotal\", group = Presentation.Group.Name.General,",
        "290": "    public void setSubTotal(Money subTotal) {",
        "291": "        this.subTotal = Money.toAmount(subTotal);",
        "164": "            gridOrder = 4000)",
        "165": "    protected BigDecimal subTotal;",
        "294": "    @Override",
        "289": "    @Override",
        "296": "        Money calculatedSubTotal = BroadleafCurrencyUtils.getMoney(getCurrency());",
        "295": "    public Money calculateSubTotal() {",
        "773": "            public static final int SUBTOTAL = 5000;",
        "772": "            public static final int STATUS = 4000;",
        "159": "",
        "284": "    @Override",
        "285": "    public Money getSubTotal() {",
        "286": "        return subTotal == null ? null : BroadleafCurrencyUtils.getMoney(subTotal, getCurrency());",
        "287": "    }"
      },
      "id": 75608543,
      "filename": "OrderImpl.java"
    },
    {
      "repo": "https://bitbucket.org/edwin_ang/idempiere-mbd",
      "language": "Java",
      "linescount": 911,
      "location": "/org.adempiere.ui.swing/src/org/compiere/minigrid",
      "name": "idempiere-mbd",
      "url": "https://searchcode.com/codesearch/view/59773200/",
      "md5hash": "5f884b368e5e7c6aca2d06413184a2e6",
      "lines": {
        "779": "\t\t\t\t\t{\t",
        "780": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "781": "\t\t\t\t\t\tif(total[col]!= null)",
        "782": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "784": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "785": "\t\t\t\t\t\tif(subtotal == null)",
        "786": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "787": "\t\t\t\t\t\tif(amt == null )",
        "788": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "789": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "792": "\t\t\t\t\t{",
        "793": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "794": "\t\t\t\t\t\tif(total[col] != null)",
        "795": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "797": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "798": "\t\t\t\t\t\tif(subtotal == null)",
        "799": "\t\t\t\t\t\t\tsubtotal = new Double(0);"
      },
      "id": 59773200,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://bitbucket.org/javier_p_villamizar/idempiere",
      "language": "Java",
      "linescount": 911,
      "location": "/org.adempiere.ui.swing/src/org/compiere/minigrid",
      "name": "idempiere",
      "url": "https://searchcode.com/codesearch/view/62547423/",
      "md5hash": "d21f101777ac59d6dbad417fcf5968fd",
      "lines": {
        "779": "\t\t\t\t\t{\t",
        "780": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "781": "\t\t\t\t\t\tif(total[col]!= null)",
        "782": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "784": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "785": "\t\t\t\t\t\tif(subtotal == null)",
        "786": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "787": "\t\t\t\t\t\tif(amt == null )",
        "788": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "789": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "792": "\t\t\t\t\t{",
        "793": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "794": "\t\t\t\t\t\tif(total[col] != null)",
        "795": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "797": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "798": "\t\t\t\t\t\tif(subtotal == null)",
        "799": "\t\t\t\t\t\t\tsubtotal = new Double(0);"
      },
      "id": 62547423,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://bitbucket.org/tbayen/idempiere",
      "language": "Java",
      "linescount": 911,
      "location": "/org.adempiere.ui.swing/src/org/compiere/minigrid",
      "name": "idempiere",
      "url": "https://searchcode.com/codesearch/view/62624528/",
      "md5hash": "5f884b368e5e7c6aca2d06413184a2e6",
      "lines": {
        "779": "\t\t\t\t\t{\t",
        "780": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "781": "\t\t\t\t\t\tif(total[col]!= null)",
        "782": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "784": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "785": "\t\t\t\t\t\tif(subtotal == null)",
        "786": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "787": "\t\t\t\t\t\tif(amt == null )",
        "788": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "789": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "792": "\t\t\t\t\t{",
        "793": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "794": "\t\t\t\t\t\tif(total[col] != null)",
        "795": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "797": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "798": "\t\t\t\t\t\tif(subtotal == null)",
        "799": "\t\t\t\t\t\t\tsubtotal = new Double(0);"
      },
      "id": 62624528,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://bitbucket.org/sphiphatchamikorn/adempiere361",
      "language": "Java",
      "linescount": 899,
      "location": "/client/src/org/compiere/minigrid",
      "name": "adempiere361",
      "url": "https://searchcode.com/codesearch/view/63382984/",
      "md5hash": "567e58527c73524be8f06cfc477a8de1",
      "lines": {
        "768": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "769": "\t\t\t\t\t\tif(total[col]!= null)",
        "770": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "772": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "773": "\t\t\t\t\t\tif(subtotal == null)",
        "774": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "775": "\t\t\t\t\t\tif(amt == null )",
        "776": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "777": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "780": "\t\t\t\t\t{",
        "781": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "782": "\t\t\t\t\t\tif(total[col] != null)",
        "783": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "785": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "786": "\t\t\t\t\t\tif(subtotal == null)",
        "787": "\t\t\t\t\t\t\tsubtotal = new Double(0);",
        "767": "\t\t\t\t\t{\t"
      },
      "id": 63382984,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://bitbucket.org/sthamthum/adempiere361",
      "language": "Java",
      "linescount": 899,
      "location": "/client/src/org/compiere/minigrid",
      "name": "adempiere361",
      "url": "https://searchcode.com/codesearch/view/63582587/",
      "md5hash": "567e58527c73524be8f06cfc477a8de1",
      "lines": {
        "768": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "769": "\t\t\t\t\t\tif(total[col]!= null)",
        "770": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "772": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "773": "\t\t\t\t\t\tif(subtotal == null)",
        "774": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "775": "\t\t\t\t\t\tif(amt == null )",
        "776": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "777": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "780": "\t\t\t\t\t{",
        "781": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "782": "\t\t\t\t\t\tif(total[col] != null)",
        "783": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "785": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "786": "\t\t\t\t\t\tif(subtotal == null)",
        "787": "\t\t\t\t\t\t\tsubtotal = new Double(0);",
        "767": "\t\t\t\t\t{\t"
      },
      "id": 63582587,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://bitbucket.org/zeed23/adempiere361",
      "language": "Java",
      "linescount": 899,
      "location": "/client/src/org/compiere/minigrid",
      "name": "adempiere361",
      "url": "https://searchcode.com/codesearch/view/63684327/",
      "md5hash": "567e58527c73524be8f06cfc477a8de1",
      "lines": {
        "768": "\t\t\t\t\t\tBigDecimal subtotal = Env.ZERO;",
        "769": "\t\t\t\t\t\tif(total[col]!= null)",
        "770": "\t\t\t\t\t\t\tsubtotal = (BigDecimal)(total[col]);",
        "772": "\t\t\t\t\t\tBigDecimal amt =  (BigDecimal) data;",
        "773": "\t\t\t\t\t\tif(subtotal == null)",
        "774": "\t\t\t\t\t\t\tsubtotal = Env.ZERO;",
        "775": "\t\t\t\t\t\tif(amt == null )",
        "776": "\t\t\t\t\t\t\tamt = Env.ZERO;",
        "777": "\t\t\t\t\t\ttotal[col] = subtotal.add(amt);",
        "780": "\t\t\t\t\t{",
        "781": "\t\t\t\t\t\tDouble subtotal = new Double(0);",
        "782": "\t\t\t\t\t\tif(total[col] != null)",
        "783": "\t\t\t\t\t\t\tsubtotal = (Double)(total[col]);",
        "785": "\t\t\t\t\t\tDouble amt =  (Double) data;",
        "786": "\t\t\t\t\t\tif(subtotal == null)",
        "787": "\t\t\t\t\t\t\tsubtotal = new Double(0);",
        "767": "\t\t\t\t\t{\t"
      },
      "id": 63684327,
      "filename": "MiniTable.java"
    },
    {
      "repo": "https://github.com/zetahernandez/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 359,
      "location": "/core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/processor",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/72845714/",
      "md5hash": "732cfc14a39e084e9291f032ba93cade",
      "lines": {
        "96": "    ",
        "97": "    protected boolean meetsItemQualifierSubtotal(Offer offer, CandidatePromotionItems candidateItem) {",
        "98": "        Money qualifyingSubtotal = offer.getQualifyingItemSubTotal(); ",
        "99": "        if (! hasPositiveValue(qualifyingSubtotal)) {",
        "100": "            if (LOG.isTraceEnabled()) {",
        "128": "                LOG.debug(\"Offer \" + offer.getName() + \" does not meet qualifying item subtotal.\");",
        "141": "                                accumulatedTotal = accumulatedTotal.add(itemPrice);",
        "142": "                                if (accumulatedTotal.greaterThan(qualifyingSubtotal)) {",
        "143": "                                    if (LOG.isTraceEnabled()) {",
        "80": "        if (candidates.isMatchedQualifier()) {",
        "81": "            if (! meetsItemQualifierSubtotal(offer, candidates)) {",
        "144": "                                        LOG.trace(\"Offer \" + offer.getName() + \" meets the item subtotal requirement.\");",
        "155": "        if (LOG.isTraceEnabled()) {",
        "156": "            LOG.trace(\"Offer \" + offer.getName() + \" does not meet the item subtotal qualifications.\");",
        "127": "            if (LOG.isDebugEnabled()) {"
      },
      "id": 72845714,
      "filename": "AbstractBaseProcessor.java"
    },
    {
      "repo": "https://github.com/willfu/BroadleafCommerce.git",
      "language": "Java",
      "linescount": 527,
      "location": "/core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/processor",
      "name": "BroadleafCommerce",
      "url": "https://searchcode.com/codesearch/view/75607904/",
      "md5hash": "6df12ff313d0a12a47893e5837c28379",
      "lines": {
        "129": "                    accumulatedTotal = accumulatedTotal==null?itemPrice:accumulatedTotal.add(itemPrice);",
        "130": "                    if (accumulatedTotal.greaterThan(qualifyingSubtotal)) {",
        "131": "                        if (LOG.isTraceEnabled()) {",
        "132": "                            LOG.trace(\"Offer \" + offer.getName() + \" meets qualifying item subtotal.\");",
        "167": "        if (LOG.isTraceEnabled()) {",
        "168": "            LOG.trace(\"Offer \" + offer.getName() + \" does not meet the item subtotal qualifications.\");",
        "140": "                LOG.debug(\"Offer \" + offer.getName() + \" does not meet qualifying item subtotal.\");",
        "139": "            if (LOG.isDebugEnabled()) {",
        "108": "    ",
        "109": "    protected boolean meetsItemQualifierSubtotal(Offer offer, CandidatePromotionItems candidateItem) {",
        "110": "        Money qualifyingSubtotal = offer.getQualifyingItemSubTotal(); ",
        "156": "                                        LOG.trace(\"Offer \" + offer.getName() + \" meets the item subtotal requirement.\");",
        "153": "                                accumulatedTotal = accumulatedTotal==null?itemPrice:accumulatedTotal.add(itemPrice);",
        "154": "                                if (accumulatedTotal.greaterThan(qualifyingSubtotal)) {",
        "155": "                                    if (LOG.isTraceEnabled()) {",
        "92": "        if (candidates.isMatchedQualifier()) {",
        "93": "            if (! meetsItemQualifierSubtotal(offer, candidates)) {"
      },
      "id": 75607904,
      "filename": "AbstractBaseProcessor.java"
    }
  ],
  "page": 0,
  "nextpage": 1,
  "source_filters": [
    {
      "count": 296,
      "source": "Bitbucket",
      "id": 3
    },
    {
      "count": 212,
      "source": "Github",
      "id": 2
    },
    {
      "count": 58,
      "source": "Google Code",
      "id": 1
    },
    {
      "count": 2,
      "source": "CodePlex",
      "id": 5
    },
    {
      "count": 1,
      "source": "GitLab",
      "id": 13
    }
  ]
}