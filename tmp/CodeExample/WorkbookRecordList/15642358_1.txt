    protected WorkbookRecordList        records     = new WorkbookRecordList();
{{{                records.add(rec);
}{                    retval.records.setBspos( k );
                    retval.records.setFontpos( k );
                    retval.records.setXfpos( k );
                    retval.records.setTabpos( k );
                    retval.records.setProtpos( k );
                    retval.records.setBackuppos( k );
                    retval.records.setPalettepos( k );
}            records.add(rec);
}        retval.records.setRecords(records);
}{        records.add( retval.createBOF() );
        records.add( retval.createInterfaceHdr() );
        records.add( retval.createMMS() );
        records.add( retval.createInterfaceEnd() );
        records.add( retval.createWriteAccess() );
        records.add( retval.createCodepage() );
        records.add( retval.createDSF() );
        records.add( retval.createTabId() );
        retval.records.setTabpos( records.size() - 1 );
        records.add( retval.createFnGroupCount() );
        records.add( retval.createWindowProtect() );
        records.add( retval.createProtect() );
        retval.records.setProtpos( records.size() - 1 );
        records.add( retval.createPassword() );
        records.add( retval.createProtectionRev4() );
        records.add( retval.createPasswordRev4() );
        records.add( retval.windowOne );
        records.add( retval.createBackup() );
        retval.records.setBackuppos( records.size() - 1 );
        records.add( retval.createHideObj() );
        records.add( retval.createDateWindow1904() );
        records.add( retval.createPrecision() );
        records.add( retval.createRefreshAll() );
        records.add( retval.createBookBool() );
        records.add( retval.createFont() );
        retval.records.setFontpos( records.size() - 1 );   // last font record postion
{            records.add( rec );
}{            records.add( retval.createExtendedFormat( k ) );
}        retval.records.setXfpos( records.size() - 1 );
{            records.add( retval.createStyle( k ) );
}        records.add( retval.createUseSelFS() );
{            records.add( bsr );
            retval.records.setBspos( records.size() - 1 );
}        records.add( retval.createCountry() );
        records.add( retval.sst );
        records.add( retval.createExtendedSST() );
        records.add( retval.createEOF() );
}{        return records.size();
}{        ( FontRecord ) records.get((records.getFontpos() - (numfonts - 1)) + index);
}{        records.add(records.getFontpos()+1, rec);
        records.setFontpos( records.getFontpos() + 1 );
}{        return ( BackupRecord ) records.get(records.getBackuppos());
}{{            records.add(records.getBspos()+1, bsr);
            records.setBspos( records.getBspos() + 1 );
}}{{            records.remove(records.getBspos() - (boundsheets.size() - 1) + sheetnum);
}}{        TabIdRecord tir = ( TabIdRecord ) records.get(records.getTabpos());
}{        int xfptr = records.getXfpos() - (numxfs - 1);
        ( ExtendedFormatRecord ) records.get(xfptr);
}{        records.add(records.getXfpos()+1, xf);
        records.setXfpos( records.getXfpos() + 1 );
}{        records.add(records.size() - 1, createExtendedSST());
        records.add(records.size() - 2, sst);
}{        for ( int k = 0; k < records.size(); k++ )
{            Record record = records.get( k );
}}{        records.add(idx+names.size()+1, name);
}{{            records.remove(idx + namenum);
}}{        records.add(idx+1, externSheet);
        records.add(idx+1, supbook);
}{        while ( pos < records.size() && records.get( pos ).getSid() != FormatRecord.sid )
        records.add( pos, rec );
}{        for (Iterator iterator = records.iterator(); iterator.hasNext(); ) {
}}{        return records.getRecords();
}{      int palettePos = records.getPalettepos();
{        Record rec = records.get(palettePos);
}{          records.add(1, palette);
          records.setPalettepos(1);
}}{{                i < records.size() && !(records.get(i) instanceof BOFRecord); 
           records.add(i+1,this.writeProtect);
}}{{                i < records.size() && !(records.get(i) instanceof InterfaceEndRecord); 
           records.add(i+1,this.writeAccess);
}}{{                i < records.size() && !(records.get(i) instanceof WriteAccessRecord); 
           records.add(i+1,this.fileShare);
}}{        records.remove(fileShare);
        records.remove(writeProtect);
}