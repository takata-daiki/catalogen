/* Log akis */
/* 27/1/2011  prepei na xeirizomai exception se periptwsi pou den yparxei to arxeio */
/* wraio tha einai na ftiaxw mia synartisi pou na petaei enan dialogo me to katallilo minima */
/* i apla stin output!!!!
/* to READ koumpi leitourgei.... */
/* prepei na vazeis to fullpath sto onoma arxeiou */
/* enimerwnei epityxws ta paketa*/
/* na ftiaxw na enimerwnei to onoma tou Workspace */
/* na ftiaxw na mporw na kanw diplo click se paketo kai na */
/* enimerwnei tis klaseis */

/* 2/2/2011  na ftiaxw synartisi pu na tsekarei */
/* an exei epilegei mono 1 paketo alliws tha typwnei lathos */

/* 4/2/2011 nees synartiseis retrieveSelectedX opou travoun apo */
/* to gui ta epilegmena X in{packages,classes,methods} kait a setaroun */
/* ston workspace */




/*
 * seUI.java
 *
 * Created on Nov 3, 2010, 12:42:23 AM
 */
//imports gia na dw an doulevoun t aexports
import java.io.*;

import java.util.*;
/**
 *
 * @author Akis
 */
public class seUI extends javax.swing.JFrame {

    /** Creates new form seUI */
    public seUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {
        myController= new Controller();

      buttonGroup1 = new javax.swing.ButtonGroup();
      jPanel8 = new javax.swing.JPanel();
      jPanel5 = new javax.swing.JPanel();
      jScrollPane4 = new javax.swing.JScrollPane();
      jTextArea1 = new javax.swing.JTextArea();
      jButton18 = new javax.swing.JButton();
      jPanel6 = new javax.swing.JPanel();
      jButton17 = new javax.swing.JButton();
      jLabel5 = new javax.swing.JLabel();
      jTextField5 = new javax.swing.JTextField();
      jPanel1 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      jList1 = new javax.swing.JList();
      jButton10 = new javax.swing.JButton();
      jButton11 = new javax.swing.JButton();
      jTextField6 = new javax.swing.JTextField();
      jTextField3 = new javax.swing.JTextField();
      jLabel3 = new javax.swing.JLabel();
      jButton6 = new javax.swing.JButton();
      jPanel4 = new javax.swing.JPanel();
      jButton1 = new javax.swing.JButton();
      jLabel4 = new javax.swing.JLabel();
      jTextField4 = new javax.swing.JTextField();
      jButton20 = new javax.swing.JButton();
      jPanel2 = new javax.swing.JPanel();
      jScrollPane2 = new javax.swing.JScrollPane();
      jList2 = new javax.swing.JList();
      jLabel1 = new javax.swing.JLabel();
      jTextField1 = new javax.swing.JTextField();
      jButton2 = new javax.swing.JButton();
      jButton7 = new javax.swing.JButton();
      jButton13 = new javax.swing.JButton();
      jButton12 = new javax.swing.JButton();
      jScrollPane5 = new javax.swing.JScrollPane();
      jList4 = new javax.swing.JList();
      jLabel6 = new javax.swing.JLabel();
      jButton3 = new javax.swing.JButton();
      jTextField7 = new javax.swing.JTextField();
      jPanel7 = new javax.swing.JPanel();
      jRadioButton1 = new javax.swing.JRadioButton();
      jRadioButton2 = new javax.swing.JRadioButton();
      jButton19 = new javax.swing.JButton();
      jPanel3 = new javax.swing.JPanel();
      jLabel2 = new javax.swing.JLabel();
      jTextField2 = new javax.swing.JTextField();
      jButton8 = new javax.swing.JButton();
      jButton9 = new javax.swing.JButton();
      jButton14 = new javax.swing.JButton();
      jButton15 = new javax.swing.JButton();
      jButton4 = new javax.swing.JButton();
      jTextField8 = new javax.swing.JTextField();
      jScrollPane3 = new javax.swing.JScrollPane();
      jList3 = new javax.swing.JList();
      jButton5 = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

      jTextArea1.setColumns(20);
      jTextArea1.setRows(5);
      jScrollPane4.setViewportView(jTextArea1);

      jButton18.setText("Clear");
      jButton18.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton18ActionPerformed(evt);
         }
      });

      jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("high level output")))));

      jButton17.setText("Generate!");
      jButton17.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton17ActionPerformed(evt);
         }
      });

      jLabel5.setText("Filename:");

      javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
      jPanel6.setLayout(jPanel6Layout);
      jPanel6Layout.setHorizontalGroup(
         jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel6Layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton17)
            .addContainerGap(23, Short.MAX_VALUE))
      );
      jPanel6Layout.setVerticalGroup(
         jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel6Layout.createSequentialGroup()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel5)
               .addComponent(jButton17))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
      jPanel5.setLayout(jPanel5Layout);
      jPanel5Layout.setHorizontalGroup(
         jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel5Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel5Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel5Layout.createSequentialGroup()
                  .addGap(153, 153, 153)
                  .addComponent(jButton18)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel5Layout.setVerticalGroup(
         jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jButton18)
            .addContainerGap())
      );

      jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Packages"));

      jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            jList1ValueChanged(evt);
         }
      });
      jScrollPane1.setViewportView(jList1);

      jButton10.setText("Rename");
      jButton10.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton10ActionPerformed(evt);
         }
      });

      jButton11.setText("Delete");
      jButton11.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton11ActionPerformed(evt);
         }
      });

      jTextField6.setText(" ");
      jTextField6.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField6ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel1Layout.createSequentialGroup()
                     .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                     .addContainerGap())
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                     .addComponent(jButton11)
                     .addGap(66, 66, 66)))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                  .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton10)
                  .addContainerGap())))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton10)
               .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton11)
            .addGap(104, 104, 104))
      );

      jTextField3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField3ActionPerformed(evt);
         }
      });
      jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
         public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField3FocusLost(evt);
         }
      });

      jLabel3.setText("Active Workspace:");

      jButton6.setText(">");
      jButton6.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
         }
      });

      jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Workspace options"));

      jButton1.setText("Read");
      jButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
         }
      });

      jLabel4.setText("Read File:");

      jTextField4.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField4ActionPerformed(evt);
         }
      });

      jButton20.setText("Close");
      jButton20.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton20ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
      jPanel4.setLayout(jPanel4Layout);
      jPanel4Layout.setHorizontalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel4)
            .addGap(2, 2, 2)
            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27)
            .addComponent(jButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton20)
            .addContainerGap(280, Short.MAX_VALUE))
      );
      jPanel4Layout.setVerticalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel4)
            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton1)
            .addComponent(jButton20))
      );

      jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Classes"));

      jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            jList2ValueChanged(evt);
         }
      });
      jScrollPane2.setViewportView(jList2);

      jLabel1.setText("Find Class:");

      jTextField1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField1ActionPerformed(evt);
         }
      });

      jButton2.setText("Find");
      jButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
         }
      });

      jButton7.setText("List Dependencies");
      jButton7.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
         }
      });

      jButton13.setText("Delete");
      jButton13.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton13ActionPerformed(evt);
         }
      });

      jButton12.setText("Rename");
      jButton12.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton12ActionPerformed(evt);
         }
      });

      jScrollPane5.setViewportView(jList4);

      jLabel6.setText("CinC");

      jButton3.setText("showAll");
      jButton3.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addGap(86, 86, 86)
                  .addComponent(jLabel6))
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addGap(27, 27, 27)
                  .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton12)
                  .addGap(75, 75, 75))
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addGap(91, 91, 91)
                  .addComponent(jButton13))
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addComponent(jButton3)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(jButton7))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                  .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                     .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                  .addGap(53, 53, 53))
               .addGroup(jPanel2Layout.createSequentialGroup()
                  .addGap(79, 79, 79)
                  .addComponent(jButton2)))
            .addContainerGap())
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(4, 4, 4)
            .addComponent(jButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(6, 6, 6)
            .addComponent(jLabel6)
            .addGap(5, 5, 5)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jButton12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton3)
               .addComponent(jButton7))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton13))
      );

      jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("statistics\n")));

      buttonGroup1.add(jRadioButton1);
      jRadioButton1.setText("Quantification");
      jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioButton1ActionPerformed(evt);
         }
      });

      buttonGroup1.add(jRadioButton2);
      jRadioButton2.setText("Quality analysis");
      jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioButton2ActionPerformed(evt);
         }
      });

      jButton19.setText("print to output");
      jButton19.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton19ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
      jPanel7.setLayout(jPanel7Layout);
      jPanel7Layout.setHorizontalGroup(
         jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jRadioButton1)
               .addComponent(jButton19)
               .addComponent(jRadioButton2))
            .addContainerGap(61, Short.MAX_VALUE))
      );
      jPanel7Layout.setVerticalGroup(
         jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel7Layout.createSequentialGroup()
            .addComponent(jRadioButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jRadioButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
            .addComponent(jButton19))
      );

      jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Methods"));

      jLabel2.setText("Find Method:");

      jTextField2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField2ActionPerformed(evt);
         }
      });

      jButton8.setText("List Dependencies");
      jButton8.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton8ActionPerformed(evt);
         }
      });

      jButton9.setText("Find");
      jButton9.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
         }
      });

      jButton14.setText("Remame");
      jButton14.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton14ActionPerformed(evt);
         }
      });

      jButton15.setText("Delete");
      jButton15.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton15ActionPerformed(evt);
         }
      });

      jButton4.setText("showAll");
      jButton4.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
         }
      });

      jTextField8.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField8ActionPerformed(evt);
         }
      });

      jList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            jList3ValueChanged(evt);
         }
      });
      jScrollPane3.setViewportView(jList3);

      javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
      jPanel3.setLayout(jPanel3Layout);
      jPanel3Layout.setHorizontalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton14))
               .addGroup(jPanel3Layout.createSequentialGroup()
                  .addContainerGap(43, Short.MAX_VALUE)
                  .addComponent(jButton4)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton15))
               .addGroup(jPanel3Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jLabel2)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(jPanel3Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jButton8))
               .addGroup(jPanel3Layout.createSequentialGroup()
                  .addGap(73, 73, 73)
                  .addComponent(jButton9))
               .addGroup(jPanel3Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
            .addContainerGap())
      );
      jPanel3Layout.setVerticalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel2)
               .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton9)
            .addGap(19, 19, 19)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton14)
               .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton4)
               .addComponent(jButton15))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton8))
      );

      jButton5.setText("<");
      jButton5.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
      jPanel8.setLayout(jPanel8Layout);
      jPanel8Layout.setHorizontalGroup(
         jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(26, 26, 26)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
         .addGroup(jPanel8Layout.createSequentialGroup()
            .addGap(117, 117, 117)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(468, Short.MAX_VALUE))
         .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
               .addGap(236, 236, 236)
               .addComponent(jButton5)
               .addGap(4, 4, 4)
               .addComponent(jLabel3)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
               .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGap(18, 18, 18)
               .addComponent(jButton6)
               .addContainerGap(611, Short.MAX_VALUE)))
      );
      jPanel8Layout.setVerticalGroup(
         jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel8Layout.createSequentialGroup()
            .addGap(49, 49, 49)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                  .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(129, 129, 129))
               .addGroup(jPanel8Layout.createSequentialGroup()
                  .addGap(32, 32, 32)
                  .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addContainerGap(26, Short.MAX_VALUE))))
         .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
               .addContainerGap()
               .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(jLabel3)
                     .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jButton6))
                  .addComponent(jButton5))
               .addContainerGap(692, Short.MAX_VALUE)))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    

    /* Akis */
    /* koumpi read */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            String filename;
            int i=1;
            filename = getFileName();
            printToOutput("opening file ..." +"\n");
            printToOutput(filename+"\n");
       try{     
            myController.openFile(filename);
        }
        catch(Exception ex)
            {
                printToOutput("File does not exist"+"\n");
                i=0;
            }   
            refreshDisplay();
            if(i==1){
            printToOutput("Success! total wspaces:"+myController.getCollectionOfWorkspaces().size()+"\n\n");
            }
            
        //$ 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
            listMethodDependencies();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
            clearOutput();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
            closeWorkspace();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed


     private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
                // TODO add your handling code here:
     }//GEN-LAST:event_jList1MouseClicked

     private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
                // TODO add your handling code here:
     }//GEN-LAST:event_jList2MouseClicked

     private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
                // TODO add your handling code here:
                retrieveSelectedPackages();
                displayClasses();
     }//GEN-LAST:event_jList1ValueChanged


     private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
            retrieveSelectedClasses();
            displayMethods();
                // TODO add your handling code here:
     }//GEN-LAST:event_jList2ValueChanged

     private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
                // TODO add your handling code here:
                                generateHighLevelOutput();
     }//GEN-LAST:event_jButton17ActionPerformed

     private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
                switchWorkspace(0); //switch to the left
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton5ActionPerformed

     private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
                switchWorkspace(1); //switch to the right
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton6ActionPerformed

     private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
            renamePackage();
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton10ActionPerformed

     private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
            deletePackage();
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton11ActionPerformed

     private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
                typeOfAnalysis=1;
                // TODO add your handling code here:
     }//GEN-LAST:event_jRadioButton1ActionPerformed

     private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
                typeOfAnalysis=2;
                // TODO add your handling code here:
     }//GEN-LAST:event_jRadioButton2ActionPerformed

     private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
                if(typeOfAnalysis==1)
                    analyseQuantity();
                else if(typeOfAnalysis==2)
                    analyseQuality();
                else ;
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton19ActionPerformed

     private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                    searchClass();
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton2ActionPerformed

     private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
                // TODO add your handling code here:
            renameClass();
     }//GEN-LAST:event_jButton12ActionPerformed

     private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
                // TODO add your handling code here:
                deleteClass();
     }//GEN-LAST:event_jButton13ActionPerformed

     private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
                listClassesDependencies();
                // TODO add your handling code here:
     }//GEN-LAST:event_jButton7ActionPerformed

     private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                // TODO add your handling code here:
                    searchMethod();
     }//GEN-LAST:event_jButton9ActionPerformed

     private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
                // TODO add your handling code here:
                renameMethod();
     }//GEN-LAST:event_jButton14ActionPerformed

     private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
                // TODO add your handling code here:
                
            deleteMethod();
     }//GEN-LAST:event_jButton15ActionPerformed

     private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                // TODO add your handling code here:
                    displayClasses();
     }//GEN-LAST:event_jButton3ActionPerformed

     private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                // TODO add your handling code here:
                    displayMethods();
     }//GEN-LAST:event_jButton4ActionPerformed

     private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
                renameWorkspace();
                // TODO add your handling code here:
     }//GEN-LAST:event_jTextField3FocusLost

      private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
                 // TODO add your handling code here:
      }//GEN-LAST:event_jTextField6ActionPerformed

      private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
                 // TODO add your handling code here:
      }//GEN-LAST:event_jTextField8ActionPerformed

      private void jList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
                 retrieveSelectedMethods();
                 
                 // TODO add your handling code here:
      }//GEN-LAST:event_jList3ValueChanged

    /**
    * @param args the command line arguments
    */





/*  Gregory and Vangelis functions */
      public void analyseQuality(){
        int resultA=0;
        double resultB=0.0;
        int resultC=0;
        int resultD=0;
        int M=0;
        int paronom=0;
        int arithm=0;
        int numberOfSelectedClasses=0;
        boolean found=false;
        String cClassName;
        theClass cClass;
        theMethod mMethod;
        theMethod m2Method;
        ArrayList<theClass> cList;
        ArrayList<theMethod> mList;
        ArrayList<theMethod> methodsOfTheMethod;
        ArrayList<theMethod> allMethods;
        
        cList=myController.getSelectedClasses();
        try {
            FileWriter outFile = new FileWriter("Quality Statistics.txt");
            PrintWriter out = new PrintWriter(outFile);
            if(cList==null){
                printToOutput("User has not selected a class...\n");
                printToOutput("Quality analysis is terminated...\n");
                out.println("User has not selected a class...\n");
                out.println("Quality analysis is terminated...\n");
            }
            else{
                int i=cList.size();
                for(int j=0;j<i;j++){
                    cClass=cList.get(j);
                    cClassName=cClass.getName();
                    printToOutput("A).The Coupling Between Object Classes - CBO of class: "+cClassName+" is: ");
                    out.println("A).The Coupling Between Object Classes - CBO of class: "+cClassName+" is: ");
                    resultA=cClass.getClassDependencies().size();
                    printToOutput(resultA+"\n");
                    out.println(resultA+"\n");
                    mList=cClass.getCollectionOfMethods();
                    M=mList.size();
                    if(M>1){
                        printToOutput("B).The Lack Of Cohesion - LC of class: "+cClassName+" is: ");
                        out.println("B).The Lack Of Cohesion - LC of class: "+cClassName+" is: ");
                        paronom=M*(M-1);
                        arithm=0;
                        for(int z=0;z<M;z++){
                            mMethod=mList.get(z);
                            int k=mMethod.getMethodDependencies().size();
                            arithm=arithm+k;
                        }
                        resultB=1-(arithm/paronom);
                        printToOutput(resultB+"\n");
                        out.println(resultB+"\n");
                    }
                    else{
                            printToOutput("B).Cannot calculate The Lack Of Cohesion - LC of class: "+cClassName+". Class has no methods or has only one method!!!\n");
                            out.println("B).Cannot calculate The Lack Of Cohesion - LC of class: "+cClassName+". Class has no methods or has only one method!!!\n");
                    }
                    printToOutput("C).The Response For Class: "+cClassName+" is: ");
                    out.println("C).The Response For Class: "+cClassName+" is: ");
                    //sto RFC=M+R, to M to exw akrivws idio apo prin
                    //to R einai poses methodoi kalountai apo methodous tis klasis
                    //ara to arithm pou ipolosisa pio prin
                    resultC=M+arithm;
                    printToOutput(resultC+"\n");
                    printToOutput("D).The Dead Methods of class: "+cClassName+" are: ");
                    out.println(resultC+"\n");
                    out.println("D).The Dead Methods of class: "+cClassName+" are: ");
                    allMethods=myController.getCollectionOfMethods();
                    int k=allMethods.size();
                    for(int l=0;l<M;l++){//gia kathe methodo tis klasis
                        found=false;
                        mMethod=mList.get(l);
                        for(int m=0;m<k;m++){//psakse oles tis methodous tou sistimatos
                            m2Method=allMethods.get(m);
                            methodsOfTheMethod=m2Method.getMethodDependencies();
                            for(int n=0;n<methodsOfTheMethod.size();n++){//kai gia kathe arraylist me tis eksartiseis kathe methodou
                                if(mMethod==methodsOfTheMethod.get(n)){//ean i methods iparxei mesa
                                    found=true;//kane o flag true
                                }
                            }                      
                        }//ean meta apo psaksimo olwn twn methodwn tou sistimatos den exei vrethei eggrafi stous pinakes eksartisewn
                        if(found==false){
                            resultD=resultD++;
                        }
                    }   
                    printToOutput(resultD+"\n");
                    printToOutput("\n");
                    out.println(resultD+"\n");
                    out.println("\n");
                }//kleinei i for
            }
            out.close();
        }catch (IOException e){
            e.printStackTrace();
        }           
    } 
    
    public void analyseQuantity(){
        double i=0.0;
        int j=0;
        int z=0;
        int k=0;
        int l=0;
        int numberOfSelectedClasses=0;
        int numberOfSelectedMethods=0;
        double result;
        theWorkspace work1;
        thePackage p1;
        theClass c1;
        String filename;
        ArrayList<thePackage> pList;//ta paketa pou tha ginei i analisi;
        ArrayList<theClass> cList;
        ArrayList<theMethod> mList;
        pList=myController.getSelectedPackages();
        try {
            FileWriter outFile = new FileWriter("Quantity Statistics.txt");
            PrintWriter out = new PrintWriter(outFile);
        if(pList==null){
            cList=myController.getCollectionOfClasses();
            mList=myController.getCollectionOfMethods();
            printToOutput("No package Selected...\n");
            printToOutput("Quantity analysis for the whole file...\n\n");
            out.println("No package Selected...\n");
            out.println("Quantity analysis for the whole file...\n\n");
            work1=myController.getActiveWorkspace();
            pList=work1.getCollectionOfPackages();
            printToOutput("A).The total number of packages is:");
            out.println("A).The total number of packages is:");
            i=pList.size();
            printToOutput(i+"\n");
            printToOutput("B).The medium number of classes per package is:");
            out.println(i+"\n");
            out.println("B).The medium number of classes per package is:");
            j=cList.size();
            z=mList.size();
            result=j/i;
            printToOutput(result+"\n");
            printToOutput("C).The total number of methods is:");
            printToOutput(z+"\n");
            out.println(result+"\n");
            out.println("C).The total number of methods is:");
            out.println(z+"\n");
            result=z/j;
            printToOutput("D).The total number of methods per class is:");
            printToOutput(result+"\n");
            out.println("D).The total number of methods per class is:");
            out.println(result+"\n");
        }
        else{
            printToOutput("Package(s) selected...\n");
            printToOutput("Quantity analysis for the spesific packages...\n\n");
            out.println("Package(s) selected...\n");
            out.println("Quantity analysis for the spesific packages...\n\n");
            i=pList.size();
            printToOutput("A).The total number of selected packages is:");
            printToOutput(i+"\n");
            out.println("A).The total number of selected packages is:");
            out.println(i+"\n");
            for(j=0;j<i;j++){
                p1=pList.get(j);
                cList=p1.getCollectionOfClasses();
                z=cList.size();
                numberOfSelectedClasses=numberOfSelectedClasses+z;//sinolikos arithmos klasewn twn epilegmenwn paketwn
                for(k=0;k<z;k++){
                    c1=cList.get(k);
                    mList=c1.getCollectionOfMethods();
                    l=mList.size();
                    numberOfSelectedMethods=numberOfSelectedMethods+l;////sinolikos arithmos methodwn twn klasewn twn epilegmenwn paketwn
                }
            }
            printToOutput("B).The medium number of classes per package is:");
            out.println("B).The medium number of classes per package is:");
            result=numberOfSelectedClasses/i;
            printToOutput(result+"\n");
            out.println(result+"\n");
            printToOutput("C).The total number of methods is:");
            printToOutput(numberOfSelectedMethods+"\n");
            out.println("C).The total number of methods is:");
            out.println(numberOfSelectedMethods+"\n");
            result=numberOfSelectedMethods/numberOfSelectedClasses;
            printToOutput("D).The total number of methods per class is:");
            printToOutput(result+"\n");
            out.println("D).The total number of methods per class is:");
            out.println(result+"\n");
        }
        out.close();
        } catch (IOException e){
            e.printStackTrace();
        }
    }

    public void generateHighLevelOutput(){
            int i;
            int j;
            int z;
            String S1;
            char doublequote='"';
            String aClassName;
            String bClassName;
            theClass aClass;
            theClass bClass;
            theClass cClass;
            ArrayList<theClass> cList;//collectionOfClasses;
            ArrayList<theMethod> mList;//collectionOfMethods;
            String filename=jTextField5.getText();
			cList=myController.getSelectedClasses();
            if(filename.equals("")){
                printToOutput("plz enter a filename\n");
                return;
            }
			if(cList.size()<2){
				printToOutput("please select at least 2 classes\n");
				return;
				}
			filename=filename+".violet";
            System.out.println("generate high level output beginning !!!\n\n");
			
            try {
            FileWriter outFile = new FileWriter(filename);
            
            PrintWriter out = new PrintWriter(outFile);
                                        
            //Ektipwsi twn eisagwgikwn kefalidwn tou arxeiou
            S1="<?xml version="+doublequote+"1.0"+doublequote+" encoding="+doublequote+"UTF-8"+doublequote+"?>";
            printToOutput(S1+"\n");
            out.println(S1);
            S1="<java version="+doublequote+"1.6.0_17"+doublequote+" class="+doublequote+"java.beans.XMLDecoder"+doublequote+">";
            printToOutput(S1+"\n");
            out.println(S1);
            S1="<object class="+doublequote+"com.horstmann.violet.ClassDiagramGraph"+doublequote+">";
            printToOutput(S1+"\n");
            out.println(S1);
            //i cList exei to swsto ArrayList me tis klaseis pros anazitisi
            for(i=0;i<cList.size();i++){
                aClassName=cList.get(i).getName();
                S1="<void method="+doublequote+"addNode"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<object id="+doublequote+aClassName+doublequote+" class="+doublequote+"com.horstmann.violet.ClassNode"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<void property="+doublequote+"methods"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<void property="+doublequote+"text"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<string>";
                printToOutput(S1+"\n");
                out.println(S1);
                //ektipwsi twn methodwn tis klasis
                mList=cList.get(i).getCollectionOfMethods();
                for(z=0;z<mList.size();z++){
                    S1=mList.get(z).getName();
                    printToOutput(S1+"()"+"\n");
                    out.println(S1+"()");
                }
                S1="</string>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</void>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</void>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<void property="+doublequote+"name"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<void property="+doublequote+"text"+doublequote+">";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="<string>"+aClassName+"</string>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</void>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</void>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</object>";
                printToOutput(S1+"\n");
                out.println(S1);
                S1="</void>";
                printToOutput(S1+"\n");
                out.println(S1);
            }
            for(i=0;i<cList.size();i++){
                for(j=0;j<cList.size();j++){
                    if(i!=j){
                        aClass=cList.get(i);
                        aClassName=cList.get(i).getName();
                        bClass=cList.get(j);
                        bClassName=cList.get(j).getName();
                            
                        cClass=aClass.searchClassDependency(bClassName);
                        if(cClass==bClass){//vriskw an iparxei eksartisi
                            //ektipwsi tis sindesis
                            S1="<void method="+doublequote+"connect"+doublequote+">";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<object class="+doublequote+"com.horstmann.violet.ClassRelationshipEdge"+doublequote+">";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<void property="+doublequote+"endArrowHead"+doublequote+">";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<object class="+doublequote+"com.horstmann.violet.ArrowHead"+doublequote+" field="+doublequote+"V"+doublequote+"/>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="</void>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<void property="+doublequote+"lineStyle"+doublequote+">";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<object class="+doublequote+"com.horstmann.violet.LineStyle"+doublequote+" field="+doublequote+"DOTTED"+doublequote+"/>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="</void>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="</object>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<object idref="+doublequote+aClassName+doublequote+"/>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="<object idref="+doublequote+bClassName+doublequote+"/>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                            S1="</void>";
                            printToOutput(S1+"\n");
                            out.println(S1);
                        }
                    }
                }   
            }
            //Ektipwsi twn telikwn kefalidwn tou arxeio eksodou
            S1="</object>";
            printToOutput(S1+"\n");
            out.println(S1);
            S1="</java>";
            printToOutput(S1+"\n");
            out.println(S1);
            printToOutput("\n");
            //kleisimo tou arxeiou
            out.close();
            } catch (IOException e){
                e.printStackTrace();
            }
    }    

/* Akis functions $*/
    
    


    /* ftinei to pedio output sto arxeio */
    public void printOutputToFile(){
        String filename;
        filename = jTextField5.getText();

            
          
    }


  public void searchClass(){
    String Name=jTextField1.getText();
    ArrayList<thePackage> selectedPackages;
    ArrayList <theClass> classesList;
    ArrayList <theClass> allClassesList; 
    ArrayList <theClass> foundClassesList;
    theClass aClass;
    selectedPackages = new ArrayList<thePackage>();
    classesList = new ArrayList<theClass>();
    allClassesList = new ArrayList<theClass>();
    foundClassesList = new ArrayList<theClass>();
    
     if(Name.equals(""))
        printToOutput("plz enter className to Find!!\n");
     else{
        selectedPackages=myController.getSelectedPackages();
        for(int i=0;i<selectedPackages.size();i++){
            classesList=selectedPackages.get(i).getCollectionOfClasses();
            for(int j=0;j<classesList.size();j++)
                allClassesList.add(classesList.get(j));
        }
     }
    
        
     for(int i=0;i<allClassesList.size();i++){
        aClass=allClassesList.get(i);
        if(aClass.getName().equals(Name))
            foundClassesList.add(aClass);
    }
    if(foundClassesList.size()==0){
        printToOutput("Class was not found!!!\n");
    }
     else{
            printToOutput("Class was found!!!\n");
            jList2.setListData(foundClassesList.toArray());
         }
    
  }
        
    public void searchMethod(){
        String Name=jTextField2.getText();
        String methodName;
        ArrayList <theClass> selectedClasses;
        ArrayList <theMethod> methodsList;
        ArrayList <theMethod> allMethodsList;
        ArrayList <theMethod> foundMethodsList;
        theMethod aMethod;

        selectedClasses = new ArrayList<theClass>();
        methodsList = new ArrayList<theMethod>();
        allMethodsList = new ArrayList<theMethod>();
        foundMethodsList = new ArrayList<theMethod>();

         if(Name.equals(""))
            printToOutput("plz enter methodName to Find!!\n");
        else{
            selectedClasses = myController.getSelectedClasses();
            for(int i=0; i<selectedClasses.size();i++){ 
                methodsList = selectedClasses.get(i).getCollectionOfMethods();
                for(int j=0;j<methodsList.size();j++)
                    allMethodsList.add(methodsList.get(j));
            }
         }

        for(int i=0;i<allMethodsList.size();i++){
            aMethod = allMethodsList.get(i);
            if(aMethod.getName().equals(Name))
                foundMethodsList.add(aMethod);
        }
        if(foundMethodsList.size()==0){
        printToOutput("Method was not found!!!\n");
        }
        else{
            printToOutput("Method was found!!!\n");
            jList3.setListData(foundMethodsList.toArray());
        }
    
    }

    public void renameWorkspace(){
		  boolean wrkExists=false;
        String Name = jTextField3.getText();
        int i=1;
        ArrayList<theWorkspace> wList;
        wList=myController.getCollectionOfWorkspaces();
        theWorkspace  activeWrk;
        activeWrk=myController.getActiveWorkspace();

        for(int j=0;j<wList.size();j++)
            if(Name.equals(wList.get(j).getName()))
						wrkExists=true;

        if(wrkExists){
            printToOutput("This name allready exists!!!\n");
            printToOutput("Try Again!!!\n");
        }
        else if(Name.equals(""))
            printToOutput("plz open a Workspace with Read!\n");
        else{ 
            printToOutput("workspace name: " + activeWrk.getName() +'\n');
            printToOutput("changed to " +Name + "\n");
            activeWrk.setName(Name);
        }
       
        
    }

    public void closeWorkspace(){
        ArrayList<theWorkspace> wList;
        theWorkspace aWorkspace=myController.getActiveWorkspace();
        wList=myController.getCollectionOfWorkspaces();
        
        if(wList.size()<=1)
            printToOutput("sorry cant remove (0 or 1 exist)!!\n");
        else{
            if(switchWorkspace(1) || switchWorkspace(0))
                    refreshDisplay();
                    
            else
                printToOutput("unable to close workspace!! error\n");
            myController.removeWorkspace(aWorkspace);
        }
            //switch to the right or to the left
    } 
    
    public boolean switchWorkspace(int totheRight){
        int pos;
        boolean succedeed=false;
        ArrayList<theWorkspace> wList;
        theWorkspace aWorkspace;
        wList=myController.getCollectionOfWorkspaces();
        aWorkspace=myController.getActiveWorkspace();
        pos=wList.indexOf(aWorkspace);
        
        if(totheRight==1){  
            if(pos==wList.size()-1){
                printToOutput("nth else to the right \n");
            }
            else{
                myController.setActiveWorkspace(wList.get(pos+1));
                succedeed=true;
            }
        
        }
            
        else{
            if(pos==0)
                printToOutput("nth else to the left\n");
            else{
                myController.setActiveWorkspace(wList.get(pos-1));
                succedeed=true;
            }
        }

        refreshDisplay();
        return succedeed;
            
    }

    /* den to xreiazomai me vasi tis apaitiseis ...*/
    public void renamePackage(){
        thePackage aPackage;
          String Name;
        if(checkOnePackageSelected()){
            aPackage=myController.getSelectedPackages().get(0);
                Name=jTextField6.getText();
                 if(!Name.equals("")){
                    printToOutput("changing (P) name: "+aPackage.getName()+" to "+Name +"\n");
                    aPackage.setName(Name);
              displayPackages();
                    }
                 else
                    printToOutput("plz enter new package name\n");
        }
        else
            printToOutput("plz select (only) one package \n");
    }

    public void renameClass(){
        theClass aClass;
        String Name;
        if(checkOneClassSelected()){
            aClass=myController.getSelectedClasses().get(0);
            Name=jTextField7.getText();
                if(!Name.equals("")){
                    printToOutput("changing (C) name: "+aClass.getName()+" to "+Name +"\n");
             aClass.setName(Name);
             displayClasses();
                }
                else
                    printToOutput("plz enter new class name\n");
        }
        else
            printToOutput("plz select (only) one class \n");
    }

    public void renameMethod(){
        theMethod aMethod;
        String Name;
        if(checkOneMethodSelected()){
            aMethod=myController.getSelectedMethods().get(0);
            Name=jTextField8.getText();
                if(!Name.equals("")){
                    printToOutput("changing (M) name: "+aMethod.getName()+" to "+Name +"\n");
             aMethod.setName(Name);
             displayMethods();
                }
                else
                    printToOutput("plz enter new method name\n");
        }
        
        else
            printToOutput("plz select (only) one method \n");
}


    public void deletePackage(){
        thePackage aPackage;
        if(checkOnePackageSelected()){
        
            aPackage=myController.getSelectedPackages().get(0);
            printToOutput("removing " +aPackage.getName() +" (P) \n");
            myController.getActiveWorkspace().removePackage(aPackage);
            printToOutput("package succesfully removed\n");
                displayPackages();
        }
        else
            printToOutput("plz select (only) one package \n");
        
    }

    public void deleteClass(){
        theClass aClass;
        theClass bClass;
        theClass cClass;
        ArrayList<theClass> bClassDList; 
        ArrayList<theClass> cList;
        if(checkOneClassSelected() && checkOnePackageSelected()){
            aClass=myController.getSelectedClasses().get(0);
            printToOutput("removing " +aClass.getName() +" (C) \n");
            printToOutput("removing dependency from classes that\n");
            printToOutput("depend upon her\n");
            cList=myController.getCollectionOfClasses();
                for(int i=0;i<cList.size();i++){
                    bClass=cList.get(i);
                    cClass=bClass.searchClassDependency(aClass.getName());
                    if(cClass!=null && cClass.equals(aClass)){
                        bClass.removeClassDependency(aClass);
                    }
                }
            myController.removeFromCollectionOfClasses(aClass);
            myController.getActivePackage().removeClass(aClass);
            
            printToOutput("class succesfully removed\n");
                displayClasses();
        }
        else
            printToOutput("plz select (only) one class and a packet \n");
    }

    public void deleteMethod(){
        theMethod aMethod;
        theMethod bMethod;
        theMethod cMethod;
        ArrayList<theMethod> bMethodDList;
        ArrayList<theMethod> mList;
        
        if(checkOneMethodSelected() && checkOneClassSelected()){
            aMethod=myController.getSelectedMethods().get(0);
            printToOutput("removing " +aMethod.getName() +" (M) \n");
            printToOutput("removing dependency from methods that\n");
            printToOutput("depend upon her\n");
            mList=myController.getCollectionOfMethods();
                for(int i=0;i<mList.size();i++){
                    bMethod=mList.get(i);
                    cMethod=bMethod.searchMethodDependency(aMethod.getName());
                    if(cMethod!=null && cMethod.equals(aMethod)){
                        bMethod.removeMethodDependency(aMethod);
                    }
                }
        
                myController.removeFromCollectionOfMethods(aMethod);
                myController.getActiveClass().removeMethod(aMethod);
                printToOutput("method succesfully removed\n");
                     displayMethods();
        }
        else
            printToOutput("plz select (only) one method and a class \n");

    }

    public void listMethodDependencies(){
        ArrayList<theMethod> methodList;
        ArrayList<theMethod> dMethodList;
        methodList=myController.getSelectedMethods();
        theMethod methodA;
        theMethod methodB;
        for(int i=0;i<methodList.size();i++){
            methodA=methodList.get(i);
            printToOutput("\n(M): " +methodA.getName() +"\n depends on"+'\n');
            dMethodList=methodA.getMethodDependencies();
            for(int j=0;j<dMethodList.size();j++){
                if(j%4==0)
                    printToOutput("\n");
                methodB=dMethodList.get(j);
                printToOutput(methodB.getName()+" , ");
            }
            printToOutput("\n-------------------" + "\n\n");
                
            
        }
    } 


    public void listClassesDependencies(){
        ArrayList<theClass> classList;
        ArrayList<theClass> dClassList;
        classList=myController.getSelectedClasses();
        theClass classA;
        theClass classB;
        for(int i=0;i<classList.size();i++){
            classA=classList.get(i);
            printToOutput("\n(C): " +classA.getName() +"\n depends on"+'\n');
            dClassList=classA.getClassDependencies();
            for(int j=0;j<dClassList.size();j++){
                if(j%4==0)
                    printToOutput("\n");
                classB=dClassList.get(j);
                printToOutput(classB.getName()+" , ");
            }
            printToOutput("\n-------------------" + "\n\n");
                
            
        }
    }

    
    /* pairnoun apo to gui ta epilegmena */
  public void retrieveSelectedPackages(){

        thePackage aPackage;
        Object[] selected =jList1.getSelectedValues(); //pairnei ta epilegmena paketa
        myController.clearSelectedPackages();   // $$$$$ den xexnw na kanw clear!!!
        System.out.println("packages selected....");
     if(!jList1.isSelectionEmpty()){
        for(int i=0;i<selected.length;i++){
            aPackage=(thePackage)selected[i];
            System.out.println(aPackage+"\n");
            myController.addToSelectedPackages(aPackage);
        }
            myController.setActivePackage(myController.getSelectedPackages().get(0));
   }
  }

    public void retrieveSelectedClasses(){
        Object[] selected =jList2.getSelectedValues(); //pairnei ta epilegmena paketa
        theClass aClass;

        System.out.println("classes cleared ..");
        System.out.println("............");
        myController.clearSelectedClasses();    
     if(!jList2.isSelectionEmpty()){
        for(int i=0;i<selected.length;i++){
            aClass=(theClass)selected[i];
            myController.addToSelectedClasses(aClass);
            System.out.println("class: " +aClass + " selected");
        }
        myController.setActiveClass(myController.getSelectedClasses().get(0));
     }
   }

    public void retrieveSelectedMethods(){
        theMethod  aMethod;
        myController.clearSelectedMethods();
        Object[] selected =jList3.getSelectedValues(); //pairnei ta epilegmena paketa
        System.out.println("methods cleared ..");
        System.out.println("............");
          if(!jList3.isSelectionEmpty()){
            for(int i=0;i<selected.length;i++){
                aMethod=(theMethod)selected[i];
                myController.addToSelectedMethods(aMethod);
                System.out.println("mehtod: " +aMethod + " selected");
            }
        myController.setActiveMethod(myController.getSelectedMethods().get(0));
        }
}


/* den thimamai giati tin exw auti... */
public boolean checkOnePackageSelected(){
    boolean one=false;

    if(myController.getSelectedPackages().size()==1)
        one=true;

    return one;
}

public boolean checkOneClassSelected(){
    boolean one=false;
    if(myController.getSelectedClasses().size()==1)
        one=true;
    
    return one;
        
}

public boolean checkOneMethodSelected(){
    boolean one=false;
    if(myController.getSelectedMethods().size()==1)
        one=true;
    
    return one;
}


public String getFileName(){
    String filename;
    filename=jTextField4.getText();
    return filename;
    
}

public void displayPackages(){
        ArrayList<thePackage> packagesList;
        packagesList=myController.getActiveWorkspaceCollectionOfPackages();
        jList1.setListData(packagesList.toArray());
        
}

public void displayClasses(){
    ArrayList<theClass> classesList;
    ArrayList<theClass> classesToDisplay;
    ArrayList<thePackage> selectedPackages;
    theClass aClass;
    
    classesToDisplay = new ArrayList<theClass>();
    classesList = new ArrayList<theClass>();
//  selectedPackages  = new ArrayList<thePackage>();

    selectedPackages = myController.getSelectedPackages();
        
    for(int i=0;i<selectedPackages.size();i++){ //pairnei tis klaseis apo ola ta paketa
        classesList=selectedPackages.get(i).getCollectionOfClasses();
        for(int j=0;j< classesList.size();j++){
            aClass=classesList.get(j);
            classesToDisplay.add(aClass);
        }
    }
    
    jList2.setListData(classesToDisplay.toArray());
}

    

public void displayMethods(){
    ArrayList <theMethod> methodsToDisplay;
    ArrayList <theMethod> methodsList;
    ArrayList <theClass> selectedClasses;
    ArrayList<theClass> innerClasses;
    ArrayList<theClass> innerClassesToDisplay;
     theClass aClass;
    theMethod aMethod;


     innerClasses= new ArrayList<theClass>();
     innerClassesToDisplay = new ArrayList<theClass>();
    
    methodsToDisplay = new ArrayList<theMethod>();
    selectedClasses=myController.getSelectedClasses();
    System.out.println("display Methods invoked\n");

    for(int i=0;i<selectedClasses.size();i++){ //pairnei tis klaseis apo ola ta paketa
          aClass=selectedClasses.get(i);
        methodsList=selectedClasses.get(i).getCollectionOfMethods();
        for(int j=0;j< methodsList.size();j++){
            aMethod=methodsList.get(j);
            methodsToDisplay.add(aMethod);
        }
            innerClasses=aClass.getCollectionOfClasses();
        for(int k=0;k<innerClasses.size();k++)
             innerClassesToDisplay.add(innerClasses.get(k));
    }
    
     jList4.setListData(innerClassesToDisplay.toArray());
    jList3.setListData(methodsToDisplay.toArray());
}

public void displayWorkspaceName(){
    String Name;
    Name=myController.getActiveWorkspace().getName();
    jTextField3.setText(Name);
}


/* typwnei stin outputTextArea */
public void printToOutput(String aString){
        jTextArea1.append(aString);
}
    


public void clearOutput(){
    jTextArea1.setText("");
}
 
public void refreshDisplay(){
   // clearOutput();
    displayClasses();
    displayMethods();
    displayPackages();
    displayWorkspaceName();
}


   public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seUI().setVisible(true);

            }
        });
    }

    /* Akis variables */
    Controller myController;
    int typeOfAnalysis=0;

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton10;
   private javax.swing.JButton jButton11;
   private javax.swing.JButton jButton12;
   private javax.swing.JButton jButton13;
   private javax.swing.JButton jButton14;
   private javax.swing.JButton jButton15;
   private javax.swing.JButton jButton17;
   private javax.swing.JButton jButton18;
   private javax.swing.JButton jButton19;
   private javax.swing.JButton jButton2;
   private javax.swing.JButton jButton20;
   private javax.swing.JButton jButton3;
   private javax.swing.JButton jButton4;
   private javax.swing.JButton jButton5;
   private javax.swing.JButton jButton6;
   private javax.swing.JButton jButton7;
   private javax.swing.JButton jButton8;
   private javax.swing.JButton jButton9;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JLabel jLabel6;
   private javax.swing.JList jList1;
   private javax.swing.JList jList2;
   private javax.swing.JList jList3;
   private javax.swing.JList jList4;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JPanel jPanel7;
   private javax.swing.JPanel jPanel8;
   private javax.swing.JRadioButton jRadioButton1;
   private javax.swing.JRadioButton jRadioButton2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private javax.swing.JScrollPane jScrollPane5;
   private javax.swing.JTextArea jTextArea1;
   private javax.swing.JTextField jTextField1;
   private javax.swing.JTextField jTextField2;
   private javax.swing.JTextField jTextField3;
   private javax.swing.JTextField jTextField4;
   private javax.swing.JTextField jTextField5;
   private javax.swing.JTextField jTextField6;
   private javax.swing.JTextField jTextField7;
   private javax.swing.JTextField jTextField8;
   // End of variables declaration//GEN-END:variables

}
